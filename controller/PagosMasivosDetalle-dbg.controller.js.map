{"version":3,"file":"PagosMasivosDetalle-dbg.controller.js","names":["formatter","_interopRequireDefault","__formatter","UserManager","___modules_UserManager","MenuManager","___modules_MenuManager","PagosMasivosManager","___modules_PagosMasivosManager","NavigationManager","___modules_NavigationManager","PagosMasivosDetalle","Controller","extend","constructor","prototype","apply","arguments","onInit","_onInit","userManager","menuManager","pagosMasivosManager","navigationManager","loadAuthenticatedUser","oView","getView","setModel","getModel","console","log","loadHardcodedMenuData","filterNavigationByRole","getCurrentUser","role","initializeModels","setController","oModel","JSONModel","loadData","undefined","cuentasBancariasModel","attachRequestCompleted","oFilterBar","byId","oTable","_filterTimer","data","getData","documents","forEach","doc","alreadyInPlanilla","setData","_clearTableFilters","checkForDetailNavigation","onExit","_onExit","onSelectionChange","_onSelectionChange","oEvent","_debouncedSearch","onDateRangeChange","_onDateRangeChange","iDelay","delay","clearTimeout","setTimeout","onSearch","_onSearch","aTableFilters","getFilterGroupItems","reduce","aResult","oFilterGroupItem","oControl","getControl","getSelectedKeys","aSelectedKeys","aFilters","map","sSelectedKey","fieldPath","getName","Filter","path","operator","FilterOperator","Contains","value1","length","push","filters","and","getValue","sValue","aDateRange","split","sStartDate","sEndDate","BT","value2","getBinding","filter","_logTableData","aData","getProperty","slice","docTypes","suppliers","banks","onSideNavigationItemSelect","_onSideNavigationItemSelect","onSideNavItemSelect","_onSideNavItemSelect","onMenuButtonPress","_onMenuButtonPress","onLogout","_onLogout","MessageBox","confirm","title","onClose","sAction","Action","OK","logout","MessageToast","show","duration","oComponent","getOwnerComponent","oRouter","getRouter","navTo","onBackToPagosMasivos","_onBackToPagosMasivos","onNuevaPlanilla","_onNuevaPlanilla","planillaId","onEditPlanilla","_onEditPlanilla","oModelPlanilla","planillaData","Status","error","onAnularPlanilla","_onAnularPlanilla","mockCancelPlanillaAPI","DocEntry","_mockCancelPlanillaAPI","mockResponse","success","message","timestamp","Date","toISOString","details","JSON","stringify","U_ESTADO","refresh","onDownloadPlanilla","_onDownloadPlanilla","onFechaEjecucionChange","_onFechaEjecucionChange","onSerieChange","_onSerieChange","onCuentaBancariaChange","_onCuentaBancariaChange","selectedItem","getParameter","selectedKey","getKey","cuentasBancarias","selectedAccount","value","find","account","AccNo","planillaModel","setProperty","BankCode","Branch","GLAccount","U_CUENTA","U_IDBANCO","U_NMBANCO","U_MONEDA","U_GLACCOUNT","onGuardarPlanilla","_onGuardarPlanilla","isNewPlanilla","validationResult","validateNewPlanilla","isValid","mockCreatePlanillaAPI","information","onEjecutarPlanilla","_onEjecutarPlanilla","warning","VS_PMP1Collection","mockExecutePlanillaAPI","_mockCreatePlanillaAPI","Math","floor","random","createdPlanilla","_mockExecutePlanillaAPI","executeData","U_FECHAP","U_TC","U_NOPBAN","executedPlanilla","_validateNewPlanilla","errors","U_SERIE","join","onAddDocumentos","_onAddDocumentos","onDocumentSearch","_onDocumentSearch","onDocumentBankFilterChange","_onDocumentBankFilterChange","onDocumentSelectionChange","_onDocumentSelectionChange","onDocumentDialogCancel","_onDocumentDialogCancel","onDocumentDialogConfirm","_onDocumentDialogConfirm","aSelectedItems","getSelectedItems","oPlanillaModel","currentDocuments","existingDocNums","U_NUMDOC","documentsToAdd","skippedDocuments","oItem","documentData","getBindingContext","getObject","includes","DocNum","newLine","LineId","VisOrder","Object","LogInst","U_CHECK","U_IDPAGO","U_TIPDOC","DocType","U_IDDOC","U_LINDOC","U_OBJDOC","U_CUODOC","U_IDSN","CardCode","U_NMSN","CardName","U_RUC","U_MONDOC","Currency","U_IMPORTE","Total","U_SALDO","Balance","U_PAGONETO","U_PAGLOC","U_PAGEXT","U_RETLOC","U_RETEXT","U_FVENC","DueDate","U_FCONT","DocDate","U_FDOCU","U_CCORRI","CuentaBancaria","U_CTAINF","U_MONINF","U_RETCOD","U_RETPOR","U_SL","U_SE","U_RL","U_RE","U_BL","U_BE","U_IL","U_REF2","U_PAGLOC0","U_PAGEXT0","U_RETLOC0","U_RETEXT0","U_MPBB","recalculatePlanillaTotals","updateAlreadyAddedStatus","oDialog","close","removeSelections","_updateAlreadyAddedStatus","markAlreadyAddedDocuments","onDeletePlanillaLine","_onDeletePlanillaLine","button","getSource","listItem","getParent","bindingContext","lineData","lineIndex","getPath","pop","action","deletePlanillaLine","parseInt","_deletePlanillaLine","updatedLines","line","index","_recalculatePlanillaTotals","lines","totalImporte","sum","totalRetencion","totalPagoFinal","U_TOTAL","U_RETEN","U_SUBTOTAL","total","retencion","subtotal","onDeleteSelectedLines","_onDeleteSelectedLines","selectedItems","documentsToDelete","item","documentNames","deleteSelectedPlanillaLines","_deleteSelectedPlanillaLines","documentNumbersToDelete","loadPlanillaById","_loadPlanillaById","planillasUrl","oData","planillas","planillaIdNum","planilla","planillaWithMode","loadSeriesData","loadFallbackPlanillaData","_loadFallbackPlanillaData","fallbackData","_checkForDetailNavigation","oRoute","getRoute","attachPatternMatched","createNewPlanilla","onDocumentDialogAfterOpen","_onDocumentDialogAfterOpen","availableDocuments","_markAlreadyAddedDocuments","keys","markedCount","isAlreadyAdded"],"sources":["PagosMasivosDetalle.controller.ts"],"sourcesContent":["import Controller from \"sap/ui/core/mvc/Controller\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport Dialog from \"sap/m/Dialog\";\nimport formatter from \"../model/formatter\";\nimport Event from \"sap/ui/base/Event\";\nimport type UIComponent from \"sap/ui/core/UIComponent\";\nimport { UserManager } from \"./modules/UserManager\";\nimport { MenuManager } from \"./modules/MenuManager\";\nimport { PagosMasivosManager } from \"./modules/PagosMasivosManager\";\nimport { NavigationManager } from \"./modules/NavigationManager\";\nimport Filter from \"sap/ui/model/Filter\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\n\n\n/**\n * @namespace com.vs.extension.finanb1.controller\n */\nexport default class PagosMasivosDetalle extends Controller {\n    public formatter = formatter;\n    \n    // Gestores para diferentes funcionalidades\n    public userManager: UserManager;\n    public menuManager: MenuManager;\n    public pagosMasivosManager: PagosMasivosManager;\n    public navigationManager: NavigationManager;\n\n    // Propiedades para FilterBar\n    private oModel: any;\n    private oFilterBar: any;\n    private oTable: any;\n    private _filterTimer: any;\n\n\n    public onInit(): void {\n        // Inicializar gestores\n        this.userManager = new UserManager();\n        this.menuManager = new MenuManager();\n        this.pagosMasivosManager = new PagosMasivosManager();\n        this.navigationManager = new NavigationManager(this);\n        \n        // Cargar usuario autenticado\n        this.userManager.loadAuthenticatedUser();\n        \n        // Configurar modelo del menú\n        const oView = this.getView();\n        if (oView) {\n            oView.setModel(this.menuManager.getModel(), \"menuModel\");\n            console.log(\"Modelo de menú asignado a la vista en onInit\");\n        }\n        \n        // Cargar datos del menú\n        this.menuManager.loadHardcodedMenuData();\n        this.menuManager.filterNavigationByRole(this.userManager.getCurrentUser()?.role || 'user');\n        \n        // Inicializar modelos de PagosMasivos\n        this.pagosMasivosManager.initializeModels();\n        this.pagosMasivosManager.setController(this);\n        \n        // Configurar modelo de documentos disponibles\n        if (oView) {\n            this.oModel = new JSONModel();\n\t\t\tthis.oModel.loadData(\"./model/mock/available-documents.json\", undefined, false);\n\t\t\toView.setModel(this.oModel, \"oModel\");\n\n            // Cargar datos de cuentas bancarias\n            const cuentasBancariasModel = new JSONModel();\n            cuentasBancariasModel.loadData(\"./model/mock/cuentas-bancarias.json\", undefined, false);\n            oView.setModel(cuentasBancariasModel, \"cuentasBancarias\");\n            \n            // Asegurar que los datos de cuentas bancarias se carguen\n            cuentasBancariasModel.attachRequestCompleted(() => {\n                console.log(\"Modelo de cuentas bancarias cargado\");\n            });\n\n            this.oFilterBar = this.getView()?.byId(\"filterbar\");\n            this.oTable = this.getView()?.byId(\"table\");\n            \n            // Inicializar temporizador de debounce para filtrado automático\n            this._filterTimer = null;\n            \n            // Asegurar que la tabla muestre todos los datos inicialmente después de cargar el modelo\n            this.oModel.attachRequestCompleted(() => {\n                console.log(\"Modelo de documentos disponibles cargado\");\n                // Inicializar alreadyInPlanilla a false para todos los documentos\n                const data = this.oModel.getData();\n                if (data && data.documents) {\n                    data.documents.forEach((doc: any) => {\n                        doc.alreadyInPlanilla = false;\n                    });\n                    this.oModel.setData(data);\n                }\n                this._clearTableFilters();\n            });\n        }\n        \n\n        \n        // Verificar navegación a detalle\n        this.checkForDetailNavigation();\n    }\n\n//MÉTODOS DE FILTROS\npublic onExit(): void {\n    this.oModel = null;\n    this.oFilterBar = null;\n    this.oTable = null;\n}\n\npublic onSelectionChange(oEvent: Event): void {\n    // Aplicar filtro inmediatamente\n    this._debouncedSearch();\n}\n\npublic onDateRangeChange(oEvent: Event): void {\n    // Aplicar filtro inmediatamente\n    this._debouncedSearch();\n}\n\nprivate _debouncedSearch(iDelay?: number): void {\n    const delay = iDelay || 0;\n    \n    // Limpiar temporizador existente\n    if (this._filterTimer) {\n        clearTimeout(this._filterTimer);\n    }\n    \n    // Establecer nuevo temporizador\n    this._filterTimer = setTimeout(() => {\n        this.onSearch();\n    }, delay);\n}\n\npublic onSearch(): void {\n    const aTableFilters = this.oFilterBar.getFilterGroupItems().reduce((aResult: any[], oFilterGroupItem: any) => {\n        const oControl = oFilterGroupItem.getControl();\n        \n        // Manejar controles MultiComboBox (filtros de texto)\n        if (oControl && oControl.getSelectedKeys) {\n            const aSelectedKeys = oControl.getSelectedKeys();\n            const aFilters = aSelectedKeys.map((sSelectedKey: string) => {\n                // Mapear nombres de filtros a campos reales de datos\n                let fieldPath = oFilterGroupItem.getName();\n                if (fieldPath === \"Name\") fieldPath = \"DocType\";\n                else if (fieldPath === \"Category\") fieldPath = \"CardCode\";\n                else if (fieldPath === \"SupplierName\") fieldPath = \"BankCode\";\n                \n                return new Filter({\n                    path: fieldPath,\n                    operator: FilterOperator.Contains,\n                    value1: sSelectedKey\n                });\n            });\n\n            if (aSelectedKeys.length > 0) {\n                aResult.push(new Filter({\n                    filters: aFilters,\n                    and: false\n                }));\n            }\n        }\n        // Manejar controles DateRangeSelection (filtros de rango de fechas)\n        else if (oControl && oControl.getValue) {\n            const sValue = oControl.getValue();\n            if (sValue && sValue !== \"\") {\n                const aDateRange = sValue.split(\" - \");\n                if (aDateRange.length === 2) {\n                    const sStartDate = aDateRange[0];\n                    const sEndDate = aDateRange[1];\n                    \n                    // Solo aplicar filtro si ambas fechas están seleccionadas\n                    if (sStartDate && sEndDate && sStartDate !== \"\" && sEndDate !== \"\") {\n                        aResult.push(new Filter({\n                            path: \"DocDate\", // Mapear al campo de fecha del documento\n                            operator: FilterOperator.BT,\n                            value1: sStartDate,\n                            value2: sEndDate\n                        }));\n                    }\n                }\n            }\n        }\n\n        return aResult;\n    }, []);\n\n    if (this.oTable && this.oTable.getBinding(\"items\")) {\n        this.oTable.getBinding(\"items\").filter(aTableFilters);\n    }\n}\n\n\n\nprivate _clearTableFilters(): void {\n    // Limpiar filtros existentes para mostrar todos los datos\n    if (this.oTable && this.oTable.getBinding(\"items\")) {\n        this.oTable.getBinding(\"items\").filter([]);\n    }\n    \n    // Depuración: Registrar los datos para ver qué está disponible\n    this._logTableData();\n}\n\nprivate _logTableData(): void {\n    // Método de depuración para verificar qué datos están disponibles\n    const oView = this.getView();\n    if (!oView) return;\n    \n    const oModel = oView.getModel();\n    if (!oModel) return;\n    \n    const aData = oModel.getProperty(\"/documents\");\n    if (!aData) return;\n    \n    console.log(\"Total de documentos:\", aData.length);\n    console.log(\"Primeros documentos:\", aData.slice(0, 3));\n    \n    // Registrar datos de filtros disponibles\n    const docTypes = oModel.getProperty(\"/docTypes\");\n    const suppliers = oModel.getProperty(\"/suppliers\");\n    const banks = oModel.getProperty(\"/banks\");\n    \n    console.log(\"Tipos de documento disponibles:\", docTypes?.length || 0);\n    console.log(\"Proveedores disponibles:\", suppliers?.length || 0);\n    console.log(\"Bancos disponibles:\", banks?.length || 0);\n}\n\n\n    // ===== MÉTODOS DE NAVEGACIÓN =====\n    public onSideNavigationItemSelect(oEvent: Event): void {\n        this.navigationManager.onSideNavigationItemSelect(oEvent);\n    }\n\n    public onSideNavItemSelect(oEvent: any): void {\n        this.navigationManager.onSideNavItemSelect(oEvent);\n    }\n\n    public onMenuButtonPress(): void {\n        this.navigationManager.onMenuButtonPress();\n    }\n\n    public onLogout(): void {\n        MessageBox.confirm(\"¿Está seguro que desea cerrar sesión?\", {\n            title: \"Confirmar Cierre de Sesión\",\n            onClose: (sAction: string) => {\n                if (sAction === MessageBox.Action.OK) {\n                    this.userManager.logout();\n                    MessageToast.show(\"Sesión cerrada exitosamente\", { duration: 2000 });\n                    const oComponent = this.getOwnerComponent() as UIComponent;\n                    const oRouter = oComponent.getRouter();\n                    oRouter.navTo(\"RouteLogin\");\n                }\n            }\n        });\n    }\n\n    // ===== MÉTODOS DE PAGOS MASIVOS DETALLE =====\n    public onBackToPagosMasivos(): void {\n        console.log(\"PagosMasivosDetalle.controller - onBackToPagosMasivos triggered!\");\n        const oComponent = this.getOwnerComponent() as UIComponent;\n        const oRouter = oComponent.getRouter();\n        oRouter.navTo(\"RoutePagosMasivos\");\n    }\n\n    public onNuevaPlanilla(): void {\n        console.log(\"PagosMasivosDetalle.controller - onNuevaPlanilla triggered!\");\n        // Navigate to new planilla\n        const oComponent = this.getOwnerComponent() as UIComponent;\n        const oRouter = oComponent.getRouter();\n        oRouter.navTo(\"RoutePagosMasivosDetalle\", { planillaId: \"new\" });\n    }\n\n    public onEditPlanilla(): void {\n        const oView = this.getView();\n        if (oView) {\n            const oModelPlanilla = oView.getModel(\"planilla\") as JSONModel;\n            if (oModelPlanilla) {\n                const planillaData = oModelPlanilla.getData();\n                if (planillaData && planillaData.Status === \"Creada\") {\n                    MessageToast.show(\"Función de edición en desarrollo\", { duration: 2000 });\n                    // Aquí se puede implementar la lógica para editar la planilla\n                } else {\n                    MessageBox.error(\"Solo se pueden editar planillas con estado 'Creada'\");\n                }\n            }\n        }\n    }\n\n    public onAnularPlanilla(): void {\n        const oView = this.getView();\n        if (oView) {\n            const oModelPlanilla = oView.getModel(\"planilla\") as JSONModel;\n            if (oModelPlanilla) {\n                const planillaData = oModelPlanilla.getData();\n                if (planillaData) {\n                    MessageBox.confirm(\"¿Está seguro que desea anular esta planilla?\", {\n                        title: \"Confirmar Anulación\",\n                        onClose: (sAction: string) => {\n                            if (sAction === MessageBox.Action.OK) {\n                                // Mock API call to cancel planilla\n                                this.mockCancelPlanillaAPI(planillaData.DocEntry);\n                            }\n                        }\n                    });\n                } else {\n                    MessageBox.error(\"No se pudo obtener los datos de la planilla\");\n                }\n            } else {\n                MessageBox.error(\"No se pudo acceder al modelo de la planilla\");\n            }\n        } else {\n            MessageBox.error(\"No se pudo acceder a la vista\");\n        }\n    }\n\n    private mockCancelPlanillaAPI(planillaId: number): void {\n        console.log(\"PagosMasivosDetalle.controller - Llamada API simulada: POST /Planilla(\" + planillaId + \")/Cancel\");\n        \n        // Simular retraso de llamada API\n        setTimeout(() => {\n            // Respuesta exitosa simulada\n            const mockResponse = {\n                success: true,\n                message: \"Planilla anulada exitosamente\",\n                planillaId: planillaId,\n                timestamp: new Date().toISOString()\n            };\n            \n            console.log(\"PagosMasivosDetalle.controller - Respuesta API simulada:\", mockResponse);\n            \n            // Mostrar mensaje de éxito\n            MessageBox.success(\"Planilla anulada exitosamente\", {\n                title: \"Operación Exitosa\",\n                details: `Llamada API: POST /Planilla(${planillaId})/Cancel\\nRespuesta: ${JSON.stringify(mockResponse, null, 2)}`,\n                onClose: () => {\n                    // Actualizar el estado de la planilla en el modelo\n                    const oView = this.getView();\n                    if (oView) {\n                        const oModelPlanilla = oView.getModel(\"planilla\") as JSONModel;\n                        if (oModelPlanilla) {\n                            const planillaData = oModelPlanilla.getData();\n                            if (planillaData) {\n                                planillaData.U_ESTADO = \"A\"; // Anulada\n                                oModelPlanilla.refresh(true);\n                                console.log(\"PagosMasivosDetalle.controller - Estado de planilla actualizado a 'Anulada'\");\n                            }\n                        }\n                    }\n                }\n            });\n        }, 1000); // Retraso de 1 segundo para simular llamada API\n    }\n\n    public onDownloadPlanilla(): void {\n        console.log(\"PagosMasivosDetalle.controller - onDownloadPlanilla triggered!\");\n        this.pagosMasivosManager.onDownloadPlanilla();\n    }\n\n    public onFechaEjecucionChange(oEvent: any): void {\n        console.log(\"PagosMasivosDetalle.controller - onFechaEjecucionChange triggered!\");\n        this.pagosMasivosManager.onFechaEjecucionChange(oEvent);\n    }\n\n    public onSerieChange(oEvent: any): void {\n        console.log(\"PagosMasivosDetalle.controller - onSerieChange triggered!\");\n        this.pagosMasivosManager.onSerieChange(oEvent);\n    }\n\n    public onCuentaBancariaChange(oEvent: any): void {\n        console.log(\"PagosMasivosDetalle.controller - onCuentaBancariaChange activado\");\n        \n        const oView = this.getView();\n        if (!oView) return;\n        \n        const selectedItem = oEvent.getParameter(\"selectedItem\");\n        if (!selectedItem) {\n            console.log(\"No se seleccionó ninguna cuenta bancaria\");\n            return;\n        }\n        \n        const selectedKey = selectedItem.getKey();\n        console.log(\"PagosMasivosDetalle.controller - Cuenta bancaria seleccionada (clave):\", selectedKey);\n        \n        // Obtener el modelo de cuentas bancarias para encontrar la cuenta seleccionada\n        const cuentasBancariasModel = oView.getModel(\"cuentasBancarias\") as JSONModel;\n        if (!cuentasBancariasModel) {\n            console.error(\"PagosMasivosDetalle.controller - Modelo de cuentas bancarias no encontrado\");\n            return;\n        }\n        \n        const cuentasBancarias = cuentasBancariasModel.getData();\n        const selectedAccount = cuentasBancarias.value.find((account: any) => account.AccNo === selectedKey);\n        \n        if (!selectedAccount) {\n            console.error(\"PagosMasivosDetalle.controller - Cuenta seleccionada no encontrada\");\n            return;\n        }\n        \n        console.log(\"PagosMasivosDetalle.controller - Cuenta seleccionada:\", selectedAccount);\n        \n        // Actualizar el modelo de planilla con los datos de la cuenta seleccionada\n        const planillaModel = oView.getModel(\"planilla\") as JSONModel;\n        if (planillaModel) {\n            // Actualizar los campos basándose en la cuenta seleccionada\n            planillaModel.setProperty(\"/U_CUENTA\", selectedAccount.AccNo);\n            planillaModel.setProperty(\"/U_IDBANCO\", selectedAccount.BankCode);\n            planillaModel.setProperty(\"/U_NMBANCO\", selectedAccount.BankCode); // Usando BankCode como nombre del banco por ahora\n            planillaModel.setProperty(\"/U_MONEDA\", selectedAccount.Branch);\n            planillaModel.setProperty(\"/U_GLACCOUNT\", selectedAccount.GLAccount);\n            \n            console.log(\"PagosMasivosDetalle.controller - Planilla actualizada con datos de cuenta:\", {\n                U_CUENTA: selectedAccount.AccNo,\n                U_IDBANCO: selectedAccount.BankCode,\n                U_NMBANCO: selectedAccount.BankCode,\n                U_MONEDA: selectedAccount.Branch,\n                U_GLACCOUNT: selectedAccount.GLAccount\n            });\n            \n            // Forzar actualización del modelo\n            planillaModel.refresh(true);\n        } else {\n            console.error(\"PagosMasivosDetalle.controller - Modelo de planilla no encontrado\");\n        }\n    }\n\n    public onGuardarPlanilla(): void {\n        console.log(\"PagosMasivosDetalle.controller - onGuardarPlanilla triggered!\");\n        \n        const oView = this.getView();\n        if (!oView) {\n            MessageBox.error(\"No se pudo acceder a la vista\");\n            return;\n        }\n        \n        const oModelPlanilla = oView.getModel(\"planilla\") as JSONModel;\n        if (!oModelPlanilla) {\n            MessageBox.error(\"No se pudo acceder al modelo de la planilla\");\n            return;\n        }\n        \n        const planillaData = oModelPlanilla.getData();\n        if (!planillaData) {\n            MessageBox.error(\"No se pudo obtener los datos de la planilla\");\n            return;\n        }\n        \n        // Verificar si es una nueva planilla\n        console.log(\"PagosMasivosDetalle.controller - Valor de isNewPlanilla:\", planillaData.isNewPlanilla);\n        console.log(\"PagosMasivosDetalle.controller - Datos de planilla:\", planillaData);\n        \n        if (planillaData.isNewPlanilla === true) {\n            // Validar campos requeridos para nueva planilla\n            const validationResult = this.validateNewPlanilla(planillaData);\n            \n            if (!validationResult.isValid) {\n                MessageBox.error(validationResult.message, {\n                    title: \"Validación Requerida\"\n                });\n                return;\n            }\n            \n            // Mostrar confirmación para crear nueva planilla\n            MessageBox.confirm(\"¿Está seguro que desea crear esta planilla?\", {\n                title: \"Confirmar Creación\",\n                onClose: (sAction: string) => {\n                    if (sAction === MessageBox.Action.OK) {\n                        // Llamada API simulada para crear planilla\n                        this.mockCreatePlanillaAPI(planillaData);\n                    }\n                }\n            });\n        } else {\n            // Para planillas existentes, solo mostrar un mensaje\n            MessageBox.information(\"Esta planilla ya existe. Use 'Ejecutar' para procesarla.\");\n        }\n    }\n\n    public onEjecutarPlanilla(): void {\n        console.log(\"PagosMasivosDetalle.controller - onEjecutarPlanilla triggered!\");\n        \n        const oView = this.getView();\n        if (!oView) {\n            MessageBox.error(\"No se pudo acceder a la vista\");\n            return;\n        }\n        \n        const oModelPlanilla = oView.getModel(\"planilla\") as JSONModel;\n        if (!oModelPlanilla) {\n            MessageBox.error(\"No se pudo acceder al modelo de la planilla\");\n            return;\n        }\n        \n        const planillaData = oModelPlanilla.getData();\n        if (!planillaData) {\n            MessageBox.error(\"No se pudo obtener los datos de la planilla\");\n            return;\n        }\n        \n        // Verificar que la planilla esté en estado \"Creada\"\n        if (planillaData.U_ESTADO !== \"C\") {\n            MessageBox.warning(\"Solo se pueden ejecutar planillas con estado 'Creada'\");\n            return;\n        }\n        \n        // Validar que tenga al menos un documento\n        if (!planillaData.VS_PMP1Collection || planillaData.VS_PMP1Collection.length === 0) {\n            MessageBox.warning(\"La planilla debe tener al menos un documento para ser ejecutada\");\n            return;\n        }\n        \n        // Mostrar confirmación para ejecutar la planilla\n        MessageBox.confirm(\"¿Está seguro que desea ejecutar esta planilla?\", {\n            title: \"Confirmar Ejecución\",\n            onClose: (sAction: string) => {\n                if (sAction === MessageBox.Action.OK) {\n                    // Llamada API simulada para ejecutar planilla\n                    this.mockExecutePlanillaAPI(planillaData);\n                }\n            }\n        });\n    }\n\n    private mockCreatePlanillaAPI(planillaData: any): void {\n        console.log(\"PagosMasivosDetalle.controller - Llamada API simulada: POST /Planilla\");\n        console.log(\"PagosMasivosDetalle.controller - Datos enviados:\", planillaData);\n        \n        // Simular retraso de llamada API\n        setTimeout(() => {\n            // Respuesta exitosa simulada\n            const mockResponse = {\n                success: true,\n                message: \"Planilla creada exitosamente\",\n                planillaId: Math.floor(Math.random() * 1000) + 100, // ID aleatorio\n                timestamp: new Date().toISOString(),\n                createdPlanilla: {\n                    ...planillaData,\n                    DocEntry: Math.floor(Math.random() * 1000) + 100,\n                    isNewPlanilla: false,\n                    U_ESTADO: \"C\" // Creada\n                }\n            };\n            \n            console.log(\"PagosMasivosDetalle.controller - Respuesta API simulada:\", mockResponse);\n            \n            // Mostrar mensaje de éxito con detalles de la API\n            MessageBox.success(\"Planilla creada exitosamente\", {\n                title: \"Operación Exitosa\",\n                details: `Llamada API: POST /Planilla\\nDatos enviados: ${JSON.stringify(planillaData, null, 2)}\\nRespuesta: ${JSON.stringify(mockResponse, null, 2)}`,\n                onClose: () => {\n                    // Actualizar la planilla con los datos de respuesta\n                    const oView = this.getView();\n                    if (oView) {\n                        const oModelPlanilla = oView.getModel(\"planilla\") as JSONModel;\n                        if (oModelPlanilla) {\n                            // Actualizar con los datos de la planilla creada\n                            oModelPlanilla.setData(mockResponse.createdPlanilla);\n                            oModelPlanilla.refresh(true);\n                            console.log(\"PagosMasivosDetalle.controller - Planilla actualizada con datos creados\");\n                        }\n                    }\n                }\n            });\n        }, 1500); // Retraso de 1.5 segundos para simular llamada API\n    }\n\n    private mockExecutePlanillaAPI(planillaData: any): void {\n        console.log(\"PagosMasivosDetalle.controller - Llamada API simulada: POST /Planilla(\" + planillaData.DocEntry + \")/Execute\");\n        \n        // Preparar solo los datos requeridos para la ejecución\n        const executeData = {\n            DocEntry: planillaData.DocEntry,\n            U_FECHAP: planillaData.U_FECHAP,\n            U_TC: planillaData.U_TC,\n            U_NOPBAN: planillaData.U_NOPBAN\n        };\n        \n        console.log(\"PagosMasivosDetalle.controller - Datos enviados para ejecución:\", executeData);\n        \n        // Simular retraso de llamada API\n        setTimeout(() => {\n            // Respuesta exitosa simulada\n            const mockResponse = {\n                success: true,\n                message: \"Planilla ejecutada exitosamente\",\n                planillaId: planillaData.DocEntry,\n                timestamp: new Date().toISOString(),\n                executedPlanilla: {\n                    ...planillaData,\n                    U_ESTADO: \"E\" // Ejecutada\n                }\n            };\n            \n            console.log(\"PagosMasivosDetalle.controller - Respuesta API simulada:\", mockResponse);\n            \n            // Mostrar mensaje de éxito con detalles de la API\n            MessageBox.success(\"Planilla ejecutada exitosamente\", {\n                title: \"Operación Exitosa\",\n                details: `Llamada API: POST /Planilla(${planillaData.DocEntry})/Execute\\nDatos enviados: ${JSON.stringify(executeData, null, 2)}\\nRespuesta: ${JSON.stringify(mockResponse, null, 2)}`,\n                onClose: () => {\n                    // Actualizar la planilla con los datos de respuesta\n                    const oView = this.getView();\n                    if (oView) {\n                        const oModelPlanilla = oView.getModel(\"planilla\") as JSONModel;\n                        if (oModelPlanilla) {\n                            // Actualizar con los datos de la planilla ejecutada\n                            oModelPlanilla.setData(mockResponse.executedPlanilla);\n                            oModelPlanilla.refresh(true);\n                            console.log(\"PagosMasivosDetalle.controller - Planilla actualizada con datos ejecutados\");\n                        }\n                    }\n                }\n            });\n        }, 2000); // Retraso de 2 segundos para simular llamada API\n    }\n\n    private validateNewPlanilla(planillaData: any): { isValid: boolean; message: string } {\n        console.log(\"PagosMasivosDetalle.controller - Validando nueva planilla:\", planillaData);\n        \n        const errors: string[] = [];\n        \n        // Validar Cuenta Bancaria\n        if (!planillaData.U_CUENTA) {\n            errors.push(\"• Cuenta Bancaria es requerida\");\n        }\n        \n        // Validar Serie\n        if (!planillaData.U_SERIE) {\n            errors.push(\"• Serie es requerida\");\n        }\n        \n        // Validar Fecha de Ejecución\n        if (!planillaData.U_FECHAP) {\n            errors.push(\"• Fecha de Ejecución es requerida\");\n        }\n        \n        // Validar Tipo de Cambio\n        if (!planillaData.U_TC) {\n            errors.push(\"• Tipo de Cambio es requerido\");\n        }\n        \n        // Validar al menos un documento\n        if (!planillaData.VS_PMP1Collection || planillaData.VS_PMP1Collection.length === 0) {\n            errors.push(\"• Al menos un documento es requerido\");\n        }\n        \n        if (errors.length > 0) {\n            const message = \"Por favor complete los siguientes campos requeridos:\\n\\n\" + errors.join(\"\\n\");\n            return { isValid: false, message: message };\n        }\n        \n        return { isValid: true, message: \"\" };\n    }\n\n    public onAddDocumentos(): void {\n        console.log(\"PagosMasivosDetalle.controller - onAddDocumentos triggered!\");\n        if (this.pagosMasivosManager) {\n            this.pagosMasivosManager.onAddDocumentos();\n        } else {\n            console.error(\"PagosMasivosManager is not initialized!\");\n        }\n    }\n\n    public onDocumentSearch(oEvent: any): void {\n        console.log(\"PagosMasivosDetalle.controller - onDocumentSearch triggered!\");\n        if (this.pagosMasivosManager) {\n            this.pagosMasivosManager.onDocumentSearch(oEvent);\n        }\n    }\n\n\n\n    public onDocumentBankFilterChange(oEvent: any): void {\n        console.log(\"PagosMasivosDetalle.controller - onDocumentBankFilterChange triggered!\");\n        if (this.pagosMasivosManager) {\n            this.pagosMasivosManager.onDocumentBankFilterChange(oEvent);\n        }\n    }\n\n\n\n    public onDocumentSelectionChange(oEvent: any): void {\n        console.log(\"PagosMasivosDetalle.controller - onDocumentSelectionChange triggered!\");\n        if (this.pagosMasivosManager) {\n            this.pagosMasivosManager.onDocumentSelectionChange(oEvent);\n        }\n    }\n\n    public onDocumentDialogCancel(): void {\n        console.log(\"PagosMasivosDetalle.controller - onDocumentDialogCancel triggered!\");\n        if (this.pagosMasivosManager) {\n            this.pagosMasivosManager.onDocumentDialogCancel();\n        }\n    }\n\n    public onDocumentDialogConfirm(): void {\n        console.log(\"PagosMasivosDetalle.controller - onDocumentDialogConfirm triggered!\");\n        \n        const oView = this.getView();\n        if (!oView) return;\n        \n        const oTable = oView.byId(\"table\") as any;\n        if (!oTable) return;\n        \n        const aSelectedItems = oTable.getSelectedItems();\n        if (aSelectedItems.length === 0) {\n            MessageBox.warning(\"Por favor seleccione al menos un documento.\");\n            return;\n        }\n        \n        // Obtener el modelo de planilla\n        const oPlanillaModel = oView.getModel(\"planilla\") as JSONModel;\n        if (!oPlanillaModel) return;\n        \n        const planillaData = oPlanillaModel.getData();\n        if (!planillaData) return;\n        \n        // Obtener documentos actuales en la planilla\n        const currentDocuments = planillaData.VS_PMP1Collection || [];\n        \n        // Obtener números de documentos existentes para evitar duplicados\n        const existingDocNums = currentDocuments.map((doc: any) => doc.U_NUMDOC);\n        const documentsToAdd: any[] = [];\n        const skippedDocuments: any[] = [];\n        \n        // Agregar documentos seleccionados a la planilla (evitando duplicados)\n        aSelectedItems.forEach((oItem: any) => {\n            const documentData = oItem.getBindingContext(\"oModel\").getObject();\n            \n            // Verificar si el documento ya está en la planilla\n            if (existingDocNums.includes(documentData.DocNum)) {\n                skippedDocuments.push(documentData.DocNum);\n                return; // Omitir este documento\n            }\n            \n            // Crear nueva línea de elemento para la planilla\n            const newLine = {\n                DocEntry: planillaData.DocEntry,\n                LineId: currentDocuments.length + documentsToAdd.length + 1,\n                VisOrder: currentDocuments.length + documentsToAdd.length + 1,\n                Object: \"VS_OPMP\",\n                LogInst: null,\n                U_CHECK: \"Y\",\n                U_IDPAGO: planillaData.U_IDPAGO,\n                U_TIPDOC: documentData.DocType,\n                U_IDDOC: documentData.DocEntry,\n                U_LINDOC: 0,\n                U_OBJDOC: \"18\",\n                U_CUODOC: \"1\",\n                U_IDSN: documentData.CardCode,\n                U_NMSN: documentData.CardName,\n                U_RUC: documentData.CardCode,\n                U_NUMDOC: documentData.DocNum,\n                U_MONDOC: documentData.Currency,\n                U_IMPORTE: documentData.Total,\n                U_SALDO: documentData.Balance,\n                U_PAGONETO: documentData.Balance,\n                U_PAGLOC: documentData.Balance,\n                U_PAGEXT: 0,\n                U_RETLOC: 0, // Valor por defecto 0 ya que RetLoc no existe en documentos disponibles\n                U_RETEXT: 0,\n                U_FVENC: documentData.DueDate,\n                U_FCONT: documentData.DocDate,\n                U_FDOCU: documentData.DocDate,\n                U_CCORRI: documentData.CuentaBancaria,\n                U_CTAINF: documentData.BankCode,\n                U_MONINF: documentData.Currency,\n                U_RETCOD: \"\",\n                U_RETPOR: 0,\n                U_ESTADO: \"1\",\n                U_SL: documentData.Balance,\n                U_SE: 0,\n                U_RL: 0, // Valor por defecto 0 ya que RetLoc no existe en documentos disponibles\n                U_RE: 0,\n                U_BL: 0,\n                U_BE: 0,\n                U_IL: documentData.Balance,\n                U_REF2: documentData.DocNum,\n                U_PAGLOC0: documentData.Balance, // Usar Balance como PAGLOC0 ya que PAGLOC0 no existe\n                U_PAGEXT0: 0,\n                U_RETLOC0: 0, // Valor por defecto 0 ya que RetLoc no existe en documentos disponibles\n                U_RETEXT0: 0,\n                U_MPBB: \"2\"\n            };\n            \n            documentsToAdd.push(newLine);\n        });\n        \n        // Agregar nuevos documentos a la planilla\n        currentDocuments.push(...documentsToAdd);\n        \n        // Actualizar el modelo de planilla\n        planillaData.VS_PMP1Collection = currentDocuments;\n        \n        // Recalcular totales después de agregar documentos\n        this.recalculatePlanillaTotals(planillaData);\n        \n        // Actualizar el modelo con datos recalculados\n        oPlanillaModel.setData(planillaData);\n        oPlanillaModel.refresh(true);\n        \n        // Actualizar el estado de ya agregado en el modal\n        this.updateAlreadyAddedStatus();\n        \n        // Cerrar el diálogo\n        const oDialog = oView.byId(\"documentSelectionDialog\") as any;\n        if (oDialog) {\n            oDialog.close();\n        }\n        \n        // Limpiar selección de tabla\n        oTable.removeSelections();\n        \n        // Mostrar mensaje apropiado\n        if (documentsToAdd.length > 0 && skippedDocuments.length > 0) {\n            MessageToast.show(`${documentsToAdd.length} documento(s) agregado(s), ${skippedDocuments.length} ya existían.`);\n        } else if (documentsToAdd.length > 0) {\n            MessageToast.show(`${documentsToAdd.length} documento(s) agregado(s) a la planilla.`);\n        } else if (skippedDocuments.length > 0) {\n            MessageBox.warning(\"Todos los documentos seleccionados ya están en la planilla.\");\n        } else {\n            MessageBox.warning(\"Por favor seleccione al menos un documento.\");\n        }\n    }\n\n    private updateAlreadyAddedStatus(): void {\n        this.markAlreadyAddedDocuments();\n    }\n\n    public onDeletePlanillaLine(oEvent: any): void {\n        console.log(\"PagosMasivosDetalle.controller - Delete planilla line triggered\");\n        \n        const oView = this.getView();\n        if (!oView) {\n            return;\n        }\n\n        const oPlanillaModel = oView.getModel(\"planilla\") as JSONModel;\n        if (!oPlanillaModel) {\n            console.log(\"Planilla model not found\");\n            return;\n        }\n\n        // Get the button that was clicked\n        const button = oEvent.getSource();\n        const listItem = button.getParent().getParent();\n        const bindingContext = listItem.getBindingContext(\"planilla\");\n        \n        if (!bindingContext) {\n            console.log(\"No binding context found\");\n            return;\n        }\n\n        // Get the line data\n        const lineData = bindingContext.getObject();\n        const lineIndex = bindingContext.getPath().split(\"/\").pop();\n        \n        console.log(\"Deleting line:\", lineData);\n        console.log(\"Line index:\", lineIndex);\n        \n        // Show confirmation dialog\n        MessageBox.confirm(\n            `¿Está seguro que desea eliminar el documento ${lineData.U_NUMDOC}?`,\n            {\n                title: \"Confirmar eliminación\",\n                onClose: (action: string) => {\n                    if (action === MessageBox.Action.OK) {\n                        this.deletePlanillaLine(parseInt(lineIndex));\n                    }\n                }\n            }\n        );\n    }\n\n    private deletePlanillaLine(lineIndex: number): void {\n        console.log(\"PagosMasivosDetalle.controller - Deleting line at index:\", lineIndex);\n        \n        const oView = this.getView();\n        if (!oView) {\n            return;\n        }\n\n        const oPlanillaModel = oView.getModel(\"planilla\") as JSONModel;\n        if (!oPlanillaModel) {\n            console.log(\"Planilla model not found\");\n            return;\n        }\n\n        const planillaData = oPlanillaModel.getData();\n        if (!planillaData || !planillaData.VS_PMP1Collection) {\n            console.log(\"No planilla data found\");\n            return;\n        }\n\n        // Remove the line from the collection\n        const updatedLines = planillaData.VS_PMP1Collection.filter((line: any, index: number) => index !== lineIndex);\n        \n        // Update the planilla data\n        planillaData.VS_PMP1Collection = updatedLines;\n        \n        // Recalculate totals\n        this.recalculatePlanillaTotals(planillaData);\n        \n        // Update the model\n        oPlanillaModel.setData(planillaData);\n        oPlanillaModel.refresh(true);\n        \n        console.log(\"Line deleted successfully\");\n        MessageToast.show(\"Línea eliminada correctamente\", { duration: 3000 });\n        \n        // Update the available documents to reflect the change\n        this.updateAlreadyAddedStatus();\n    }\n\n    private recalculatePlanillaTotals(planillaData: any): void {\n        console.log(\"PagosMasivosDetalle.controller - Recalculando totales de planilla\");\n        \n        if (!planillaData || !planillaData.VS_PMP1Collection) {\n            return;\n        }\n\n        const lines = planillaData.VS_PMP1Collection;\n        \n        // Calcular totales\n        const totalImporte = lines.reduce((sum: number, line: any) => sum + (line.U_IMPORTE || 0), 0);\n        const totalRetencion = lines.reduce((sum: number, line: any) => sum + (line.U_RETLOC || 0), 0);\n        const totalPagoFinal = lines.reduce((sum: number, line: any) => sum + (line.U_PAGLOC0 || 0), 0);\n        \n        // Actualizar totales de planilla\n        planillaData.U_TOTAL = totalImporte;\n        planillaData.U_RETEN = totalRetencion;\n        planillaData.U_SUBTOTAL = totalPagoFinal;\n        \n        console.log(\"Totales actualizados:\", {\n            total: totalImporte,\n            retencion: totalRetencion,\n            subtotal: totalPagoFinal\n        });\n    }\n\n    public onDeleteSelectedLines(): void {\n        console.log(\"PagosMasivosDetalle.controller - Delete selected lines triggered\");\n        \n        const oView = this.getView();\n        if (!oView) {\n            return;\n        }\n\n        const oPlanillaModel = oView.getModel(\"planilla\") as JSONModel;\n        if (!oPlanillaModel) {\n            console.log(\"Planilla model not found\");\n            return;\n        }\n\n        const planillaData = oPlanillaModel.getData();\n        if (!planillaData || !planillaData.VS_PMP1Collection) {\n            console.log(\"No planilla data found\");\n            return;\n        }\n\n        // Get the table\n        const oTable = oView.byId(\"planillaLinesTable\") as any;\n        if (!oTable) {\n            console.log(\"Planilla table not found\");\n            return;\n        }\n\n        // Get selected items\n        const selectedItems = oTable.getSelectedItems();\n        if (selectedItems.length === 0) {\n            MessageBox.warning(\"Por favor seleccione al menos una línea para eliminar.\");\n            return;\n        }\n\n        // Obtener los documentos a eliminar\n        const documentsToDelete = selectedItems.map((item: any) => {\n            const bindingContext = item.getBindingContext(\"planilla\");\n            return bindingContext ? bindingContext.getObject() : null;\n        }).filter((doc: any) => doc !== null);\n\n        if (documentsToDelete.length === 0) {\n            MessageBox.warning(\"No se pudieron obtener los documentos seleccionados.\");\n            return;\n        }\n\n        // Mostrar diálogo de confirmación\n        const documentNames = documentsToDelete.map((doc: any) => doc.U_NUMDOC).join(\", \");\n        MessageBox.confirm(\n            `¿Está seguro que desea eliminar los siguientes documentos?\\n${documentNames}`,\n            {\n                title: \"Confirmar eliminación múltiple\",\n                onClose: (action: string) => {\n                    if (action === MessageBox.Action.OK) {\n                        this.deleteSelectedPlanillaLines(documentsToDelete);\n                    }\n                }\n            }\n        );\n    }\n\n    private deleteSelectedPlanillaLines(documentsToDelete: any[]): void {\n        console.log(\"PagosMasivosDetalle.controller - Deleting selected lines:\", documentsToDelete);\n        \n        const oView = this.getView();\n        if (!oView) {\n            return;\n        }\n\n        const oPlanillaModel = oView.getModel(\"planilla\") as JSONModel;\n        if (!oPlanillaModel) {\n            console.log(\"Planilla model not found\");\n            return;\n        }\n\n        const planillaData = oPlanillaModel.getData();\n        if (!planillaData || !planillaData.VS_PMP1Collection) {\n            console.log(\"No planilla data found\");\n            return;\n        }\n\n        // Obtener números de documentos a eliminar\n        const documentNumbersToDelete = documentsToDelete.map((doc: any) => doc.U_NUMDOC);\n        \n        // Eliminar las líneas de la colección\n        const updatedLines = planillaData.VS_PMP1Collection.filter((line: any) => \n            !documentNumbersToDelete.includes(line.U_NUMDOC)\n        );\n        \n        // Actualizar los datos de la planilla\n        planillaData.VS_PMP1Collection = updatedLines;\n        \n        // Recalcular totales\n        this.recalculatePlanillaTotals(planillaData);\n        \n        // Actualizar el modelo\n        oPlanillaModel.setData(planillaData);\n        oPlanillaModel.refresh(true);\n        \n        // Limpiar selección de tabla\n        const oTable = oView.byId(\"planillaLinesTable\") as any;\n        if (oTable) {\n            oTable.removeSelections();\n        }\n        \n        console.log(\"Líneas seleccionadas eliminadas exitosamente\");\n        MessageToast.show(`${documentsToDelete.length} línea(s) eliminada(s) correctamente`, { duration: 3000 });\n        \n        // Actualizar los documentos disponibles para reflejar el cambio\n        this.updateAlreadyAddedStatus();\n    }\n\n    // ===== MÉTODOS PRIVADOS =====\n    private loadPlanillaById(planillaId: string): void {\n        // Cargar datos de la planilla desde el archivo JSON\n        const planillasUrl = \"./model/mock/planilla-object.json\";\n        \n        try {\n            const oModel = new JSONModel();\n            oModel.loadData(planillasUrl, undefined, false);\n            const oData = oModel.getData();\n            console.log(\"PagosMasivosDetalle.controller - Datos de planilla cargados:\", oData);\n            \n            // Buscar la planilla por ID en el array de planillas (convertir a número para comparación)\n            const planillas = oData.planillas || [];\n            const planillaIdNum = parseInt(planillaId);\n            const planilla = planillas.find((item: any) => item.DocEntry === planillaIdNum);\n            \n            if (planilla) {\n                console.log(\"PagosMasivosDetalle.controller - Planilla encontrada:\", planilla);\n                \n                // Agregar la propiedad isNewPlanilla como false para planillas existentes\n                const planillaWithMode = {\n                    ...planilla,\n                    isNewPlanilla: false\n                };\n                \n                // Crear modelo para la planilla seleccionada\n                const oModelPlanilla = new JSONModel();\n                oModelPlanilla.setData(planillaWithMode);\n                \n                // Asignar el modelo a la vista\n                const oView = this.getView();\n                if (oView) {\n                    oView.setModel(oModelPlanilla, \"planilla\");\n                    console.log(\"PagosMasivosDetalle.controller - Modelo de planilla asignado a la vista\");\n                    \n                    // Cargar también las series\n                    this.pagosMasivosManager.loadSeriesData();\n                    \n                    // Cargar cuentas bancarias para el ComboBox\n                    const cuentasBancariasModel = new JSONModel();\n                    cuentasBancariasModel.loadData(\"./model/mock/cuentas-bancarias.json\", undefined, false);\n                    oView.setModel(cuentasBancariasModel, \"cuentasBancarias\");\n                    \n                    cuentasBancariasModel.attachRequestCompleted(() => {\n                        console.log(\"PagosMasivosDetalle.controller - Cuentas bancarias cargadas para planilla existente\");\n                        // Forzar actualización del modelo de planilla para asegurar que el ComboBox funcione\n                        oModelPlanilla.refresh(true);\n                    });\n                }\n            } else {\n                console.log(\"PagosMasivosDetalle.controller - Planilla no encontrada, cargando datos de respaldo\");\n                this.loadFallbackPlanillaData(planillaId);\n            }\n        } catch (error) {\n            console.error(\"PagosMasivosDetalle.controller - Excepción al cargar datos de planilla:\", error);\n            this.loadFallbackPlanillaData(planillaId);\n        }\n    }\n\n        private loadFallbackPlanillaData(planillaId: string): void {\n        console.log(\"PagosMasivosDetalle.controller - Cargando datos de respaldo para planilla ID:\", planillaId);\n        \n        // Datos de respaldo para mostrar en caso de error\n        const fallbackData = {\n            \"DocEntry\": planillaId,\n            \"DocNum\": parseInt(planillaId),\n            \"isNewPlanilla\": false,\n            \"U_CUENTA\": \"194-1985504-0-94\",\n            \"U_IDBANCO\": \"BCP\",\n            \"U_NMBANCO\": \"BANCO DE CREDITO\",\n            \"U_CCBANCO\": \"1941985504094\",\n            \"U_GLACCOUNT\": \"1041101\",\n            \"U_MONEDA\": \"SOL\",\n            \"U_SERIE\": 24,\n            \"U_ESTADO\": \"E\",\n            \"U_FECHA\": \"2024-03-21T00:00:00Z\",\n            \"U_FECHAP\": \"2024-03-21T00:00:00Z\",\n            \"U_TC\": 3.701,\n            \"U_RETEN\": null,\n            \"U_FECHAV\": null,\n            \"U_IDSN\": null,\n            \"U_NMSN\": null,\n            \"U_GLOSA\": \"PG F/VARIAS\",\n            \"U_TOTAL\": 19516.06,\n            \"U_IDPAGO\": 1977,\n            \"U_SUBTOTAL\": 19516.06,\n            \"U_REF\": null,\n            \"U_NOPBAN\": \"09627515\",\n            \"U_IDSUC\": null,\n            \"U_NMSUC\": null,\n            \"U_FCAJA\": -1,\n            \"U_CONTA\": 0,\n            \"VS_PMP1Collection\": [\n                {\n                    \"DocEntry\": parseInt(planillaId),\n                    \"LineId\": 1,\n                    \"VisOrder\": 1,\n                    \"Object\": \"VS_OPMP\",\n                    \"LogInst\": null,\n                    \"U_CHECK\": \"Y\",\n                    \"U_IDPAGO\": 1971,\n                    \"U_TIPDOC\": \"Factura\",\n                    \"U_IDDOC\": 3617,\n                    \"U_LINDOC\": 0,\n                    \"U_OBJDOC\": \"18\",\n                    \"U_CUODOC\": \"1\",\n                    \"U_IDSN\": \"PL10081644867\",\n                    \"U_NMSN\": \"BUSTAMANTE DAVILA MARIA ELIZABETH\",\n                    \"U_RUC\": \"10081644867\",\n                    \"U_NUMDOC\": \"E001-78\",\n                    \"U_MONDOC\": \"SOL\",\n                    \"U_IMPORTE\": 288,\n                    \"U_SALDO\": 288,\n                    \"U_PAGONETO\": 288,\n                    \"U_PAGLOC\": 288,\n                    \"U_PAGEXT\": 0,\n                    \"U_RETLOC\": 0,\n                    \"U_RETEXT\": 0,\n                    \"U_FVENC\": \"2024-03-15T00:00:00Z\",\n                    \"U_FCONT\": \"2024-03-15T00:00:00Z\",\n                    \"U_FDOCU\": \"2024-03-15T00:00:00Z\",\n                    \"U_CCORRI\": \"19394614129025\",\n                    \"U_CTAINF\": \"BCP\",\n                    \"U_MONINF\": \"SOL\",\n                    \"U_RETCOD\": \"\",\n                    \"U_RETPOR\": 0,\n                    \"U_ESTADO\": \"1\",\n                    \"U_SL\": 288,\n                    \"U_SE\": 0,\n                    \"U_RL\": 0,\n                    \"U_RE\": 0,\n                    \"U_BL\": 0,\n                    \"U_BE\": 0,\n                    \"U_IL\": 288,\n                    \"U_REF2\": \"01E001-78\",\n                    \"U_PAGLOC0\": 0,\n                    \"U_PAGEXT0\": 0,\n                    \"U_RETLOC0\": 0,\n                    \"U_RETEXT0\": 0,\n                    \"U_MPBB\": \"2\"\n                }\n            ]\n        };\n        \n        const oModelPlanilla = new JSONModel();\n        oModelPlanilla.setData(fallbackData);\n        \n        const oView = this.getView();\n        if (oView) {\n            oView.setModel(oModelPlanilla, \"planilla\");\n            console.log(\"PagosMasivosDetalle.controller - Modelo de planilla de respaldo asignado a la vista\");\n            \n            // Cargar también las series\n            this.pagosMasivosManager.loadSeriesData();\n            \n            // Cargar cuentas bancarias para el ComboBox\n            const cuentasBancariasModel = new JSONModel();\n            cuentasBancariasModel.loadData(\"./model/mock/cuentas-bancarias.json\", undefined, false);\n            oView.setModel(cuentasBancariasModel, \"cuentasBancarias\");\n            \n            cuentasBancariasModel.attachRequestCompleted(() => {\n                console.log(\"PagosMasivosDetalle.controller - Cuentas bancarias cargadas para planilla de respaldo\");\n                // Forzar actualización del modelo de planilla para asegurar que el ComboBox funcione\n                oModelPlanilla.refresh(true);\n            });\n        }\n    }\n\n    private checkForDetailNavigation(): void {\n        // Verificar si necesitamos navegar a la página de detalle\n        const oComponent = this.getOwnerComponent() as UIComponent;\n        const oRouter = oComponent.getRouter();\n        \n        // Obtener parámetros de la ruta actual\n        const oRoute = oRouter.getRoute(\"RoutePagosMasivosDetalle\");\n        if (oRoute) {\n            oRoute.attachPatternMatched((oEvent: any) => {\n                const planillaId = oEvent.getParameter(\"arguments\").planillaId;\n                if (planillaId && planillaId !== \"new\") {\n                    console.log(\"PagosMasivosDetalle.controller - Navegando al detalle de planilla:\", planillaId);\n                    this.loadPlanillaById(planillaId);\n                } else if (planillaId === \"new\") {\n                    console.log(\"PagosMasivosDetalle.controller - Creando nueva planilla\");\n                    this.pagosMasivosManager.createNewPlanilla();\n                }\n            });\n        }\n    }\n\n\n\n    public onDocumentDialogAfterOpen(): void {\n        console.log(\"PagosMasivosDetalle.controller - Diálogo abierto, marcando documentos existentes\");\n        \n        const oView = this.getView();\n        if (!oView) {\n            return;\n        }\n\n        // Obtener el modelo de planilla para verificar documentos existentes\n        const oPlanillaModel = oView.getModel(\"planilla\") as JSONModel;\n        const oModel = oView.getModel(\"oModel\") as JSONModel;\n        \n        if (!oPlanillaModel || !oModel) {\n            console.log(\"Modelos no encontrados\");\n            return;\n        }\n        \n        const planillaData = oPlanillaModel.getData();\n        const availableDocuments = oModel.getData();\n        \n        console.log(\"Datos de planilla:\", planillaData);\n        console.log(\"Datos de documentos disponibles:\", availableDocuments);\n        \n        if (!planillaData || !availableDocuments) {\n            console.log(\"No hay datos disponibles\");\n            return;\n        }\n        \n        // Verificar si los documentos están cargados\n        if (!availableDocuments.documents || availableDocuments.documents.length === 0) {\n            console.log(\"Documentos aún no cargados, esperando datos...\");\n            // Esperar a que el modelo se cargue\n            oModel.attachRequestCompleted(() => {\n                setTimeout(() => {\n                    this.markAlreadyAddedDocuments();\n                }, 100);\n            });\n            return;\n        }\n        \n        // Agregar un pequeño retraso para asegurar que los datos estén correctamente vinculados\n        setTimeout(() => {\n            this.markAlreadyAddedDocuments();\n        }, 100);\n    }\n\n    private markAlreadyAddedDocuments(): void {\n        console.log(\"=== INICIO markAlreadyAddedDocuments ===\");\n        const oView = this.getView();\n        if (!oView) {\n            console.log(\"Vista no encontrada\");\n            return;\n        }\n        \n        const oPlanillaModel = oView.getModel(\"planilla\") as JSONModel;\n        const oModel = oView.getModel(\"oModel\") as JSONModel;\n        \n        if (!oPlanillaModel || !oModel) {\n            console.log(\"Modelos no encontrados\");\n            return;\n        }\n        \n        const planillaData = oPlanillaModel.getData();\n        const availableDocuments = oModel.getData();\n        \n        console.log(\"Claves de datos de planilla:\", planillaData ? Object.keys(planillaData) : \"null\");\n        console.log(\"Claves de documentos disponibles:\", availableDocuments ? Object.keys(availableDocuments) : \"null\");\n        \n        if (!planillaData || !availableDocuments || !availableDocuments.documents) {\n            console.log(\"Faltan datos para marcar documentos\");\n            return;\n        }\n        \n        // Verificar si los datos de planilla están correctamente cargados\n        if (!planillaData.VS_PMP1Collection) {\n            console.log(\"VS_PMP1Collection de planilla no encontrada, inicializando como vacía\");\n            planillaData.VS_PMP1Collection = [];\n            oPlanillaModel.setData(planillaData);\n        }\n        \n        // Obtener números de documentos existentes en la planilla\n        const existingDocNums = (planillaData.VS_PMP1Collection || []).map((doc: any) => doc.U_NUMDOC);\n        console.log(\"Documentos existentes en planilla:\", existingDocNums);\n        console.log(\"Cantidad de documentos disponibles:\", availableDocuments.documents.length);\n        console.log(\"Longitud de VS_PMP1Collection de planilla:\", planillaData.VS_PMP1Collection ? planillaData.VS_PMP1Collection.length : 0);\n        \n        // Siempre inicializar alreadyInPlanilla a false primero\n        console.log(\"Inicializando todos los documentos a alreadyInPlanilla = false\");\n        availableDocuments.documents.forEach((doc: any, index: number) => {\n            doc.alreadyInPlanilla = false;\n            console.log(`Documento ${index}: ${doc.DocNum} - alreadyInPlanilla establecido a false`);\n        });\n        \n        // Solo marcar documentos si realmente hay documentos existentes en la planilla\n        if (!planillaData.VS_PMP1Collection || planillaData.VS_PMP1Collection.length === 0) {\n            console.log(\"No hay documentos existentes en planilla, todos los documentos marcados como no agregados\");\n            // Asegurar que todos los documentos estén marcados como no agregados\n            availableDocuments.documents.forEach((doc: any, index: number) => {\n                doc.alreadyInPlanilla = false;\n                console.log(`Documento ${index}: ${doc.DocNum} - alreadyInPlanilla establecido a false (planilla vacía)`);\n            });\n        } else {\n            // Marcar documentos como ya en la planilla\n            let markedCount = 0;\n            availableDocuments.documents.forEach((doc: any, index: number) => {\n                const isAlreadyAdded = existingDocNums.includes(doc.DocNum);\n                doc.alreadyInPlanilla = isAlreadyAdded;\n                console.log(`Documento ${index}: ${doc.DocNum} - verificando contra existentes: ${existingDocNums.join(', ')} - alreadyInPlanilla establecido a ${isAlreadyAdded}`);\n                if (isAlreadyAdded) {\n                    markedCount++;\n                }\n            });\n            console.log(`Marcados ${markedCount} documentos como ya agregados de ${availableDocuments.documents.length} total`);\n        }\n        \n        // Actualizar el modelo\n        console.log(\"Actualizando modelo con datos modificados\");\n        oModel.setData(availableDocuments);\n        console.log(\"=== FIN markAlreadyAddedDocuments ===\");\n    }\n\n\n} "],"mappings":"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","ignoreList":[]}