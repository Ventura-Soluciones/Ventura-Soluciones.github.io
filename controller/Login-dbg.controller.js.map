{"version":3,"file":"Login-dbg.controller.js","names":["sap","ui","define","Controller","MessageToast","MessageBox","JSONModel","extend","oCurrentUser","onInit","oLoginModel","username","password","rememberMe","getView","setModel","onLoginPress","oModel","getModel","sUsername","getProperty","sPassword","bRememberMe","error","loginButton","byId","setEnabled","setText","authenticateUser","then","authenticated","setAuthenticationState","show","duration","oRouter","getOwnerComponent","getRouter","navTo","catch","console","finally","Promise","resolve","reject","aUserAccess","loadData","undefined","data","getData","users","aUsers","oUser","find","user","email","useFallbackUsers","fallbackUsers","id","name","role","status","companies","bAuthenticated","oAuthData","isAuthenticated","userInfo","timestamp","Date","now","localStorage","setItem","JSON","stringify","sessionStorage","onForgotPassword","information","onKeyPress","oEvent","getParameter","getAuthenticationState","sAuthData","getItem","parse"],"sources":["Login.controller.ts"],"sourcesContent":["sap.ui.define([\r\n    \"sap/ui/core/mvc/Controller\",\r\n    \"sap/m/MessageToast\",\r\n    \"sap/m/MessageBox\",\r\n    \"sap/ui/model/json/JSONModel\"\r\n],\r\n    /**\r\n     * @param {typeof sap.ui.core.mvc.Controller} Controller\r\n     */\r\n    function (\r\n        Controller: any,\r\n        MessageToast: any,\r\n        MessageBox: any,\r\n        JSONModel: any\r\n    ) {\r\n        \"use strict\";\r\n\r\n        // Definir interfaces para seguridad de tipos\r\n        interface User {\r\n            id: number;\r\n            name: string;\r\n            email: string;\r\n            password: string;\r\n            role: string;\r\n            status: string;\r\n            companies: Array<{ id: number; name: string }>;\r\n        }\r\n\r\n        interface AuthData {\r\n            isAuthenticated: boolean;\r\n            userInfo: User;\r\n            timestamp: number;\r\n        }\r\n\r\n        interface LoginModel {\r\n            username: string;\r\n            password: string;\r\n            rememberMe: boolean;\r\n        }\r\n\r\n        return Controller.extend(\"finanb1.controller.Login\", {\r\n            oCurrentUser: null as User | null,\r\n\r\n            onInit: function (this: any): void {\r\n                const oLoginModel: any = new JSONModel({\r\n                    username: \"\",\r\n                    password: \"\",\r\n                    rememberMe: false\r\n                } as LoginModel);\r\n                this.getView().setModel(oLoginModel, \"loginModel\");\r\n            },\r\n\r\n            onLoginPress: function (this: any): void {\r\n                const oModel: any = this.getView().getModel(\"loginModel\");\r\n                const sUsername: string = oModel.getProperty(\"/username\");\r\n                const sPassword: string = oModel.getProperty(\"/password\");\r\n                const bRememberMe: boolean = oModel.getProperty(\"/rememberMe\");\r\n\r\n                // Basic validation\r\n                if (!sUsername || !sPassword) {\r\n                    MessageBox.error(\"Por favor ingrese usuario y contraseña\");\r\n                    return;\r\n                }\r\n\r\n                // Show loading indicator\r\n                const loginButton: any = this.byId(\"loginButton\");\r\n                if (loginButton) {\r\n                    loginButton.setEnabled(false);\r\n                    loginButton.setText(\"Verificando...\");\r\n                }\r\n\r\n                // Authenticate user asynchronously\r\n                this.authenticateUser(sUsername, sPassword).then((authenticated: boolean) => {\r\n                    if (authenticated) {\r\n                        this.setAuthenticationState(true, sUsername, bRememberMe);\r\n                        \r\n                        MessageToast.show(\"Inicio de sesión exitoso\", {\r\n                            duration: 2000\r\n                        });\r\n\r\n                        const oRouter: any = this.getOwnerComponent().getRouter();\r\n                        oRouter.navTo(\"RouteConfiguracion\");\r\n                    } else {\r\n                        MessageBox.error(\"Usuario o contraseña incorrectos\");\r\n                    }\r\n                }).catch((error: any) => {\r\n                    console.error(\"Authentication error:\", error);\r\n                    MessageBox.error(\"Error durante la autenticación. Por favor intente nuevamente.\");\r\n                }).finally(() => {\r\n                    // Reset button state\r\n                    if (loginButton) {\r\n                        loginButton.setEnabled(true);\r\n                        loginButton.setText(\"Iniciar Sesión\");\r\n                    }\r\n                });\r\n            },\r\n\r\n            authenticateUser: function (this: any, sUsername: string, sPassword: string): Promise<boolean> {\r\n                return new Promise((resolve, reject) => {\r\n                    // Get mock users data\r\n                    const aUserAccess: any = new JSONModel();\r\n                    \r\n                    try {\r\n                        // Load data synchronously first\r\n                        aUserAccess.loadData(\"./model/mock/users.json\", undefined, false);\r\n                        \r\n                        // Try to get data immediately\r\n                        const data = aUserAccess.getData();\r\n                        if (data && data.users) {\r\n                            const aUsers: User[] = data.users;\r\n                            \r\n                            // Find user with matching credentials (using email as username)\r\n                            const oUser: User | undefined = aUsers.find(function(user: User): boolean {\r\n                                return user.email === sUsername && user.password === sPassword;\r\n                            });\r\n                            \r\n                            if (oUser) {\r\n                                // Store user info for later use\r\n                                this.oCurrentUser = oUser;\r\n                                resolve(true);\r\n                            } else {\r\n                                resolve(false);\r\n                            }\r\n                        } else {\r\n                            // Fallback to hardcoded users\r\n                            this.useFallbackUsers(sUsername, sPassword, resolve);\r\n                        }\r\n                    } catch (error) {\r\n                        console.error(\"Error loading user data:\", error);\r\n                        // Fallback to hardcoded users for testing\r\n                        this.useFallbackUsers(sUsername, sPassword, resolve);\r\n                    }\r\n                });\r\n            },\r\n\r\n            useFallbackUsers: function (this: any, sUsername: string, sPassword: string, resolve: any): void {\r\n                const fallbackUsers: User[] = [\r\n                    {\r\n                        id: 1,\r\n                        name: \"Admin User\",\r\n                        email: \"admin@company.com\",\r\n                        password: \"admin123\",\r\n                        role: \"admin\",\r\n                        status: \"active\",\r\n                        companies: [{ id: 1, name: \"Demo Company\" }]\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        name: \"Regular User\",\r\n                        email: \"user@company.com\",\r\n                        password: \"user123\",\r\n                        role: \"user\",\r\n                        status: \"active\",\r\n                        companies: [{ id: 1, name: \"Demo Company\" }]\r\n                    }\r\n                ];\r\n                \r\n                const oUser: User | undefined = fallbackUsers.find(function(user: User): boolean {\r\n                    return user.email === sUsername && user.password === sPassword;\r\n                });\r\n                \r\n                if (oUser) {\r\n                    this.oCurrentUser = oUser;\r\n                    resolve(true);\r\n                } else {\r\n                    resolve(false);\r\n                }\r\n            },\r\n\r\n            setAuthenticationState: function (this: any, bAuthenticated: boolean, sUsername: string, bRememberMe: boolean): void {\r\n                const oAuthData: AuthData = {\r\n                    isAuthenticated: bAuthenticated,\r\n                    userInfo: this.oCurrentUser || {} as User,\r\n                    timestamp: Date.now()\r\n                };\r\n\r\n                if (bRememberMe) {\r\n                    localStorage.setItem(\"finanb1_auth\", JSON.stringify(oAuthData));\r\n                } else {\r\n                    sessionStorage.setItem(\"finanb1_auth\", JSON.stringify(oAuthData));\r\n                }\r\n            },\r\n\r\n            onForgotPassword: function (this: any): void {\r\n                MessageBox.information(\"Función de recuperación de contraseña en desarrollo\");\r\n            },\r\n\r\n            onKeyPress: function (this: any, oEvent: any): void {\r\n                // Handle Enter key press to trigger login\r\n                if (oEvent.getParameter(\"keyCode\") === 13) { // Enter key\r\n                    this.onLoginPress();\r\n                }\r\n            },\r\n\r\n            getAuthenticationState: function (this: any): AuthData | null {\r\n                // Check both session and local storage\r\n                const sAuthData: string | null = sessionStorage.getItem(\"finanb1_auth\") || localStorage.getItem(\"finanb1_auth\");\r\n                return sAuthData ? JSON.parse(sAuthData) as AuthData : null;\r\n            }\r\n        });\r\n    });\r\n"],"mappings":"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","ignoreList":[]}