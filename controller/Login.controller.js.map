{"version":3,"file":"Login.controller.js","names":["sap","ui","define","Controller","MessageToast","MessageBox","JSONModel","extend","oCurrentUser","onInit","oLoginModel","username","password","rememberMe","this","getView","setModel","onLoginPress","oModel","getModel","sUsername","getProperty","sPassword","bRememberMe","error","loginButton","byId","setEnabled","setText","authenticateUser","then","authenticated","setAuthenticationState","show","duration","oRouter","getOwnerComponent","getRouter","navTo","catch","console","finally","Promise","resolve","reject","aUserAccess","loadData","undefined","data","getData","users","aUsers","oUser","find","user","email","useFallbackUsers","fallbackUsers","id","name","role","status","companies","bAuthenticated","oAuthData","isAuthenticated","userInfo","timestamp","Date","now","localStorage","setItem","JSON","stringify","sessionStorage","onForgotPassword","information","onKeyPress","oEvent","getParameter","getAuthenticationState","sAuthData","getItem","parse"],"sources":["Login.controller.ts"],"sourcesContent":["sap.ui.define([\r\n    \"sap/ui/core/mvc/Controller\",\r\n    \"sap/m/MessageToast\",\r\n    \"sap/m/MessageBox\",\r\n    \"sap/ui/model/json/JSONModel\"\r\n],\r\n    /**\r\n     * @param {typeof sap.ui.core.mvc.Controller} Controller\r\n     */\r\n    function (\r\n        Controller: any,\r\n        MessageToast: any,\r\n        MessageBox: any,\r\n        JSONModel: any\r\n    ) {\r\n        \"use strict\";\r\n\r\n        // Definir interfaces para seguridad de tipos\r\n        interface User {\r\n            id: number;\r\n            name: string;\r\n            email: string;\r\n            password: string;\r\n            role: string;\r\n            status: string;\r\n            companies: Array<{ id: number; name: string }>;\r\n        }\r\n\r\n        interface AuthData {\r\n            isAuthenticated: boolean;\r\n            userInfo: User;\r\n            timestamp: number;\r\n        }\r\n\r\n        interface LoginModel {\r\n            username: string;\r\n            password: string;\r\n            rememberMe: boolean;\r\n        }\r\n\r\n        return Controller.extend(\"finanb1.controller.Login\", {\r\n            oCurrentUser: null as User | null,\r\n\r\n            onInit: function (this: any): void {\r\n                const oLoginModel: any = new JSONModel({\r\n                    username: \"\",\r\n                    password: \"\",\r\n                    rememberMe: false\r\n                } as LoginModel);\r\n                this.getView().setModel(oLoginModel, \"loginModel\");\r\n            },\r\n\r\n            onLoginPress: function (this: any): void {\r\n                const oModel: any = this.getView().getModel(\"loginModel\");\r\n                const sUsername: string = oModel.getProperty(\"/username\");\r\n                const sPassword: string = oModel.getProperty(\"/password\");\r\n                const bRememberMe: boolean = oModel.getProperty(\"/rememberMe\");\r\n\r\n                // Basic validation\r\n                if (!sUsername || !sPassword) {\r\n                    MessageBox.error(\"Por favor ingrese usuario y contraseña\");\r\n                    return;\r\n                }\r\n\r\n                // Show loading indicator\r\n                const loginButton: any = this.byId(\"loginButton\");\r\n                if (loginButton) {\r\n                    loginButton.setEnabled(false);\r\n                    loginButton.setText(\"Verificando...\");\r\n                }\r\n\r\n                // Authenticate user asynchronously\r\n                this.authenticateUser(sUsername, sPassword).then((authenticated: boolean) => {\r\n                    if (authenticated) {\r\n                        this.setAuthenticationState(true, sUsername, bRememberMe);\r\n                        \r\n                        MessageToast.show(\"Inicio de sesión exitoso\", {\r\n                            duration: 2000\r\n                        });\r\n\r\n                        const oRouter: any = this.getOwnerComponent().getRouter();\r\n                        oRouter.navTo(\"RouteConfiguracion\");\r\n                    } else {\r\n                        MessageBox.error(\"Usuario o contraseña incorrectos\");\r\n                    }\r\n                }).catch((error: any) => {\r\n                    console.error(\"Authentication error:\", error);\r\n                    MessageBox.error(\"Error durante la autenticación. Por favor intente nuevamente.\");\r\n                }).finally(() => {\r\n                    // Reset button state\r\n                    if (loginButton) {\r\n                        loginButton.setEnabled(true);\r\n                        loginButton.setText(\"Iniciar Sesión\");\r\n                    }\r\n                });\r\n            },\r\n\r\n            authenticateUser: function (this: any, sUsername: string, sPassword: string): Promise<boolean> {\r\n                return new Promise((resolve, reject) => {\r\n                    // Get mock users data\r\n                    const aUserAccess: any = new JSONModel();\r\n                    \r\n                    try {\r\n                        // Load data synchronously first\r\n                        aUserAccess.loadData(\"./model/mock/users.json\", undefined, false);\r\n                        \r\n                        // Try to get data immediately\r\n                        const data = aUserAccess.getData();\r\n                        if (data && data.users) {\r\n                            const aUsers: User[] = data.users;\r\n                            \r\n                            // Find user with matching credentials (using email as username)\r\n                            const oUser: User | undefined = aUsers.find(function(user: User): boolean {\r\n                                return user.email === sUsername && user.password === sPassword;\r\n                            });\r\n                            \r\n                            if (oUser) {\r\n                                // Store user info for later use\r\n                                this.oCurrentUser = oUser;\r\n                                resolve(true);\r\n                            } else {\r\n                                resolve(false);\r\n                            }\r\n                        } else {\r\n                            // Fallback to hardcoded users\r\n                            this.useFallbackUsers(sUsername, sPassword, resolve);\r\n                        }\r\n                    } catch (error) {\r\n                        console.error(\"Error loading user data:\", error);\r\n                        // Fallback to hardcoded users for testing\r\n                        this.useFallbackUsers(sUsername, sPassword, resolve);\r\n                    }\r\n                });\r\n            },\r\n\r\n            useFallbackUsers: function (this: any, sUsername: string, sPassword: string, resolve: any): void {\r\n                const fallbackUsers: User[] = [\r\n                    {\r\n                        id: 1,\r\n                        name: \"Admin User\",\r\n                        email: \"admin@company.com\",\r\n                        password: \"admin123\",\r\n                        role: \"admin\",\r\n                        status: \"active\",\r\n                        companies: [{ id: 1, name: \"Demo Company\" }]\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        name: \"Regular User\",\r\n                        email: \"user@company.com\",\r\n                        password: \"user123\",\r\n                        role: \"user\",\r\n                        status: \"active\",\r\n                        companies: [{ id: 1, name: \"Demo Company\" }]\r\n                    }\r\n                ];\r\n                \r\n                const oUser: User | undefined = fallbackUsers.find(function(user: User): boolean {\r\n                    return user.email === sUsername && user.password === sPassword;\r\n                });\r\n                \r\n                if (oUser) {\r\n                    this.oCurrentUser = oUser;\r\n                    resolve(true);\r\n                } else {\r\n                    resolve(false);\r\n                }\r\n            },\r\n\r\n            setAuthenticationState: function (this: any, bAuthenticated: boolean, sUsername: string, bRememberMe: boolean): void {\r\n                const oAuthData: AuthData = {\r\n                    isAuthenticated: bAuthenticated,\r\n                    userInfo: this.oCurrentUser || {} as User,\r\n                    timestamp: Date.now()\r\n                };\r\n\r\n                if (bRememberMe) {\r\n                    localStorage.setItem(\"finanb1_auth\", JSON.stringify(oAuthData));\r\n                } else {\r\n                    sessionStorage.setItem(\"finanb1_auth\", JSON.stringify(oAuthData));\r\n                }\r\n            },\r\n\r\n            onForgotPassword: function (this: any): void {\r\n                MessageBox.information(\"Función de recuperación de contraseña en desarrollo\");\r\n            },\r\n\r\n            onKeyPress: function (this: any, oEvent: any): void {\r\n                // Handle Enter key press to trigger login\r\n                if (oEvent.getParameter(\"keyCode\") === 13) { // Enter key\r\n                    this.onLoginPress();\r\n                }\r\n            },\r\n\r\n            getAuthenticationState: function (this: any): AuthData | null {\r\n                // Check both session and local storage\r\n                const sAuthData: string | null = sessionStorage.getItem(\"finanb1_auth\") || localStorage.getItem(\"finanb1_auth\");\r\n                return sAuthData ? JSON.parse(sAuthData) as AuthData : null;\r\n            }\r\n        });\r\n    });\r\n"],"mappings":"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","ignoreList":[]}