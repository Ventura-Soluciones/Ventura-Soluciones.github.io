sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/MessageToast","sap/ui/model/json/JSONModel","sap/m/MessageBox","../model/formatter","./modules/UserManager","./modules/MenuManager","./modules/PagosMasivosManager","./modules/NavigationManager","sap/ui/model/Filter","sap/ui/model/FilterOperator"],function(e,o,a,l,n,t,s,i,c,r,d){"use strict";function g(e){return e&&e.__esModule&&typeof e.default!=="undefined"?e.default:e}const u=g(n);const P=t["UserManager"];const f=s["MenuManager"];const m=i["PagosMasivosManager"];const D=c["NavigationManager"];const M=e.extend("com.vs.extension.finanb1.controller.PagosMasivosDetalle",{constructor:function o(){e.prototype.constructor.apply(this,arguments);this.formatter=u},onInit:function e(){this.userManager=new P;this.menuManager=new f;this.pagosMasivosManager=new m;this.navigationManager=new D(this);this.userManager.loadAuthenticatedUser();const o=this.getView();if(o){o.setModel(this.menuManager.getModel(),"menuModel");console.log("Modelo de menú asignado a la vista en onInit")}this.menuManager.loadHardcodedMenuData();this.menuManager.filterNavigationByRole(this.userManager.getCurrentUser()?.role||"user");this.pagosMasivosManager.initializeModels();this.pagosMasivosManager.setController(this);if(o){this.oModel=new a;this.oModel.loadData("./model/mock/available-documents.json",undefined,false);o.setModel(this.oModel,"oModel");const e=new a;e.loadData("./model/mock/cuentas-bancarias.json",undefined,false);o.setModel(e,"cuentasBancarias");e.attachRequestCompleted(()=>{console.log("Modelo de cuentas bancarias cargado")});this.oFilterBar=this.getView()?.byId("filterbar");this.oTable=this.getView()?.byId("table");this._filterTimer=null;this.oModel.attachRequestCompleted(()=>{console.log("Modelo de documentos disponibles cargado");const e=this.oModel.getData();if(e&&e.documents){e.documents.forEach(e=>{e.alreadyInPlanilla=false});this.oModel.setData(e)}this._clearTableFilters()})}this.checkForDetailNavigation()},onExit:function e(){this.oModel=null;this.oFilterBar=null;this.oTable=null},onSelectionChange:function e(o){this._debouncedSearch()},onDateRangeChange:function e(o){this._debouncedSearch()},_debouncedSearch:function e(o){const a=o||0;if(this._filterTimer){clearTimeout(this._filterTimer)}this._filterTimer=setTimeout(()=>{this.onSearch()},a)},onSearch:function e(){const o=this.oFilterBar.getFilterGroupItems().reduce((e,o)=>{const a=o.getControl();if(a&&a.getSelectedKeys){const l=a.getSelectedKeys();const n=l.map(e=>{let a=o.getName();if(a==="Name")a="DocType";else if(a==="Category")a="CardCode";else if(a==="SupplierName")a="BankCode";return new r({path:a,operator:d.Contains,value1:e})});if(l.length>0){e.push(new r({filters:n,and:false}))}}else if(a&&a.getValue){const o=a.getValue();if(o&&o!==""){const a=o.split(" - ");if(a.length===2){const o=a[0];const l=a[1];if(o&&l&&o!==""&&l!==""){e.push(new r({path:"DocDate",operator:d.BT,value1:o,value2:l}))}}}}return e},[]);if(this.oTable&&this.oTable.getBinding("items")){this.oTable.getBinding("items").filter(o)}},_clearTableFilters:function e(){if(this.oTable&&this.oTable.getBinding("items")){this.oTable.getBinding("items").filter([])}this._logTableData()},_logTableData:function e(){const o=this.getView();if(!o)return;const a=o.getModel();if(!a)return;const l=a.getProperty("/documents");if(!l)return;console.log("Total de documentos:",l.length);console.log("Primeros documentos:",l.slice(0,3));const n=a.getProperty("/docTypes");const t=a.getProperty("/suppliers");const s=a.getProperty("/banks");console.log("Tipos de documento disponibles:",n?.length||0);console.log("Proveedores disponibles:",t?.length||0);console.log("Bancos disponibles:",s?.length||0)},onSideNavigationItemSelect:function e(o){this.navigationManager.onSideNavigationItemSelect(o)},onSideNavItemSelect:function e(o){this.navigationManager.onSideNavItemSelect(o)},onMenuButtonPress:function e(){this.navigationManager.onMenuButtonPress()},onLogout:function e(){l.confirm("¿Está seguro que desea cerrar sesión?",{title:"Confirmar Cierre de Sesión",onClose:e=>{if(e===l.Action.OK){this.userManager.logout();o.show("Sesión cerrada exitosamente",{duration:2e3});const e=this.getOwnerComponent();const a=e.getRouter();a.navTo("RouteLogin")}}})},onBackToPagosMasivos:function e(){console.log("PagosMasivosDetalle.controller - onBackToPagosMasivos triggered!");const o=this.getOwnerComponent();const a=o.getRouter();a.navTo("RoutePagosMasivos")},onNuevaPlanilla:function e(){console.log("PagosMasivosDetalle.controller - onNuevaPlanilla triggered!");const o=this.getOwnerComponent();const a=o.getRouter();a.navTo("RoutePagosMasivosDetalle",{planillaId:"new"})},onEditPlanilla:function e(){const a=this.getView();if(a){const e=a.getModel("planilla");if(e){const a=e.getData();if(a&&a.Status==="Creada"){o.show("Función de edición en desarrollo",{duration:2e3})}else{l.error("Solo se pueden editar planillas con estado 'Creada'")}}}},onAnularPlanilla:function e(){const o=this.getView();if(o){const e=o.getModel("planilla");if(e){const o=e.getData();if(o){l.confirm("¿Está seguro que desea anular esta planilla?",{title:"Confirmar Anulación",onClose:e=>{if(e===l.Action.OK){this.mockCancelPlanillaAPI(o.DocEntry)}}})}else{l.error("No se pudo obtener los datos de la planilla")}}else{l.error("No se pudo acceder al modelo de la planilla")}}else{l.error("No se pudo acceder a la vista")}},mockCancelPlanillaAPI:function e(o){console.log("PagosMasivosDetalle.controller - Llamada API simulada: POST /Planilla("+o+")/Cancel");setTimeout(()=>{const e={success:true,message:"Planilla anulada exitosamente",planillaId:o,timestamp:(new Date).toISOString()};console.log("PagosMasivosDetalle.controller - Respuesta API simulada:",e);l.success("Planilla anulada exitosamente",{title:"Operación Exitosa",details:`Llamada API: POST /Planilla(${o})/Cancel\nRespuesta: ${JSON.stringify(e,null,2)}`,onClose:()=>{const e=this.getView();if(e){const o=e.getModel("planilla");if(o){const e=o.getData();if(e){e.U_ESTADO="A";o.refresh(true);console.log("PagosMasivosDetalle.controller - Estado de planilla actualizado a 'Anulada'")}}}}})},1e3)},onDownloadPlanilla:function e(){console.log("PagosMasivosDetalle.controller - onDownloadPlanilla triggered!");this.pagosMasivosManager.onDownloadPlanilla()},onFechaEjecucionChange:function e(o){console.log("PagosMasivosDetalle.controller - onFechaEjecucionChange triggered!");this.pagosMasivosManager.onFechaEjecucionChange(o)},onSerieChange:function e(o){console.log("PagosMasivosDetalle.controller - onSerieChange triggered!");this.pagosMasivosManager.onSerieChange(o)},onCuentaBancariaChange:function e(o){console.log("PagosMasivosDetalle.controller - onCuentaBancariaChange activado");const a=this.getView();if(!a)return;const l=o.getParameter("selectedItem");if(!l){console.log("No se seleccionó ninguna cuenta bancaria");return}const n=l.getKey();console.log("PagosMasivosDetalle.controller - Cuenta bancaria seleccionada (clave):",n);const t=a.getModel("cuentasBancarias");if(!t){console.error("PagosMasivosDetalle.controller - Modelo de cuentas bancarias no encontrado");return}const s=t.getData();const i=s.value.find(e=>e.AccNo===n);if(!i){console.error("PagosMasivosDetalle.controller - Cuenta seleccionada no encontrada");return}console.log("PagosMasivosDetalle.controller - Cuenta seleccionada:",i);const c=a.getModel("planilla");if(c){c.setProperty("/U_CUENTA",i.AccNo);c.setProperty("/U_IDBANCO",i.BankCode);c.setProperty("/U_NMBANCO",i.BankCode);c.setProperty("/U_MONEDA",i.Branch);c.setProperty("/U_GLACCOUNT",i.GLAccount);console.log("PagosMasivosDetalle.controller - Planilla actualizada con datos de cuenta:",{U_CUENTA:i.AccNo,U_IDBANCO:i.BankCode,U_NMBANCO:i.BankCode,U_MONEDA:i.Branch,U_GLACCOUNT:i.GLAccount});c.refresh(true)}else{console.error("PagosMasivosDetalle.controller - Modelo de planilla no encontrado")}},onGuardarPlanilla:function e(){console.log("PagosMasivosDetalle.controller - onGuardarPlanilla triggered!");const o=this.getView();if(!o){l.error("No se pudo acceder a la vista");return}const a=o.getModel("planilla");if(!a){l.error("No se pudo acceder al modelo de la planilla");return}const n=a.getData();if(!n){l.error("No se pudo obtener los datos de la planilla");return}console.log("PagosMasivosDetalle.controller - Valor de isNewPlanilla:",n.isNewPlanilla);console.log("PagosMasivosDetalle.controller - Datos de planilla:",n);if(n.isNewPlanilla===true){const e=this.validateNewPlanilla(n);if(!e.isValid){l.error(e.message,{title:"Validación Requerida"});return}l.confirm("¿Está seguro que desea crear esta planilla?",{title:"Confirmar Creación",onClose:e=>{if(e===l.Action.OK){this.mockCreatePlanillaAPI(n)}}})}else{l.information("Esta planilla ya existe. Use 'Ejecutar' para procesarla.")}},onEjecutarPlanilla:function e(){console.log("PagosMasivosDetalle.controller - onEjecutarPlanilla triggered!");const o=this.getView();if(!o){l.error("No se pudo acceder a la vista");return}const a=o.getModel("planilla");if(!a){l.error("No se pudo acceder al modelo de la planilla");return}const n=a.getData();if(!n){l.error("No se pudo obtener los datos de la planilla");return}if(n.U_ESTADO!=="C"){l.warning("Solo se pueden ejecutar planillas con estado 'Creada'");return}if(!n.VS_PMP1Collection||n.VS_PMP1Collection.length===0){l.warning("La planilla debe tener al menos un documento para ser ejecutada");return}l.confirm("¿Está seguro que desea ejecutar esta planilla?",{title:"Confirmar Ejecución",onClose:e=>{if(e===l.Action.OK){this.mockExecutePlanillaAPI(n)}}})},mockCreatePlanillaAPI:function e(o){console.log("PagosMasivosDetalle.controller - Llamada API simulada: POST /Planilla");console.log("PagosMasivosDetalle.controller - Datos enviados:",o);setTimeout(()=>{const e={success:true,message:"Planilla creada exitosamente",planillaId:Math.floor(Math.random()*1e3)+100,timestamp:(new Date).toISOString(),createdPlanilla:{...o,DocEntry:Math.floor(Math.random()*1e3)+100,isNewPlanilla:false,U_ESTADO:"C"}};console.log("PagosMasivosDetalle.controller - Respuesta API simulada:",e);l.success("Planilla creada exitosamente",{title:"Operación Exitosa",details:`Llamada API: POST /Planilla\nDatos enviados: ${JSON.stringify(o,null,2)}\nRespuesta: ${JSON.stringify(e,null,2)}`,onClose:()=>{const o=this.getView();if(o){const a=o.getModel("planilla");if(a){a.setData(e.createdPlanilla);a.refresh(true);console.log("PagosMasivosDetalle.controller - Planilla actualizada con datos creados")}}}})},1500)},mockExecutePlanillaAPI:function e(o){console.log("PagosMasivosDetalle.controller - Llamada API simulada: POST /Planilla("+o.DocEntry+")/Execute");const a={DocEntry:o.DocEntry,U_FECHAP:o.U_FECHAP,U_TC:o.U_TC,U_NOPBAN:o.U_NOPBAN};console.log("PagosMasivosDetalle.controller - Datos enviados para ejecución:",a);setTimeout(()=>{const e={success:true,message:"Planilla ejecutada exitosamente",planillaId:o.DocEntry,timestamp:(new Date).toISOString(),executedPlanilla:{...o,U_ESTADO:"E"}};console.log("PagosMasivosDetalle.controller - Respuesta API simulada:",e);l.success("Planilla ejecutada exitosamente",{title:"Operación Exitosa",details:`Llamada API: POST /Planilla(${o.DocEntry})/Execute\nDatos enviados: ${JSON.stringify(a,null,2)}\nRespuesta: ${JSON.stringify(e,null,2)}`,onClose:()=>{const o=this.getView();if(o){const a=o.getModel("planilla");if(a){a.setData(e.executedPlanilla);a.refresh(true);console.log("PagosMasivosDetalle.controller - Planilla actualizada con datos ejecutados")}}}})},2e3)},validateNewPlanilla:function e(o){console.log("PagosMasivosDetalle.controller - Validando nueva planilla:",o);const a=[];if(!o.U_CUENTA){a.push("• Cuenta Bancaria es requerida")}if(!o.U_SERIE){a.push("• Serie es requerida")}if(!o.U_FECHAP){a.push("• Fecha de Ejecución es requerida")}if(!o.U_TC){a.push("• Tipo de Cambio es requerido")}if(!o.VS_PMP1Collection||o.VS_PMP1Collection.length===0){a.push("• Al menos un documento es requerido")}if(a.length>0){const e="Por favor complete los siguientes campos requeridos:\n\n"+a.join("\n");return{isValid:false,message:e}}return{isValid:true,message:""}},onAddDocumentos:function e(){console.log("PagosMasivosDetalle.controller - onAddDocumentos triggered!");if(this.pagosMasivosManager){this.pagosMasivosManager.onAddDocumentos()}else{console.error("PagosMasivosManager is not initialized!")}},onDocumentSearch:function e(o){console.log("PagosMasivosDetalle.controller - onDocumentSearch triggered!");if(this.pagosMasivosManager){this.pagosMasivosManager.onDocumentSearch(o)}},onDocumentBankFilterChange:function e(o){console.log("PagosMasivosDetalle.controller - onDocumentBankFilterChange triggered!");if(this.pagosMasivosManager){this.pagosMasivosManager.onDocumentBankFilterChange(o)}},onDocumentSelectionChange:function e(o){console.log("PagosMasivosDetalle.controller - onDocumentSelectionChange triggered!");if(this.pagosMasivosManager){this.pagosMasivosManager.onDocumentSelectionChange(o)}},onDocumentDialogCancel:function e(){console.log("PagosMasivosDetalle.controller - onDocumentDialogCancel triggered!");if(this.pagosMasivosManager){this.pagosMasivosManager.onDocumentDialogCancel()}},onDocumentDialogConfirm:function e(){console.log("PagosMasivosDetalle.controller - onDocumentDialogConfirm triggered!");const a=this.getView();if(!a)return;const n=a.byId("table");if(!n)return;const t=n.getSelectedItems();if(t.length===0){l.warning("Por favor seleccione al menos un documento.");return}const s=a.getModel("planilla");if(!s)return;const i=s.getData();if(!i)return;const c=i.VS_PMP1Collection||[];const r=c.map(e=>e.U_NUMDOC);const d=[];const g=[];t.forEach(e=>{const o=e.getBindingContext("oModel").getObject();if(r.includes(o.DocNum)){g.push(o.DocNum);return}const a={DocEntry:i.DocEntry,LineId:c.length+d.length+1,VisOrder:c.length+d.length+1,Object:"VS_OPMP",LogInst:null,U_CHECK:"Y",U_IDPAGO:i.U_IDPAGO,U_TIPDOC:o.DocType,U_IDDOC:o.DocEntry,U_LINDOC:0,U_OBJDOC:"18",U_CUODOC:"1",U_IDSN:o.CardCode,U_NMSN:o.CardName,U_RUC:o.CardCode,U_NUMDOC:o.DocNum,U_MONDOC:o.Currency,U_IMPORTE:o.Total,U_SALDO:o.Balance,U_PAGONETO:o.Balance,U_PAGLOC:o.Balance,U_PAGEXT:0,U_RETLOC:0,U_RETEXT:0,U_FVENC:o.DueDate,U_FCONT:o.DocDate,U_FDOCU:o.DocDate,U_CCORRI:o.CuentaBancaria,U_CTAINF:o.BankCode,U_MONINF:o.Currency,U_RETCOD:"",U_RETPOR:0,U_ESTADO:"1",U_SL:o.Balance,U_SE:0,U_RL:0,U_RE:0,U_BL:0,U_BE:0,U_IL:o.Balance,U_REF2:o.DocNum,U_PAGLOC0:o.Balance,U_PAGEXT0:0,U_RETLOC0:0,U_RETEXT0:0,U_MPBB:"2"};d.push(a)});c.push(...d);i.VS_PMP1Collection=c;this.recalculatePlanillaTotals(i);s.setData(i);s.refresh(true);this.updateAlreadyAddedStatus();const u=a.byId("documentSelectionDialog");if(u){u.close()}n.removeSelections();if(d.length>0&&g.length>0){o.show(`${d.length} documento(s) agregado(s), ${g.length} ya existían.`)}else if(d.length>0){o.show(`${d.length} documento(s) agregado(s) a la planilla.`)}else if(g.length>0){l.warning("Todos los documentos seleccionados ya están en la planilla.")}else{l.warning("Por favor seleccione al menos un documento.")}},updateAlreadyAddedStatus:function e(){this.markAlreadyAddedDocuments()},onDeletePlanillaLine:function e(o){console.log("PagosMasivosDetalle.controller - Delete planilla line triggered");const a=this.getView();if(!a){return}const n=a.getModel("planilla");if(!n){console.log("Planilla model not found");return}const t=o.getSource();const s=t.getParent().getParent();const i=s.getBindingContext("planilla");if(!i){console.log("No binding context found");return}const c=i.getObject();const r=i.getPath().split("/").pop();console.log("Deleting line:",c);console.log("Line index:",r);l.confirm(`¿Está seguro que desea eliminar el documento ${c.U_NUMDOC}?`,{title:"Confirmar eliminación",onClose:e=>{if(e===l.Action.OK){this.deletePlanillaLine(parseInt(r))}}})},deletePlanillaLine:function e(a){console.log("PagosMasivosDetalle.controller - Deleting line at index:",a);const l=this.getView();if(!l){return}const n=l.getModel("planilla");if(!n){console.log("Planilla model not found");return}const t=n.getData();if(!t||!t.VS_PMP1Collection){console.log("No planilla data found");return}const s=t.VS_PMP1Collection.filter((e,o)=>o!==a);t.VS_PMP1Collection=s;this.recalculatePlanillaTotals(t);n.setData(t);n.refresh(true);console.log("Line deleted successfully");o.show("Línea eliminada correctamente",{duration:3e3});this.updateAlreadyAddedStatus()},recalculatePlanillaTotals:function e(o){console.log("PagosMasivosDetalle.controller - Recalculando totales de planilla");if(!o||!o.VS_PMP1Collection){return}const a=o.VS_PMP1Collection;const l=a.reduce((e,o)=>e+(o.U_IMPORTE||0),0);const n=a.reduce((e,o)=>e+(o.U_RETLOC||0),0);const t=a.reduce((e,o)=>e+(o.U_PAGLOC0||0),0);o.U_TOTAL=l;o.U_RETEN=n;o.U_SUBTOTAL=t;console.log("Totales actualizados:",{total:l,retencion:n,subtotal:t})},onDeleteSelectedLines:function e(){console.log("PagosMasivosDetalle.controller - Delete selected lines triggered");const o=this.getView();if(!o){return}const a=o.getModel("planilla");if(!a){console.log("Planilla model not found");return}const n=a.getData();if(!n||!n.VS_PMP1Collection){console.log("No planilla data found");return}const t=o.byId("planillaLinesTable");if(!t){console.log("Planilla table not found");return}const s=t.getSelectedItems();if(s.length===0){l.warning("Por favor seleccione al menos una línea para eliminar.");return}const i=s.map(e=>{const o=e.getBindingContext("planilla");return o?o.getObject():null}).filter(e=>e!==null);if(i.length===0){l.warning("No se pudieron obtener los documentos seleccionados.");return}const c=i.map(e=>e.U_NUMDOC).join(", ");l.confirm(`¿Está seguro que desea eliminar los siguientes documentos?\n${c}`,{title:"Confirmar eliminación múltiple",onClose:e=>{if(e===l.Action.OK){this.deleteSelectedPlanillaLines(i)}}})},deleteSelectedPlanillaLines:function e(a){console.log("PagosMasivosDetalle.controller - Deleting selected lines:",a);const l=this.getView();if(!l){return}const n=l.getModel("planilla");if(!n){console.log("Planilla model not found");return}const t=n.getData();if(!t||!t.VS_PMP1Collection){console.log("No planilla data found");return}const s=a.map(e=>e.U_NUMDOC);const i=t.VS_PMP1Collection.filter(e=>!s.includes(e.U_NUMDOC));t.VS_PMP1Collection=i;this.recalculatePlanillaTotals(t);n.setData(t);n.refresh(true);const c=l.byId("planillaLinesTable");if(c){c.removeSelections()}console.log("Líneas seleccionadas eliminadas exitosamente");o.show(`${a.length} línea(s) eliminada(s) correctamente`,{duration:3e3});this.updateAlreadyAddedStatus()},loadPlanillaById:function e(o){const l="./model/mock/planilla-object.json";try{const e=new a;e.loadData(l,undefined,false);const n=e.getData();console.log("PagosMasivosDetalle.controller - Datos de planilla cargados:",n);const t=n.planillas||[];const s=parseInt(o);const i=t.find(e=>e.DocEntry===s);if(i){console.log("PagosMasivosDetalle.controller - Planilla encontrada:",i);const e={...i,isNewPlanilla:false};const o=new a;o.setData(e);const l=this.getView();if(l){l.setModel(o,"planilla");console.log("PagosMasivosDetalle.controller - Modelo de planilla asignado a la vista");this.pagosMasivosManager.loadSeriesData();const e=new a;e.loadData("./model/mock/cuentas-bancarias.json",undefined,false);l.setModel(e,"cuentasBancarias");e.attachRequestCompleted(()=>{console.log("PagosMasivosDetalle.controller - Cuentas bancarias cargadas para planilla existente");o.refresh(true)})}}else{console.log("PagosMasivosDetalle.controller - Planilla no encontrada, cargando datos de respaldo");this.loadFallbackPlanillaData(o)}}catch(e){console.error("PagosMasivosDetalle.controller - Excepción al cargar datos de planilla:",e);this.loadFallbackPlanillaData(o)}},loadFallbackPlanillaData:function e(o){console.log("PagosMasivosDetalle.controller - Cargando datos de respaldo para planilla ID:",o);const l={DocEntry:o,DocNum:parseInt(o),isNewPlanilla:false,U_CUENTA:"194-1985504-0-94",U_IDBANCO:"BCP",U_NMBANCO:"BANCO DE CREDITO",U_CCBANCO:"1941985504094",U_GLACCOUNT:"1041101",U_MONEDA:"SOL",U_SERIE:24,U_ESTADO:"E",U_FECHA:"2024-03-21T00:00:00Z",U_FECHAP:"2024-03-21T00:00:00Z",U_TC:3.701,U_RETEN:null,U_FECHAV:null,U_IDSN:null,U_NMSN:null,U_GLOSA:"PG F/VARIAS",U_TOTAL:19516.06,U_IDPAGO:1977,U_SUBTOTAL:19516.06,U_REF:null,U_NOPBAN:"09627515",U_IDSUC:null,U_NMSUC:null,U_FCAJA:-1,U_CONTA:0,VS_PMP1Collection:[{DocEntry:parseInt(o),LineId:1,VisOrder:1,Object:"VS_OPMP",LogInst:null,U_CHECK:"Y",U_IDPAGO:1971,U_TIPDOC:"Factura",U_IDDOC:3617,U_LINDOC:0,U_OBJDOC:"18",U_CUODOC:"1",U_IDSN:"PL10081644867",U_NMSN:"BUSTAMANTE DAVILA MARIA ELIZABETH",U_RUC:"10081644867",U_NUMDOC:"E001-78",U_MONDOC:"SOL",U_IMPORTE:288,U_SALDO:288,U_PAGONETO:288,U_PAGLOC:288,U_PAGEXT:0,U_RETLOC:0,U_RETEXT:0,U_FVENC:"2024-03-15T00:00:00Z",U_FCONT:"2024-03-15T00:00:00Z",U_FDOCU:"2024-03-15T00:00:00Z",U_CCORRI:"19394614129025",U_CTAINF:"BCP",U_MONINF:"SOL",U_RETCOD:"",U_RETPOR:0,U_ESTADO:"1",U_SL:288,U_SE:0,U_RL:0,U_RE:0,U_BL:0,U_BE:0,U_IL:288,U_REF2:"01E001-78",U_PAGLOC0:0,U_PAGEXT0:0,U_RETLOC0:0,U_RETEXT0:0,U_MPBB:"2"}]};const n=new a;n.setData(l);const t=this.getView();if(t){t.setModel(n,"planilla");console.log("PagosMasivosDetalle.controller - Modelo de planilla de respaldo asignado a la vista");this.pagosMasivosManager.loadSeriesData();const e=new a;e.loadData("./model/mock/cuentas-bancarias.json",undefined,false);t.setModel(e,"cuentasBancarias");e.attachRequestCompleted(()=>{console.log("PagosMasivosDetalle.controller - Cuentas bancarias cargadas para planilla de respaldo");n.refresh(true)})}},checkForDetailNavigation:function e(){const o=this.getOwnerComponent();const a=o.getRouter();const l=a.getRoute("RoutePagosMasivosDetalle");if(l){l.attachPatternMatched(e=>{const o=e.getParameter("arguments").planillaId;if(o&&o!=="new"){console.log("PagosMasivosDetalle.controller - Navegando al detalle de planilla:",o);this.loadPlanillaById(o)}else if(o==="new"){console.log("PagosMasivosDetalle.controller - Creando nueva planilla");this.pagosMasivosManager.createNewPlanilla()}})}},onDocumentDialogAfterOpen:function e(){console.log("PagosMasivosDetalle.controller - Diálogo abierto, marcando documentos existentes");const o=this.getView();if(!o){return}const a=o.getModel("planilla");const l=o.getModel("oModel");if(!a||!l){console.log("Modelos no encontrados");return}const n=a.getData();const t=l.getData();console.log("Datos de planilla:",n);console.log("Datos de documentos disponibles:",t);if(!n||!t){console.log("No hay datos disponibles");return}if(!t.documents||t.documents.length===0){console.log("Documentos aún no cargados, esperando datos...");l.attachRequestCompleted(()=>{setTimeout(()=>{this.markAlreadyAddedDocuments()},100)});return}setTimeout(()=>{this.markAlreadyAddedDocuments()},100)},markAlreadyAddedDocuments:function e(){console.log("=== INICIO markAlreadyAddedDocuments ===");const o=this.getView();if(!o){console.log("Vista no encontrada");return}const a=o.getModel("planilla");const l=o.getModel("oModel");if(!a||!l){console.log("Modelos no encontrados");return}const n=a.getData();const t=l.getData();console.log("Claves de datos de planilla:",n?Object.keys(n):"null");console.log("Claves de documentos disponibles:",t?Object.keys(t):"null");if(!n||!t||!t.documents){console.log("Faltan datos para marcar documentos");return}if(!n.VS_PMP1Collection){console.log("VS_PMP1Collection de planilla no encontrada, inicializando como vacía");n.VS_PMP1Collection=[];a.setData(n)}const s=(n.VS_PMP1Collection||[]).map(e=>e.U_NUMDOC);console.log("Documentos existentes en planilla:",s);console.log("Cantidad de documentos disponibles:",t.documents.length);console.log("Longitud de VS_PMP1Collection de planilla:",n.VS_PMP1Collection?n.VS_PMP1Collection.length:0);console.log("Inicializando todos los documentos a alreadyInPlanilla = false");t.documents.forEach((e,o)=>{e.alreadyInPlanilla=false;console.log(`Documento ${o}: ${e.DocNum} - alreadyInPlanilla establecido a false`)});if(!n.VS_PMP1Collection||n.VS_PMP1Collection.length===0){console.log("No hay documentos existentes en planilla, todos los documentos marcados como no agregados");t.documents.forEach((e,o)=>{e.alreadyInPlanilla=false;console.log(`Documento ${o}: ${e.DocNum} - alreadyInPlanilla establecido a false (planilla vacía)`)})}else{let e=0;t.documents.forEach((o,a)=>{const l=s.includes(o.DocNum);o.alreadyInPlanilla=l;console.log(`Documento ${a}: ${o.DocNum} - verificando contra existentes: ${s.join(", ")} - alreadyInPlanilla establecido a ${l}`);if(l){e++}});console.log(`Marcados ${e} documentos como ya agregados de ${t.documents.length} total`)}console.log("Actualizando modelo con datos modificados");l.setData(t);console.log("=== FIN markAlreadyAddedDocuments ===")}});return M});
//# sourceMappingURL=PagosMasivosDetalle.controller.js.map