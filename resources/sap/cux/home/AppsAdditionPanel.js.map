{"version":3,"file":"AppsAdditionPanel.js","names":["sap","ui","define","Log","Button","CustomListItem","ExpandableText","FlexBox","GenericTile","HBox","Label","sap_m_library","MessageToast","Text","VBox","Fragment","JSONModel","ResourceModel","Container","__AppsContainer","__BaseSettingsPanel","__FavAppPanel","__AppManager","___utils_Constants","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","ButtonType","_finallyRethrows","finalizer","bind","AppsContainer","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","observer","prototype","onFulfilled","onRejected","this","callback","_this","_isSettledPact","thenable","_forTo","array","check","i","reject","_cycle","length","BaseSettingsPanel","_forOf","target","step","next","done","return","_fixup","TypeError","values","push","FavAppPanel","AppManager","AI_APP_FINDER_API","AI_APP_FINDER_BASE_URL","CONTENT_ADDITION_PANEL_TYPES","FEATURE_TOGGLES","Constants","DeprecatedInfoText","MinQueryLength","MaxDescriptionLength","SearchStatus","ErrorType","TileType","AppsAdditionPanel","extend","constructor","apply","arguments","appManagerInstance","getInstance","init","_init","BaseSettingsPanel.prototype.init.call","userSelectedApps","Set","setProperty","AI_APP_FINDER","_i18nBundle","getText","_setupActions","_setupContent","attachEvent","resetPanel","addAppsButton","getId","text","type","Emphasized","press","onPressAddApps","bindProperty","parts","formatter","hasError","searchStatus","Complete","addActionButton","Promise","resolve","getServiceAsync","_Container$getService","vizInstantiationService","load","id","name","controller","_Fragment$load","panelContent","addAggregation","model","query","errorType","DefaultError","errorDescription","Idle","loadingAnimation","_generateSearchingAnimation","suggestedAppsCount","suggestedApps","setModel","bundleName","appSuggestionList","byId","bindAggregation","path","factory","_generateListItem","context","listItem","selected","getProperty","content","renderType","wrap","direction","alignItems","items","_getAppPreviewContainer","_getAppDetailsContainer","addStyleClass","getMultiSelectControl","setEnabled","container","addItem","mode","frameType","header","subheader","tileIcon","visible","instance","instantiateVisualization","setActive","setClickable","gap","showColon","maxCharacters","_generateStatusTexts","isSupported","_isSupported","_this2","_temp5","isPanelSupported","removeActionButton","contentAdditionDialog","getParent","removePanel","updateActionButtons","_temp4","undefined","_temp3","getFavAppPanel","_temp2","isFeatureEnabled","AI_SMART_APPFINDER","_temp","navigationService","isNavigationSupported","semanticObject","action","_ref","supported","error","message","_resetPanel","defaultModelProperties","setData","getData","clear","onPressGo","_onPressGo","event","_this3","getParameter","isValidQuery","_temp7","Searching","removeSelections","fetchAppsFromSearch","rawApps","_temp6","fetchAllAvailableVisualizations","allVisualizations","fetchFavVizs","favoriteApps","fetchInsightApps","insightsApps","apps","_generateApps","_filterUnsupportedApps","err","_handleError","_wasThrown","_result","intents","map","app","vizData","supportedAppIndices","filter","_","index","homePageVisualizations","find","viz","vizId","chipID","addedToHomePage","some","visualization","title","subTitle","description","appDescription","icon","iconUrl","isStaticApp","tileType","Static","status","getAppStatusTexts","configuration","_isValidQuery","Boolean","trim","_fetchAllAvailableVisualizations","_this4","_temp9","allAvailableVisualizations","_temp8","searchableContentService","getApps","enableVisualizationPreview","allAvailableApps","reduce","visualizations","currentApp","concat","_fetchCSRFToken","fetch","method","headers","response","get","_fetchAppsFromSearch","_this5","token","JSON","stringify","UserInput","_exit","_temp12","_result2","json","_response$json2","queryResult","_temp11","ok","_response$json","errorResponse","_temp10","_getAppStatusTexts","statusTexts","parsedConfig","parse","tileConfig","tileConfiguration","infoText","display_info_text","toLowerCase","warning","stausTexts","applyStatusClass","_applyStatusClass","_onPressAddApps","_this6","_temp14","refreshFavoriteApps","close","show","vizIds","item","getBindingContext","_temp13","addVisualization","getAppsContainer","_getAppsContainer","layout","getContent","_getFavAppPanel","panel","_refreshFavoriteApps","_this7","refreshPanel","onListSelectionChange","_onListSelectionChange","delete","add","Array","from","errorCode","match","_getErrorType","ServiceError","NoResultsFound","ValidationError"],"sources":["AppsAdditionPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport Button from \"sap/m/Button\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport ExpandableText from \"sap/m/ExpandableText\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport GenericTile from \"sap/m/GenericTile\";\nimport HBox from \"sap/m/HBox\";\nimport Label from \"sap/m/Label\";\nimport { ButtonType } from \"sap/m/library\";\nimport List from \"sap/m/List\";\nimport { ListBase$SelectionChangeEvent } from \"sap/m/ListBase\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport { SearchField$SearchEvent } from \"sap/m/SearchField\";\nimport Text from \"sap/m/Text\";\nimport VBox from \"sap/m/VBox\";\nimport Control from \"sap/ui/core/Control\";\nimport Fragment from \"sap/ui/core/Fragment\";\nimport Context from \"sap/ui/model/Context\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport Container from \"sap/ushell/Container\";\nimport Navigation, { Target } from \"sap/ushell/services/Navigation\";\nimport SearchableContent, { AppData } from \"sap/ushell/services/SearchableContent\";\nimport VisualizationInstantiation from \"sap/ushell/services/VisualizationInstantiation\";\nimport AppsContainer from \"./AppsContainer\";\nimport BaseLayout from \"./BaseLayout\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\nimport ContentAdditionDialog from \"./ContentAdditionDialog\";\nimport FavAppPanel from \"./FavAppPanel\";\nimport { ICustomVisualization, ICustomVizInstance, IVisualization } from \"./interface/AppsInterface\";\nimport AppManager from \"./utils/AppManager\";\nimport { AI_APP_FINDER_API, AI_APP_FINDER_BASE_URL, CONTENT_ADDITION_PANEL_TYPES, FEATURE_TOGGLES } from \"./utils/Constants\";\n\nconst Constants = {\n\tDeprecatedInfoText: \"deprecated\",\n\tMinQueryLength: 5,\n\tMaxDescriptionLength: 400\n};\n\nenum SearchStatus {\n\tIdle = \"idle\",\n\tSearching = \"searching\",\n\tComplete = \"complete\"\n}\n\nenum ErrorType {\n\tNoResultsFound = \"noResultsFound\",\n\tServiceError = \"serviceError\",\n\tValidationError = \"validationError\",\n\tDefaultError = \"defaultError\"\n}\n\nenum TileType {\n\tStatic = \"STATIC\"\n}\n\ninterface RawAppData {\n\ttitle: string;\n\tsubTitle: string;\n\tappDescription: string;\n\tchipID: string;\n\ttileType: TileType;\n\ticonUrl: string;\n\tconfiguration: string;\n}\ninterface SuggestedApp {\n\ticon: string;\n\ttitle: string;\n\tchipID: string;\n\tstatus: string[];\n\tsubTitle: string;\n\tdescription: string;\n\tisStaticApp: boolean;\n\taddedToHomePage: boolean;\n\tvizData?: IVisualization;\n}\n\ninterface QueryResponse {\n\tvalue: RawAppData[];\n}\n\ninterface ErrorResponse {\n\terror: {\n\t\tcode: string;\n\t\tmessage: string;\n\t};\n}\n\ninterface Configuration {\n\ttileConfiguration: string;\n}\n\ninterface TileConfig {\n\tdisplay_info_text: string;\n\t[key: string]: string;\n}\n\n/**\n *\n * Class for Apps Addition Panel in MyHome.\n *\n * @extends BaseSettingsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.136\n *\n * @internal\n * @experimental Since 1.136\n * @private\n *\n * @alias sap.cux.home.AppsAdditionPanel\n */\nexport default class AppsAdditionPanel extends BaseSettingsPanel {\n\tprivate appManagerInstance: AppManager = AppManager.getInstance();\n\tprivate vizInstantiationService!: VisualizationInstantiation;\n\tprivate allAvailableVisualizations!: IVisualization[];\n\tprivate userSelectedApps!: Set<CustomListItem>;\n\tprivate appSuggestionList!: List;\n\tprivate model!: JSONModel;\n\tprivate addAppsButton!: Button;\n\tprivate isPanelSupported!: boolean;\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\t\tthis.userSelectedApps = new Set<CustomListItem>();\n\n\t\t//setup panel\n\t\tthis.setProperty(\"key\", CONTENT_ADDITION_PANEL_TYPES.AI_APP_FINDER);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"addAppsAndTile\"));\n\n\t\t//setup actions\n\t\tthis._setupActions();\n\n\t\t//setup content\n\t\tvoid this._setupContent();\n\n\t\t//setup events\n\t\tthis.attachEvent(\"onDialogClose\", this.resetPanel.bind(this));\n\t}\n\n\t/**\n\t * Sets up the actions for the Apps Addition Panel.\n\t *\n\t * @private\n\t */\n\tprivate _setupActions(): void {\n\t\tthis.addAppsButton = new Button(`${this.getId()}-add-app-btn`, {\n\t\t\ttext: this._i18nBundle.getText(\"addFromInsightsDialogBtn\"),\n\t\t\ttype: ButtonType.Emphasized,\n\t\t\tpress: () => {\n\t\t\t\tvoid this.onPressAddApps();\n\t\t\t}\n\t\t});\n\n\t\tthis.addAppsButton.bindProperty(\"enabled\", {\n\t\t\tparts: [\"/hasError\", \"/searchStatus\", \"/userSelectedApps\"],\n\t\t\tformatter: (hasError: boolean, searchStatus: SearchStatus, userSelectedApps: string[]) => {\n\t\t\t\treturn !hasError && searchStatus === SearchStatus.Complete && userSelectedApps.length > 0;\n\t\t\t}\n\t\t});\n\n\t\tthis.addActionButton(this.addAppsButton);\n\t}\n\n\t/**\n\t * Sets up the content for the Apps Addition Panel.\n\t *\n\t * @private\n\t * @async\n\t */\n\tprivate async _setupContent(): Promise<void> {\n\t\tthis.vizInstantiationService = await Container.getServiceAsync<VisualizationInstantiation>(\"VisualizationInstantiation\");\n\n\t\t//load ui fragment\n\t\tconst panelContent = (await Fragment.load({\n\t\t\tid: `${this.getId()}-content`,\n\t\t\tname: \"sap.cux.home.utils.fragment.appsAdditionContent\",\n\t\t\tcontroller: this\n\t\t})) as Control;\n\t\tthis.addAggregation(\"content\", panelContent);\n\n\t\t//initialize ui model\n\t\tthis.model = new JSONModel({\n\t\t\tquery: \"\",\n\t\t\thasError: false,\n\t\t\terrorType: ErrorType.DefaultError,\n\t\t\terrorDescription: \"\",\n\t\t\tsearchStatus: SearchStatus.Idle,\n\t\t\tloadingAnimation: this._generateSearchingAnimation(),\n\t\t\tsuggestedAppsCount: 0,\n\t\t\tuserSelectedApps: [],\n\t\t\tsuggestedApps: []\n\t\t});\n\n\t\tpanelContent.setModel(this.model);\n\t\tpanelContent.setModel(new ResourceModel({ bundleName: \"sap.cux.home.i18n.messagebundle\" }), \"i18n\");\n\t\tthis.addAppsButton.setModel(this.model);\n\n\t\t//bind suggested apps list\n\t\tthis.appSuggestionList = Fragment.byId(`${this.getId()}-content`, \"appsList\") as List;\n\t\tthis.appSuggestionList.bindAggregation(\"items\", {\n\t\t\tpath: \"/suggestedApps\",\n\t\t\tfactory: this._generateListItem.bind(this)\n\t\t});\n\t}\n\n\t/**\n\t * Generates a list item for the Apps Addition Panel.\n\t *\n\t * @private\n\t * @param {string} id - The unique ID for the list item.\n\t * @param {Context} context - The binding context for the list item.\n\t * @returns {CustomListItem} The generated list item control.\n\t */\n\tprivate _generateListItem(id: string, context: Context): CustomListItem {\n\t\tconst listItem = new CustomListItem(id, {\n\t\t\tselected: context.getProperty(\"addedToHomePage\") as boolean,\n\t\t\tcontent: [\n\t\t\t\tnew FlexBox(`${id}-result-container`, {\n\t\t\t\t\trenderType: \"Bare\",\n\t\t\t\t\twrap: \"Wrap\",\n\t\t\t\t\tdirection: context.getProperty(\"isStaticApp\") ? \"Column\" : \"Row\",\n\t\t\t\t\talignItems: context.getProperty(\"isStaticApp\") ? \"Start\" : \"Center\",\n\t\t\t\t\titems: [this._getAppPreviewContainer(id, context), this._getAppDetailsContainer(id, context)]\n\t\t\t\t}).addStyleClass(\"sapUiSmallMargin\")\n\t\t\t]\n\t\t});\n\n\t\t//bind associated checkbox to disable it when the app is already added to home page\n\t\tlistItem.getMultiSelectControl(true).setEnabled(!context.getProperty(\"addedToHomePage\"));\n\n\t\treturn listItem;\n\t}\n\n\t/**\n\t * Creates a preview container for the suggested app.\n\t *\n\t * @private\n\t * @param {string} id - The unique ID for the container.\n\t * @param {Context} context - The binding context for the app.\n\t * @returns {HBox} The app preview container.\n\t */\n\tprivate _getAppPreviewContainer(id: string, context: Context): HBox {\n\t\tconst container = new HBox(`${id}-suggestedAppContainer`, {\n\t\t\trenderType: \"Bare\"\n\t\t});\n\n\t\tif (context.getProperty(\"isStaticApp\") as boolean) {\n\t\t\t// create generic tile for static app\n\t\t\tcontainer.addItem(\n\t\t\t\tnew GenericTile(`${id}-staticApp`, {\n\t\t\t\t\tmode: \"IconMode\",\n\t\t\t\t\tframeType: \"TwoByHalf\",\n\t\t\t\t\theader: context.getProperty(\"title\") as string,\n\t\t\t\t\tsubheader: context.getProperty(\"subTitle\") as string,\n\t\t\t\t\ttileIcon: context.getProperty(\"icon\") as string,\n\t\t\t\t\tvisible: context.getProperty(\"isStaticApp\") as boolean\n\t\t\t\t}).addStyleClass(\"suggestedTile\")\n\t\t\t);\n\t\t} else {\n\t\t\t// create custom visualization for other apps\n\t\t\tconst instance = this.vizInstantiationService.instantiateVisualization(\n\t\t\t\tcontext.getProperty(\"vizData\") as ICustomVisualization\n\t\t\t) as ICustomVizInstance;\n\t\t\tinstance?.setActive(true);\n\t\t\tinstance.setClickable(false);\n\t\t\tcontainer.addItem(instance);\n\t\t}\n\n\t\treturn container;\n\t}\n\n\t/**\n\t * Creates a details container for the suggested app.\n\t *\n\t * @private\n\t * @param {string} id - The unique ID for the container.\n\t * @param {Context} context - The binding context for the app.\n\t * @returns {VBox} The app details container.\n\t */\n\tprivate _getAppDetailsContainer(id: string, context: Context): VBox {\n\t\treturn new VBox(`${id}-app-details-container`, {\n\t\t\trenderType: \"Bare\",\n\t\t\tgap: \"0.5rem\",\n\t\t\titems: [\n\t\t\t\tnew Label(`${id}-descriptionLabel`, {\n\t\t\t\t\ttext: this._i18nBundle.getText(\"appDescription\"),\n\t\t\t\t\tshowColon: true\n\t\t\t\t}),\n\t\t\t\tnew ExpandableText(`${id}-description`, {\n\t\t\t\t\ttext: context.getProperty(\"description\") as string,\n\t\t\t\t\tmaxCharacters: Constants.MaxDescriptionLength\n\t\t\t\t}),\n\t\t\t\tnew HBox(`${id}-app-status-container`, {\n\t\t\t\t\trenderType: \"Bare\",\n\t\t\t\t\tvisible: (context.getProperty(\"status\") as string[]).length > 0,\n\t\t\t\t\titems: [\n\t\t\t\t\t\tnew Label(`${id}-appStatusLabel`, {\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"appStatus\"),\n\t\t\t\t\t\t\tshowColon: true\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tnew HBox(`${id}-app-status-texts`, {\n\t\t\t\t\t\t\trenderType: \"Bare\",\n\t\t\t\t\t\t\titems: this._generateStatusTexts(context.getProperty(\"status\") as string[])\n\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginBegin statusTextsContainer\")\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t]\n\t\t}).addStyleClass((context.getProperty(\"isStaticApp\") as boolean) ? \"sapUiSmallMarginTop\" : \"sapUiSmallMarginBegin\");\n\t}\n\n\t/**\n\t * Checks if the Apps Addition Panel is supported. Internally, it checks if the\n\t * AI Smart App Finder feature toggle is enabled and if the associated application\n\t * is accessible for the user.\n\t *\n\t * @public\n\t * @override\n\t * @async\n\t * @returns {Promise<boolean>} A promise that resolves to a boolean indicating support.\n\t */\n\tpublic async isSupported(): Promise<boolean> {\n\t\tif (this.isPanelSupported === undefined) {\n\t\t\tthis.isPanelSupported = false;\n\n\t\t\tif (this.getFavAppPanel()) {\n\t\t\t\ttry {\n\t\t\t\t\tconst isFeatureEnabled = await this.appManagerInstance.isFeatureEnabled(FEATURE_TOGGLES.AI_SMART_APPFINDER);\n\t\t\t\t\tif (isFeatureEnabled) {\n\t\t\t\t\t\tconst navigationService = await Container.getServiceAsync<Navigation>(\"Navigation\");\n\t\t\t\t\t\tconst [{ supported }] = await navigationService.isNavigationSupported([\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\t\tsemanticObject: \"IntelligentPrompt\",\n\t\t\t\t\t\t\t\t\taction: \"propose\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]);\n\n\t\t\t\t\t\tthis.isPanelSupported = supported;\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tLog.error((error as Error).message);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//remove panel if it's not supported\n\t\tif (!this.isPanelSupported) {\n\t\t\tthis.removeActionButton(this.addAppsButton);\n\t\t\tconst contentAdditionDialog = this.getParent() as ContentAdditionDialog;\n\t\t\tcontentAdditionDialog.removePanel(this);\n\t\t\tcontentAdditionDialog.updateActionButtons();\n\t\t}\n\n\t\treturn this.isPanelSupported;\n\t}\n\n\t/**\n\t * Generates the searching animation SVG as a string.\n\t *\n\t * @private\n\t * @returns {string} The SVG string for the loading animation.\n\t */\n\tprivate _generateSearchingAnimation(): string {\n\t\treturn `<svg height=\"210\" fill=\"none\">\n            <g>\n                <rect height=\"210\" rx=\"4\" fill=\"white\"/>\n                <rect x=\"16\" y=\"143\" width=\"90%\" height=\"8\" rx=\"4\" fill=\"var(--sapContent_Placeholderloading_Background)\"/>\n                <rect x=\"16\" y=\"103\" width=\"84%\" height=\"32\" rx=\"4\" fill=\"var(--sapContent_Placeholderloading_Background)\"/>\n                <rect x=\"16\" y=\"33\" width=\"90%\" height=\"8\" rx=\"4\" fill=\"var(--sapContent_Placeholderloading_Background)\"/>\n                <rect x=\"16\" y=\"16\" width=\"96%\" height=\"12\" rx=\"4\" fill=\"var(--sapContent_Placeholderloading_Background)\"/>\n            </g>\n        </svg>`;\n\t}\n\n\t/**\n\t * Resets the panel to its default state.\n\t *\n\t * @private\n\t */\n\tpublic resetPanel(): void {\n\t\tconst defaultModelProperties = {\n\t\t\tquery: \"\",\n\t\t\thasError: false,\n\t\t\tsearchStatus: SearchStatus.Idle,\n\t\t\tsuggestedAppsCount: 0,\n\t\t\tuserSelectedApps: [],\n\t\t\tsuggestedApps: []\n\t\t};\n\n\t\tthis.model.setData({ ...this.model.getData(), ...defaultModelProperties } as object);\n\t\tthis.userSelectedApps.clear();\n\t}\n\n\t/**\n\t * Handles the \"Go\" button press event for searching suggested apps.\n\t *\n\t * @private\n\t * @async\n\t * @param {SearchField$SearchEvent} event - The search event triggered by the user.\n\t */\n\tpublic async onPressGo(event: SearchField$SearchEvent): Promise<void> {\n\t\t// reset panel if clear button is pressed\n\t\tif (event.getParameter(\"clearButtonPressed\")) {\n\t\t\tthis.resetPanel();\n\t\t\treturn;\n\t\t}\n\n\t\t// validate query\n\t\tconst query = this.model.getProperty(\"/query\") as string;\n\t\tif (!this.isValidQuery(query)) return;\n\n\t\ttry {\n\t\t\t// initiate search\n\t\t\tthis.model.setProperty(\"/hasError\", false);\n\t\t\tthis.model.setProperty(\"/searchStatus\", SearchStatus.Searching);\n\t\t\tthis.appSuggestionList.removeSelections(true);\n\n\t\t\tconst rawApps = await this.fetchAppsFromSearch(query);\n\t\t\t// suggest apps if there are results and search is not cancelled\n\t\t\tif (rawApps.length > 0 && this.model.getProperty(\"/searchStatus\") === SearchStatus.Searching) {\n\t\t\t\tconst allVisualizations = await this.fetchAllAvailableVisualizations();\n\t\t\t\tconst favoriteApps = await this.appManagerInstance.fetchFavVizs(true, true);\n\t\t\t\tconst insightsApps = await this.appManagerInstance.fetchInsightApps(true, this._i18nBundle.getText(\"insights\") as string);\n\n\t\t\t\t// generate suggested apps\n\t\t\t\tconst apps = this._generateApps(rawApps, allVisualizations, [...favoriteApps, ...insightsApps]);\n\t\t\t\tconst suggestedApps = await this._filterUnsupportedApps(apps);\n\n\t\t\t\t// update model with filtered apps\n\t\t\t\tthis.model.setProperty(\"/suggestedApps\", suggestedApps);\n\t\t\t\tthis.model.setProperty(\"/suggestedAppsCount\", suggestedApps.length);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tLog.error((err as Error).message);\n\t\t\tthis._handleError();\n\t\t} finally {\n\t\t\t// update search status only if search is not cancelled\n\t\t\tif (this.model.getProperty(\"/searchStatus\") === SearchStatus.Searching) {\n\t\t\t\tthis.model.setProperty(\"/searchStatus\", SearchStatus.Complete);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Filters out unsupported apps based on accessibility.\n\t *\n\t * @private\n\t * @param {SuggestedApp[]} apps - The list of suggested apps to filter.\n\t * @returns {Promise<SuggestedApp[]>} A promise that resolves to the filtered list of supported apps.\n\t */\n\tprivate async _filterUnsupportedApps(apps: SuggestedApp[]): Promise<SuggestedApp[]> {\n\t\tconst intents = apps.map((app) => app.vizData?.target) || [];\n\t\tconst navigationService = await Container.getServiceAsync<Navigation>(\"Navigation\");\n\t\tconst supportedAppIndices = await navigationService.isNavigationSupported(intents as Target[]);\n\n\t\treturn apps.filter((_, index) => supportedAppIndices[index]);\n\t}\n\n\t/**\n\t * Generates suggested apps from raw app data and visualizations.\n\t *\n\t * @private\n\t * @param {RawAppData[]} rawApps - The raw app data to process.\n\t * @param {IVisualization[]} allVisualizations - All available visualizations.\n\t * @param {ICustomVisualization[]} homePageVisualizations - Visualizations available in homepage.\n\t * @returns {SuggestedApp[]} The list of suggested apps.\n\t */\n\tprivate _generateApps(\n\t\trawApps: RawAppData[],\n\t\tallVisualizations: IVisualization[],\n\t\thomePageVisualizations: ICustomVisualization[]\n\t): SuggestedApp[] {\n\t\treturn rawApps.map((app) => {\n\t\t\tconst vizData = allVisualizations.find((viz) => viz.vizId === app.chipID);\n\t\t\tconst addedToHomePage = homePageVisualizations.some((viz) => viz.visualization?.vizId === app.chipID);\n\t\t\treturn {\n\t\t\t\ttitle: app.title,\n\t\t\t\tchipID: app.chipID,\n\t\t\t\tsubTitle: app.subTitle,\n\t\t\t\tdescription: app.appDescription,\n\t\t\t\ticon: app.iconUrl,\n\t\t\t\tvizData,\n\t\t\t\taddedToHomePage,\n\t\t\t\tisStaticApp: app.tileType === TileType.Static,\n\t\t\t\tstatus: this.getAppStatusTexts(app.configuration, addedToHomePage)\n\t\t\t};\n\t\t}) as SuggestedApp[];\n\t}\n\n\t/**\n\t * Validates the query string based on minimum length.\n\t *\n\t * @private\n\t * @param {string} query - The query string to validate.\n\t * @returns {boolean} True if the query is valid, otherwise false.\n\t */\n\tprivate isValidQuery(query: string): boolean {\n\t\treturn Boolean(query?.trim() && query.trim().length >= Constants.MinQueryLength);\n\t}\n\n\t/**\n\t * Fetches all available visualizations for the user.\n\t *\n\t * @private\n\t * @async\n\t * @returns {Promise<IVisualization[]>} A promise that resolves to the list of visualizations.\n\t */\n\tprivate async fetchAllAvailableVisualizations(): Promise<IVisualization[]> {\n\t\tif (!this.allAvailableVisualizations) {\n\t\t\tconst searchableContentService = await Container.getServiceAsync<SearchableContent>(\"SearchableContent\");\n\t\t\tconst allAvailableApps = await searchableContentService.getApps({ enableVisualizationPreview: false });\n\t\t\tthis.allAvailableVisualizations = allAvailableApps.reduce((visualizations: IVisualization[], currentApp: AppData) => {\n\t\t\t\treturn visualizations.concat(currentApp.visualizations);\n\t\t\t}, []);\n\t\t}\n\n\t\treturn this.allAvailableVisualizations;\n\t}\n\n\t/**\n\t * Fetches a CSRF token for secure API requests.\n\t *\n\t * @private\n\t * @async\n\t * @returns {Promise<string | null>} A promise that resolves to the CSRF token or null if fetching fails.\n\t */\n\tprivate async _fetchCSRFToken(): Promise<string | null> {\n\t\ttry {\n\t\t\tconst response = await fetch(AI_APP_FINDER_BASE_URL, { method: \"GET\", headers: { \"X-CSRF-Token\": \"Fetch\" } });\n\t\t\treturn response.headers.get(\"X-CSRF-Token\");\n\t\t} catch (error) {\n\t\t\tLog.error(\"Failed to fetch CSRF token\", error as Error);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Fetches apps from the search API based on the query.\n\t *\n\t * @private\n\t * @async\n\t * @param {string} query - The search query string.\n\t * @returns {Promise<RawAppData[]>} A promise that resolves to the list of raw app data.\n\t */\n\tprivate async fetchAppsFromSearch(query: string): Promise<RawAppData[]> {\n\t\ttry {\n\t\t\tconst token = await this._fetchCSRFToken();\n\t\t\tconst headers = {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t...(token && { \"X-CSRF-Token\": token })\n\t\t\t};\n\n\t\t\tconst response = await fetch(AI_APP_FINDER_API, {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders,\n\t\t\t\tbody: JSON.stringify({ UserInput: query })\n\t\t\t});\n\n\t\t\t// handle error responses\n\t\t\tif (!response.ok) {\n\t\t\t\tconst errorResponse = (await response.json()) as ErrorResponse;\n\t\t\t\tthis._handleError(errorResponse.error?.message || \"\");\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tconst queryResult = (await response.json()) as QueryResponse;\n\t\t\treturn queryResult.value || [];\n\t\t} catch (error) {\n\t\t\tLog.error((error as Error).message);\n\t\t\tthis._handleError();\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves status texts for an app based on its configuration and homepage status.\n\t *\n\t * @private\n\t * @param {string} configuration - The app's configuration string.\n\t * @param {boolean} addedToHomePage - Indicates if the app is already added to the homepage.\n\t * @returns {string[]} An array of status texts for the app.\n\t */\n\tprivate getAppStatusTexts(configuration: string, addedToHomePage: boolean): string[] {\n\t\tlet statusTexts = [];\n\n\t\tif (addedToHomePage) {\n\t\t\tstatusTexts.push(this._i18nBundle.getText(\"alreadyAddedApp\") as string);\n\t\t}\n\t\tif (configuration) {\n\t\t\ttry {\n\t\t\t\tconst parsedConfig = JSON.parse(configuration) as Configuration;\n\t\t\t\tconst tileConfig = JSON.parse(parsedConfig?.tileConfiguration) as TileConfig;\n\t\t\t\tconst infoText = (tileConfig?.display_info_text || \"\").toLowerCase();\n\t\t\t\tif (infoText === Constants.DeprecatedInfoText) {\n\t\t\t\t\tstatusTexts.push(this._i18nBundle.getText(\"deprecatedApp\") as string);\n\t\t\t\t}\n\t\t\t} catch (error: unknown) {\n\t\t\t\tLog.warning((error as Error).message);\n\t\t\t}\n\t\t}\n\n\t\treturn statusTexts;\n\t}\n\n\t/**\n\t * Generates status text controls for the provided status texts.\n\t *\n\t * @private\n\t * @param {string[]} stausTexts - The list of status texts.\n\t * @returns {Text[]} An array of Text controls with applied styles.\n\t */\n\tprivate _generateStatusTexts(stausTexts: string[]): Text[] {\n\t\treturn stausTexts.map((status) => {\n\t\t\treturn new Text({\n\t\t\t\ttext: this._i18nBundle.getText(status)\n\t\t\t}).addStyleClass(this.applyStatusClass(status));\n\t\t});\n\t}\n\n\t/**\n\t * Applies a CSS class to the status text based on its type.\n\t *\n\t * @private\n\t * @param {string} status - The status text to classify.\n\t * @returns {string} The CSS class for the status text.\n\t */\n\tpublic applyStatusClass(status: string): string {\n\t\tif (status === this._i18nBundle.getText(\"alreadyAddedApp\")) {\n\t\t\treturn \"addedAppStatusText\";\n\t\t} else if (status === this._i18nBundle.getText(\"deprecatedApp\")) {\n\t\t\treturn \"deprecatedAppStatusText\";\n\t\t} else {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\t/**\n\t * Handles the \"Add Apps\" button press event to add selected apps to favorites.\n\t *\n\t * @private\n\t * @async\n\t */\n\tprivate async onPressAddApps(): Promise<void> {\n\t\tconst userSelectedApps = this.model.getProperty(\"/userSelectedApps\") as CustomListItem[];\n\t\tconst vizIds = userSelectedApps.map((item) => item.getBindingContext()?.getProperty(\"chipID\") as string);\n\t\tfor (const vizId of vizIds) {\n\t\t\tawait this.appManagerInstance.addVisualization(vizId);\n\t\t}\n\n\t\t// refresh the favorite apps panel\n\t\tawait this.refreshFavoriteApps();\n\t\t(this.getParent() as ContentAdditionDialog).close();\n\t\tMessageToast.show(this._i18nBundle.getText(\"appAddedToFavorites\") as string);\n\t\tthis.resetPanel();\n\t}\n\n\t/**\n\t * Retrieves the AppsContainer instance from the parent layout.\n\t *\n\t * @private\n\t * @returns {AppsContainer | undefined} The AppsContainer instance or undefined if not found.\n\t */\n\tprivate getAppsContainer(): AppsContainer | undefined {\n\t\tconst layout = this.getParent()?.getParent() as BaseLayout;\n\t\treturn layout.getContent().find((container) => container instanceof AppsContainer) as AppsContainer | undefined;\n\t}\n\n\t/**\n\t * Retrieves the favorite apps panel from the AppsContainer.\n\t *\n\t * @private\n\t * @returns {FavAppPanel | undefined} The favorite apps panel or undefined if not found.\n\t */\n\tprivate getFavAppPanel(): FavAppPanel | undefined {\n\t\treturn this.getAppsContainer()\n\t\t\t?.getContent()\n\t\t\t.find((panel) => panel instanceof FavAppPanel);\n\t}\n\n\t/**\n\t * Refreshes the favorite apps panel in the AppsContainer.\n\t *\n\t * @private\n\t * @async\n\t */\n\tprivate async refreshFavoriteApps(): Promise<void> {\n\t\tawait this.getAppsContainer()?.refreshPanel(this.getFavAppPanel() as FavAppPanel);\n\t}\n\n\t/**\n\t * Handles the selection change event for the suggested apps list.\n\t *\n\t * @public\n\t * @param {ListBase$SelectionChangeEvent} event - The selection change event.\n\t */\n\tpublic onListSelectionChange(event: ListBase$SelectionChangeEvent): void {\n\t\tconst listItem = event.getParameter(\"listItem\") as CustomListItem;\n\t\tconst selected = event.getParameter(\"selected\") as boolean;\n\n\t\tif (!selected) this.userSelectedApps.delete(listItem);\n\t\telse {\n\t\t\tconst context = listItem.getBindingContext();\n\t\t\tconst addedToHomePage = context?.getProperty(\"addedToHomePage\") as boolean;\n\t\t\tif (!addedToHomePage) this.userSelectedApps.add(listItem);\n\t\t}\n\n\t\tthis.model.setProperty(\"/userSelectedApps\", Array.from(this.userSelectedApps));\n\t}\n\n\t/**\n\t * Handles errors by updating the model with error details.\n\t *\n\t * @private\n\t * @param {string} [message=\"\"] - The error message to process.\n\t */\n\tprivate _handleError(message: string = \"\"): void {\n\t\tconst [, errorCode, errorDescription] = message.match(/\\((\\d{2})\\d*\\)\\s*(.*)/) || [];\n\t\tthis.model.setProperty(\"/hasError\", true);\n\t\tthis.model.setProperty(\"/errorType\", this._getErrorType(errorCode));\n\t\tthis.model.setProperty(\"/errorDescription\", errorDescription || \"\");\n\t}\n\n\t/**\n\t * Determines the error type based on the provided error code.\n\t *\n\t * @private\n\t * @param {string} [errorCode=\"\"] - The error code to evaluate.\n\t * @returns {ErrorType} The corresponding error type.\n\t */\n\tprivate _getErrorType(errorCode: string = \"\"): ErrorType {\n\t\tswitch (errorCode) {\n\t\t\tcase \"10\":\n\t\t\t\treturn ErrorType.ServiceError;\n\t\t\tcase \"20\":\n\t\t\tcase \"40\":\n\t\t\t\treturn ErrorType.NoResultsFound;\n\t\t\tcase \"30\":\n\t\t\t\treturn ErrorType.ValidationError;\n\t\t\tdefault:\n\t\t\t\treturn ErrorType.DefaultError;\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[]}