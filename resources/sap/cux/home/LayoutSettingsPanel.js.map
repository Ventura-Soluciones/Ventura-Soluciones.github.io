{"version":3,"file":"LayoutSettingsPanel.js","names":["sap","ui","define","Log","Button","Column","ColumnListItem","HBox","MessageBox","ObjectIdentifier","Table","Text","ToggleButton","VBox","Element","Icon","Lib","JSONModel","__BaseSettingsPanel","___flexibility_Layoutflexibility","___utils_Accessibility","___utils_Constants","___utils_DragDropUtils","__PersonalisationUtils","_interopRequireDefault","obj","__esModule","default","BaseSettingsPanel","CHANGE_TYPES","getInvisibleText","SETTINGS_PANELS_KEYS","focusDraggedItem","PersonalisationUtils","LayoutSettingsPanel","extend","metadata","library","constructor","_constructor","id","settings","BaseSettingsPanel.prototype.constructor.call","this","_isCollapseHandlerAttached","init","_init","BaseSettingsPanel.prototype.init.call","setProperty","LAYOUT","_i18nBundle","getText","_resetActionButton","getId","text","press","resetMyhomeSettings","addActionButton","addAggregation","_getContent","attachPanelNavigated","_loadSections","_manageSectionsChanges","createShowHideChangeFile","_createShowHideChangeFile","oControlEvent","_this","toggle","getSource","bValue","getPressed","oContext","getBindingContext","getObject","visible","_getPanel","getSections","find","section","completeId","sChangeType","UNHIDE","HIDE","oWrapperItem","getElementById","push","selectorElement","changeSpecificData","changeType","Promise","resolve","_saveManageSectionsDialog","then","setTimeout","adjustLayout","_switchToCollapsedViewIfRequired","e","reject","containers","layout","isLayoutExpanded","getProperty","forEach","container","toggleFullScreen","_getSelectedPanel","_this2","_calculateSectionsState","_orderedSections","JSON","parse","stringify","oSection","sContainerType","title","String","_controlModel","_layoutTable","setModel","bindItems","path","factory","_dndInvisibleText","isDestroyed","type","cells","alignItems","items","src","addStyleClass","justifyContent","width","tooltip","icon","enabled","event","pressed","ariaLabelledBy","attachEvent","_rearrangeLayoutIfRequired","currentLayoutElements","getItems","Array","isArray","_allLayoutElements","length","isOrderChanged","some","element","index","removeAllItems","addItem","oHeader","_setHeaderIntro","oTable","setLayoutTable","oInvisibleText","oContentVBox","renderType","control","addAriaLabelledBy","oHeaderText","oHeaderVBox","backgroundDesign","_setLayoutTable","columns","addDragDropConfigTo","onDropManageSections","_this3","_persistUserChanges","changes","appComponent","getOwnerComponent","tableModel","getModel","refresh","finally","mProperties","load","name","require","ControlPersonalizationWriteAPI","add","ignoreVariantManagement","aGeneratedChanges","save","selector","catch","oError","Error","error","message","_getActualIndex","expandedElementConfig","_getCurrentExpandedElement","targetContainer","splice","findIndex","_rearrangeLayoutElements","sourceIndex","targetIndex","sourceElement","sourceElements","values","next","value","updateFullScreenElement","indexOf","_onDropManageSections","oEvent","_this4","_temp2","iDropItemIndex","oWrapper","wrapperId","oDragItem","getParameter","draggedControl","iDragItemIndex","getParent","indexOfItem","oDropItem","droppedControl","_temp","sectionOrder","dragObject","dropObject","actualDragItemIndex","actualDropItemIndex","setSections","MOVE","movedElements","source","aggregation","target","draggedContainer","droppedContainer","_resetMyhomeSettings","_this5","show","QUESTION","actions","Action","CANCEL","onClose","oAction","_temp3","aChangesForDeletion","reset","selectors","changeTypes","resetSections","closeSettingsDialog"],"sources":["LayoutSettingsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport Button from \"sap/m/Button\";\nimport Column from \"sap/m/Column\";\nimport ColumnListItem from \"sap/m/ColumnListItem\";\nimport HBox from \"sap/m/HBox\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport ObjectIdentifier from \"sap/m/ObjectIdentifier\";\nimport Table from \"sap/m/Table\";\nimport Text from \"sap/m/Text\";\nimport ToggleButton from \"sap/m/ToggleButton\";\nimport VBox from \"sap/m/VBox\";\nimport Event from \"sap/ui/base/Event\";\nimport Component from \"sap/ui/core/Component\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport Element from \"sap/ui/core/Element\";\nimport Icon from \"sap/ui/core/Icon\";\nimport InvisibleText from \"sap/ui/core/InvisibleText\";\nimport Lib from \"sap/ui/core/Lib\";\nimport { DropInfo$DropEvent } from \"sap/ui/core/dnd/DropInfo\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport BaseContainer from \"./BaseContainer\";\nimport BaseLayout from \"./BaseLayout\";\nimport BaseSettingsPanel, { $BaseSettingsPanelSettings } from \"./BaseSettingsPanel\";\nimport Layout from \"./Layout\";\nimport { CHANGE_TYPES } from \"./flexibility/Layout.flexibility\";\nimport { IControlPersonalizationWriteAPI, IDragEvent, IElement, IManagePersChanges } from \"./interface/LayoutInterface\";\nimport { getInvisibleText } from \"./utils/Accessibility\";\nimport { SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\nimport { focusDraggedItem } from \"./utils/DragDropUtils\";\nimport PersonalisationUtils from \"./utils/PersonalisationUtils\";\n\n/**\n *\n * Class for My Home Layout Settings Panel.\n *\n * @extends BaseSettingsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.LayoutSettingsPanel\n */\nexport default class LayoutSettingsPanel extends BaseSettingsPanel {\n\tprivate _layoutTable!: Table;\n\tpublic _i18nBundle!: ResourceBundle;\n\tprivate _orderedSections!: IElement[];\n\tprivate _manageSectionsChanges!: IManagePersChanges[];\n\tprivate _controlModel!: JSONModel;\n\tprivate _allLayoutElements!: BaseContainer[];\n\tprivate _isCollapseHandlerAttached: boolean = false;\n\tprivate _resetActionButton!: Button;\n\tprivate _dndInvisibleText!: InvisibleText;\n\n\tconstructor(id?: string | $BaseSettingsPanelSettings);\n\tconstructor(id?: string, settings?: $BaseSettingsPanelSettings);\n\tconstructor(id?: string, settings?: $BaseSettingsPanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\"\n\t};\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\t//setup panel\n\t\tthis.setProperty(\"key\", SETTINGS_PANELS_KEYS.LAYOUT);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"layout\"));\n\t\tthis.setProperty(\"icon\", \"sap-icon://grid\");\n\t\tthis._resetActionButton = new Button({\n\t\t\tid: `${this.getId()}-layoutResetBtn`,\n\t\t\ttext: this._i18nBundle.getText(\"resetButton\"),\n\t\t\tpress: () => this.resetMyhomeSettings()\n\t\t});\n\t\t// Add button to actionButtons aggregation\n\t\tthis.addActionButton(this._resetActionButton);\n\t\t//setup layout content\n\t\tthis.addAggregation(\"content\", this._getContent());\n\t\t//fired every time on panel navigation\n\t\tthis.attachPanelNavigated(() => void this._loadSections());\n\t\tthis._manageSectionsChanges = [];\n\t}\n\n\t/**\n\t * Method to set visibility of the container sections\n\t * Toggle button pressed event handler\n\t *\n\t * @private\n\t */\n\tprivate async createShowHideChangeFile(oControlEvent: Event): Promise<void> {\n\t\tconst toggle = oControlEvent.getSource<ToggleButton>();\n\t\tconst bValue = !toggle.getPressed();\n\t\tconst oContext = toggle.getBindingContext()?.getObject() as IElement;\n\n\t\toContext.visible = bValue;\n\t\t(this._getPanel() as Layout).getSections().find((section) => section.completeId === oContext.completeId)!.visible = bValue;\n\n\t\tconst sChangeType = bValue ? CHANGE_TYPES.UNHIDE : CHANGE_TYPES.HIDE;\n\t\tconst oWrapperItem = Element.getElementById(oContext.completeId) as BaseContainer;\n\n\t\tthis._manageSectionsChanges.push({\n\t\t\tselectorElement: oWrapperItem,\n\t\t\tchangeSpecificData: {\n\t\t\t\tchangeType: sChangeType\n\t\t\t}\n\t\t});\n\t\t// }\n\t\tawait this._saveManageSectionsDialog();\n\t\tsetTimeout(() => oWrapperItem.adjustLayout());\n\n\t\t// switch to collapsed view if the container is in expanded view\n\t\tif (!bValue) {\n\t\t\tthis._switchToCollapsedViewIfRequired([oWrapperItem]);\n\t\t}\n\t}\n\n\t/**\n\t * Switches the layout to collapsed view if the current container is in expanded view\n\t *\n\t * @private\n\t * @param {BaseContainer} container - container instance to check\n\t * @returns {void}\n\t */\n\tprivate _switchToCollapsedViewIfRequired(containers: BaseContainer[]): void {\n\t\tconst layout = this._getPanel() as Layout;\n\t\tconst isLayoutExpanded = layout.getProperty(\"expanded\") as boolean;\n\n\t\tif (isLayoutExpanded) {\n\t\t\tcontainers.forEach((container) => {\n\t\t\t\tlayout.toggleFullScreen(container._getSelectedPanel());\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Method to load the sections\n\t *\n\t * @private\n\t */\n\tprivate async _loadSections(): Promise<void> {\n\t\tconst layout = this._getPanel() as Layout;\n\t\tawait layout._calculateSectionsState();\n\n\t\tthis._orderedSections = JSON.parse(JSON.stringify(layout.getSections())) as IElement[];\n\t\t// not a good way as there could be more than one insights container, discuss\n\t\tthis._orderedSections.forEach((oSection) => {\n\t\t\tif (oSection.sContainerType === \"sap.cux.home.InsightsContainer\" && !oSection.title) {\n\t\t\t\toSection.title = String(this._i18nBundle?.getText(\"insights\"));\n\t\t\t}\n\t\t});\n\t\tthis._controlModel = new JSONModel(this._orderedSections);\n\t\tthis._layoutTable.setModel(this._controlModel);\n\n\t\tthis._layoutTable.bindItems({\n\t\t\tpath: \"/\",\n\t\t\tfactory: (id) => {\n\t\t\t\tif (!this._dndInvisibleText || this._dndInvisibleText.isDestroyed()) {\n\t\t\t\t\tthis._dndInvisibleText = getInvisibleText(\n\t\t\t\t\t\tthis.getId() + \"--layoutDndText\",\n\t\t\t\t\t\tthis._i18nBundle.getText(\"keyPressAriaText\")\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn new ColumnListItem(`${id}--columnListItem`, {\n\t\t\t\t\ttype: \"Inactive\",\n\t\t\t\t\tcells: [\n\t\t\t\t\t\tnew HBox(`${id}--columnListHBox`, {\n\t\t\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\tnew Icon(`${id}--columnListIcon`, {\n\t\t\t\t\t\t\t\t\tsrc: \"sap-icon://vertical-grip\"\n\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiSmallMarginEnd\"),\n\t\t\t\t\t\t\t\tnew HBox(`${id}--columnListItemHBox`, {\n\t\t\t\t\t\t\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\t\t\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\t\tnew ObjectIdentifier(`${id}--columnListObjectIdentifier`, {\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"{title}\",\n\t\t\t\t\t\t\t\t\t\t\ttext: \"{text}\",\n\t\t\t\t\t\t\t\t\t\t\ttooltip: \"{title}\"\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\tnew ToggleButton(`${id}--layoutSettingstoggleButton`, {\n\t\t\t\t\t\t\t\t\t\t\ttooltip:\n\t\t\t\t\t\t\t\t\t\t\t\t\"{= ${visible} ? '\" +\n\t\t\t\t\t\t\t\t\t\t\t\tthis._i18nBundle.getText(\"hideBtn\") +\n\t\t\t\t\t\t\t\t\t\t\t\t\"' : '\" +\n\t\t\t\t\t\t\t\t\t\t\t\tthis._i18nBundle.getText(\"showBtn\") +\n\t\t\t\t\t\t\t\t\t\t\t\t\"' }\",\n\t\t\t\t\t\t\t\t\t\t\ticon: \"sap-icon://show\",\n\t\t\t\t\t\t\t\t\t\t\ttype: \"Emphasized\",\n\t\t\t\t\t\t\t\t\t\t\tenabled: \"{= !${blocked}}\",\n\t\t\t\t\t\t\t\t\t\t\tpress: (event: Event) => {\n\t\t\t\t\t\t\t\t\t\t\t\tvoid this.createShowHideChangeFile(event);\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tpressed: \"{= !${visible}}\",\n\t\t\t\t\t\t\t\t\t\t\tariaLabelledBy: [\"selectLabel\"]\n\t\t\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginEnd sapUiTinyMarginTop\")\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tthis._dndInvisibleText\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\twidth: \"100%\"\n\t\t\t\t\t\t})\n\t\t\t\t\t],\n\t\t\t\t\tariaLabelledBy: [this._dndInvisibleText.getId()]\n\t\t\t\t}).addStyleClass(\"insightsListItem insightsListMargin\");\n\t\t\t}\n\t\t});\n\n\t\t// attach collapse event handler to rearrange layout elements if required\n\t\tif (!this._isCollapseHandlerAttached) {\n\t\t\tthis._isCollapseHandlerAttached = true;\n\t\t\tlayout.attachEvent(\"onCollapse\", () => this._rearrangeLayoutIfRequired());\n\t\t}\n\t}\n\n\t/**\n\t * Rearranges the layout elements if their order has changed.\n\t *\n\t * @private\n\t */\n\tprivate _rearrangeLayoutIfRequired(): void {\n\t\tconst layout = this._getPanel() as Layout;\n\t\tconst currentLayoutElements = layout.getItems();\n\n\t\tif (Array.isArray(this._allLayoutElements) && currentLayoutElements.length === this._allLayoutElements.length) {\n\t\t\tconst isOrderChanged = currentLayoutElements.some((element, index) => {\n\t\t\t\treturn element.getId() !== this._allLayoutElements[index].getId();\n\t\t\t});\n\n\t\t\tif (isOrderChanged) {\n\t\t\t\tlayout.removeAllItems();\n\t\t\t\tthis._allLayoutElements.forEach((element) => {\n\t\t\t\t\tlayout.addItem(element);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns the content for the Layout Settings Panel.\n\t *\n\t * @private\n\t * @returns {VBox} The control containing the Layout Settings Panel content.\n\t */\n\tprivate _getContent(): VBox {\n\t\tconst oHeader = this._setHeaderIntro();\n\t\tconst oTable = this.setLayoutTable();\n\t\tconst oInvisibleText = getInvisibleText(this.getId() + \"--titleText\", this._i18nBundle.getText(\"layout\"));\n\n\t\tconst oContentVBox = new VBox(this.getId() + \"--idNewsPageOuterVBoX\", {\n\t\t\talignItems: \"Start\",\n\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\trenderType: \"Bare\",\n\t\t\titems: [oInvisibleText, oHeader, oTable]\n\t\t});\n\t\t[oInvisibleText, oHeader].forEach((control) => {\n\t\t\tthis._resetActionButton.addAriaLabelledBy(control.getId());\n\t\t});\n\t\treturn oContentVBox;\n\t}\n\n\t/**\n\t * Returns the content for the Layout Settings Panel Header.\n\t *\n\t * @private\n\t * @returns {VBox} The control containing the Layout Settings Panel's Header content.\n\t */\n\tprivate _setHeaderIntro(): VBox {\n\t\tconst oHeaderText = new Text(this.getId() + \"--idCustLayoutText\", {\n\t\t\ttext: this._i18nBundle.getText(\"layoutIntroMsg\")\n\t\t});\n\t\tconst oHeaderVBox = new VBox(this.getId() + \"--idLayoutIntroText\", {\n\t\t\tbackgroundDesign: \"Solid\",\n\t\t\talignItems: \"Start\",\n\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\titems: [oHeaderText],\n\t\t\trenderType: \"Bare\"\n\t\t}).addStyleClass(\"sapUiSmallMargin\");\n\t\treturn oHeaderVBox;\n\t}\n\n\t/**\n\t * Returns the content for the Layout Table.\n\t *\n\t * @private\n\t * @returns {sap.ui.core.Control} The control containing the Layout Settings Panel'sTable.\n\t */\n\tprivate setLayoutTable(): Table {\n\t\tif (!this._layoutTable) {\n\t\t\tthis._layoutTable = new Table(this.getId() + \"--idManageSectionsTable\", {\n\t\t\t\twidth: \"calc(100% - 2rem)\",\n\t\t\t\titems: [],\n\n\t\t\t\tcolumns: [\n\t\t\t\t\tnew Column(this.getId() + \"--idSectionTitleColumn\", {\n\t\t\t\t\t\twidth: \"100%\"\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t}).addStyleClass(\"sapContrastPlus sapUiSmallMarginBeginEnd sapUiTinyMarginBottom\");\n\t\t\tthis.addDragDropConfigTo(this._layoutTable, (event) => void this.onDropManageSections(event));\n\t\t}\n\n\t\treturn this._layoutTable;\n\t}\n\n\t/**\n\t * Function to save section changes of MyHomeSettingsDialog\n\t *\n\t * @private\n\t */\n\tprivate async _saveManageSectionsDialog(): Promise<void> {\n\t\treturn this._persistUserChanges({\n\t\t\tchanges: this._manageSectionsChanges,\n\t\t\tappComponent: PersonalisationUtils.getOwnerComponent(this._getPanel() as Layout)\n\t\t})\n\t\t\t.then(() => {\n\t\t\t\tconst tableModel = this._layoutTable.getModel() as JSONModel;\n\t\t\t\ttableModel.refresh();\n\t\t\t\tthis._controlModel.refresh();\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tthis._manageSectionsChanges = [];\n\t\t\t});\n\t}\n\n\t/**\n\t * Function to persist user changes\n\t *\n\t * @private\n\t */\n\tprivate _persistUserChanges(mProperties: { changes: IManagePersChanges[]; appComponent: Component | undefined }): Promise<void> {\n\t\treturn Lib.load({ name: \"sap.ui.fl\" }).then(function () {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tsap.ui.require(\n\t\t\t\t\t[\"sap/ui/fl/write/api/ControlPersonalizationWriteAPI\"],\n\t\t\t\t\tfunction (ControlPersonalizationWriteAPI: IControlPersonalizationWriteAPI) {\n\t\t\t\t\t\tControlPersonalizationWriteAPI.add({\n\t\t\t\t\t\t\tchanges: mProperties.changes,\n\t\t\t\t\t\t\tignoreVariantManagement: true\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.then(function (aGeneratedChanges) {\n\t\t\t\t\t\t\t\treturn resolve(\n\t\t\t\t\t\t\t\t\tControlPersonalizationWriteAPI.save({\n\t\t\t\t\t\t\t\t\t\tselector: {\n\t\t\t\t\t\t\t\t\t\t\tappComponent: mProperties.appComponent\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tchanges: aGeneratedChanges\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(function (oError) {\n\t\t\t\t\t\t\t\tif (oError instanceof Error) {\n\t\t\t\t\t\t\t\t\tLog.error(\"Unable to Save User Change: \" + oError.message);\n\t\t\t\t\t\t\t\t\treturn reject(oError);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves the actual index of a layout element by its ID.\n\t *\n\t * @private\n\t * @param {string} id - The ID of the layout element to find.\n\t * @returns {number} The index of the layout element.\n\t */\n\tprivate _getActualIndex(id: string): number {\n\t\tconst layout = this._getPanel() as Layout;\n\t\tthis._allLayoutElements = this._allLayoutElements || [...layout.getItems()];\n\t\tconst isLayoutExpanded = layout.getProperty(\"expanded\") as boolean;\n\t\tconst expandedElementConfig = layout._getCurrentExpandedElement();\n\n\t\tif (isLayoutExpanded && expandedElementConfig) {\n\t\t\t// add the expanded element if it isn't already in the list\n\t\t\tif (!this._allLayoutElements.some((element) => element.getId() === expandedElementConfig.targetContainer.getId())) {\n\t\t\t\tthis._allLayoutElements.splice(expandedElementConfig.index, 0, expandedElementConfig.targetContainer);\n\t\t\t}\n\t\t}\n\n\t\treturn this._allLayoutElements.findIndex((element) => element.getId() === id);\n\t}\n\n\t/**\n\t * Rearranges the layout elements by moving an element from the source index to the target index.\n\t *\n\t * @private\n\t * @param {number} sourceIndex - The index of the element to move.\n\t * @param {number} targetIndex - The index to move the element to.\n\t */\n\tprivate _rearrangeLayoutElements(sourceIndex: number, targetIndex: number): void {\n\t\tconst container = this._allLayoutElements.splice(sourceIndex, 1)[0];\n\t\tthis._allLayoutElements.splice(targetIndex, 0, container);\n\n\t\t//update the index of the expanded element if in expanded mode\n\t\tconst layout = this._getPanel() as Layout;\n\t\tconst isLayoutExpanded = layout.getProperty(\"expanded\") as boolean;\n\t\tconst expandedElementConfig = layout._getCurrentExpandedElement();\n\t\tif (isLayoutExpanded && expandedElementConfig) {\n\t\t\tconst sourceElement = expandedElementConfig.sourceElements.values().next().value!;\n\t\t\tlayout.updateFullScreenElement(sourceElement, {\n\t\t\t\tindex: this._allLayoutElements.indexOf(expandedElementConfig.targetContainer)\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Function to execute drag and drop among sections\n\t *\n\t * @private\n\t */\n\tprivate async onDropManageSections(oEvent: DropInfo$DropEvent | IDragEvent): Promise<void> {\n\t\tconst oWrapper = this._getPanel() as Layout;\n\t\tconst wrapperId = oWrapper.getId();\n\t\tconst oDragItem = ((oEvent as DropInfo$DropEvent).getParameter?.(\"draggedControl\") ||\n\t\t\t(oEvent as IDragEvent).draggedControl) as ColumnListItem;\n\t\tconst iDragItemIndex = (oDragItem.getParent() as Table)?.indexOfItem(oDragItem);\n\t\tconst oDropItem = ((oEvent as DropInfo$DropEvent).getParameter?.(\"droppedControl\") ||\n\t\t\t(oEvent as IDragEvent).droppedControl) as ColumnListItem;\n\t\tconst iDropItemIndex = (oDragItem.getParent() as Table)?.indexOfItem(oDropItem);\n\n\t\tif (iDragItemIndex !== iDropItemIndex) {\n\t\t\tconst sectionOrder = this._orderedSections;\n\t\t\tconst dragObject = oDragItem.getBindingContext()?.getObject() as IElement;\n\t\t\tconst dropObject = oDropItem.getBindingContext()?.getObject() as IElement;\n\n\t\t\tconst actualDragItemIndex = this._getActualIndex(dragObject.completeId);\n\t\t\tconst actualDropItemIndex = this._getActualIndex(dropObject.completeId);\n\t\t\tthis._rearrangeLayoutElements(actualDragItemIndex, actualDropItemIndex);\n\n\t\t\tsectionOrder.splice(iDragItemIndex, 1);\n\t\t\tsectionOrder.splice(iDropItemIndex, 0, dragObject);\n\t\t\toWrapper.setSections(sectionOrder);\n\n\t\t\tthis._manageSectionsChanges.push({\n\t\t\t\tselectorElement: oWrapper,\n\t\t\t\tchangeSpecificData: {\n\t\t\t\t\tchangeType: CHANGE_TYPES.MOVE,\n\t\t\t\t\tmovedElements: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: dragObject.completeId,\n\t\t\t\t\t\t\tsourceIndex: actualDragItemIndex,\n\t\t\t\t\t\t\ttargetIndex: actualDropItemIndex\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\tsource: {\n\t\t\t\t\t\tid: wrapperId,\n\t\t\t\t\t\taggregation: \"items\"\n\t\t\t\t\t},\n\t\t\t\t\ttarget: {\n\t\t\t\t\t\tid: wrapperId,\n\t\t\t\t\t\taggregation: \"items\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tawait this._saveManageSectionsDialog();\n\n\t\t\t//switch to collapsed view if any of the containers is in expanded view\n\t\t\tconst draggedContainer = Element.getElementById(dragObject.completeId) as BaseContainer;\n\t\t\tconst droppedContainer = Element.getElementById(dropObject.completeId) as BaseContainer;\n\t\t\tthis._switchToCollapsedViewIfRequired([draggedContainer, droppedContainer]);\n\t\t}\n\t\tfocusDraggedItem(this._layoutTable, iDropItemIndex);\n\t}\n\n\t/**\n\t * Function to reset MyHome settings changes\n\t *\n\t * @private\n\t */\n\tprivate resetMyhomeSettings(): void {\n\t\tMessageBox.show(this._i18nBundle.getText(\"reset_cards_confirmation_msg\") as string, {\n\t\t\tid: \"resetCardsConfirmation\",\n\t\t\ticon: MessageBox.Icon.QUESTION,\n\t\t\ttitle: this._i18nBundle.getText(\"reset_cards_confirmation_title\"),\n\t\t\tactions: [this._i18nBundle.getText(\"reset_cards_button\") as string, MessageBox.Action.CANCEL],\n\t\t\tonClose: async (oAction: string) => {\n\t\t\t\tif (oAction === this._i18nBundle.getText(\"reset_cards_button\")) {\n\t\t\t\t\tconst aChangesForDeletion: (BaseContainer | BaseLayout)[] = [];\n\n\t\t\t\t\tfor (let section of this._orderedSections) {\n\t\t\t\t\t\tconst element = Element.getElementById(section.completeId) as BaseContainer;\n\t\t\t\t\t\taChangesForDeletion.push(element);\n\t\t\t\t\t}\n\t\t\t\t\t// Revert Changes Related to DragnDrop\n\t\t\t\t\taChangesForDeletion.push(this._getPanel() as Layout);\n\t\t\t\t\tawait Lib.load({ name: \"sap.ui.fl\" }).then(() => {\n\t\t\t\t\t\tsap.ui.require(\n\t\t\t\t\t\t\t[\"sap/ui/fl/write/api/ControlPersonalizationWriteAPI\"],\n\t\t\t\t\t\t\t(ControlPersonalizationWriteAPI: IControlPersonalizationWriteAPI) => {\n\t\t\t\t\t\t\t\tvoid ControlPersonalizationWriteAPI.reset({\n\t\t\t\t\t\t\t\t\tselectors: aChangesForDeletion,\n\t\t\t\t\t\t\t\t\tchangeTypes: [CHANGE_TYPES.MOVE, CHANGE_TYPES.UNHIDE, CHANGE_TYPES.HIDE]\n\t\t\t\t\t\t\t\t}).finally(() => {\n\t\t\t\t\t\t\t\t\tconst layout = this._getPanel() as Layout;\n\t\t\t\t\t\t\t\t\tlayout.resetSections();\n\t\t\t\t\t\t\t\t\tlayout.closeSettingsDialog();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n"],"mappings":"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","ignoreList":[]}