{"version":3,"file":"RecentAppPanel.js","names":["sap","ui","define","Log","Button","CustomListItem","Dialog","GroupHeaderListItem","sap_m_library","List","OverflowToolbar","Select","StandardListItem","ToolbarSpacer","VBox","EventBus","DateFormat","Item","Container","EventHub","__BaseAppPersPanel","__MenuItem","___utils_FESRUtil","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","URLHelper","BaseAppPersPanel","MenuItem","addFESRId","DateFilterOption","GroupDateFormatter","getDateInstance","pattern","Constants","OLDER_DATE_TIMESTAMP","Number","MIN_SAFE_INTEGER","formatConstantTimeInDate","date","setHours","getWeekRangeValues","weekOffset","currentDate","Date","startDate","startDateTimeStamp","setDate","getDate","getDay","endDate","endDateTimeStamp","getDaysBefore","currentTimeStamp","days","newDateStamp","isDateWithinRange","appTimeStamp","startTimeStamp","endTimeStamp","RecentAppPanel","extend","metadata","library","defaultAggregation","aggregations","apps","type","singularName","multiple","visibility","constructor","_constructor","id","settings","BaseAppPersPanel.prototype.constructor.call","this","_recentApps","setSupported","init","_init","BaseAppPersPanel.prototype.init.call","setProperty","_i18nBundle","getText","_attachUserActivityTracking","on","do","refresh","showHistoryMenuItem","getId","title","icon","press","_openHistoryDialog","bind","insertAggregation","oEventBus","getInstance","subscribe","channelId","eventId","data","item","color","_applyUngroupedTileColor","loadApps","_loadApps","_this","Promise","resolve","_getRecentApps","recentApps","destroyAggregation","map","app","index","menuItems","_getAppActions","addedInFavorites","setApps","generateApps","reject","_this2","getServiceAsync","UserRecentsService","all","getRecentActivity","oRecentActivity","_getRecentActivitiesFromLoadedData","_ref","recentActivities","recentActivitiesUsageData","convertActivitiesToVisualizations","_this2$convertActivit","recentDate","recentDay","_recentDayTimeStamp","recentUsage","recentUsageArray","recentUsageMap","Map","forEach","oItem","appId","set","aUsageArray","dateStamp","timestamp","size","usageArray","get","orgAppId","error","isAppAddedInFavorite","arguments","length","undefined","resumeLastActivityItem","getKey","_resumeAppActivity","appActions","addToFavoritesItem","event","_addAppToFavorites","push","menuItem","getSource","getParent","url","getUrl","redirect","_generateHistoryDialog","_controlMap","content","height","items","_generateAppHistoryList","addStyleClass","escapeHandler","_closeHistoryDialog","contentHeight","contentWidth","buttons","text","growing","growingScrollToLoad","headerToolbar","style","_generateAppHistoryListFilter","selectedKey","ALL","change","_onDateFilterChange","key","TODAY","WEEK","TWO_WEEK","THREE_WEEK","_generateAppHistoryListItems","appHistoryItems","appHistoryList","destroyItems","appHistoryItem","addItem","_getGroupHeader","name","historyDialog","appHistory","_getAppHistory","open","close","getParameter","filteredAppHistory","_getFilteredAppHistory","sTitle","format","groupedAppHistory","thresholdTimeStamp","recentApp","appUsage","usage","usageDate","Object","values","sort","a","b","filter","currentWeekStartDate","currentWeekEndDate","secondWeekStartDate","thirdWeekStartDate","generateIllustratedMessage","_generateIllustratedMessage","illustratedMessage","BaseAppPersPanel.prototype.generateIllustratedMessage.call","setDescription"],"sources":["RecentAppPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport Button from \"sap/m/Button\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport Dialog from \"sap/m/Dialog\";\nimport GroupHeaderListItem from \"sap/m/GroupHeaderListItem\";\nimport { URLHelper } from \"sap/m/library\";\nimport List from \"sap/m/List\";\nimport OverflowToolbar from \"sap/m/OverflowToolbar\";\nimport Select, { Select$ChangeEvent } from \"sap/m/Select\";\nimport StandardListItem from \"sap/m/StandardListItem\";\nimport ToolbarSpacer from \"sap/m/ToolbarSpacer\";\nimport VBox from \"sap/m/VBox\";\nimport Event from \"sap/ui/base/Event\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport DateFormat from \"sap/ui/core/format/DateFormat\";\nimport Item from \"sap/ui/core/Item\";\nimport Container from \"sap/ushell/Container\";\nimport EventHub from \"sap/ushell/EventHub\";\nimport UserRecents from \"sap/ushell/services/UserRecents\";\nimport App from \"./App\";\nimport BaseAppPersPanel from \"./BaseAppPersPanel\";\nimport type { $BasePanelSettings } from \"./BasePanel\";\nimport Group from \"./Group\";\nimport { IActivity } from \"./interface/AppsInterface\";\nimport MenuItem from \"./MenuItem\";\nimport { addFESRId } from \"./utils/FESRUtil\";\n\ninterface IAppHistoryItem {\n\tname: string;\n}\n\ninterface IAppHistory {\n\tdateStamp: number;\n\tapps: IAppHistoryItem[];\n}\n\nenum DateFilterOption {\n\tALL = \"ALL\",\n\tTODAY = \"TODAY\",\n\tWEEK = \"WEEK\",\n\tTWO_WEEK = \"TWO_WEEK\",\n\tTHREE_WEEK = \"THREE_WEEK\"\n}\n\nconst GroupDateFormatter = DateFormat.getDateInstance({ pattern: \"MMMM d, yyyy\" });\n\nconst Constants = {\n\tOLDER_DATE_TIMESTAMP: Number.MIN_SAFE_INTEGER\n};\n\nconst formatConstantTimeInDate = (date: Date): number => {\n\treturn date.setHours(12, 0, 0, 0);\n};\n\n/**\n * Calculates the start and end dates of a week based on the given week offset.\n * @param weekOffset - The offset from the current week.\n * @returns An object containing the start and end dates of the week.\n */\nconst getWeekRangeValues = (weekOffset: number) => {\n\tconst currentDate = new Date();\n\n\t// Calculate the start of the current week (with sunday as the first day of the week)\n\tconst startDate = new Date(currentDate);\n\tconst startDateTimeStamp = startDate.setDate(currentDate.getDate() - currentDate.getDay() - 7 * weekOffset);\n\n\t// Calculate the end of the week\n\tconst endDate = new Date(startDate);\n\tconst endDateTimeStamp = endDate.setDate(startDate.getDate() + 6);\n\n\treturn {\n\t\tstartDate: startDateTimeStamp,\n\t\tendDate: endDateTimeStamp\n\t};\n};\n\n/**\n * Calculates the timestamp of a date, that is a specified number of days before a given current date.\n *\n * @param {Date} currentTimeStamp - The current date to calculate days before.\n * @param {number} days - The number of days before the current date.\n * @returns {number} The timestamp of the date `days` before `currentDate`.\n */\nconst getDaysBefore = (currentTimeStamp: number, days: number): number => {\n\tconst currentDate = new Date(currentTimeStamp);\n\tconst newDateStamp = currentDate.setDate(currentDate.getDate() - days);\n\treturn formatConstantTimeInDate(new Date(newDateStamp));\n};\n\n/**\n * Filters an app by date.\n * @private\n * @param {number} appTimeStamp - The timestamp of the app.\n * @param {number} startTimeStamp - The start timestamp for filtering.\n * @param {number} endTimeStamp - The end timestamp for filtering.\n * @returns A boolean indicating whether the app falls within the specified date range.\n */\nconst isDateWithinRange = (appTimeStamp: number, startTimeStamp: number, endTimeStamp: number) => {\n\treturn appTimeStamp >= startTimeStamp && appTimeStamp <= endTimeStamp;\n};\n\n/**\n *\n * Provides class for managing Recently Used apps.\n *\n * @extends sap.cux.home.BaseAppPersPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121.0\n *\n * @internal\n * @experimental Since 1.121\n * @public\n *\n * @alias sap.cux.home.RecentAppPanel\n */\nexport default class RecentAppPanel extends BaseAppPersPanel {\n\tprivate oEventBus!: EventBus;\n\tprivate _recentDayTimeStamp!: number;\n\tprivate _recentApps: IActivity[] = [];\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tdefaultAggregation: \"apps\",\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * Apps aggregation for Recent apps\n\t\t\t */\n\t\t\tapps: { type: \"sap.cux.home.App\", singularName: \"app\", multiple: true, visibility: \"hidden\" }\n\t\t}\n\t};\n\n\t/**\n\t * Constructor for a new Recently Used apps Panel.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $BasePanelSettings) {\n\t\tsuper(id, settings);\n\t\tthis.setSupported(false);\n\t}\n\n\tpublic init() {\n\t\tsuper.init();\n\t\tthis.setProperty(\"key\", \"recentApps\");\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"recentlyUsedTab\"));\n\t\tthis.setProperty(\"tooltip\", this._i18nBundle.getText(\"recentAppsInfo\"));\n\t\tthis._attachUserActivityTracking();\n\t\tEventHub.on(\"userRecentsCleared\").do(() => {\n\t\t\tvoid this.refresh();\n\t\t});\n\n\t\t//Setup Menu Items\n\t\tconst showHistoryMenuItem = new MenuItem(`${this.getId()}-show-history-btn`, {\n\t\t\ttitle: this._i18nBundle.getText(\"showHistoryBtn\"),\n\t\t\ticon: \"sap-icon://history\",\n\t\t\tpress: this._openHistoryDialog.bind(this)\n\t\t});\n\t\taddFESRId(showHistoryMenuItem, \"showHistory\");\n\t\tthis.insertAggregation(\"menuItems\", showHistoryMenuItem, 0);\n\n\t\tthis.oEventBus = EventBus.getInstance();\n\t\tthis.oEventBus.subscribe(\n\t\t\t\"appsChannel\",\n\t\t\t\"favAppColorChanged\",\n\t\t\t(channelId?: string, eventId?: string, data?) => {\n\t\t\t\tconst { item, color } = data as { item: App | Group; color: string };\n\t\t\t\t//update color of the app in recent apps\n\t\t\t\tthis._applyUngroupedTileColor(item, color);\n\t\t\t},\n\t\t\tthis\n\t\t);\n\t}\n\n\t/**\n\t * Fetch recent apps and set apps aggregation\n\t * @private\n\t */\n\tpublic async loadApps() {\n\t\tlet recentApps = await this._getRecentApps();\n\t\tthis.destroyAggregation(\"apps\", true);\n\t\trecentApps = recentApps.map((app, index) => {\n\t\t\treturn {\n\t\t\t\t...app,\n\t\t\t\tmenuItems: this._getAppActions(app.addedInFavorites, index)\n\t\t\t};\n\t\t});\n\t\t//convert apps objects array to apps instances\n\t\tthis.setApps(this.generateApps(recentApps));\n\t}\n\n\t/**\n\t * Returns list of recent apps\n\t * @private\n\t * @returns {Promise<IActivity[]>} - Array of recent apps.\n\t */\n\tprivate async _getRecentApps(): Promise<IActivity[]> {\n\t\ttry {\n\t\t\tconst UserRecentsService = await Container.getServiceAsync<UserRecents>(\"UserRecents\");\n\t\t\tconst [recentActivities, recentActivitiesUsageData] = await Promise.all([\n\t\t\t\tUserRecentsService?.getRecentActivity().then((result) => result || []),\n\t\t\t\tUserRecentsService?.oRecentActivity._getRecentActivitiesFromLoadedData().then((result) => result || {})\n\t\t\t]);\n\t\t\t//convert activity to apps\n\t\t\tthis._recentApps = await this.convertActivitiesToVisualizations(recentActivities);\n\t\t\tlet recentDate = new Date(recentActivitiesUsageData?.recentDay);\n\t\t\t// add last used and usage info\n\t\t\tthis._recentDayTimeStamp = formatConstantTimeInDate(recentDate);\n\n\t\t\tconst recentUsage = recentActivitiesUsageData?.recentUsageArray || [];\n\t\t\tconst recentUsageMap = new Map<string, number[]>();\n\t\t\trecentUsage.forEach((app) => {\n\t\t\t\tif (app.oItem?.appId) {\n\t\t\t\t\trecentUsageMap.set(app.oItem.appId, app.aUsageArray);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis._recentApps.forEach((app) => {\n\t\t\t\t//isolate only date information by having common time information\n\t\t\t\tapp.dateStamp = formatConstantTimeInDate(new Date(app.timestamp));\n\t\t\t\tif (recentUsageMap.size) {\n\t\t\t\t\tapp.usageArray = recentUsageMap.get(app.orgAppId);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn this._recentApps || [];\n\t\t} catch (error) {\n\t\t\tLog.error(error as string);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Returns list of actions available for selected app\n\t * @private\n\t * @param {boolean} isAppAddedInFavorite - true if app is already present in favorite, false otherwise.\n\t * @returns {sap.cux.home.MenuItem[]} - Array of list items.\n\t */\n\tprivate _getAppActions(isAppAddedInFavorite: boolean = false, index?: number): MenuItem[] {\n\t\tconst resumeLastActivityItem = new MenuItem(`${this.getKey()}--${index}--resumeLastActivityItem`, {\n\t\t\ttitle: this._i18nBundle.getText(\"resumeLastActivity\"),\n\t\t\ticon: \"sap-icon://past\",\n\t\t\tpress: this._resumeAppActivity.bind(this)\n\t\t});\n\t\taddFESRId(resumeLastActivityItem, \"resumeActivity\");\n\t\tconst appActions = [resumeLastActivityItem];\n\t\tif (!isAppAddedInFavorite) {\n\t\t\tconst addToFavoritesItem = new MenuItem(`${this.getKey()}--${index}--addToFavoritesRecentItem`, {\n\t\t\t\ttitle: this._i18nBundle.getText(\"addToFavorites\"),\n\t\t\t\ticon: \"sap-icon://add-favorite\",\n\t\t\t\tpress: (event) => {\n\t\t\t\t\tvoid this._addAppToFavorites(event);\n\t\t\t\t}\n\t\t\t});\n\t\t\taddFESRId(addToFavoritesItem, \"addFavFromRecent\");\n\t\t\tappActions.push(addToFavoritesItem);\n\t\t}\n\t\treturn appActions;\n\t}\n\n\t/**\n\t * Redirects to the selected app url\n\t * @private\n\t * @param {sap.ui.base.Event} event - The event object.\n\t */\n\tprivate _resumeAppActivity(event: Event) {\n\t\tconst menuItem = event.getSource<MenuItem>();\n\t\tconst app = menuItem.getParent() as App;\n\t\tconst url = app.getUrl?.();\n\t\tURLHelper.redirect(url, false);\n\t}\n\n\t/**\n\t * Generates and returns a dialog for showing the history of recent applications.\n\t * @private\n\t * @returns The generated dialog for showing the history of recent applications.\n\t */\n\tprivate _generateHistoryDialog() {\n\t\tconst id = `${this.getId()}-history-dialog`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew Dialog(id, {\n\t\t\t\t\ttitle: this._i18nBundle.getText(\"showHistoryTitle\"),\n\t\t\t\t\tcontent: new VBox({\n\t\t\t\t\t\tid: `${id}-container`,\n\t\t\t\t\t\theight: \"100%\",\n\t\t\t\t\t\titems: [this._generateAppHistoryList()]\n\t\t\t\t\t}).addStyleClass(\"sapUiTinyMargin\"),\n\t\t\t\t\tescapeHandler: this._closeHistoryDialog.bind(this),\n\t\t\t\t\tcontentHeight: \"29rem\",\n\t\t\t\t\tcontentWidth: \"25rem\",\n\t\t\t\t\tbuttons: [\n\t\t\t\t\t\tnew Button({\n\t\t\t\t\t\t\tid: `${id}-cancel-btn`,\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"cancelBtn\"),\n\t\t\t\t\t\t\tpress: this._closeHistoryDialog.bind(this)\n\t\t\t\t\t\t})\n\t\t\t\t\t]\n\t\t\t\t}).addStyleClass(\"sapContrastPlus\")\n\t\t\t);\n\t\t}\n\t\treturn this._controlMap.get(id) as Dialog;\n\t}\n\n\t/**\n\t * Generates the app history list.\n\t * @private\n\t * @returns The generated app history list.\n\t */\n\tprivate _generateAppHistoryList() {\n\t\tconst id = `${this.getId()}-history-dialog-list`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew List({\n\t\t\t\t\tid,\n\t\t\t\t\tgrowing: true,\n\t\t\t\t\tgrowingScrollToLoad: true,\n\t\t\t\t\theaderToolbar: new OverflowToolbar({\n\t\t\t\t\t\tid: `${id}-header-toolbar`,\n\t\t\t\t\t\tstyle: \"Clear\",\n\t\t\t\t\t\theight: \"1.75rem\",\n\t\t\t\t\t\tcontent: [\n\t\t\t\t\t\t\tnew ToolbarSpacer({\n\t\t\t\t\t\t\t\tid: `${id}-header-toolbar-spacer`\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tthis._generateAppHistoryListFilter()\n\t\t\t\t\t\t]\n\t\t\t\t\t})\n\t\t\t\t}).addStyleClass(\"sapMListShowSeparatorsNone recentAppList\")\n\t\t\t);\n\t\t}\n\t\treturn this._controlMap.get(id) as List;\n\t}\n\n\t/**\n\t * Generates the app history list filter.\n\t * @private\n\t * @returns The Select control for the app history list filter.\n\t */\n\tprivate _generateAppHistoryListFilter() {\n\t\tconst id = `${this.getId()}-history-dialog-list-filter`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew Select({\n\t\t\t\t\tid,\n\t\t\t\t\tselectedKey: DateFilterOption.ALL,\n\t\t\t\t\tchange: (e) => this._onDateFilterChange(e),\n\t\t\t\t\titems: [\n\t\t\t\t\t\tnew Item({\n\t\t\t\t\t\t\tid: `${id}-month`,\n\t\t\t\t\t\t\tkey: DateFilterOption.ALL,\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"dateThirty\")\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tnew Item({\n\t\t\t\t\t\t\tid: `${id}-today`,\n\t\t\t\t\t\t\tkey: DateFilterOption.TODAY,\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"dateToday\")\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tnew Item({\n\t\t\t\t\t\t\tid: `${id}-week`,\n\t\t\t\t\t\t\tkey: DateFilterOption.WEEK,\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"dateWeek\")\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tnew Item({\n\t\t\t\t\t\t\tid: `${id}-twoWeek`,\n\t\t\t\t\t\t\tkey: DateFilterOption.TWO_WEEK,\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"dateTwoWeek\")\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tnew Item({\n\t\t\t\t\t\t\tid: `${id}-threeWeek`,\n\t\t\t\t\t\t\tkey: DateFilterOption.THREE_WEEK,\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"dateThreeWeek\")\n\t\t\t\t\t\t})\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\treturn this._controlMap.get(id) as Select;\n\t}\n\n\t/**\n\t * Generates and populates items in the app history list based on the provided list of items.\n\t * Clears existing items in the list before adding new items.\n\t *\n\t * @param {IAppHistory[]} appHistoryItems - Array of items to populate in the app history list.\n\t * @returns {void}\n\t * @private\n\t */\n\tprivate _generateAppHistoryListItems(appHistoryItems: IAppHistory[]): void {\n\t\tconst appHistoryList = this._generateAppHistoryList();\n\t\tappHistoryList?.destroyItems();\n\t\tappHistoryItems.forEach((appHistoryItem) => {\n\t\t\tappHistoryList.addItem(this._getGroupHeader(appHistoryItem.dateStamp));\n\t\t\tappHistoryList.addItem(\n\t\t\t\tnew CustomListItem({\n\t\t\t\t\tid: `date-${appHistoryItem.dateStamp}-lisItem`,\n\t\t\t\t\ttype: \"Inactive\",\n\t\t\t\t\tcontent: [\n\t\t\t\t\t\tnew List({\n\t\t\t\t\t\t\tid: `date-${appHistoryItem.dateStamp}-appList`,\n\t\t\t\t\t\t\titems: (appHistoryItem.apps || []).map((app, index) =>\n\t\t\t\t\t\t\t\tnew StandardListItem({\n\t\t\t\t\t\t\t\t\tid: `listItem--${appHistoryItem.dateStamp}--${index}`,\n\t\t\t\t\t\t\t\t\ttitle: app.name,\n\t\t\t\t\t\t\t\t\ttype: \"Inactive\"\n\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginBeginEnd recentAppList sapUiSmallMarginTop\")\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}).addStyleClass(\"sapMListShowSeparatorsNone sapUiTinyMarginBottom\")\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Opens the history dialog.\n\t * This method generates the show history dialog, retrieves the app history list,\n\t * generates the app history list items, and opens the dialog.\n\t * @private\n\t */\n\tprivate _openHistoryDialog() {\n\t\tconst historyDialog = this._generateHistoryDialog();\n\t\tconst appHistory = this._getAppHistory();\n\t\tthis._generateAppHistoryListItems(appHistory);\n\t\thistoryDialog.open();\n\t}\n\n\t/**\n\t * Closes the history dialog.\n\t * @private\n\t */\n\tprivate _closeHistoryDialog() {\n\t\tconst historyDialog = this._generateHistoryDialog();\n\t\thistoryDialog.close();\n\t}\n\n\t/**\n\t * Handles the change event of the date filter.\n\t * Updates the app history list based on the selected date filter.\n\t * @private\n\t * @param {Select$ChangeEvent} event - The select change event.\n\t */\n\tprivate _onDateFilterChange(event: Select$ChangeEvent) {\n\t\tconst selectedKey = event.getParameter(\"selectedItem\")?.getKey() as DateFilterOption;\n\t\tconst filteredAppHistory: IAppHistory[] = this._getFilteredAppHistory(selectedKey);\n\t\tthis._generateAppHistoryListItems(filteredAppHistory);\n\t}\n\n\t/**\n\t * Generates a group header for the given date timestamp.\n\t *\n\t * @param {number} dateStamp - The timestamp representing the date.\n\t * @returns {GroupHeaderListItem} The generated group header list item.\n\t * @private\n\t */\n\tprivate _getGroupHeader(dateStamp: number): GroupHeaderListItem {\n\t\tlet sTitle = \"\";\n\t\tswitch (dateStamp) {\n\t\t\tcase Constants.OLDER_DATE_TIMESTAMP:\n\t\t\t\tsTitle = this._i18nBundle.getText(\"dateLater\") as string;\n\t\t\t\tbreak;\n\t\t\tcase formatConstantTimeInDate(new Date()):\n\t\t\t\tsTitle = this._i18nBundle.getText(\"dateToday\") as string;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsTitle = GroupDateFormatter.format(new Date(dateStamp));\n\t\t\t\tbreak;\n\t\t}\n\t\treturn new GroupHeaderListItem({\n\t\t\ttitle: sTitle\n\t\t}).addStyleClass(\"sapUiTinyMarginBeginEnd recentAppListHeader\");\n\t}\n\n\t/**\n\t * Retrieves the application usage history based on recent app data.\n\t *\n\t * @returns {IAppHistory[]} Array of objects, where each object contains the date timestamp and the apps that are used on that date.\n\t * @private\n\t */\n\tprivate _getAppHistory(): IAppHistory[] {\n\t\tif (this._recentDayTimeStamp && this._recentApps?.length) {\n\t\t\tconst groupedAppHistory: Record<number, IAppHistory> = {};\n\t\t\tconst thresholdTimeStamp = getDaysBefore(this._recentDayTimeStamp, 30); // 30 days threshold\n\t\t\tthis._recentApps.forEach((recentApp) => {\n\t\t\t\tconst appTimeStamp = formatConstantTimeInDate(new Date(recentApp.dateStamp!));\n\t\t\t\tif (appTimeStamp < thresholdTimeStamp) {\n\t\t\t\t\tif (!groupedAppHistory[Constants.OLDER_DATE_TIMESTAMP]) {\n\t\t\t\t\t\tgroupedAppHistory[Constants.OLDER_DATE_TIMESTAMP] = { dateStamp: Constants.OLDER_DATE_TIMESTAMP, apps: [] };\n\t\t\t\t\t}\n\t\t\t\t\tgroupedAppHistory[Constants.OLDER_DATE_TIMESTAMP]?.apps.push({ name: recentApp.title });\n\t\t\t\t} else {\n\t\t\t\t\tconst appUsage = recentApp.usageArray || [];\n\t\t\t\t\tappUsage.forEach((usage, index) => {\n\t\t\t\t\t\tif (usage > 0) {\n\t\t\t\t\t\t\tconst usageDate = getDaysBefore(this._recentDayTimeStamp, appUsage.length - 1 - index);\n\t\t\t\t\t\t\tif (!groupedAppHistory[usageDate]) {\n\t\t\t\t\t\t\t\tgroupedAppHistory[usageDate] = { dateStamp: usageDate, apps: [] };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tgroupedAppHistory[usageDate]?.apps.push({ name: recentApp.title });\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst appHistory = Object.values(groupedAppHistory);\n\t\t\tappHistory.sort((a, b) => b.dateStamp - a.dateStamp);\n\t\t\treturn appHistory;\n\t\t}\n\t\treturn [];\n\t}\n\n\t/**\n\t * Retrieves the filtered app history based on the selected date filter option.\n\t * @private\n\t * @param {DateFilterOption} selectedKey - The selected date filter option.\n\t * @returns {IAppHistory[]} An array of filtered app history.\n\t */\n\tprivate _getFilteredAppHistory(selectedKey: DateFilterOption): IAppHistory[] {\n\t\tconst appHistory = this._getAppHistory();\n\t\tlet filteredAppHistory: IAppHistory[] = [];\n\t\tswitch (selectedKey) {\n\t\t\tcase DateFilterOption.TODAY: {\n\t\t\t\tfilteredAppHistory = appHistory.filter((app) => app.dateStamp === formatConstantTimeInDate(new Date()));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase DateFilterOption.WEEK: {\n\t\t\t\tconst { startDate: currentWeekStartDate, endDate: currentWeekEndDate } = getWeekRangeValues(0);\n\t\t\t\tfilteredAppHistory = appHistory.filter((app) => isDateWithinRange(app.dateStamp, currentWeekStartDate, currentWeekEndDate));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase DateFilterOption.TWO_WEEK: {\n\t\t\t\tconst { startDate: secondWeekStartDate } = getWeekRangeValues(1);\n\t\t\t\tconst { endDate: currentWeekEndDate } = getWeekRangeValues(0);\n\t\t\t\tfilteredAppHistory = appHistory.filter((app) => isDateWithinRange(app.dateStamp, secondWeekStartDate, currentWeekEndDate));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase DateFilterOption.THREE_WEEK: {\n\t\t\t\tconst { startDate: thirdWeekStartDate } = getWeekRangeValues(2);\n\t\t\t\tconst { endDate: currentWeekEndDate } = getWeekRangeValues(0);\n\t\t\t\tfilteredAppHistory = appHistory.filter((app) => isDateWithinRange(app.dateStamp, thirdWeekStartDate, currentWeekEndDate));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tfilteredAppHistory = [...appHistory];\n\t\t\t\tbreak;\n\t\t}\n\t\treturn filteredAppHistory;\n\t}\n\n\t/**\n\t * Generates illustrated message for recent apps panel.\n\t * @private\n\t * @override\n\t * @returns {sap.m.IllustratedMessage} Illustrated error message.\n\t */\n\tprotected generateIllustratedMessage() {\n\t\tconst illustratedMessage = super.generateIllustratedMessage();\n\t\t//override the default description\n\t\tillustratedMessage.setDescription(this._i18nBundle.getText(\"noRecentAppsDescription\"));\n\t\treturn illustratedMessage;\n\t}\n}\n"],"mappings":"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","ignoreList":[]}