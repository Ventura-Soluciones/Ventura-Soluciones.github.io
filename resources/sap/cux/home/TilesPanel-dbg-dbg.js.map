{"version":3,"file":"TilesPanel-dbg-dbg.js","names":["sap","ui","define","Log","GridContainer","GridContainerItemLayoutData","Button","CustomListItem","Dialog","GenericTile","HBox","HeaderContainer","IllustratedMessage","IllustratedMessageSize","IllustratedMessageType","Label","List","ObjectIdentifier","Title","VBox","sap_m_library","EventBus","Icon","Lib","JSONModel","Config","Container","S4MyHome","__BasePanel","__MenuItem","___utils_Accessibility","__AppManager","___utils_Constants","___utils_DataFormatUtils","___utils_Device","___utils_DragDropUtils","___utils_FESRUtil","___utils_InsightsUtils","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","ButtonType","_finallyRethrows","finalizer","bind","LoadState","BasePanel","MenuItem","checkPanelExists","AppManager","DEFAULT_BG_COLOR","END_USER_COLORS","MYHOME_PAGE_ID","MYINSIGHT_SECTION_ID","SETTINGS_PANELS_KEYS","recycleId","DeviceType","fetchElementProperties","focusDraggedItem","addFESRId","addFESRSemanticStepName","FESR_EVENTS","createShowMoreActionButton","createShowMoreMenuItem","getAssociatedFullScreenMenuItem","sortMenuItems","tilesMenuItems","tilesContainerMenuItems","tilesActionButtons","tilesContainerActionButtons","DisplayFormat","favAppPanelName","appsConatinerlName","sortedMenuItems","REFRESH","ADD_APPS","EDIT_TILES","_showAddApps","last","StandardTileWidth","StandardWideTileWidth","Gap","TilesPanel","extend","metadata","library","properties","title","type","group","defaultValue","visibility","key","fullScreenName","defaultAggregation","aggregations","tiles","multiple","singularName","events","handleHidePanel","parameters","handleUnhidePanel","constructor","_constructor","id","settings","BasePanel.prototype.constructor.call","_insightsSectionTitle","_i18nBundle","getText","_addFromFavDialogId","getId","_headerVisible","init","_init","_this","BasePanel.prototype.init.call","_controlMap","Map","_oData","activateInsightsTiles","activateInsightsTilesOnPhone","activateInsightsTilesOnDesktop","_controlModel","appManagerInstance","getInstance","setProperty","refreshMenuItem","_createRefreshMenuItem","editTilesMenuItem","_createEditTilesMenuItem","menuItems","forEach","menuItem","addAggregation","_sortMenuItems","addTilesButton","_createAddTilesButton","ADD_TILES","actionButtons","actionButton","_createTilesFlexWrapper","getServiceAsync","VizInstantiationService","catch","error","Error","message","String","oEventBus","subscribe","sChannelId","sEventId","oData","Promise","resolve","createInsightSection","_addSectionViz","refreshData","_adjustLayout","_importdone","reject","_toggleTileActivity","_this2","toggleUserActions","event","show","getParameter","_temp2","_temp","_appSwitched","attachRouteMatched","warning","aSectionViz","sSectionId","reduce","promiseChain","oViz","isBookmark","addBookMark","addVisualization","vizId","stateData","status","publish","_showPlaceHolders","placeholderArray","Array","_calculatePlaceholderTileCount","fill","Loading","aInsightsApps","map","tileState","index","sizeBehavior","state","frameType","mode","visible","renderOnThemeChange","ariaRole","dropAreaOffset","setLayoutData","columns","_clearPlaceHolders","renderPanel","_renderPanel","_exit","_this3","_temp4","_result","_temp3","container","getParent","addFromFavAppMenuItem","_createAddFromFavMenuItem","_await$_this3$refresh","fireHandleHidePanel","_wasThrown","fireEvent","panelMenuItems","getAggregation","removeAllAggregation","_refreshData","refreshTiles","arguments","length","undefined","_this4","panelName","getMetadata","getName","fetchInsightApps","_this4$appManagerInst","_temp6","fireHandleUnhidePanel","isMobile","getDeviceType","Mobile","tilesMobileContainer","tilesContainer","sDefaultAggreName","getDefaultAggregationName","dynamicTiles","refresh","_getInsightsContainer","updatePanelsItemCount","bIsSmartBusinessTilePresent","some","oApp","isSmartBusinessTile","_temp5","load","name","_tilesWrapper","renderType","width","items","_createMobileFlexWrapper","_createWrapperFlexBox","setModel","_addContent","scrollStep","scrollStepByItem","gridLayout","scrollTime","showDividers","addStyleClass","_attachAggregationToContainer","_updateTilesActivity","isPhoneScreen","bActivateInsightsTiles","Boolean","getProperty","bindAggregation","path","factory","context","getObject","oVisualization","instantiateVisualization","visualization","minRows","getDisplayFormat","Standard","bindProperty","_setDropAreaRectFunction","addDragDropConfigTo","oEvent","_handleTilesDnd","tilesDropAreaOffset","Object","defineProperty","value","domRef","getDomRef","mDropRect","getBoundingClientRect","left","right","top","bottom","height","sInsertPosition","oDragItem","oDropItem","iDragItemIndex","indexOfItem","iDropItemIndex","_DragnDropTiles","_this5","oDisplacedItem","oItemMoved","splice","moveConfigs","pageId","sourceSectionIndex","persConfig","sectionIndex","sourceVisualizationIndex","visualizationIndex","targetSectionIndex","targetVisualizationIndex","moveVisualization","setTimeout","handleEditTiles","_handleEditTiles","parent","getSource","isA","_getLayout","openSettingsDialog","INSIGHTS_TILES","handleHideHeader","_handleHideHeader","_toggleHeaderActions","handleAddHeader","_handleAddHeader","_closeAddFromFavDialog","list","get","removeSelections","close","navigateToAppFinder","_navigateToAppFinder","groupId","navigationService","navigationObject","pageID","sectionID","navigate","target","shellHash","JSON","stringify","_getLegendColor","color","find","oColor","_handleAddFromFavApps","_this6","_getFavToAdd","appsToAdd","dialog","_generateAddFromFavAppsDialog","setVisible","_generateAddFromFavAppsListItems","open","_this7","fetchFavVizs","aFavApps","aDynamicApps","filter","oDynApp","isCount","aFilteredFavApps","iAppIndex","findIndex","oInsightApps","targetURL","_getSelectedInsights","getSelectedItems","destroyItems","listItems","app","content","alignItems","src","icon","backgroundColor","BGColor","size","text","subtitle","tooltip","data","item","addItem","setAddBtnEnabled","selectedItems","setEnabled","getAppFinderBtn","btnType","appFinderBtn","press","Default","PRESS","set","selectionChange","addButton","_addFromFavApps","enabled","illustrationSize","Small","illustrationType","AddDimensions","description","wrapping","justifyContent","Transparent","contentWidth","contentHeight","endButton","escapeHandler","buttons","_this8","setBusy","promise","oMovingConfig","insightsSectionIndex","displayFormatHint","supportedDisplayFormats","includes","_temp7","_calculateVisibleTileCount","insightsApps","layout","layoutDomRef","apps","count","isHeaderVisible","sectionNodeIndex","sectionDomRef","childNodes","domProperties","availableWidth","widthMap","StandardWide","nextTileWidth","Math","floor","isMobileDevice","visibleTileCount","isElementExpanded","_getCurrentExpandedElementName","slice","showFullScreenButton","toggleActionButton","toggleFullScreenElements","fullScreenButton","fullScreenText","getTitle","updateMenuItem","SHOW_MORE","updateActionButton","insightsContainer","getContainerMenuItems","_getContainerMenuItems","_containerMenuItems","containerRefresh","containerEditTiles","containerShowMore","containerAddFromFav","getContainerActionButtons","_getContainerActionButtons","_containerActionButtons","push","containerFullScreenActionButton","fesrId","_this9","_temp8","bShow","toggleMenuListItem"],"sources":["TilesPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport GridContainer from \"sap/f/GridContainer\";\nimport GridContainerItemLayoutData from \"sap/f/GridContainerItemLayoutData\";\nimport Button from \"sap/m/Button\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport Dialog from \"sap/m/Dialog\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport GenericTile from \"sap/m/GenericTile\";\nimport HBox from \"sap/m/HBox\";\nimport HeaderContainer from \"sap/m/HeaderContainer\";\nimport IllustratedMessage from \"sap/m/IllustratedMessage\";\nimport IllustratedMessageSize from \"sap/m/IllustratedMessageSize\";\nimport IllustratedMessageType from \"sap/m/IllustratedMessageType\";\nimport Label from \"sap/m/Label\";\nimport List from \"sap/m/List\";\nimport ObjectIdentifier from \"sap/m/ObjectIdentifier\";\nimport Title from \"sap/m/Title\";\nimport VBox from \"sap/m/VBox\";\nimport { ButtonType, LoadState } from \"sap/m/library\";\nimport Event from \"sap/ui/base/Event\";\nimport ManagedObject from \"sap/ui/base/ManagedObject\";\nimport Control from \"sap/ui/core/Control\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport Icon from \"sap/ui/core/Icon\";\nimport Lib from \"sap/ui/core/Lib\";\nimport { DropInfo$DropEventParameters } from \"sap/ui/core/dnd/DropInfo\";\nimport Context from \"sap/ui/model/Context\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport Config from \"sap/ushell/Config\";\nimport Container from \"sap/ushell/Container\";\nimport S4MyHome from \"sap/ushell/api/S4MyHome\";\nimport Navigation from \"sap/ushell/services/Navigation\";\nimport VisualizationInstantiation from \"sap/ushell/services/VisualizationInstantiation\";\nimport BaseContainer from \"./BaseContainer\";\nimport BasePanel from \"./BasePanel\";\nimport InsightsContainer from \"./InsightsContainer\";\nimport MenuItem from \"./MenuItem\";\nimport { $TilesPanelSettings } from \"./TilesPanel\";\nimport { ICustomVisualization, ISectionAndVisualization, IVisualization } from \"./interface/AppsInterface\";\nimport { checkPanelExists } from \"./utils/Accessibility\";\nimport AppManager from \"./utils/AppManager\";\nimport { DEFAULT_BG_COLOR, END_USER_COLORS, MYHOME_PAGE_ID, MYINSIGHT_SECTION_ID, SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\nimport { recycleId } from \"./utils/DataFormatUtils\";\nimport { DeviceType, fetchElementProperties } from \"./utils/Device\";\nimport { focusDraggedItem } from \"./utils/DragDropUtils\";\nimport { addFESRId, addFESRSemanticStepName, FESR_EVENTS } from \"./utils/FESRUtil\";\nimport { createShowMoreActionButton, createShowMoreMenuItem, getAssociatedFullScreenMenuItem, sortMenuItems } from \"./utils/InsightsUtils\";\n\nexport enum tilesMenuItems {\n\tREFRESH = \"tiles-refresh\",\n\tADD_APPS = \"tiles-addSmartApps\",\n\tEDIT_TILES = \"tiles-editTiles\"\n}\n\nexport enum tilesContainerMenuItems {\n\tREFRESH = \"container-tiles-refresh\",\n\tADD_APPS = \"container-tiles-addSmartApps\",\n\tEDIT_TILES = \"container-tiles-editTiles\",\n\tSHOW_MORE = \"tilesContainerFullScreenMenuItem\"\n}\n\nexport enum tilesActionButtons {\n\tADD_TILES = \"tiles-addTilesButton\"\n}\n\nexport enum tilesContainerActionButtons {\n\tADD_TILES = \"container-tiles-addTilesButton\",\n\tSHOW_MORE = \"tilesContanerFullScreenActionButton\"\n}\n\nexport enum DisplayFormat {\n\tStandard = \"standard\",\n\tStandardWide = \"standardWide\"\n}\n\nconst favAppPanelName: string = \"sap.cux.home.FavAppPanel\";\nconst appsConatinerlName: string = \"sap.cux.home.AppsContainer\";\n\nconst sortedMenuItems: (tilesMenuItems | string)[] = [\n\ttilesMenuItems.REFRESH,\n\ttilesMenuItems.ADD_APPS,\n\ttilesMenuItems.EDIT_TILES,\n\t\"showMore\",\n\t\"settings\"\n];\n\nconst _showAddApps = () => {\n\treturn (Config.last(\"/core/shell/enablePersonalization\") || Config.last(\"/core/catalog/enabled\")) as boolean;\n};\n\nconst StandardTileWidth = 176;\nconst StandardWideTileWidth = 368;\nconst Gap = 16;\n\n/**\n *\n * Tiles Panel class for managing and storing Insights Tiles.\n *\n * @extends sap.cux.home.BasePanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.122.0\n *\n * @internal\n * @experimental Since 1.122\n * @public\n *\n * @alias sap.cux.home.TilesPanel\n */\n\nexport default class TilesPanel extends BasePanel {\n\tconstructor(idOrSettings?: string | $TilesPanelSettings);\n\tconstructor(id?: string, settings?: $TilesPanelSettings);\n\t/**\n\t * Constructor for a new Tiles Panel.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $TilesPanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\tprivate _oData!: Record<string, unknown>;\n\tprivate readonly _insightsSectionTitle: string = this._i18nBundle.getText(\"insights\") as string;\n\tprivate readonly _addFromFavDialogId: string = `${this.getId()}-addFromFavDialog`;\n\tprivate appManagerInstance!: AppManager;\n\tprivate VizInstantiationService!: VisualizationInstantiation;\n\tprivate tilesContainer!: GridContainer;\n\tprivate tilesMobileContainer!: HeaderContainer;\n\tprivate _tilesWrapper!: VBox;\n\tprivate aInsightsApps!: ICustomVisualization[] | GenericTile[];\n\tprivate _controlModel!: JSONModel;\n\tpublic _controlMap!: Map<string, Control | Element | UI5Element>;\n\tprivate _containerMenuItems!: MenuItem[];\n\tprivate _containerActionButtons!: Button[];\n\tprivate oEventBus!: EventBus;\n\tprivate insightsContainer!: InsightsContainer;\n\tprivate _appSwitched!: boolean;\n\tprivate _headerVisible: boolean = false;\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * Title for the tiles panel\n\t\t\t */\n\t\t\ttitle: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Key for the tiles panel\n\t\t\t */\n\t\t\tkey: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * The name of the URL parameter used to expand the container into full-screen mode.\n\t\t\t */\n\t\t\tfullScreenName: { type: \"string\", group: \"Misc\", defaultValue: \"SI1\", visibility: \"hidden\" }\n\t\t},\n\t\tdefaultAggregation: \"tiles\",\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * Aggregation of tiles available within the tiles Panel\n\t\t\t */\n\t\t\ttiles: { type: \"sap.cux.home.App\", multiple: true, singularName: \"tile\", visibility: \"hidden\" }\n\t\t},\n\t\tevents: {\n\t\t\thandleHidePanel: {\n\t\t\t\tparameters: {}\n\t\t\t},\n\t\t\thandleUnhidePanel: {\n\t\t\t\tparameters: {}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Initializes the Tiles Panel.\n\t *\n\t * @private\n\t * @override\n\t */\n\tinit() {\n\t\tsuper.init();\n\t\tthis._controlMap = new Map();\n\t\t//Initialise Tiles Model\n\t\tthis._oData = {\n\t\t\ttiles: [] as ICustomVisualization[],\n\t\t\tactivateInsightsTiles: true,\n\t\t\tactivateInsightsTilesOnPhone: false,\n\t\t\tactivateInsightsTilesOnDesktop: false\n\t\t};\n\t\tthis._controlModel = new JSONModel(this._oData);\n\t\tthis.appManagerInstance = AppManager.getInstance();\n\t\tthis.setProperty(\"key\", \"tiles\");\n\t\tthis.setProperty(\"enableFullScreen\", true);\n\t\tconst refreshMenuItem = this._createRefreshMenuItem(tilesMenuItems.REFRESH, \"tilesRefresh\");\n\t\tconst editTilesMenuItem = this._createEditTilesMenuItem(tilesMenuItems.EDIT_TILES, \"manageTiles\");\n\n\t\tconst menuItems = [refreshMenuItem, editTilesMenuItem];\n\t\tmenuItems.forEach((menuItem) => this.addAggregation(\"menuItems\", menuItem));\n\t\tthis._sortMenuItems(sortedMenuItems);\n\n\t\tconst addTilesButton = this._createAddTilesButton(tilesActionButtons.ADD_TILES, \"addTiles\");\n\n\t\tconst actionButtons = [addTilesButton];\n\t\tactionButtons.forEach((actionButton) => this.addAggregation(\"actionButtons\", actionButton));\n\n\t\tthis._createTilesFlexWrapper();\n\t\tContainer.getServiceAsync<VisualizationInstantiation>(\"VisualizationInstantiation\")\n\t\t\t.then((VizInstantiationService) => {\n\t\t\t\tthis.VizInstantiationService = VizInstantiationService;\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tLog.error(error instanceof Error ? error.message : String(error));\n\t\t\t});\n\n\t\tthis.oEventBus = EventBus.getInstance();\n\t\t// Subscribe to the event\n\t\tthis.oEventBus.subscribe(\n\t\t\t\"importChannel\",\n\t\t\t\"tilesImport\",\n\t\t\tasync (sChannelId?: string, sEventId?: string, oData?) => {\n\t\t\t\tawait this.appManagerInstance.createInsightSection(this._i18nBundle.getText(\"insightsTiles\") as string);\n\t\t\t\tawait this._addSectionViz(oData as IVisualization[], MYINSIGHT_SECTION_ID);\n\t\t\t\tawait this.refreshData();\n\t\t\t\tthis._adjustLayout();\n\t\t\t\tthis._importdone();\n\t\t\t},\n\t\t\tthis\n\t\t);\n\n\t\t// Toggles the activity of tiles\n\t\tthis._toggleTileActivity();\n\t}\n\n\t/**\n\t * Toggles the activity of tiles on route change.\n\t *\n\t * @private\n\t * @returns {void}\n\t */\n\tprivate _toggleTileActivity(): void {\n\t\tconst toggleUserActions = async (event: Event<{ isMyHomeRoute: boolean }>) => {\n\t\t\tconst show = event.getParameter(\"isMyHomeRoute\");\n\t\t\tthis._controlModel.setProperty(\"/activateInsightsTiles\", show);\n\t\t\tif (show) {\n\t\t\t\tif (this._appSwitched) {\n\t\t\t\t\tawait this.refreshData(true);\n\t\t\t\t\tthis._appSwitched = false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._appSwitched = true;\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\tS4MyHome.attachRouteMatched({}, toggleUserActions, this);\n\t\t} catch (error) {\n\t\t\tLog.warning(error instanceof Error ? error.message : String(error));\n\t\t}\n\t}\n\n\t/**\n\t * Takes the visualizations and add it to the provided section id\n\t * @param {IVisualization[]} aSectionViz - array of visualizations\n\t * @param {string} sSectionId - section id where the visualizations to be added\n\t * @returns {any}\n\t */\n\tprivate _addSectionViz(aSectionViz: IVisualization[], sSectionId: string) {\n\t\treturn aSectionViz.reduce((promiseChain, oViz) => {\n\t\t\treturn promiseChain.then(() => {\n\t\t\t\tif (oViz.isBookmark) {\n\t\t\t\t\treturn this.appManagerInstance.addBookMark(oViz);\n\t\t\t\t} else {\n\t\t\t\t\treturn sSectionId\n\t\t\t\t\t\t? this.appManagerInstance.addVisualization(oViz.vizId, sSectionId)\n\t\t\t\t\t\t: this.appManagerInstance.addVisualization(oViz.vizId);\n\t\t\t\t}\n\t\t\t});\n\t\t}, Promise.resolve());\n\t}\n\n\t/**\n\t * Handles the completion of the import process.\n\t *\n\t * @private\n\t * @returns {void}\n\t */\n\tprivate _importdone() {\n\t\tconst stateData = { status: true };\n\t\tthis.oEventBus.publish(\"importChannel\", \"tilesImported\", stateData);\n\t}\n\n\t/**\n\t * Displays placeholder tiles while loading.\n\t *\n\t * @private\n\t * @returns {void}\n\t */\n\tprivate _showPlaceHolders() {\n\t\tconst placeholderArray = new Array(this._calculatePlaceholderTileCount()).fill(LoadState.Loading) as LoadState[];\n\t\tthis.aInsightsApps = placeholderArray.map((tileState: LoadState, index: number) => {\n\t\t\treturn new GenericTile(recycleId(`${this.getId()}--placeHolderTile--${index}`), {\n\t\t\t\tsizeBehavior: \"Responsive\",\n\t\t\t\tstate: tileState,\n\t\t\t\tframeType: \"OneByOne\",\n\t\t\t\tmode: \"IconMode\",\n\t\t\t\tvisible: true,\n\t\t\t\trenderOnThemeChange: true,\n\t\t\t\tariaRole: \"listitem\",\n\t\t\t\tdropAreaOffset: 8\n\t\t\t}).setLayoutData?.(\n\t\t\t\tnew GridContainerItemLayoutData(recycleId(`${this.getId()}--placeHolderTileLayoutData--${index}`), {\n\t\t\t\t\tcolumns: 2\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t\tthis._controlModel.setProperty(\"/tiles\", this.aInsightsApps);\n\t}\n\n\t/**\n\t * Clears the placeholder tiles.\n\t *\n\t * @private\n\t * @returns {void}\n\t */\n\tprivate _clearPlaceHolders() {\n\t\tthis._controlModel.setProperty(\"/tiles\", []);\n\t}\n\n\t/**\n\t * Renders the panel.\n\t *\n\t * @private\n\t * @returns {Promise<void>} A promise that resolves when the panel is rendered.\n\t */\n\tpublic async renderPanel(): Promise<void> {\n\t\ttry {\n\t\t\tconst container = this.getParent() as BaseContainer;\n\t\t\tif (checkPanelExists(container, appsConatinerlName, favAppPanelName)) {\n\t\t\t\tconst addFromFavAppMenuItem = this._createAddFromFavMenuItem(tilesMenuItems.ADD_APPS, \"smartAppsDialog\");\n\t\t\t\tthis.addAggregation(\"menuItems\", addFromFavAppMenuItem);\n\t\t\t\tthis._sortMenuItems(sortedMenuItems);\n\t\t\t}\n\t\t\treturn await this.refreshData();\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t\tthis.fireHandleHidePanel();\n\t\t} finally {\n\t\t\tthis.fireEvent(\"loaded\");\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Sorts the menu items based on the provided order.\n\t *\n\t * @private\n\t * @param {string[]} menuItems - The order of the menu items.\n\t */\n\tprivate _sortMenuItems(menuItems: string[]) {\n\t\tconst panelMenuItems = this.getAggregation(\"menuItems\") as MenuItem[];\n\t\tlet sortedMenuItems = sortMenuItems(menuItems, panelMenuItems);\n\t\tthis.removeAllAggregation(\"menuItems\");\n\t\tsortedMenuItems?.forEach((menuItem) => this.addAggregation(\"menuItems\", menuItem));\n\t}\n\n\t/**\n\t * Refreshes the data in the panel.\n\t *\n\t * @private\n\t * @param {boolean} [refreshTiles=false] - Whether to refresh the tiles.\n\t * @returns {Promise<void>} A promise that resolves when the data is refreshed.\n\t */\n\tpublic async refreshData(refreshTiles: boolean = false) {\n\t\tconst panelName = this.getMetadata().getName();\n\t\tthis.aInsightsApps = await this.appManagerInstance.fetchInsightApps(true, this._insightsSectionTitle);\n\t\tconst bIsSmartBusinessTilePresent = this.aInsightsApps.some((oApp) => oApp.isSmartBusinessTile);\n\t\tif (bIsSmartBusinessTilePresent) {\n\t\t\tawait Lib.load({ name: \"sap.cloudfnd.smartbusiness.lib.reusetiles\" });\n\t\t}\n\t\tthis._clearPlaceHolders();\n\t\tthis._controlModel.setProperty(\"/tiles\", this.aInsightsApps);\n\t\tif (this.aInsightsApps?.length) {\n\t\t\tthis.fireHandleUnhidePanel();\n\t\t\tif (refreshTiles) {\n\t\t\t\tconst isMobile = this.getDeviceType() === DeviceType.Mobile;\n\t\t\t\tconst container = isMobile ? this.tilesMobileContainer : this.tilesContainer;\n\t\t\t\tconst sDefaultAggreName = container.getMetadata().getDefaultAggregationName();\n\t\t\t\tconst dynamicTiles = (container.getAggregation(sDefaultAggreName) as ManagedObject[]) || [];\n\t\t\t\tdynamicTiles.forEach((tiles) => (tiles as ICustomVisualization).refresh?.());\n\t\t\t}\n\t\t\tthis._getInsightsContainer().updatePanelsItemCount(this.aInsightsApps.length, panelName);\n\t\t\tif (this._headerVisible) {\n\t\t\t\tthis.setProperty(\n\t\t\t\t\t\"title\",\n\t\t\t\t\t`${this._i18nBundle?.getText(\"insights\")} ${this._i18nBundle.getText(\"insightsTilesTitle\")} (${this.aInsightsApps.length})`\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.fireHandleHidePanel();\n\t\t}\n\t}\n\n\t/**\n\t * Generates the wrapper for the tiles container, if it doesn't already exist\n\t *\n\t * @private\n\t * @override\n\t * @returns {sap.m.VBox} The tiles Vbox wrapper.\n\t */\n\tprivate _createTilesFlexWrapper() {\n\t\tif (!this._tilesWrapper) {\n\t\t\tthis._tilesWrapper = new VBox(`${this.getId()}-tilesWrapper`, {\n\t\t\t\trenderType: \"Bare\",\n\t\t\t\twidth: \"100%\",\n\t\t\t\titems: [this._createMobileFlexWrapper(), this._createWrapperFlexBox()]\n\t\t\t});\n\t\t\tthis._showPlaceHolders();\n\t\t\tthis._tilesWrapper.setModel(this._controlModel);\n\t\t\tthis._addContent(this._tilesWrapper);\n\t\t}\n\t}\n\n\t/**\n\t * Generates wrapper for displaying tiles in mobile mode.\n\t * @private\n\t * @returns {sap.m.HeaderContainer} The generated tiles wrapper.\n\t */\n\n\tprivate _createMobileFlexWrapper(): HeaderContainer {\n\t\t// Check if the mobile container already exists\n\t\tif (!this.tilesMobileContainer) {\n\t\t\t// Create the HeaderContainer with required properties\n\t\t\tthis.tilesMobileContainer = new HeaderContainer(`${this.getId()}-insightsTilesMobileContainer`, {\n\t\t\t\tscrollStep: 0,\n\t\t\t\tscrollStepByItem: 1,\n\t\t\t\tgridLayout: true,\n\t\t\t\tscrollTime: 1000,\n\t\t\t\tshowDividers: false,\n\t\t\t\tvisible: \"{/isPhone}\"\n\t\t\t}).addStyleClass(\"sectionMarginTopTilesInsight sapMHeaderContainerAlign sapMHeaderContainerMarginBottom tilesBoxShadow\");\n\n\t\t\t// Attach aggregation to the container\n\t\t\tthis._attachAggregationToContainer(this.tilesMobileContainer);\n\t\t}\n\t\t// Return the existing or newly created container\n\t\treturn this.tilesMobileContainer;\n\t}\n\n\t/**\n\t * Generates app wrapper (GridContainer) for displaying tiles.\n\t * @private\n\t * @returns {sap.m.GridContainer} The generated tiles wrapper.\n\t */\n\n\tprivate _createWrapperFlexBox(): GridContainer {\n\t\t// Check if the tilesContainer already exists\n\t\tif (!this.tilesContainer) {\n\t\t\t// Create the GridContainer with required properties\n\t\t\tthis.tilesContainer = new GridContainer(`${this.getId()}-insightsTilesContainer`, {\n\t\t\t\tvisible: \"{= !${/isPhone}}\"\n\t\t\t}).addStyleClass(\"insightTiles sapUiSmallMarginTop sapUiSmallMarginBottom\");\n\t\t\t// Attach aggregation to the container\n\t\t\tthis._attachAggregationToContainer(this.tilesContainer);\n\t\t}\n\t\t// Return the existing or newly created container\n\t\treturn this.tilesContainer;\n\t}\n\n\t/**\n\t * Updates the activation flags for Insights Tiles based on the device type and viewport.\n\t *\n\t *\n\t * @private\n\t * @returns {void}\n\t */\n\tprivate _updateTilesActivity(): void {\n\t\t// Activate Insights Tiles based on container in viewport\n\t\tconst isPhoneScreen: boolean = this.getDeviceType() === DeviceType.Mobile;\n\t\t// Explicitly type the property being retrieved\n\t\tconst bActivateInsightsTiles: boolean = Boolean(this._controlModel.getProperty(\"/activateInsightsTiles\"));\n\t\tthis._controlModel.setProperty(\"/activateInsightsTilesOnPhone\", bActivateInsightsTiles && isPhoneScreen);\n\t\tthis._controlModel.setProperty(\"/activateInsightsTilesOnDesktop\", bActivateInsightsTiles && !isPhoneScreen);\n\t}\n\t/**\n\t * Attaches necessary aggregations and configurations to the provided container.\n\t *\n\t * @private\n\t * @param {GridContainer | HeaderContainer} tilesContainer - The container to which the aggregation and events are to be attached.\n\t * @returns {void}\n\t *\n\t */\n\tprivate _attachAggregationToContainer(tilesContainer: GridContainer | HeaderContainer) {\n\t\ttilesContainer.setModel(this._controlModel);\n\t\tconst sDefaultAggreName = tilesContainer.getMetadata().getDefaultAggregationName();\n\t\tconst isPhoneScreen = this.getDeviceType() === DeviceType.Mobile;\n\t\ttilesContainer.bindAggregation(sDefaultAggreName, {\n\t\t\tpath: \"/tiles\",\n\t\t\tfactory: (id: string, context: Context): ManagedObject => {\n\t\t\t\tconst oApp = context.getObject() as ICustomVisualization;\n\t\t\t\tif (oApp instanceof GenericTile) {\n\t\t\t\t\treturn oApp;\n\t\t\t\t}\n\t\t\t\tconst oVisualization = this.VizInstantiationService.instantiateVisualization(oApp.visualization) as ICustomVisualization;\n\t\t\t\toVisualization.setLayoutData?.(\n\t\t\t\t\tnew GridContainerItemLayoutData(`${this.getId()}-itemLayoutData-${id}`, {\n\t\t\t\t\t\tminRows: 2,\n\t\t\t\t\t\tcolumns: oVisualization.getDisplayFormat?.() === DisplayFormat.Standard ? 2 : 4\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\toVisualization?.bindProperty?.(\n\t\t\t\t\t\"active\",\n\t\t\t\t\tisPhoneScreen ? \"/activateInsightsTilesOnPhone\" : \"/activateInsightsTilesOnDesktop\"\n\t\t\t\t);\n\t\t\t\tthis._setDropAreaRectFunction(oVisualization as ManagedObject);\n\t\t\t\treturn oVisualization as ManagedObject;\n\t\t\t}\n\t\t});\n\t\tthis.addDragDropConfigTo(tilesContainer, (oEvent) => this._handleTilesDnd(oEvent));\n\t}\n\n\t/**\n\t * Sets the drop area rectangle function for the given visualization.\n\t *\n\t * @private\n\t * @param {ManagedObject} oVisualization - The visualization object to set the drop area rectangle function.\n\t */\n\tprivate _setDropAreaRectFunction(oVisualization: ManagedObject) {\n\t\tconst tilesDropAreaOffset = 8;\n\t\tObject.defineProperty(oVisualization, \"getDropAreaRect\", {\n\t\t\tvalue: function (this: Control) {\n\t\t\t\tconst domRef = this.getDomRef();\n\t\t\t\tif (!domRef) return null;\n\t\t\t\tconst mDropRect = domRef.getBoundingClientRect();\n\t\t\t\treturn {\n\t\t\t\t\tleft: mDropRect.left - tilesDropAreaOffset,\n\t\t\t\t\tright: mDropRect.right + tilesDropAreaOffset,\n\t\t\t\t\ttop: mDropRect.top,\n\t\t\t\t\tbottom: mDropRect.bottom,\n\t\t\t\t\twidth: mDropRect.width,\n\t\t\t\t\theight: mDropRect.height\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Handles the drag and drop of tiles.\n\t *\n\t * @private\n\t * @param {Event<DropInfo$DropEventParameters>} oEvent - The drop event parameters.\n\t */\n\tprivate _handleTilesDnd(oEvent: Event<DropInfo$DropEventParameters>) {\n\t\tconst sInsertPosition = oEvent.getParameter?.(\"dropPosition\"),\n\t\t\toDragItem = oEvent?.getParameter?.(\"draggedControl\") as Control,\n\t\t\toDropItem = oEvent.getParameter(\"droppedControl\") as Control,\n\t\t\tiDragItemIndex = (oDragItem.getParent() as FlexBox)?.indexOfItem(oDragItem);\n\t\tlet iDropItemIndex = (oDragItem.getParent() as FlexBox)?.indexOfItem(oDropItem);\n\n\t\tif (sInsertPosition === \"Before\" && iDragItemIndex === iDropItemIndex - 1) {\n\t\t\tiDropItemIndex--;\n\t\t} else if (sInsertPosition === \"After\" && iDragItemIndex === iDropItemIndex + 1) {\n\t\t\tiDropItemIndex++;\n\t\t}\n\n\t\tif (iDragItemIndex !== iDropItemIndex) {\n\t\t\tvoid this._DragnDropTiles(iDragItemIndex, iDropItemIndex, sInsertPosition as string);\n\t\t}\n\t}\n\n\t/**\n\t * Handles the drag and drop of tiles asynchronously.\n\t *\n\t * @private\n\t * @param {number} iDragItemIndex - The index of the dragged item.\n\t * @param {number} iDropItemIndex - The index of the dropped item.\n\t * @param {string} sInsertPosition - The position to insert the item.\n\t * @returns {Promise<void>} A promise that resolves when the drag and drop operation is complete.\n\t */\n\tprivate async _DragnDropTiles(iDragItemIndex: number, iDropItemIndex: number, sInsertPosition: string) {\n\t\tif (sInsertPosition === \"Before\" && iDragItemIndex < iDropItemIndex) {\n\t\t\tiDropItemIndex--;\n\t\t} else if (sInsertPosition === \"After\" && iDragItemIndex > iDropItemIndex) {\n\t\t\tiDropItemIndex++;\n\t\t}\n\t\tconst oDisplacedItem = this.aInsightsApps[iDropItemIndex] as ICustomVisualization,\n\t\t\toItemMoved = this.aInsightsApps.splice(iDragItemIndex, 1)[0] as ICustomVisualization;\n\t\tthis.aInsightsApps.splice(iDropItemIndex, 0, oItemMoved);\n\t\tconst moveConfigs = {\n\t\t\tpageId: MYHOME_PAGE_ID,\n\t\t\tsourceSectionIndex: oItemMoved.persConfig?.sectionIndex as number,\n\t\t\tsourceVisualizationIndex: oItemMoved.persConfig?.visualizationIndex as number,\n\t\t\ttargetSectionIndex: oDisplacedItem.persConfig?.sectionIndex as number,\n\t\t\ttargetVisualizationIndex: oDisplacedItem.persConfig?.visualizationIndex as number\n\t\t};\n\t\tthis._controlModel.setProperty(\"/tiles\", this.aInsightsApps);\n\t\tawait this.appManagerInstance.moveVisualization(moveConfigs);\n\t\tawait this.refreshData(true);\n\t\t// Ensures focus on tile after Panel refresh during DnD.\n\t\tsetTimeout(() => {\n\t\t\tfocusDraggedItem(this.tilesContainer, iDropItemIndex);\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Handles the edit tiles event.\n\t *\n\t * @param {Event} event - The event object.\n\t */\n\tprivate handleEditTiles(event: Event) {\n\t\t/* If called from Panel Header event.source() will return TilesPanel, if called from Insights Container event.source() will return InsightsContainer.\n\t\t_getLayout is available at Container Level*/\n\t\tlet parent: ManagedObject = event.getSource<TilesPanel>().getParent() || this;\n\t\tif (parent?.isA(\"sap.cux.home.TilesPanel\")) {\n\t\t\tparent = parent.getParent() as ManagedObject;\n\t\t}\n\t\t(parent as InsightsContainer)?._getLayout().openSettingsDialog(SETTINGS_PANELS_KEYS.INSIGHTS_TILES);\n\t}\n\n\t/**\n\t * Hides the header of the tiles panel.\n\t * @private\n\t */\n\tpublic handleHideHeader() {\n\t\tthis._headerVisible = false;\n\t\tthis.setProperty(\"title\", \"\");\n\t\tthis._toggleHeaderActions(false);\n\t}\n\n\t/**\n\t * Adds the header to the tiles panel.\n\t * @private\n\t */\n\tpublic handleAddHeader() {\n\t\tthis._headerVisible = true;\n\t\tthis.setProperty(\n\t\t\t\"title\",\n\t\t\t`${this._i18nBundle?.getText(\"insights\")} ${this._i18nBundle.getText(\"insightsTilesTitle\")} (${this.aInsightsApps.length})`\n\t\t);\n\t\tthis._toggleHeaderActions(true);\n\t}\n\n\t/**\n\t * Closes the \"Add from Favorites\" dialog.\n\t *\n\t * @private\n\t */\n\tprivate _closeAddFromFavDialog() {\n\t\tconst list = this._controlMap.get(`${this._addFromFavDialogId}-list`) as List;\n\t\tlist?.removeSelections();\n\t\t(this._controlMap.get(this._addFromFavDialogId) as Dialog)?.close();\n\t}\n\n\t/**\n\t * Navigates to the App Finder with optional group Id.\n\t * @async\n\t * @private\n\t * @param {string} [groupId] - Optional group Id\n\t */\n\tprivate async navigateToAppFinder(groupId?: string) {\n\t\tconst navigationService = await Container.getServiceAsync<Navigation>(\"Navigation\");\n\t\tconst navigationObject: { pageID: string; sectionID?: string } = {\n\t\t\tpageID: MYHOME_PAGE_ID,\n\t\t\tsectionID: MYINSIGHT_SECTION_ID\n\t\t};\n\t\tif (groupId) {\n\t\t\tnavigationObject.sectionID = groupId;\n\t\t}\n\t\tawait navigationService.navigate({\n\t\t\ttarget: {\n\t\t\t\tshellHash: `Shell-appfinder?&/catalog/${JSON.stringify(navigationObject)}`\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves the key of the legend color based on the provided color value.\n\t * @param {string} color - The color value for which to retrieve the legend color key.\n\t * @returns {string} The legend color key corresponding to the provided color value, or the default background color key if not found.\n\t * @private\n\t */\n\tprivate _getLegendColor(color: string) {\n\t\treturn END_USER_COLORS().find((oColor) => oColor.value === color) || DEFAULT_BG_COLOR();\n\t}\n\n\t/**\n\t * Handles the addition of tiles from favorite apps.\n\t * @returns {Promise<void>} A Promise that resolves when the operation is complete.\n\t * @private\n\t */\n\tprivate async _handleAddFromFavApps() {\n\t\tconst appsToAdd = await this._getFavToAdd();\n\t\tconst dialog = this._generateAddFromFavAppsDialog();\n\t\t(this._controlMap.get(`${this._addFromFavDialogId}-errorMessage`) as IllustratedMessage)?.setVisible(appsToAdd.length === 0);\n\t\tthis._generateAddFromFavAppsListItems(appsToAdd);\n\t\tdialog.open();\n\t}\n\n\t/**\n\t * Retrieves the favorite visualizations to be added.\n\t *\n\t * @private\n\t * @async\n\t * @returns {Promise<ISectionAndVisualization[]>} A promise that resolves to an array of favorite visualizations to be added.\n\t */\n\tprivate async _getFavToAdd(): Promise<ISectionAndVisualization[]> {\n\t\tconst aFavApps: ISectionAndVisualization[] = await this.appManagerInstance.fetchFavVizs(false, true);\n\t\tconst aDynamicApps = aFavApps.filter(function (oDynApp) {\n\t\t\treturn oDynApp.isCount || oDynApp.isSmartBusinessTile;\n\t\t});\n\n\t\tconst aFilteredFavApps = aDynamicApps.filter((oDynApp) => {\n\t\t\tconst iAppIndex = this.aInsightsApps.findIndex(function (oInsightApps) {\n\t\t\t\treturn (\n\t\t\t\t\t(!oDynApp.visualization?.isBookmark &&\n\t\t\t\t\t\t(oInsightApps as ICustomVisualization).visualization?.vizId === oDynApp.visualization?.vizId) ||\n\t\t\t\t\t(oDynApp.visualization?.isBookmark &&\n\t\t\t\t\t\t(oInsightApps as ICustomVisualization).visualization?.targetURL === oDynApp.visualization?.targetURL)\n\t\t\t\t);\n\t\t\t});\n\t\t\treturn iAppIndex === -1;\n\t\t});\n\n\t\treturn aFilteredFavApps;\n\t}\n\n\t/**\n\t * Retrieves the selected Apps from the dialog.\n\t * @returns {sap.m.ListItemBase[]} An array of selected Apps.\n\t * @private\n\t */\n\tprivate _getSelectedInsights() {\n\t\tconst list = this._controlMap.get(`${this._addFromFavDialogId}-list`) as List;\n\t\treturn list.getSelectedItems() || [];\n\t}\n\n\t/**\n\t * Generates list items for the \"Add from Favorites\" dialog.\n\t *\n\t * @private\n\t * @param {ISectionAndVisualization[]} appsToAdd - An array of favorite visualizations to be added.\n\t */\n\tprivate _generateAddFromFavAppsListItems(appsToAdd: ISectionAndVisualization[]) {\n\t\tconst id = this._addFromFavDialogId;\n\t\tconst list = this._controlMap.get(`${id}-list`) as List;\n\t\tif (appsToAdd.length) {\n\t\t\tlist.destroyItems();\n\t\t\tconst listItems = appsToAdd.map(\n\t\t\t\t(app, index) =>\n\t\t\t\t\tnew CustomListItem({\n\t\t\t\t\t\tid: `${id}-listItem-${index}`,\n\t\t\t\t\t\tcontent: [\n\t\t\t\t\t\t\tnew HBox({\n\t\t\t\t\t\t\t\tid: `${id}-listItem-${index}-content`,\n\t\t\t\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\tnew Icon({\n\t\t\t\t\t\t\t\t\t\tid: `${id}-listItem-${index}-content-icon`,\n\t\t\t\t\t\t\t\t\t\tsrc: app.icon,\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: this._getLegendColor(\n\t\t\t\t\t\t\t\t\t\t\ttypeof app.BGColor === \"object\" ? app.BGColor.key : (app.BGColor ?? \"\")\n\t\t\t\t\t\t\t\t\t\t).value,\n\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\twidth: \"2.25rem\",\n\t\t\t\t\t\t\t\t\t\theight: \"2.25rem\",\n\t\t\t\t\t\t\t\t\t\tsize: \"1.25rem\"\n\t\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiRoundedBorder sapUiTinyMargin\"),\n\t\t\t\t\t\t\t\t\tnew ObjectIdentifier({\n\t\t\t\t\t\t\t\t\t\tid: `${id}-listItem-${index}-content-identifier`,\n\t\t\t\t\t\t\t\t\t\ttitle: app.title,\n\t\t\t\t\t\t\t\t\t\ttext: app.subtitle,\n\t\t\t\t\t\t\t\t\t\ttooltip: app.title\n\t\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMargin\")\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t]\n\t\t\t\t\t})\n\t\t\t\t\t\t.addStyleClass(\"sapUiContentPadding\")\n\t\t\t\t\t\t.data(\"app\", app) as CustomListItem\n\t\t\t);\n\t\t\tlistItems.forEach((item) => list.addItem(item));\n\t\t}\n\t\tlist?.setVisible(appsToAdd.length !== 0);\n\t}\n\n\t/**\n\t * Generates the \"Add from Favorites\" dialog.\n\t *\n\t * @private\n\t * @returns {Dialog} The generated dialog.\n\t */\n\tprivate _generateAddFromFavAppsDialog(): Dialog {\n\t\tconst id = this._addFromFavDialogId;\n\t\tconst setAddBtnEnabled = () => {\n\t\t\tconst selectedItems = this._getSelectedInsights();\n\t\t\t(this._controlMap.get(`${id}-addBtn`) as Button).setEnabled(selectedItems.length > 0);\n\t\t};\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tconst getAppFinderBtn = (id: string, btnType?: ButtonType) => {\n\t\t\t\tconst appFinderBtn = new Button(id, {\n\t\t\t\t\ticon: \"sap-icon://action\",\n\t\t\t\t\ttext: this._i18nBundle.getText(\"appFinderBtn\"),\n\t\t\t\t\tpress: () => {\n\t\t\t\t\t\tthis._closeAddFromFavDialog();\n\t\t\t\t\t\tvoid this.navigateToAppFinder();\n\t\t\t\t\t},\n\t\t\t\t\tvisible: _showAddApps(),\n\t\t\t\t\ttype: btnType ?? ButtonType.Default\n\t\t\t\t});\n\t\t\t\taddFESRSemanticStepName(appFinderBtn, FESR_EVENTS.PRESS, \"tilesAppFinder\");\n\t\t\t\treturn appFinderBtn;\n\t\t\t};\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${id}-list`,\n\t\t\t\tnew List({\n\t\t\t\t\tid: `${id}-list`,\n\t\t\t\t\tmode: \"MultiSelect\",\n\t\t\t\t\tselectionChange: setAddBtnEnabled\n\t\t\t\t})\n\t\t\t);\n\t\t\tconst addButton = new Button({\n\t\t\t\tid: `${id}-addBtn`,\n\t\t\t\ttext: this._i18nBundle.getText(\"addBtn\"),\n\t\t\t\ttype: \"Emphasized\",\n\t\t\t\tpress: () => {\n\t\t\t\t\tvoid this._addFromFavApps();\n\t\t\t\t},\n\t\t\t\tenabled: false\n\t\t\t});\n\t\t\taddFESRSemanticStepName(addButton, FESR_EVENTS.PRESS, \"addSmartApps\");\n\t\t\tthis._controlMap.set(`${id}-addBtn`, addButton);\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${id}-errorMessage`,\n\t\t\t\tnew IllustratedMessage({\n\t\t\t\t\tid: `${id}-errorMessage`,\n\t\t\t\t\tillustrationSize: IllustratedMessageSize.Small,\n\t\t\t\t\tillustrationType: IllustratedMessageType.AddDimensions,\n\t\t\t\t\ttitle: this._i18nBundle.getText(\"noAppsTitle\"),\n\t\t\t\t\tdescription: this._i18nBundle.getText(\"tilesSectionNoDataDescription\"),\n\t\t\t\t\tvisible: true\n\t\t\t\t}).addStyleClass(\"sapUiLargeMarginTop\")\n\t\t\t);\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew Dialog(id, {\n\t\t\t\t\ttitle: this._i18nBundle.getText(\"addSmartApps\"),\n\t\t\t\t\tcontent: [\n\t\t\t\t\t\tnew Label({\n\t\t\t\t\t\t\tid: `${id}-label`,\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"suggTileDialogLabel\"),\n\t\t\t\t\t\t\twrapping: true\n\t\t\t\t\t\t}).addStyleClass(\"sapMTitleAlign sapUiTinyMarginTopBottom sapUiSmallMarginBeginEnd\"),\n\t\t\t\t\t\tnew HBox({\n\t\t\t\t\t\t\tid: `${id}-textContainer`,\n\t\t\t\t\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\tnew Title({\n\t\t\t\t\t\t\t\t\tid: `${id}-text`,\n\t\t\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"suggTileDialogTitle\")\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tgetAppFinderBtn(`${id}-addAppsBtn`, ButtonType.Transparent)\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginTop dialogHeader sapUiSmallMarginBeginEnd\"),\n\t\t\t\t\t\tthis._controlMap.get(`${id}-list`) as List,\n\t\t\t\t\t\tthis._controlMap.get(`${id}-errorMessage`) as IllustratedMessage\n\t\t\t\t\t],\n\t\t\t\t\tcontentWidth: \"42.75rem\",\n\t\t\t\t\tcontentHeight: \"32.5rem\",\n\t\t\t\t\tendButton: new Button({\n\t\t\t\t\t\tid: `${id}-addFromFavDialogCloseBtn`,\n\t\t\t\t\t\ttext: this._i18nBundle.getText(\"closeBtn\"),\n\t\t\t\t\t\tpress: this._closeAddFromFavDialog.bind(this)\n\t\t\t\t\t}),\n\t\t\t\t\tescapeHandler: this._closeAddFromFavDialog.bind(this),\n\t\t\t\t\tbuttons: [\n\t\t\t\t\t\tthis._controlMap.get(`${id}-addBtn`) as Button,\n\t\t\t\t\t\tnew Button({\n\t\t\t\t\t\t\tid: `${id}-cancelBtn`,\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"cancelBtn\"),\n\t\t\t\t\t\t\tpress: this._closeAddFromFavDialog.bind(this)\n\t\t\t\t\t\t})\n\t\t\t\t\t]\n\t\t\t\t}).addStyleClass(\"sapContrastPlus sapCuxAddFromInsightsDialog\")\n\t\t\t);\n\t\t}\n\t\tsetAddBtnEnabled();\n\t\treturn this._controlMap.get(id) as Dialog;\n\t}\n\n\t/**\n\t * Handles the addition of tiles from favorite apps.\n\t *\n\t * @private\n\t * @async\n\t * @returns {Promise<void>} A promise that resolves when the operation is complete.\n\t */\n\tprivate async _addFromFavApps() {\n\t\tconst dialog = this._controlMap.get(this._addFromFavDialogId) as Dialog;\n\t\tdialog.setBusy(true);\n\t\tconst selectedItems = this._getSelectedInsights();\n\t\tawait selectedItems.reduce(async (promise, oApp) => {\n\t\t\tawait promise;\n\t\t\tconst app = oApp.data(\"app\") as ISectionAndVisualization;\n\t\t\tconst oMovingConfig = {\n\t\t\t\tpageId: MYHOME_PAGE_ID,\n\t\t\t\tsourceSectionIndex: app.persConfig?.sectionIndex as number,\n\t\t\t\tsourceVisualizationIndex: app.persConfig?.visualizationIndex as number,\n\t\t\t\ttargetSectionIndex: this.appManagerInstance.insightsSectionIndex,\n\t\t\t\ttargetVisualizationIndex: -1\n\t\t\t};\n\t\t\tif (app.visualization?.displayFormatHint !== \"standard\" && app.visualization?.displayFormatHint !== \"standardWide\") {\n\t\t\t\tif (app.visualization?.supportedDisplayFormats?.includes(\"standard\")) {\n\t\t\t\t\tapp.visualization.displayFormatHint = \"standard\";\n\t\t\t\t} else if (app.visualization?.supportedDisplayFormats?.includes(\"standardWide\")) {\n\t\t\t\t\tapp.visualization.displayFormatHint = \"standardWide\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Add Selected App to Insights Section\n\t\t\tif (!app.visualization?.vizId) {\n\t\t\t\t(app.visualization as IVisualization).vizId = app.visualization?.targetURL ?? \"\";\n\t\t\t}\n\t\t\tif (app.visualization?.isBookmark === true) {\n\t\t\t\tawait this.appManagerInstance.addBookMark(app.visualization, oMovingConfig);\n\t\t\t} else {\n\t\t\t\tawait this.appManagerInstance.addVisualization(app.visualization?.vizId as string, MYINSIGHT_SECTION_ID);\n\t\t\t}\n\t\t}, Promise.resolve());\n\n\t\tawait this.refreshData();\n\t\tdialog.setBusy(false);\n\t\tdialog.close();\n\t}\n\n\t/**\n\t * Calculates the number of visible tiles that can fit within the available width of the parent container.\n\t *\n\t * @private\n\t * @param {ICustomVisualization[]} insightsApps - An array of custom visualizations to be displayed as tiles.\n\t * @returns {number} - The number of visible tiles.\n\t */\n\tprivate _calculateVisibleTileCount(insightsApps: ICustomVisualization[]): number {\n\t\tconst layout = this._getInsightsContainer()?._getLayout();\n\t\tconst layoutDomRef = layout?.getDomRef();\n\t\tconst apps = insightsApps || [];\n\t\tlet count = 0;\n\n\t\tif (layoutDomRef && apps.length) {\n\t\t\tconst isHeaderVisible = layout.getProperty(\"showHeader\") as boolean;\n\t\t\tconst sectionNodeIndex = isHeaderVisible ? 1 : 0;\n\t\t\tconst sectionDomRef = layoutDomRef.childNodes[sectionNodeIndex] as Element;\n\t\t\tconst domProperties = fetchElementProperties(sectionDomRef, [\"width\", \"padding-left\", \"padding-right\"]);\n\t\t\tlet availableWidth = domProperties.width - domProperties[\"padding-left\"] - domProperties[\"padding-right\"];\n\t\t\tconst widthMap = {} as Record<DisplayFormat, number>;\n\n\t\t\twidthMap[DisplayFormat.Standard] = StandardTileWidth + Gap;\n\t\t\twidthMap[DisplayFormat.StandardWide] = StandardWideTileWidth + Gap;\n\n\t\t\tlet nextTileWidth = widthMap[(apps[count].visualization?.displayFormatHint ?? DisplayFormat.Standard) as DisplayFormat];\n\t\t\tdo {\n\t\t\t\tavailableWidth -= nextTileWidth;\n\t\t\t\t++count;\n\t\t\t\tnextTileWidth = widthMap[(apps[count]?.visualization?.displayFormatHint ?? DisplayFormat.Standard) as DisplayFormat];\n\t\t\t} while (availableWidth > nextTileWidth);\n\t\t}\n\n\t\treturn count || 1;\n\t}\n\n\tprivate _calculatePlaceholderTileCount(): number {\n\t\tconst layoutDomRef = this._getInsightsContainer()?._getLayout()?.getDomRef();\n\t\tlet count = 0;\n\t\tif (layoutDomRef) {\n\t\t\tconst sectionDomRef = layoutDomRef.childNodes[0] as Element;\n\t\t\tconst domProperties = fetchElementProperties(sectionDomRef, [\"width\", \"padding-left\", \"padding-right\"]);\n\t\t\tlet availableWidth = domProperties.width - domProperties[\"padding-left\"] - domProperties[\"padding-right\"];\n\t\t\tconst width = StandardTileWidth + Gap;\n\n\t\t\tcount = Math.floor(availableWidth / width);\n\t\t}\n\n\t\treturn count || 1;\n\t}\n\n\t/**\n\t * Adjusts the layout of the tiles panel based on the current layout and device type.\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic _adjustLayout() {\n\t\tconst layout = this._getInsightsContainer()?._getLayout();\n\t\tconst isMobileDevice = this.getDeviceType() === DeviceType.Mobile;\n\n\t\tif (layout) {\n\t\t\tconst visibleTileCount = isMobileDevice\n\t\t\t\t? this.aInsightsApps?.length\n\t\t\t\t: this._calculateVisibleTileCount(this.aInsightsApps as ICustomVisualization[]);\n\t\t\tconst isElementExpanded = layout._getCurrentExpandedElementName() === this.getProperty(\"fullScreenName\");\n\t\t\tthis._controlModel.setProperty(\n\t\t\t\t\"/tiles\",\n\t\t\t\tisElementExpanded ? this.aInsightsApps : this.aInsightsApps?.slice(0, visibleTileCount)\n\t\t\t);\n\t\t\tthis._controlModel.setProperty(\"/isPhone\", isMobileDevice);\n\t\t\tthis._updateTilesActivity();\n\t\t\t//Show/Hide Full Screen Button if panel header is visible otherwise update visibility of container Full Screen Button\n\t\t\tconst showFullScreenButton = isElementExpanded || this.aInsightsApps.length > visibleTileCount;\n\t\t\tif (this._headerVisible) {\n\t\t\t\tif (!isMobileDevice) {\n\t\t\t\t\t(this.getAggregation(\"actionButtons\") as Button[])?.forEach((actionButton) => {\n\t\t\t\t\t\tif (actionButton.getId().includes(tilesActionButtons.ADD_TILES)) {\n\t\t\t\t\t\t\tthis._getInsightsContainer().toggleActionButton(actionButton, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis._getInsightsContainer()?.toggleFullScreenElements(this, showFullScreenButton);\n\t\t\t} else {\n\t\t\t\tconst fullScreenButton = getAssociatedFullScreenMenuItem(this);\n\t\t\t\tconst fullScreenText = fullScreenButton?.getTitle() ?? \"\";\n\t\t\t\tthis._getInsightsContainer()?.updateMenuItem(\n\t\t\t\t\tthis._controlMap.get(`${this.getId()}-${tilesContainerMenuItems.SHOW_MORE}`) as MenuItem,\n\t\t\t\t\tshowFullScreenButton,\n\t\t\t\t\tfullScreenText\n\t\t\t\t);\n\t\t\t\tthis._getInsightsContainer()?.updateActionButton(\n\t\t\t\t\tthis._controlMap.get(`${this.getId()}-${tilesContainerActionButtons.SHOW_MORE}`) as Button,\n\t\t\t\t\tshowFullScreenButton,\n\t\t\t\t\tfullScreenText\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the InsightsContainer instance associated with this TilesPanel.\n\t *\n\t * @private\n\t * @returns {InsightsContainer} The InsightsContainer instance.\n\t */\n\tprivate _getInsightsContainer(): InsightsContainer {\n\t\tif (!this.insightsContainer) {\n\t\t\tthis.insightsContainer = this.getParent() as InsightsContainer;\n\t\t}\n\t\treturn this.insightsContainer;\n\t}\n\n\t/**\n\t * Retrieves the menu items for the container.\n\t *\n\t * @private\n\t * @returns {MenuItem[]} An array of MenuItem instances.\n\t */\n\tpublic getContainerMenuItems(): MenuItem[] {\n\t\tif (!this._containerMenuItems) {\n\t\t\tconst containerRefresh = this._createRefreshMenuItem(tilesContainerMenuItems.REFRESH, \"containerTilesRefresh\");\n\t\t\tconst containerEditTiles = this._createEditTilesMenuItem(tilesContainerMenuItems.EDIT_TILES, \"containerManageTiles\");\n\t\t\tconst containerShowMore = createShowMoreMenuItem(this, tilesContainerMenuItems.SHOW_MORE, \"containerTilesShowMore\");\n\t\t\tconst container = this.getParent() as BaseContainer;\n\t\t\tthis._controlMap.set(`${this.getId()}-${tilesContainerMenuItems.SHOW_MORE}`, containerShowMore);\n\t\t\tthis._containerMenuItems = [containerRefresh, containerEditTiles, containerShowMore];\n\t\t\tif (checkPanelExists(container, appsConatinerlName, favAppPanelName)) {\n\t\t\t\tconst containerAddFromFav = this._createAddFromFavMenuItem(tilesContainerMenuItems.ADD_APPS, \"containerSmartAppsDialog\");\n\t\t\t\tthis._containerMenuItems.splice(1, 0, containerAddFromFav);\n\t\t\t}\n\t\t}\n\t\treturn this._containerMenuItems;\n\t}\n\n\t/**\n\t * Retrieves the action buttons for the container.\n\t *\n\t * @private\n\t * @returns {Button[]} An array of Button instances.\n\t */\n\tpublic getContainerActionButtons(): Button[] {\n\t\tif (!this._containerActionButtons) {\n\t\t\tthis._containerActionButtons = [];\n\t\t\tthis._containerActionButtons.push(\n\t\t\t\tthis._createAddTilesButton(tilesContainerActionButtons.ADD_TILES, \"containerSmartAppsDialog\")\n\t\t\t);\n\n\t\t\tconst containerFullScreenActionButton = createShowMoreActionButton(\n\t\t\t\tthis,\n\t\t\t\ttilesContainerActionButtons.SHOW_MORE,\n\t\t\t\t\"containerTilesShowMore\"\n\t\t\t);\n\t\t\tif (containerFullScreenActionButton) {\n\t\t\t\tthis._controlMap.set(`${this.getId()}-${tilesContainerActionButtons.SHOW_MORE}`, containerFullScreenActionButton);\n\t\t\t\tthis._containerActionButtons.push(containerFullScreenActionButton);\n\t\t\t}\n\t\t}\n\t\treturn this._containerActionButtons;\n\t}\n\n\t/**\n\t * Creates a refresh menu item.\n\t *\n\t * @private\n\t * @param {string} id - The ID of the menu item.\n\t * @param {string} [fesrId] - The FESR ID for the menu item.\n\t * @returns {MenuItem} The created MenuItem instance.\n\t */\n\tprivate _createRefreshMenuItem(id: string, fesrId?: string): MenuItem {\n\t\tconst menuItem = new MenuItem(`${this.getId()}-${id}`, {\n\t\t\ttitle: this._i18nBundle.getText(\"refresh\"),\n\t\t\ticon: \"sap-icon://refresh\",\n\t\t\tvisible: false,\n\t\t\tpress: () => void this.refreshData(true)\n\t\t});\n\t\tthis._controlMap.set(`${this.getId()}-${id}`, menuItem);\n\t\tif (fesrId) {\n\t\t\taddFESRId(menuItem, fesrId);\n\t\t}\n\n\t\treturn menuItem;\n\t}\n\n\t/**\n\t * Creates an \"Add from Favorites\" menu item.\n\t *\n\t * @private\n\t * @param {string} id - The ID of the menu item.\n\t * @param {string} [fesrId] - The FESR ID for the menu item.\n\t * @returns {MenuItem} The created MenuItem instance.\n\t */\n\tprivate _createAddFromFavMenuItem(id: string, fesrId?: string): MenuItem {\n\t\tif (!this._controlMap.get(`${this.getId()}-${id}`)) {\n\t\t\tconst menuItem = new MenuItem(`${this.getId()}-${id}`, {\n\t\t\t\ttitle: this._i18nBundle.getText(\"addSmartApps\"),\n\t\t\t\ticon: \"sap-icon://duplicate\",\n\t\t\t\tvisible: false,\n\t\t\t\tpress: () => void this._handleAddFromFavApps()\n\t\t\t});\n\t\t\tthis._controlMap.set(`${this.getId()}-${id}`, menuItem);\n\t\t\tif (fesrId) {\n\t\t\t\taddFESRId(menuItem, fesrId);\n\t\t\t}\n\t\t}\n\t\treturn this._controlMap.get(`${this.getId()}-${id}`) as MenuItem;\n\t}\n\n\t/**\n\t * Creates an \"Edit Tiles\" menu item.\n\t *\n\t * @private\n\t * @param {string} id - The ID of the menu item.\n\t * @param {string} [fesrId] - The FESR ID for the menu item.\n\t * @returns {MenuItem} The created MenuItem instance.\n\t */\n\tprivate _createEditTilesMenuItem(id: string, fesrId?: string): MenuItem {\n\t\tconst menuItem = new MenuItem(`${this.getId()}-${id}`, {\n\t\t\ttitle: this._i18nBundle.getText(\"editLinkTiles\"),\n\t\t\ticon: \"sap-icon://edit\",\n\t\t\tvisible: false,\n\t\t\tpress: (event: Event) => this.handleEditTiles(event)\n\t\t});\n\t\tthis._controlMap.set(`${this.getId()}-${id}`, menuItem);\n\t\tif (fesrId) {\n\t\t\taddFESRId(menuItem, fesrId);\n\t\t}\n\n\t\treturn menuItem;\n\t}\n\n\t/**\n\t * Creates an \"Add Tiles\" button.\n\t *\n\t * @private\n\t * @param {string} id - The ID of the button.\n\t * @param {string} [fesrId] - The FESR ID for the button.\n\t * @returns {Button} The created Button instance.\n\t */\n\tprivate _createAddTilesButton(id: string, fesrId?: string): Button {\n\t\tconst actionButton = new Button(`${this.getId()}-${id}`, {\n\t\t\ttext: this._i18nBundle.getText(\"appFinderLink\"),\n\t\t\tpress: async () => {\n\t\t\t\tconst container = this.getParent() as BaseContainer;\n\t\t\t\tif (checkPanelExists(container, appsConatinerlName, favAppPanelName)) {\n\t\t\t\t\t// Favorite App Panel is visible, proceed as usual\n\t\t\t\t\tvoid this._handleAddFromFavApps();\n\t\t\t\t} else {\n\t\t\t\t\t// Favorite App Panel is NOT visible, navigate to App Finder\n\t\t\t\t\tawait this.navigateToAppFinder();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis._controlMap.set(`${this.getId()}-${id}`, actionButton);\n\t\tif (fesrId) {\n\t\t\taddFESRId(actionButton, fesrId);\n\t\t}\n\n\t\treturn actionButton;\n\t}\n\n\t/**\n\t * Toggles the visibility of the header actions.\n\t *\n\t * @param {boolean} bShow - Whether to show or hide the header actions.\n\t * @private\n\t */\n\tprivate _toggleHeaderActions(bShow: boolean) {\n\t\t(this.getAggregation(\"menuItems\") as MenuItem[])?.forEach((menuItem) => {\n\t\t\tthis._getInsightsContainer()?.toggleMenuListItem(menuItem, bShow);\n\t\t});\n\t\t(this.getAggregation(\"actionButtons\") as Button[])?.forEach((actionButton) =>\n\t\t\tthis._getInsightsContainer()?.toggleActionButton(actionButton, bShow)\n\t\t);\n\t}\n}\n"],"mappings":"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","ignoreList":[]}