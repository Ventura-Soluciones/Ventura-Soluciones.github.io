{"version":3,"file":"BaseContainer-dbg-dbg.js","names":["sap","ui","define","Button","FlexBox","HBox","IconTabBar","IconTabFilter","List","Popover","StandardListItem","Title","sap_m_library","Control","CustomData","UI5Element","HTML","Lib","__BaseContainerRenderer","__BasePanel","__MenuItem","___library","___utils_Accessibility","___utils_Device","___utils_FESRUtil","___utils_PerformanceUtils","_interopRequireDefault","obj","__esModule","default","BackgroundDesign","ButtonType","PlacementType","BaseContainerRenderer","BasePanel","MenuItem","OrientationType","getInvisibleText","calculateDeviceType","DeviceType","addFESRId","addFESRSemanticStepName","FESR_EVENTS","getFESRId","recordElementLoadEnd","recordElementLoadStart","BaseContainer","extend","renderer","metadata","library","properties","title","type","group","defaultValue","visibility","orientation","SideBySide","selectedKey","width","height","blocked","busy","busyIndicatorDelay","busyIndicatorSize","fieldGroupIds","visible","enableSettings","enableFullScreen","fullScreenName","enableLazyLoad","loaded","defaultAggregation","aggregations","content","singularName","multiple","actionButtons","menuItems","associations","layout","fullScreenButton","fullScreenMenuItem","events","onExpand","designtime","adjustLayout","_adjustLayout","load","_load","constructor","_constructor","id","settings","Control.prototype.constructor.call","_exemptedActions","init","_init","_controlMap","Map","_commonHeaderElementStates","_i18nBundle","getResourceBundleFor","_createHeader","containerCustomSettings","getId","key","value","addCustomData","getCustomSettings","_getCustomSettings","data","addCustomSetting","_addCustomSetting","control","controlId","isPanel","isA","hasContainerTitle","getProperty","trim","length","get","set","renderType","addStyleClass","justifyContent","items","alignItems","addDependent","setTitleStyle","_getHeader","_getInnerControl","_iconTabBar","_wrapper","_onPanelSelect","event","setProperty","getParameter","_updateContainerHeader","_setPanelCount","panel","count","_getIconTabFilter","setCount","_addToPanel","addContent","addItem","iconTabFilter","text","tooltip","writeToDom","SELECT","_getContent","forEach","onBeforeRendering","_onBeforeRendering","defaultKey","getContent","_createInnerControl","_addAllPanelContent","_loadContent","_markPerformanceMetrics","onAfterRendering","_onAfterRendering","_attachResizeHandler","_observeContainer","getDomRef","_resizeObserver","disconnect","ResizeObserver","entries","_resizeTimeout","clearTimeout","window","setTimeout","getVisible","_setDeviceType","observe","_detachResizeHandler","target","_containerObserver","IntersectionObserver","entry","isIntersecting","rootMargin","threshold","Horizontal","Vertical","setDirection","expandable","backgroundDesign","Transparent","headerMode","headerBackgroundDesign","select","isSideBySideLayout","isContainer","targetControl","removeAllItems","_updateHeader","headerTitle","setText","setVisible","_getLayout","_addLayoutHeaderElements","currentControl","_getSelectedPanel","_filterVisibleHeaderElements","getMenuItems","_addMenuItems","getAggregation","actionButton","_getHeaderButton","attachHeaderElements","elements","property","aggregation","headerElement","_getFullScreenMenuItem","_getHomeSettingsMenuItem","_getFullScreenButton","_ref","currentPropertyValue","previousPropertyValue","addAggregation","removeAggregation","setFullScreenElementRelations","isFullScreenEnabled","panels","_setupFullScreenElements","setupFullScreenElement","registerFullScreenElement","deregisterFullScreenElement","updateFullScreenElement","index","indexOfItem","_setFullScreenElementRelations","relation","targetAggregation","setAssociation","removeAssociation","menuItem","getText","icon","press","openSettingsDialog","toggleFullScreen","push","find","setSelectedKey","_getPanelContentWrapper","direction","_updatePanelHeader","header","isTitleVisible","toggleStyleClass","getActionButtons","arguments","undefined","filter","element","_setTitle","list","itemPress","getSource","getParent","close","invisiblePopoverText","menuPopover","placement","VerticalPreferredBottom","showHeader","ariaLabelledBy","menuButton","openBy","item","_getMenuListItem","headerButton","firePress","PRESS","button","setTooltip","getTooltip","setIcon","getIcon","setEnabled","getEnabled","getElementById","getAssociation","getTitle","menuListItem","setTitle","toggleMenuListItem","_toggleMenuListItem","show","toggleActionButton","_toggleActionButton","actionButtonControl","removeContent","_removeContent","getWidth","_getWidth","toggleActionButtons","_toggleActionButtons","visibilityChanged","currentVisibility","includes","toggleFullScreenElements","_toggleFullScreenElements","fullScreenMenuButton","isPhone","getDeviceType","Mobile","parent","elementVisibilityChanged","fullScreenElement","elementKey","getKey","parentLayout","parentNode","clientWidth","deviceType","_deviceType","_getDeviceType","elementName","getMetadata","getName","attachEventOnce","getGenericPlaceholder","_getGenericPlaceholder","getGenericPlaceholderContent","_getGenericPlaceholderContent"],"sources":["BaseContainer.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport Button from \"sap/m/Button\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport HBox from \"sap/m/HBox\";\nimport IconTabBar, { IconTabBar$SelectEvent } from \"sap/m/IconTabBar\";\nimport IconTabFilter from \"sap/m/IconTabFilter\";\nimport List from \"sap/m/List\";\nimport Popover from \"sap/m/Popover\";\nimport StandardListItem from \"sap/m/StandardListItem\";\nimport Title from \"sap/m/Title\";\nimport { BackgroundDesign, ButtonType, PlacementType } from \"sap/m/library\";\nimport Event from \"sap/ui/base/Event\";\nimport Control from \"sap/ui/core/Control\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport HTML from \"sap/ui/core/HTML\";\nimport Lib from \"sap/ui/core/Lib\";\nimport { CSSSize } from \"sap/ui/core/library\";\nimport { $BaseContainerSettings } from \"./BaseContainer\";\nimport BaseContainerRenderer from \"./BaseContainerRenderer\";\nimport BaseLayout from \"./BaseLayout\";\nimport BasePanel from \"./BasePanel\";\nimport MenuItem from \"./MenuItem\";\nimport { OrientationType } from \"./library\";\nimport { getInvisibleText } from \"./utils/Accessibility\";\nimport { calculateDeviceType, DeviceType } from \"./utils/Device\";\nimport { addFESRId, addFESRSemanticStepName, FESR_EVENTS, getFESRId } from \"./utils/FESRUtil\";\nimport { recordElementLoadEnd, recordElementLoadStart, UIElements } from \"./utils/PerformanceUtils\";\n\ntype FullScreenElementRelation = {\n\tisFullScreenEnabled: boolean;\n\tcontrol: BaseContainer | BasePanel;\n\taggregation: string;\n\theaderElement: MenuItem | Button;\n};\n\n/**\n *\n * Abstract base class for all container controls in the Home Page Layout.\n *\n * @extends sap.ui.core.Control\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @abstract\n * @internal\n * @experimental Since 1.121\n * @public\n *\n * @ui5-metamodel\n * @alias sap.cux.home.BaseContainer\n */\nexport default abstract class BaseContainer extends Control {\n\tprotected _i18nBundle!: ResourceBundle;\n\tprivate _controlMap!: Map<string, Control | UI5Element>;\n\tprivate _wrapper!: FlexBox;\n\tprivate _iconTabBar!: IconTabBar;\n\tprivate _commonHeaderElementStates!: Map<string, boolean>;\n\tprivate _resizeObserver!: ResizeObserver;\n\tprivate _deviceType!: DeviceType;\n\tprivate _containerObserver!: IntersectionObserver;\n\tprivate _exemptedActions: string[] = [];\n\tpublic adjustLayout() {}\n\tprotected load() {}\n\tprivate _resizeTimeout!: number;\n\n\tconstructor(id?: string | $BaseContainerSettings);\n\tconstructor(id?: string, settings?: $BaseContainerSettings);\n\t/**\n\t * Constructor for a new Base Container.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $BaseContainerSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * Title of the container.\n\t\t\t */\n\t\t\ttitle: { type: \"string\", group: \"Data\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Orientation of the container.\n\t\t\t */\n\t\t\torientation: {\n\t\t\t\ttype: \"sap.cux.home.OrientationType\",\n\t\t\t\tgroup: \"Data\",\n\t\t\t\tdefaultValue: OrientationType.SideBySide,\n\t\t\t\tvisibility: \"hidden\"\n\t\t\t},\n\t\t\t/**\n\t\t\t * Key of the selected panel of the container.\n\t\t\t */\n\t\t\tselectedKey: { type: \"string\", group: \"Data\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Width to be set for the container.\n\t\t\t * @public\n\t\t\t */\n\t\t\twidth: { type: \"sap.ui.core.CSSSize\", group: \"Appearance\", defaultValue: \"100%\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * Height to be set for the container.\n\t\t\t * @public\n\t\t\t */\n\t\t\theight: { type: \"sap.ui.core.CSSSize\", group: \"Appearance\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * Whether the control is currently in blocked state.\n\t\t\t */\n\t\t\tblocked: { type: \"boolean\", group: \"Appearance\", defaultValue: false, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Whether the layout is currently in busy state.\n\t\t\t */\n\t\t\tbusy: { type: \"boolean\", group: \"Appearance\", defaultValue: false, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * The delay in milliseconds, after which the busy indicator will show up for this control.\n\t\t\t */\n\t\t\tbusyIndicatorDelay: { type: \"int\", defaultValue: 1000, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * The size of the BusyIndicator.\n\t\t\t */\n\t\t\tbusyIndicatorSize: { type: \"sap.ui.core.BusyIndicatorSize\", defaultValue: \"Medium\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * The IDs of a logical field group that this control belongs to.\n\t\t\t */\n\t\t\tfieldGroupIds: { type: \"string[]\", defaultValue: [], visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * The visible property of the container.\n\t\t\t */\n\t\t\tvisible: { type: \"boolean\", group: \"Appearance\", defaultValue: true, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Indicates whether home settings are enabled for this control.\n\t\t\t */\n\t\t\tenableSettings: { type: \"boolean\", group: \"Misc\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Indicates whether full screen is enabled for this control.\n\t\t\t */\n\t\t\tenableFullScreen: { type: \"boolean\", group: \"Misc\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * The name of the URL parameter used to expand the container into full-screen mode.\n\t\t\t * This property specifies the parameter key expected in the URL query string\n\t\t\t * to identify the container to be expanded.\n\t\t\t */\n\t\t\tfullScreenName: { type: \"string\", group: \"Misc\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Indicates whether lazy loading is enabled for this control.\n\t\t\t */\n\t\t\tenableLazyLoad: { type: \"boolean\", group: \"Misc\", defaultValue: true, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Indicates if the container is loaded.\n\t\t\t */\n\t\t\tloaded: { type: \"boolean\", group: \"Appearance\", defaultValue: false, visibility: \"hidden\" }\n\t\t},\n\t\tdefaultAggregation: \"content\",\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * The container content aggregation which should be of type BasePanel.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\tcontent: { type: \"sap.cux.home.BasePanel\", singularName: \"content\", multiple: true, visibility: \"public\" },\n\t\t\t/**\n\t\t\t * This aggregation contains the actions that should be displayed within the container.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\tactionButtons: { type: \"sap.m.Button\", multiple: true, singularName: \"actionButton\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * This aggregation holds the items that should be shown within the dropdown menu of the container.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\tmenuItems: { type: \"sap.cux.home.MenuItem\", multiple: true, singularName: \"menuItem\", visibility: \"public\" }\n\t\t},\n\t\tassociations: {\n\t\t\tlayout: { type: \"sap.cux.home.BaseLayout\", multiple: false, singularName: \"layout\", visibility: \"hidden\" },\n\t\t\tfullScreenButton: { type: \"sap.m.Button\", multiple: false, singularName: \"fullScreenButton\", visibility: \"hidden\" },\n\t\t\tfullScreenMenuItem: { type: \"sap.cux.home.MenuItem\", multiple: false, singularName: \"fullScreenMenuItem\", visibility: \"hidden\" }\n\t\t},\n\t\tevents: {\n\t\t\t/**\n\t\t\t * Event is fired before the container is expanded.\n\t\t\t */\n\t\t\tonExpand: {}\n\t\t},\n\t\tdesigntime: true\n\t};\n\n\tstatic renderer: typeof BaseContainerRenderer = BaseContainerRenderer;\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tthis._controlMap = new Map();\n\t\tthis._commonHeaderElementStates = new Map();\n\t\tthis._i18nBundle = Lib.getResourceBundleFor(\"sap.cux.home.i18n\") as ResourceBundle;\n\t\tthis._createHeader(this);\n\n\t\t//create custom settings data\n\t\tconst containerCustomSettings = new CustomData(`${this.getId()}-custom-settings`, {\n\t\t\tkey: \"custom-settings\",\n\t\t\tvalue: {}\n\t\t});\n\t\tthis.addCustomData(containerCustomSettings);\n\t}\n\n\t/**\n\t * Returns the custom settings data associated with the container\n\t * @private\n\t */\n\tpublic getCustomSettings() {\n\t\treturn (this.data(\"custom-settings\") || {}) as Record<string, string>;\n\t}\n\n\t/**\n\t * Adds the Custom setting data for the Section\n\t * @private\n\t * @param {string} key - The key of the Custom setting data\n\t * @param {string} value - The value to set for the specified key\n\t */\n\tprotected addCustomSetting(key: string, value: string) {\n\t\t(this.data(\"custom-settings\") as Record<string, string>)[key] = value;\n\t}\n\n\t/**\n\t * Creates and returns header for both container as well as panels\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} control - can be a container or a panel\n\t * @returns {HBox} header for the given container or panel\n\t */\n\tprivate _createHeader(control: BaseContainer | BasePanel): HBox {\n\t\tconst controlId = control.getId();\n\t\tconst id = `${controlId}-header`;\n\t\tconst isPanel = control.isA(\"sap.cux.home.BasePanel\");\n\t\tconst hasContainerTitle = (this.getProperty(\"title\") as string)?.trim().length > 0;\n\n\t\tif (!this._controlMap.get(id)) {\n\t\t\t//create header elements\n\t\t\tthis._controlMap.set(`${controlId}-header-title`, new Title(`${controlId}-title`));\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${controlId}-header-contentLeft`,\n\t\t\t\tnew HBox(`${controlId}-contentLeft`, { renderType: \"Bare\" }).addStyleClass(\"sapCuxSectionContentArea\")\n\t\t\t);\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${controlId}-header-contentRight`,\n\t\t\t\tnew HBox(`${controlId}-contentRight`, { renderType: \"Bare\" }).addStyleClass(\"sapCuxSectionContentArea\")\n\t\t\t);\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${controlId}-header-content`,\n\t\t\t\tnew HBox(`${controlId}-header-content`, {\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\t\t\trenderType: \"Bare\",\n\t\t\t\t\titems: [\n\t\t\t\t\t\tthis._controlMap.get(`${controlId}-header-contentLeft`) as Control,\n\t\t\t\t\t\tthis._controlMap.get(`${controlId}-header-contentRight`) as Control\n\t\t\t\t\t]\n\t\t\t\t}).addStyleClass(\"sapUiTinyMarginBegin\")\n\t\t\t);\n\n\t\t\t//create header container\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew HBox(`${controlId}-header`, {\n\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\titems: [\n\t\t\t\t\t\tthis._controlMap.get(`${controlId}-header-title`) as Control,\n\t\t\t\t\t\tthis._controlMap.get(`${controlId}-header-content`) as Control\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tthis.addDependent(this._controlMap.get(id) as Control);\n\t\t}\n\n\t\t//add control-specific styling\n\t\t(this._controlMap.get(id) as HBox)?.addStyleClass(isPanel && hasContainerTitle ? \"sapCuxPanelHeader\" : \"sapUiContainerHeader\");\n\t\t(this._controlMap.get(`${controlId}-header-title`) as Title).setTitleStyle(isPanel && hasContainerTitle ? \"H6\" : \"H4\");\n\n\t\treturn this._controlMap.get(id) as HBox;\n\t}\n\n\t/**\n\t * Returns container header\n\t *\n\t * @private\n\t * @returns {Object} container header\n\t */\n\tpublic _getHeader(): HBox {\n\t\treturn this._controlMap.get(`${this.getId()}-header`) as HBox;\n\t}\n\n\t/**\n\t * Returns inner control corresponding to the specified layout\n\t *\n\t * @private\n\t * @returns {IconTabBar | FlexBox} inner control based on the layout\n\t */\n\tpublic _getInnerControl(): IconTabBar | FlexBox {\n\t\treturn this.getProperty(\"orientation\") === OrientationType.SideBySide ? this._iconTabBar : this._wrapper;\n\t}\n\n\t/**\n\t * Handler for selection of panel in SideBySide layout\n\t *\n\t * @private\n\t * @param {Event} event - event object\n\t */\n\tprotected _onPanelSelect(event: IconTabBar$SelectEvent) {\n\t\t//suppress invalidation to prevent container re-rendering. render the specific header element instead\n\t\tthis.setProperty(\"selectedKey\", event.getParameter(\"selectedKey\"), true);\n\t\tthis._updateContainerHeader(this);\n\t}\n\n\t/**\n\t * Updates the count information of IconTabFilter of IconTabBar inner control\n\t * in case of SideBySide layout\n\t *\n\t * @private\n\t * @param {BasePanel} panel - associated panel\n\t * @param {string} count - updated count\n\t */\n\tpublic _setPanelCount(panel: BasePanel, count?: string) {\n\t\tif (this.getProperty(\"orientation\") === OrientationType.SideBySide) {\n\t\t\tthis._getIconTabFilter(panel).setCount(count);\n\t\t}\n\t}\n\n\t/**\n\t * Adds corresponding control to panel. The control would be added to the\n\t * corresponding target inner control based on the layout.\n\t *\n\t * @private\n\t * @param {BasePanel} panel - panel to which control must be added\n\t * @param {Control} control - control to be added\n\t */\n\tpublic _addToPanel(panel: BasePanel, control: Control): void {\n\t\tif (this.getProperty(\"orientation\") === OrientationType.SideBySide) {\n\t\t\tthis._getIconTabFilter(panel)?.addContent(control);\n\t\t} else {\n\t\t\t(this._controlMap.get(`${panel.getId()}-wrapper`) as FlexBox)?.addItem(control);\n\t\t}\n\t}\n\n\t/**\n\t * Creates and returns IconTabBarFilter for the specified panel to be placed\n\t * in the IconTabBar inner control in case of SideBySide layout\n\t *\n\t * @private\n\t * @param {BasePanel} panel - panel whose icon tab filter must be fetched\n\t * @returns {IconTabFilter} IconTabFilter for the specified panel\n\t */\n\tprivate _getIconTabFilter(panel: BasePanel): IconTabFilter {\n\t\tconst id = `${panel.getId()}-tabFilter`;\n\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tconst iconTabFilter = new IconTabFilter(id, {\n\t\t\t\tkey: panel.getProperty(\"key\") as string,\n\t\t\t\ttext: panel.getProperty(\"title\") as string,\n\t\t\t\ttooltip: panel.getProperty(\"tooltip\") as string\n\t\t\t});\n\t\t\ticonTabFilter.addCustomData(\n\t\t\t\tnew CustomData(`${panel.getId()}--customFilter`, {\n\t\t\t\t\tkey: \"sap-ui-fastnavgroup\",\n\t\t\t\t\tvalue: \"true\",\n\t\t\t\t\twriteToDom: true\n\t\t\t\t})\n\t\t\t);\n\t\t\tthis._controlMap.set(id, iconTabFilter);\n\t\t\taddFESRSemanticStepName(iconTabFilter, FESR_EVENTS.SELECT, panel.getProperty(\"key\") as string);\n\t\t}\n\n\t\t//Add panel content to the created filter\n\t\tpanel._getContent()?.forEach((content) => (this._controlMap.get(id) as IconTabFilter).addContent(content));\n\n\t\treturn this._controlMap.get(id) as IconTabFilter;\n\t}\n\n\t/**\n\t * onBeforeRendering lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic onBeforeRendering(): void {\n\t\t// set selected key to the first panel key if not set\n\t\tif (this.getProperty(\"selectedKey\") === \"\") {\n\t\t\tconst defaultKey = this.getContent()?.[0]?.getProperty(\"key\") as string;\n\t\t\tthis.setProperty(\"selectedKey\", defaultKey, true);\n\t\t}\n\n\t\t//create layout-specific inner control\n\t\tthis._createInnerControl();\n\n\t\t//fetch and update container header\n\t\tthis._updateContainerHeader(this);\n\n\t\t//add content from all panels to inner control\n\t\tthis._addAllPanelContent();\n\n\t\t//load content if lazy loading is disabled\n\t\tif (this.getProperty(\"enableLazyLoad\") === false && !this.getProperty(\"loaded\")) {\n\t\t\tthis._loadContent();\n\t\t}\n\n\t\t// mark performance metrics\n\t\tthis._markPerformanceMetrics();\n\t}\n\n\t/**\n\t * onAfterRendering lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic onAfterRendering(): void {\n\t\tthis._attachResizeHandler();\n\n\t\t//observe container for lazy loading if enabled\n\t\tif (this.getProperty(\"enableLazyLoad\") as boolean) {\n\t\t\tthis._observeContainer();\n\t\t}\n\t}\n\n\t/**\n\t * Loads the content for the container.\n\t *\n\t * @private\n\t */\n\tprivate _loadContent() {\n\t\tthis.setProperty(\"loaded\", true);\n\t\tthis.load?.();\n\t}\n\n\t/**\n\t * Attaches a resize handler to the container to adjust\n\t * the layout based on device size changes.\n\t *\n\t * @private\n\t */\n\tpublic _attachResizeHandler() {\n\t\tif (this.getDomRef() && this.getProperty(\"loaded\")) {\n\t\t\tthis._resizeObserver?.disconnect();\n\t\t\tthis._resizeObserver = new ResizeObserver((entries) => {\n\t\t\t\tif (this._resizeTimeout) {\n\t\t\t\t\tclearTimeout(this._resizeTimeout);\n\t\t\t\t}\n\n\t\t\t\t//debounce resize event to prevent multiple calls\n\t\t\t\tthis._resizeTimeout = window.setTimeout(() => {\n\t\t\t\t\tif (this.getVisible()) {\n\t\t\t\t\t\tthis._setDeviceType(entries);\n\t\t\t\t\t\tthis.adjustLayout();\n\t\t\t\t\t}\n\t\t\t\t}, 10) as unknown as number;\n\t\t\t});\n\t\t\tthis._resizeObserver?.observe(this.getDomRef() as Element);\n\t\t}\n\t}\n\n\t/**\n\t * Detaches the resize handler from the container.\n\t *\n\t * @private\n\t */\n\tpublic _detachResizeHandler() {\n\t\tthis._resizeObserver?.disconnect();\n\t}\n\n\t/**\n\t * Adds intersection observer for lazy loading of container\n\t *\n\t * @private\n\t */\n\tprivate _observeContainer(): void {\n\t\tconst target = this.getDomRef();\n\t\tif (!this._containerObserver) {\n\t\t\tthis._containerObserver = new IntersectionObserver(\n\t\t\t\t(entries) =>\n\t\t\t\t\tentries.forEach((entry) => {\n\t\t\t\t\t\tif (!this.getProperty(\"loaded\") && this.getVisible() && entry.isIntersecting) {\n\t\t\t\t\t\t\tthis._loadContent();\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t{ rootMargin: \"0px\", threshold: 0.1 }\n\t\t\t);\n\t\t}\n\t\tthis._containerObserver?.disconnect();\n\t\t//observe container\n\t\tif (target) {\n\t\t\tthis._containerObserver.observe(target);\n\t\t}\n\t}\n\n\t/**\n\t * Create inner control for storing content from panel\n\t *\n\t * @private\n\t */\n\tprivate _createInnerControl(): void {\n\t\tconst layout = this.getProperty(\"orientation\") as OrientationType;\n\n\t\tif (layout === OrientationType.Horizontal || layout === OrientationType.Vertical) {\n\t\t\tif (!this._wrapper) {\n\t\t\t\tthis._wrapper = new FlexBox(`${this.getId()}-wrapper`, {\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\trenderType: \"Bare\"\n\t\t\t\t}).addStyleClass(\"sapCuxBaseWrapper\");\n\t\t\t\tthis.addDependent(this._wrapper);\n\t\t\t}\n\t\t\tthis._wrapper.setDirection(layout === OrientationType.Horizontal ? \"Row\" : \"Column\");\n\t\t} else if (!this._iconTabBar) {\n\t\t\tthis._iconTabBar = new IconTabBar(`${this.getId()}-iconTabBar`, {\n\t\t\t\texpandable: true,\n\t\t\t\tbackgroundDesign: BackgroundDesign.Transparent,\n\t\t\t\theaderMode: \"Inline\",\n\t\t\t\theaderBackgroundDesign: BackgroundDesign.Transparent,\n\t\t\t\tselect: (event: Event) => this._onPanelSelect(event)\n\t\t\t});\n\t\t\tthis.addDependent(this._iconTabBar);\n\t\t}\n\t}\n\n\t/**\n\t * Update container header information\n\t *\n\t * @private\n\t */\n\tpublic _updateContainerHeader(control: BaseContainer | BasePanel): void {\n\t\tconst isSideBySideLayout = this.getProperty(\"orientation\") === OrientationType.SideBySide;\n\t\tconst isContainer = control.isA(\"sap.cux.home.BaseContainer\");\n\t\tconst targetControl = !isContainer && isSideBySideLayout ? this : control;\n\n\t\t//clear container header elements\n\t\t(this._controlMap.get(targetControl.getId() + \"-header-contentLeft\") as HBox)?.removeAllItems();\n\t\t(this._controlMap.get(targetControl.getId() + \"-header-contentRight\") as HBox)?.removeAllItems();\n\n\t\t//update container header elements\n\t\tthis._updateHeader(control);\n\t}\n\n\t/**\n\t * Updates header information of a specified container or a panel\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} control - can be container or panel\n\t */\n\tprivate _updateHeader(control: BaseContainer | BasePanel): void {\n\t\tconst isSideBySideLayout = this.getProperty(\"orientation\") === OrientationType.SideBySide;\n\t\tconst isContainer = control.isA(\"sap.cux.home.BaseContainer\");\n\n\t\t//Update Title\n\t\tconst headerTitle = this._controlMap.get(control.getId() + \"-header-title\") as Title;\n\t\theaderTitle?.setText(control.getProperty(\"title\") as string);\n\t\theaderTitle?.setVisible((control.getProperty(\"title\") as string)?.trim().length > 0);\n\n\t\t//Add common header elements\n\t\tif (this._getLayout()) {\n\t\t\tthis._addLayoutHeaderElements();\n\t\t}\n\n\t\tconst currentControl = isContainer && isSideBySideLayout ? this._getSelectedPanel() : control;\n\t\tconst targetControl = !isContainer && isSideBySideLayout ? this : control;\n\n\t\t//Update Menu Items\n\t\tconst menuItems = this._filterVisibleHeaderElements(currentControl?.getMenuItems());\n\t\tif (menuItems.length > 0) {\n\t\t\tthis._addMenuItems(targetControl, menuItems);\n\t\t}\n\n\t\t//Update Action Buttons\n\t\t(currentControl?.getAggregation(\"actionButtons\") as Button[])?.forEach((actionButton: Button) => {\n\t\t\t(this._controlMap.get(targetControl.getId() + \"-header-contentRight\") as HBox)?.addItem(this._getHeaderButton(actionButton));\n\t\t});\n\t}\n\n\t/**\n\t * Attaches layout header elements like settings menu and full screen action to each\n\t * panel in the container, if enabled.\n\t *\n\t * @private\n\t */\n\tprivate _addLayoutHeaderElements(): void {\n\t\tconst attachHeaderElements = (control: BaseContainer | BasePanel) => {\n\t\t\tconst elements = [\n\t\t\t\t{ property: \"enableFullScreen\", aggregation: \"menuItems\", headerElement: this._getFullScreenMenuItem(control) },\n\t\t\t\t{ property: \"enableSettings\", aggregation: \"menuItems\", headerElement: this._getHomeSettingsMenuItem(control) },\n\t\t\t\t{ property: \"enableFullScreen\", aggregation: \"actionButtons\", headerElement: this._getFullScreenButton(control) }\n\t\t\t];\n\n\t\t\telements.forEach(({ property, aggregation, headerElement }) => {\n\t\t\t\tconst currentPropertyValue = control.getProperty(property) as boolean;\n\t\t\t\tconst previousPropertyValue = this._commonHeaderElementStates.get(`${headerElement.getId()}-${property}`);\n\n\t\t\t\t//update common header elements only if there's a change in property value\n\t\t\t\tif (currentPropertyValue !== previousPropertyValue) {\n\t\t\t\t\tthis._commonHeaderElementStates.set(`${headerElement.getId()}-${property}`, currentPropertyValue);\n\n\t\t\t\t\tif (currentPropertyValue) {\n\t\t\t\t\t\tcontrol.addAggregation(aggregation, headerElement);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontrol.removeAggregation(aggregation, headerElement);\n\t\t\t\t\t}\n\n\t\t\t\t\t// set full screen element relations\n\t\t\t\t\tif (property === \"enableFullScreen\") {\n\t\t\t\t\t\tthis.setFullScreenElementRelations({\n\t\t\t\t\t\t\tisFullScreenEnabled: currentPropertyValue,\n\t\t\t\t\t\t\tcontrol,\n\t\t\t\t\t\t\taggregation,\n\t\t\t\t\t\t\theaderElement\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// Add common header elements for container\n\t\tattachHeaderElements(this);\n\n\t\t// Add common header elements for inner panels\n\t\tconst panels = this.getContent() || [];\n\t\tpanels.forEach(attachHeaderElements);\n\n\t\t// setup full screen elements if required\n\t\tthis._setupFullScreenElements();\n\t}\n\n\t/**\n\t * Register/Degister elements for full screen, if enabled.\n\t *\n\t * @private\n\t */\n\tprivate _setupFullScreenElements() {\n\t\tconst layout = this._getLayout();\n\t\tconst setupFullScreenElement = (control: BaseContainer | BasePanel) => {\n\t\t\tconst currentPropertyValue = control.getProperty(\"enableFullScreen\") as boolean;\n\t\t\tconst previousPropertyValue = this._commonHeaderElementStates.get(`${control.getId()}-enableFullScreen`);\n\n\t\t\tif (currentPropertyValue !== previousPropertyValue) {\n\t\t\t\tthis._commonHeaderElementStates.set(`${control.getId()}-enableFullScreen`, currentPropertyValue);\n\n\t\t\t\tif (currentPropertyValue) {\n\t\t\t\t\tlayout?.registerFullScreenElement(control);\n\t\t\t\t} else {\n\t\t\t\t\tlayout?.deregisterFullScreenElement(control);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// update index of full screen element\n\t\t\tif (currentPropertyValue) {\n\t\t\t\tlayout?.updateFullScreenElement(control, {\n\t\t\t\t\tindex: layout?.indexOfItem(this)\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t// Register full screen elements for container\n\t\tsetupFullScreenElement(this);\n\n\t\t// Register full screen elements for inner panels\n\t\tconst panels = this.getContent() || [];\n\t\tpanels.forEach(setupFullScreenElement);\n\t}\n\n\t/**\n\t * Sets or removes the full screen element relations based on the provided configuration.\n\t *\n\t * @private\n\t * @param {FullScreenElementRelation} relation - The configuration object containing the full screen element relation details.\n\t * @param {boolean} relation.isFullScreenEnabled - Indicates whether full screen is enabled.\n\t * @param {Control} relation.control - The control to set or remove the association.\n\t * @param {string} relation.aggregation - The aggregation type (e.g., \"actionButtons\").\n\t * @param {Element} relation.headerElement - The header element to associate or disassociate.\n\t *\n\t * @returns {void}\n\t */\n\tprivate setFullScreenElementRelations(relation: FullScreenElementRelation): void {\n\t\tconst { isFullScreenEnabled, control, aggregation, headerElement } = relation;\n\t\tconst targetAggregation = aggregation === \"actionButtons\" ? \"fullScreenButton\" : \"fullScreenMenuItem\";\n\n\t\tif (isFullScreenEnabled) {\n\t\t\tcontrol.setAssociation(targetAggregation, headerElement, true);\n\t\t} else {\n\t\t\tcontrol.removeAssociation(targetAggregation, headerElement, true);\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the my home settings menu item for a given panel.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} panel - The panel for which to retrieve the home settings menu item.\n\t * @returns {MenuItem} The settings menu item for the given panel.\n\t */\n\tprivate _getHomeSettingsMenuItem(panel: BaseContainer | BasePanel): MenuItem {\n\t\tconst id = `${panel.getId()}-settings`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tconst menuItem = new MenuItem(id, {\n\t\t\t\ttitle: this._i18nBundle.getText(\"myHomeSettings\"),\n\t\t\t\ticon: \"sap-icon://user-settings\",\n\t\t\t\tpress: () => {\n\t\t\t\t\t//open settings dialog\n\t\t\t\t\tconst layout = this._getLayout();\n\t\t\t\t\tlayout?.openSettingsDialog();\n\t\t\t\t}\n\t\t\t});\n\t\t\taddFESRId(menuItem, \"myHomeSettings\");\n\t\t\tthis._controlMap.set(id, menuItem);\n\t\t}\n\n\t\treturn this._controlMap.get(id) as MenuItem;\n\t}\n\n\t/**\n\t * Retrieves the full screen menu item for a given panel.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} panel - The panel for which to retrieve the home settings menu item.\n\t * @returns {MenuItem} The settings menu item for the given panel.\n\t */\n\tprivate _getFullScreenMenuItem(panel: BaseContainer | BasePanel): MenuItem {\n\t\tconst id = `${panel.getId()}-showMore`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tconst fullScreenMenuItem = new MenuItem(id, {\n\t\t\t\ttitle: this._i18nBundle.getText(\"expand\"),\n\t\t\t\ticon: \"sap-icon://display-more\",\n\t\t\t\tpress: () => {\n\t\t\t\t\tconst layout = this._getLayout();\n\t\t\t\t\tlayout?.toggleFullScreen(panel);\n\t\t\t\t}\n\t\t\t});\n\t\t\taddFESRId(fullScreenMenuItem, \"toggleFullScreen\");\n\t\t\tthis._controlMap.set(id, fullScreenMenuItem);\n\t\t}\n\t\treturn this._controlMap.get(id) as MenuItem;\n\t}\n\n\t/**\n\t * Generates a full screen action button for a given control, which can be a panel or a container.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} control - The control for which the full screen button is generated.\n\t * @returns {Button} A Button instance configured to toggle full screen mode for the specified control.\n\t */\n\tprivate _getFullScreenButton(control: BaseContainer | BasePanel): Button {\n\t\tconst id = `${control.getId()}-fullScreen`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tconst fullScreenButton = new Button(id, {\n\t\t\t\ttext: this._i18nBundle.getText(\"expand\"),\n\t\t\t\ttype: ButtonType.Transparent,\n\t\t\t\tpress: () => {\n\t\t\t\t\tconst layout = this._getLayout();\n\t\t\t\t\tlayout?.toggleFullScreen(control);\n\t\t\t\t}\n\t\t\t});\n\t\t\taddFESRId(fullScreenButton, \"toggleFullScreen\");\n\t\t\tthis._controlMap.set(id, fullScreenButton);\n\t\t\tthis._exemptedActions.push(id);\n\t\t}\n\n\t\treturn this._controlMap.get(id) as Button;\n\t}\n\n\t/**\n\t * Returns the selected panel in the IconTabBar inner control in\n\t * case of SideBySide layout\n\t *\n\t * @private\n\t * @returns {BasePanel} selected panel\n\t */\n\tpublic _getSelectedPanel(): BasePanel {\n\t\tconst panel =\n\t\t\tthis.getContent()?.find((panel) => panel.getProperty(\"key\") === this.getProperty(\"selectedKey\")) || this.getContent()?.[0];\n\t\tthis.setProperty(\"selectedKey\", panel?.getProperty(\"key\"), true);\n\n\t\treturn panel;\n\t}\n\n\t/**\n\t * Add content from all panels to the layout-specific inner control\n\t *\n\t * @private\n\t */\n\tprivate _addAllPanelContent(): void {\n\t\tconst panels = this.getContent() || [];\n\n\t\tif (this.getProperty(\"orientation\") === OrientationType.SideBySide) {\n\t\t\tthis._iconTabBar.removeAllItems();\n\t\t\tpanels.forEach((panel) => this._iconTabBar.addItem(this._getIconTabFilter(panel)));\n\t\t\tthis._iconTabBar.setSelectedKey(this.getProperty(\"selectedKey\") as string);\n\t\t} else {\n\t\t\tthis._wrapper.removeAllItems();\n\t\t\tpanels.forEach((panel) => this._wrapper.addItem(this._getPanelContentWrapper(panel)));\n\t\t}\n\t}\n\n\t/**\n\t * Creates and returns a wrapper for containing the specified panel\n\t * content in case of Horizontal and Vertical layout\n\t *\n\t * @private\n\t * @param {BasePanel} panel - panel for which wrapper has to created\n\t * @returns {FlexBox} wrapper container for the given panel\n\t */\n\tprotected _getPanelContentWrapper(panel: BasePanel): FlexBox {\n\t\tconst id = `${panel.getId()}-contentWrapper`;\n\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew FlexBox(id, {\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\tdirection: \"Column\",\n\t\t\t\t\trenderType: \"Bare\"\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\t//Add header as the first item in case of Horizontal and Vertical layout\n\t\t(this._controlMap.get(id) as FlexBox).addItem(this._updatePanelHeader(panel));\n\t\tpanel._getContent()?.forEach((content) => (this._controlMap.get(id) as FlexBox).addItem(content));\n\n\t\treturn this._controlMap.get(id) as FlexBox;\n\t}\n\n\t/**\n\t * Returns header of the specified panel after updating it\n\t *\n\t * @private\n\t * @param {BasePanel} panel - panel to be updated\n\t * @returns {HBox} header associated with the panel\n\t */\n\tprivate _updatePanelHeader(panel: BasePanel): HBox {\n\t\tconst header = this._createHeader(panel);\n\t\tconst isTitleVisible = (panel.getProperty(\"title\") as string)?.trim().length > 0;\n\t\tconst hasContainerTitle = (this.getProperty(\"title\") as string)?.trim().length > 0;\n\n\t\t//update panel header elements\n\t\tthis._updateContainerHeader(panel);\n\n\t\t//add header styling only if any of the header elements are visible\n\t\theader.toggleStyleClass(\n\t\t\t\"sapCuxPanelHeader\",\n\t\t\thasContainerTitle &&\n\t\t\t\t(isTitleVisible ||\n\t\t\t\t\tthis._filterVisibleHeaderElements(panel.getMenuItems()).length > 0 ||\n\t\t\t\t\tthis._filterVisibleHeaderElements(panel.getActionButtons()).length > 0)\n\t\t);\n\n\t\treturn header;\n\t}\n\n\t/**\n\t * Filters the provided array of header elements to include only those that are visible.\n\t *\n\t * @private\n\t * @template T - The type of elements in the array, which can be either MenuItem or Button.\n\t * @param {T[]} [elements=[]] - The array of elements to filter. Defaults to an empty array if not provided.\n\t *\n\t * @returns {T[]} An array of elements that are visible.\n\t */\n\tprivate _filterVisibleHeaderElements<T extends MenuItem | Button>(elements: T[] = []): T[] {\n\t\treturn elements.filter((element) => element.getVisible());\n\t}\n\n\t/**\n\t * Setter for container title\n\t *\n\t * @private\n\t * @param {string} title - updated title\n\t * @returns {BaseContainer} BaseContainer instance for chaining\n\t */\n\tpublic _setTitle(title: string): BaseContainer {\n\t\t//suppress invalidate to prevent container re-rendering. re-render only the concerned element\n\t\tthis.setProperty(\"title\", title, true);\n\t\t(this._controlMap.get(`${this.getId()}-header-title`) as Title).setText(title);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds menu items to a control and sets up a menu button to display them.\n\t * If the menu for the control doesn't exist, it creates a new one.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} control - The control to which the menu items will be added.\n\t * @param {MenuItem[]} menuItems - An array of menu items to be added to the menu.\n\t */\n\tprivate _addMenuItems(control: BaseContainer | BasePanel, menuItems: MenuItem[]): void {\n\t\tif (!this._controlMap.get(`${control.getId()}-menu`)) {\n\t\t\t//create menu list\n\t\t\tconst list = new List(`${control.getId()}-list`, {\n\t\t\t\titemPress: (event) => (event.getSource<List>().getParent() as Popover).close()\n\t\t\t});\n\t\t\tthis._controlMap.set(`${control.getId()}-menu`, list);\n\t\t\tconst invisiblePopoverText = getInvisibleText(`${control.getId()}-popoverTitle`, this._i18nBundle.getText(\"actions\"));\n\t\t\t//create menu popover\n\t\t\tconst menuPopover = new Popover(`${control.getId()}-popover`, {\n\t\t\t\tplacement: PlacementType.VerticalPreferredBottom,\n\t\t\t\tshowHeader: false,\n\t\t\t\tariaLabelledBy: [invisiblePopoverText ? invisiblePopoverText?.getId() : \"\"],\n\t\t\t\tcontent: [list, invisiblePopoverText]\n\t\t\t});\n\n\t\t\t//create menu button\n\t\t\tconst menuButton = new Button(`${control.getId()}-menu-btn`, {\n\t\t\t\ticon: \"sap-icon://slim-arrow-down\",\n\t\t\t\ttype: ButtonType.Transparent,\n\t\t\t\ttooltip: this._i18nBundle.getText(\"more\"),\n\t\t\t\tpress: (event) => menuPopover.openBy(event.getSource<Button>())\n\t\t\t});\n\t\t\tthis._controlMap.set(`${control.getId()}-menu-btn`, menuButton);\n\t\t}\n\n\t\t//add menu button to header\n\t\t(this._controlMap.get(control.getId() + \"-header-contentLeft\") as HBox)?.addItem(\n\t\t\tthis._controlMap.get(`${control.getId()}-menu-btn`) as Button\n\t\t);\n\n\t\t//Clear existing menu items and add new ones\n\t\t(this._controlMap.get(`${control.getId()}-menu`) as List).removeAllItems();\n\t\tmenuItems.forEach((item) => (this._controlMap.get(`${control.getId()}-menu`) as List).addItem(this._getMenuListItem(item)));\n\t}\n\n\t/**\n\t * Creates and returns a button for the corresponding header ActionButton\n\t *\n\t * @private\n\t * @param {Button} headerButton - ActionButton element\n\t * @returns {Button} Button instance created for the header element\n\t */\n\tprivate _getHeaderButton(headerButton: Button): Button {\n\t\tconst id = `${headerButton.getId()}-btn`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew Button(id, {\n\t\t\t\t\ttype: ButtonType.Transparent,\n\t\t\t\t\tpress: () => headerButton.firePress()\n\t\t\t\t})\n\t\t\t);\n\t\t\taddFESRSemanticStepName(this._controlMap.get(id) as Button, FESR_EVENTS.PRESS, getFESRId(headerButton));\n\t\t}\n\n\t\t//Update button details\n\t\tconst button = this._controlMap.get(id) as Button;\n\t\tbutton.setText(headerButton.getText());\n\t\tbutton.setTooltip(headerButton.getTooltip() as string);\n\t\tbutton.setIcon(headerButton.getIcon());\n\t\tbutton.setVisible(headerButton.getVisible());\n\t\tbutton.setEnabled(headerButton.getEnabled());\n\n\t\treturn button;\n\t}\n\n\t/**\n\t * Retrieves the layout associated with the container, if available.\n\t *\n\t * @private\n\t * @returns {BaseLayout} The layout associated with the BaseContainer.\n\t */\n\tpublic _getLayout(): BaseLayout {\n\t\treturn UI5Element.getElementById(this.getAssociation(\"layout\", null) as string) as BaseLayout;\n\t}\n\n\t/**\n\t * Retrieves or creates a menu list item for a given menu item.\n\t *\n\t * @private\n\t * @param {MenuItem} menuItem - The menu item for which to retrieve or create a list item.\n\t * @returns {StandardListItem} The menu list item associated with the provided menu item.\n\t */\n\tprivate _getMenuListItem(menuItem: MenuItem): StandardListItem {\n\t\tif (!this._controlMap.get(`${menuItem.getId()}-listItem`)) {\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${menuItem.getId()}-listItem`,\n\t\t\t\tnew StandardListItem(`${menuItem.getId()}-listItem`, {\n\t\t\t\t\ttype: \"Active\",\n\t\t\t\t\ticon: menuItem.getIcon(),\n\t\t\t\t\ttitle: menuItem.getTitle(),\n\t\t\t\t\tpress: (event) => menuItem.firePress({ button: event.getSource<Button>() })\n\t\t\t\t})\n\t\t\t);\n\t\t\taddFESRSemanticStepName(\n\t\t\t\tthis._controlMap.get(`${menuItem.getId()}-listItem`) as StandardListItem,\n\t\t\t\tFESR_EVENTS.PRESS,\n\t\t\t\tgetFESRId(menuItem)\n\t\t\t);\n\t\t}\n\t\t//Update list item details\n\t\tconst menuListItem = this._controlMap.get(`${menuItem.getId()}-listItem`) as StandardListItem;\n\t\tmenuListItem.setIcon(menuItem.getIcon());\n\t\tmenuListItem.setTitle(menuItem.getTitle());\n\t\tmenuListItem.setVisible(menuItem.getVisible());\n\t\treturn menuListItem;\n\t}\n\n\t/**\n\t * Toggles the visibility of menu Item.\n\t *\n\t * @private\n\t * @param {boolean} show - Indicates whether to show or hide the menu item.\n\t * @returns {void}\n\t */\n\tpublic toggleMenuListItem(menuItem: MenuItem, show: boolean): void {\n\t\tif (menuItem) {\n\t\t\tconst menuListItem = this._getMenuListItem(menuItem);\n\t\t\tmenuListItem?.setVisible(show);\n\t\t\tmenuItem.setProperty(\"visible\", show, true);\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the visibility of action button.\n\t *\n\t * @private\n\t * @param {boolean} show - Indicates whether to show or hide the action button.\n\t * @returns {void}\n\t */\n\tpublic toggleActionButton(actionButton: Button, show: boolean): void {\n\t\tif (actionButton) {\n\t\t\tconst actionButtonControl = this._getHeaderButton(actionButton);\n\t\t\tactionButtonControl?.setVisible(show);\n\t\t\tactionButton.setProperty(\"visible\", show, true);\n\t\t}\n\t}\n\n\tpublic removeContent(panel: BasePanel) {\n\t\tif (this.getProperty(\"selectedKey\") && this.getProperty(\"selectedKey\") === panel.getProperty(\"key\")) {\n\t\t\tthis.setProperty(\"selectedKey\", undefined, true);\n\t\t}\n\t\tthis.removeAggregation(\"content\", panel);\n\t}\n\n\t/**\n\t * Gets current value of property \"width\".\n\t *\n\t * Default value is: \"100%\"\n\t * @returns {CSSSize} Value of property \"width\"\n\t */\n\tpublic getWidth(): CSSSize {\n\t\treturn this.getProperty(\"width\") as CSSSize;\n\t}\n\n\t/**\n\t * Toggles the visibility of action buttons within the container and/or its inner panels.\n\t *\n\t * @private\n\t * @param {boolean} show - Indicates whether to show or hide the action buttons.\n\t * @returns {void}\n\t */\n\tpublic toggleActionButtons(show: boolean): void {\n\t\tconst isSideBySideLayout = this.getProperty(\"orientation\") === OrientationType.SideBySide;\n\t\tlet visibilityChanged = false;\n\t\tconst toggleActionButtons = (control: BaseContainer | BasePanel) => {\n\t\t\tcontrol.getActionButtons()?.forEach((actionButton) => {\n\t\t\t\tconst currentVisibility = actionButton.getVisible();\n\t\t\t\tif (currentVisibility !== show && !this._exemptedActions.includes(actionButton.getId())) {\n\t\t\t\t\tactionButton.setProperty(\"visible\", show, true);\n\t\t\t\t\tvisibilityChanged = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!isSideBySideLayout && visibilityChanged) {\n\t\t\t\tthis._updateContainerHeader(control);\n\t\t\t}\n\t\t};\n\n\t\t// Toggle action buttons for container\n\t\ttoggleActionButtons(this);\n\n\t\t// Toggle action buttons for inner panels\n\t\tconst panels = this.getContent() || [];\n\t\tpanels.forEach(toggleActionButtons);\n\n\t\t// Update Header Container if required\n\t\tif (isSideBySideLayout && visibilityChanged) {\n\t\t\tthis._updateContainerHeader(this);\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the visibility of the full screen button for the specified element.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} element - The element for which to toggle the full screen button.\n\t * @param {boolean} show - Indicates whether to show or hide the full screen button.\n\t */\n\tpublic toggleFullScreenElements(element: BaseContainer | BasePanel, show: boolean): void {\n\t\tconst fullScreenButton = UI5Element.getElementById(element.getAssociation(\"fullScreenButton\", null) as string) as Button;\n\t\tconst fullScreenMenuButton = UI5Element.getElementById(element.getAssociation(\"fullScreenMenuItem\", null) as string) as MenuItem;\n\t\tconst isSideBySideLayout = this.getProperty(\"orientation\") === OrientationType.SideBySide;\n\t\tconst isPhone = this.getDeviceType() === DeviceType.Mobile;\n\t\tconst parent = element.getParent() as BaseContainer;\n\t\tlet elementVisibilityChanged = false;\n\t\tshow = !isPhone ? show : false;\n\t\t[fullScreenButton, fullScreenMenuButton].forEach((fullScreenElement: Button | MenuItem) => {\n\t\t\tif (fullScreenElement && show !== fullScreenElement.getVisible()) {\n\t\t\t\telementVisibilityChanged = true;\n\t\t\t\tfullScreenElement.setProperty(\"visible\", show, true);\n\t\t\t}\n\t\t});\n\t\tconst elementKey = element instanceof BasePanel && element.getKey();\n\t\tif (elementVisibilityChanged && (!isSideBySideLayout || (isSideBySideLayout && this.getProperty(\"selectedKey\") === elementKey))) {\n\t\t\tthis._updateContainerHeader(\n\t\t\t\tparent.getContent().length === 1 && !isSideBySideLayout ? (element.getParent() as BaseContainer) : element\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the device type based on the width of the container element.\n\t *\n\t * @private\n\t * @param {ResizeObserverEntry[]} entries - The entries returned by the ResizeObserver.\n\t * @returns {void}\n\t */\n\tprivate _setDeviceType(entries: ResizeObserverEntry[]): void {\n\t\tconst [entry] = entries;\n\t\tconst parentLayout = entry.target.parentNode as Element;\n\t\tconst width = parentLayout.clientWidth;\n\t\tconst deviceType = calculateDeviceType(width);\n\n\t\t//when width is zero, dom is not rendered hence setting device type can cause wrong calculation\n\t\tif (this._deviceType !== deviceType && width > 0) {\n\t\t\tthis._deviceType = deviceType;\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the device type for the current instance.\n\t *\n\t * @private\n\t * @returns {DeviceType} - The device type. If the device type is not set, it calculates\n\t * and returns the device type based on the current device width.\n\t */\n\tpublic getDeviceType(): DeviceType {\n\t\treturn this._deviceType || calculateDeviceType();\n\t}\n\n\t/**\n\t * Records the performance metrics for the container.\n\t * This is applicable only if the container is part of a layout.\n\t *\n\t * @private\n\t */\n\tprivate _markPerformanceMetrics() {\n\t\tconst elementName = this.getMetadata().getName() as keyof typeof UIElements;\n\t\trecordElementLoadStart(elementName);\n\n\t\tthis.getContent()?.forEach((panel) => {\n\t\t\tpanel.attachEventOnce(\"loaded\", () => {\n\t\t\t\trecordElementLoadEnd(elementName);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Returns a UI5 `HTML` control that contains the generic placeholder content.\n\t *\n\t * @returns {Control} A `sap.ui.core.HTML` control displaying the placeholder content.\n\t */\n\tpublic getGenericPlaceholder(): Control | undefined {\n\t\tconst content = this.getGenericPlaceholderContent();\n\t\tif (!content) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn new HTML({ content });\n\t}\n\n\t/**\n\t * Default implementation: returns undefined.\n\t */\n\tprotected getGenericPlaceholderContent(): string | undefined {\n\t\treturn undefined;\n\t}\n}\n"],"mappings":"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","ignoreList":[]}