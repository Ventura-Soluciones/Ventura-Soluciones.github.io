{"version":3,"file":"library-preload-dbg.js","sections":[{"offset":{"line":1,"column":0},"map":{"version":3,"names":["sap","ui","define","Log","CardHelper","Button","CheckBox","CustomListItem","HBox","IconTabBar","IconTabFilter","Input","Label","sap_m_library","List","MessageStrip","MessageToast","ObjectStatus","OverflowToolbar","Panel","Text","Title","Toolbar","ToolbarSpacer","VBox","Element","EventBus","sap_ui_core_library","SimpleForm","JSONModel","FileUploader","Container","__BaseSettingsPanel","___utils_Accessibility","__AppManager","___utils_Constants","___utils_FESRUtil","__HttpHelper","__PageManager","__PersonalisationUtils","__UShellPersonalizer","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","FlexAlignItems","ToolbarStyle","ValueState","BaseSettingsPanel","checkPanelExists","AppManager","SETTINGS_PANELS_KEYS","addFESRSemanticStepName","FESR_EVENTS","HttpHelper","PageManager","PersonalisationUtils","UShellPersonalizer","ImportExportType","BASE_URL","REPO_BASE_URL","EXPORT_API","MYINSIGHT_SECTION_ID","NewsAndPagesContainerName","AppsContainerlName","InsightsContainerName","PagePanelName","FavAppPanelName","RecommendedAppPanelName","TilesPanelName","CardsPanelName","AdvancedSettingsPanel","extend","metadata","events","sectionsImported","constructor","_constructor","id","settings","BaseSettingsPanel.prototype.constructor.call","this","init","_init","BaseSettingsPanel.prototype.init.call","setProperty","ADVANCED","_i18nBundle","getText","oEventBus","getInstance","oAppManagerInstance","oSectionsImported","oUserPersonalization","export","sections","fileName","sectionsSelected","error","import","selectedTab","showNoImport","oControlModel","addAggregation","getContent","addInnerContent","attachPanelNavigated","_this","oPageManagerInstance","getPersContainerId","_getPanel","getOwnerComponent","subscribe","channelId","eventId","data","customData","status","updateImportStatus","oDetailPage","getElementById","getProperty","layout","_setRecommendationSettingsPanel","Promise","resolve","loadUserPersonalizationData","oImportBtn","setEnabled","enableDisableActions","setImportExportList","oExportMessage","setText","errorMessage","String","setType","errorType","oFileNameInput","setValue","oImportMessage","setVisible","reject","_setImportExportList","oExportList","setExportSectionList","_importExportPanel","addContent","invalidate","oImportList","setImportSectionList","_enableDisableActions","sType","oImportExportTab","setSelectedKey","IMPORT","oExportBtn","EXPORT","length","setExportImportValues","_setExportImportValues","_getContent","oContentVBox","getId","items","text","addStyleClass","_getImportExportPanel","headerToolbar","style","Clear","content","_getImportButton","_getExportButton","headerText","expanded","expandable","type","press","onImportPress","visible","PRESS","onExportPress","bind","_addInnerContent","backgroundDesign","selectedKey","oSelectedTab","select","onImportExportTabSelect","exportTab","key","SELECT","showIcon","exportText","fileInputContainer","alignItems","filenameLabel","labelFor","required","showColon","ariaLabelledBy","width","liveChange","onFileNameInputChange","value","addItem","importTab","importText","importSimpleForm","editable","labelSpanS","labelSpanM","fileUploader","tooltip","fileType","change","oEvent","onFileImport","maximumFileSize","sameFilenameAllowed","buttonText","classicImportTab","classicText","resetImportAppsNow","onResetImportApps","_setExportSectionList","exportSectionsList","growingThreshold","includeItemInSelection","setHeaderToolbar","setModel","bindItems","path","template","formatter","_isPanelAvailable","accDescription","_formatAccDescription","onSectionsSelectionChange","selected","enabled","title","instructionText","panelClassName","panelMappings","containerName","panelName","mapping","_setImportSectionList","importSectionsList","justifyContent","icon","state","_onSectionsSelectionChange","isImport","allSections","getItems","isSelected","innerCheckbox","isSectionSelected","some","oSection","getAggregation","getSelected","innerHbox","_onImportPress","_this2","attachEvent","setBusy","handleUserPersonalizationError","oExportData","_temp","importSections","aSelectedSections","bShowError","Error","oErr","_importSections","oImportData","sectionImportChain","aPromise","oSelectedSections","push","importApps","importTiles","importFavPages","reduce","chain","current","importCards","all","catch","oError","_importApps","apps","publish","groupInfo","_importTiles","tiles","_importFavPages","favouritePages","_importCards","cards","_updateImportStatus","sSectionTitle","errorState","sSectionId","find","oSec","undefined","Success","None","sectionTitles","Object","keys","imported","every","sTitle","fireEvent","resetImportModel","_resetImportModel","onOpen","getDeltaSectionViz","_getDeltaSectionViz","aImportedSections","_this3","_getSections","favSections","forEach","oImportedSection","aDelta","visualizations","filter","oImportViz","oViz","isBookmark","targetURL","vizId","getDeltaAuthSectionViz","_getDeltaAuthSectionViz","aDeltaSections","filterAuthSectionViz","_filterAuthSectionViz","aSections","_getCatalogApps","getServiceAsync","SearchableContent","getApps","includeAppsWithoutVisualizations","_filterAuthViz","aAppCatalog","aViz","aSectionViz","appCatalog","oAppCatalog","oSectionViz","oCatalogViz","target","action","semanticObject","displayFormatHint","map","filterAuthFavPages","_filterAuthFavPages","aFavPages","_exit","_this4","_temp3","_result","_temp2","fetchAllAvailablePages","aAvailablePages","oimportedPage","oAvailabePage","pageId","spaceId","_await$_this4$oPageMa","filterAuthCards","_filterAuthCards","aCards","_exit2","_temp5","_result2","_getParentApp","aAvailableApps","oCard","oApp","resolutionResult","applicationDependencies","name","parentAppId","_isNavigationSupported","oService","oParentApp","isNavigationSupported","aResponses","supported","_temp4","aServices","clientSideTargetResolution","Navigation","_oAdapter","_aInbounds","promise","aAuthCards","bIsNavigationSupported","_await$Promise$all$th","_onFileImport","files","getParameter","oFile","readFileContent","oFileContent","oEncodedFileContent","window","btoa","encodeURIComponent","replace","match","p1","fromCharCode","parseInt","Post","fileContent","oResponse","oImportDataString","JSON","parse","host","location","filterAuthorizedImportData","finally","_filterAuthorizedImportData","_this5","getInsightCards","aResponse","aAuthSections","aAuthFavPages","iInsightCardsCount","iTotalCardCount","Number","getImportedSections","getSelectedSections","_readFileContent","FileReader","reader","onload","event","blob","readAsText","_getPersonalizationData","_this6","_temp7","oPersonalizerInstance","read","_this6$oPersonalizerI","persData","_temp6","_UShellPersonalizer$g","_loadUserPersonalizationData","_this7","_ref","insightModel","favApps","insightTiles","insightCards","descriptorContent","personalization","aExportSections","refresh","_getSelectedSections","_isSectionSelected","sectionId","section","sec","_getImportedSections","oData","_this8","_temp9","isAppViz","oSections","panelClass","_temp8","getDeltaFavPages","_getDeltaFavPages","aImportedFavPages","_this9","oImportedPage","oFavPage","_getInsightCards","_this10","_getServiceAsync","cardHelperInstance","_getUserAllCardModel","oUserVisibleCardModel","aVisibleCards","visibility","_onExportPress","oExportFileName","oExportFileContent","getExportFileContent","require","File","save","stringify","show","message","_getExportFileContent","exportData","exportSections","oPersonalization","createdDate","Date","favoriteApps","filterNonSensitiveCards","_filterNonSensitiveCards","nonSensitiveCards","configuration","parameters","parameter","sensitiveProps","concat","getSensitiveProps","headerState","lineItemState","_getSensitiveProps","param","paramSensitiveProps","paramValue","sensitiveProp","ibnParams","_handleUserPersonalizationError","sErrorMsg","sErrorType","sDefaultErrorMsg","_onImportExportTabSelect","_onFileNameInputChange","sInputValue","trim","oInput","getSource","sValueState","sValueStateText","setValueState","setValueStateText","_onResetImportApps","_getRecommendationSettingsPanel","_this11","_recommendationSettingsPanel","panelId","showRecommendation","onRecommendationSettingChange","Center","_this12","recommendationSettingsPanel","_onRecommendationSettingChange","_this13","oPersData","write"],"sources":["AdvancedSettingsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport CardHelper from \"sap/insights/CardHelper\";\nimport Button from \"sap/m/Button\";\nimport CheckBox, { CheckBox$SelectEvent } from \"sap/m/CheckBox\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport HBox from \"sap/m/HBox\";\nimport IconTabBar, { IconTabBar$SelectEvent } from \"sap/m/IconTabBar\";\nimport IconTabFilter from \"sap/m/IconTabFilter\";\nimport Input, { Input$LiveChangeEvent } from \"sap/m/Input\";\nimport Label from \"sap/m/Label\";\nimport { FlexAlignItems, ToolbarStyle } from \"sap/m/library\";\nimport List from \"sap/m/List\";\nimport MessageStrip from \"sap/m/MessageStrip\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport ObjectStatus from \"sap/m/ObjectStatus\";\nimport OverflowToolbar from \"sap/m/OverflowToolbar\";\nimport Page from \"sap/m/Page\";\nimport Panel from \"sap/m/Panel\";\nimport Text from \"sap/m/Text\";\nimport Title from \"sap/m/Title\";\nimport Toolbar from \"sap/m/Toolbar\";\nimport ToolbarSpacer from \"sap/m/ToolbarSpacer\";\nimport VBox from \"sap/m/VBox\";\nimport Component from \"sap/ui/core/Component\";\nimport Control from \"sap/ui/core/Control\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport Element from \"sap/ui/core/Element\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport { ValueState } from \"sap/ui/core/library\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport File from \"sap/ui/core/util/File\";\nimport SimpleForm from \"sap/ui/layout/form/SimpleForm\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport FileUploader, { FileUploader$ChangeEvent } from \"sap/ui/unified/FileUploader\";\nimport Container from \"sap/ushell/Container\";\nimport ClientSideTargetResolution from \"sap/ushell/services/ClientSideTargetResolution\";\nimport Navigation from \"sap/ushell/services/Navigation\";\nimport SearchableContent, { AppData } from \"sap/ushell/services/SearchableContent\";\nimport { $AdvancedSettingsPanelSettings } from \"./AdvancedSettingsPanel\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\nimport { IAppInbounds, IAppPersonalization, ISection, ISectionAndVisualization, IVisualization } from \"./interface/AppsInterface\";\nimport { ICard, ICardActionParameters, ICardHelper, ICardHelperInstance, ICardManifest } from \"./interface/CardsInterface\";\nimport { IPage } from \"./interface/PageSpaceInterface\";\nimport { checkPanelExists } from \"./utils/Accessibility\";\nimport AppManager from \"./utils/AppManager\";\nimport { SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\nimport { addFESRSemanticStepName, FESR_EVENTS } from \"./utils/FESRUtil\";\nimport HttpHelper from \"./utils/HttpHelper\";\nimport PageManager from \"./utils/PageManager\";\nimport PersonalisationUtils from \"./utils/PersonalisationUtils\";\nimport UShellPersonalizer, { IPersonalizationData } from \"./utils/UshellPersonalizer\";\n\nexport enum ImportExportType {\n\tIMPORT = \"import\",\n\tEXPORT = \"export\"\n}\n\nexport interface IExportData {\n\tapps?: ISection[];\n\ttiles?: ISectionAndVisualization[];\n\tgroupInfo?: IAppPersonalization[];\n\thost?: string;\n\tsections?: ISection[];\n\tcreatedDate?: string;\n\tfavouritePages: ISectionAndVisualization[] | IPage[];\n\tcards?: ICardManifest[];\n\tpersonalization?: IPersonalizationData;\n}\ninterface IExportSections {\n\ttitle: string;\n\tselected: boolean | undefined;\n\tenabled: boolean | undefined;\n\tpanelClass: string;\n\tstatus?: ValueState;\n}\ntype SectionOrVisualization = ISectionAndVisualization[] | IVisualization[];\ninterface IExportImportFile {\n\thost?: string;\n\tcreatedDate?: Date;\n\tsections?: SectionOrVisualization | [];\n\tgroupInfo?: IAppPersonalization[] | IVisualization[] | [];\n\ttiles?: SectionOrVisualization;\n\tcards?: ICardManifest[];\n\tfavouritePages: IPage[] | ISectionAndVisualization[];\n\tapps?: ISection[] | [];\n}\ninterface ApiResponse {\n\tvalue: { fileContent: string }[];\n\t// Define other properties if present in ApiResponse\n}\nconst BASE_URL = \"/sap/opu/odata4/ui2/insights_srv/srvd/ui2/\";\nconst REPO_BASE_URL = BASE_URL + \"insights_cards_repo_srv/0001/\";\nconst EXPORT_API = REPO_BASE_URL + \"INSIGHTS_CARDS/com.sap.gateway.srvd.ui2.insights_cards_repo_srv.v0001.importExport?\";\nconst MYINSIGHT_SECTION_ID = \"AZHJGRIT78TG7Y65RF6EPFJ9U\";\n\nconst NewsAndPagesContainerName: string = \"sap.cux.home.NewsAndPagesContainer\";\nconst AppsContainerlName: string = \"sap.cux.home.AppsContainer\";\nconst InsightsContainerName: string = \"sap.cux.home.InsightsContainer\";\nconst PagePanelName: string = \"sap.cux.home.PagePanel\";\nconst FavAppPanelName: string = \"sap.cux.home.FavAppPanel\";\nconst RecommendedAppPanelName: string = \"sap.cux.home.RecommendedAppPanel\";\nconst TilesPanelName: string = \"sap.cux.home.TilesPanel\";\nconst CardsPanelName: string = \"sap.cux.home.CardsPanel\";\n\n/**\n *\n * Class for My Home Advanced Settings Panel.\n *\n * @extends BaseSettingsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.AdvancedSettingsPanel\n */\nexport default class AdvancedSettingsPanel extends BaseSettingsPanel {\n\tprivate oControlModel!: JSONModel;\n\tprivate oImportExportTab!: IconTabBar;\n\tprivate oFileNameInput!: Input;\n\tprivate oSelectedTab!: string | undefined;\n\tprivate oExportList!: List;\n\tprivate oImportList!: List;\n\tprivate oImportBtn!: Button;\n\tprivate oExportBtn!: Button;\n\tprivate oEventBus!: EventBus;\n\tprivate oAppManagerInstance!: AppManager;\n\tprivate oPageManagerInstance!: PageManager;\n\tprivate oPersonalizerInstance!: UShellPersonalizer;\n\tprivate cardHelperInstance!: ICardHelperInstance;\n\tprivate persData!: IPersonalizationData;\n\tprivate oContentVBox!: VBox;\n\tprivate oExportMessage!: MessageStrip;\n\tprivate oImportMessage!: MessageStrip;\n\tprivate oDetailPage!: Page;\n\tprivate oSectionsImported!: {\n\t\t[key: string]: boolean;\n\t};\n\tprivate oUserPersonalization!: {\n\t\texport: {\n\t\t\tdata?: IExportData;\n\t\t\tsections?: IExportSections[];\n\t\t\tfileName?: string;\n\t\t\tsectionsSelected?: boolean;\n\t\t\terror?: boolean;\n\t\t\terrorMessage?: string;\n\t\t\terrorType?: string;\n\t\t};\n\t\timport: {\n\t\t\tdata?: IExportData | IExportImportFile;\n\t\t\tsections?: IExportSections[];\n\t\t\tsectionsSelected?: boolean;\n\t\t\terror?: boolean;\n\t\t\terrorMessage?: string;\n\t\t\terrorType?: MessageType;\n\t\t};\n\t\tselectedTab: string;\n\t\tshowNoImport: boolean;\n\t};\n\n\tconstructor(id?: string | $AdvancedSettingsPanelSettings);\n\tconstructor(id?: string, settings?: $AdvancedSettingsPanelSettings);\n\tconstructor(id?: string, settings?: $AdvancedSettingsPanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tevents: {\n\t\t\tsectionsImported: {}\n\t\t}\n\t};\n\tprivate _recommendationSettingsPanel!: Panel;\n\tprivate _importExportPanel!: Panel;\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\t//setup panel\n\t\tthis.setProperty(\"key\", SETTINGS_PANELS_KEYS.ADVANCED);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"advancedSettings\"));\n\t\tthis.setProperty(\"icon\", \"sap-icon://grid\");\n\t\tthis.oEventBus = EventBus.getInstance();\n\t\tthis.oAppManagerInstance = AppManager.getInstance();\n\t\tthis.oSectionsImported = {};\n\t\tthis.oUserPersonalization = {\n\t\t\texport: {\n\t\t\t\tsections: [],\n\t\t\t\tfileName: \"MY_HOME\",\n\t\t\t\tsectionsSelected: false,\n\t\t\t\terror: false\n\t\t\t},\n\t\t\timport: {\n\t\t\t\tsections: [],\n\t\t\t\tsectionsSelected: false,\n\t\t\t\terror: false\n\t\t\t},\n\t\t\tselectedTab: \"export\",\n\t\t\tshowNoImport: false\n\t\t};\n\t\tthis.oControlModel = new JSONModel(this.oUserPersonalization);\n\t\t//setup layout content\n\t\tthis.addAggregation(\"content\", this.getContent());\n\t\tthis.addInnerContent();\n\t\t//fired every time on panel navigation\n\t\tthis.attachPanelNavigated(() => {\n\t\t\tvoid (async () => {\n\t\t\t\tif (!this.oPageManagerInstance) {\n\t\t\t\t\tthis.oPageManagerInstance = PageManager.getInstance(\n\t\t\t\t\t\tPersonalisationUtils.getPersContainerId(this._getPanel()),\n\t\t\t\t\t\tPersonalisationUtils.getOwnerComponent(this._getPanel()) as Component\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// subscribe to all import events for all sections\n\t\t\t\tthis.oEventBus.subscribe(\n\t\t\t\t\t\"importChannel\",\n\t\t\t\t\t\"tilesImported\",\n\t\t\t\t\t(channelId?: string, eventId?: string, data?: object) => {\n\t\t\t\t\t\tconst customData = (data as { status: boolean }).status;\n\t\t\t\t\t\t//errorstate is false when import is successful\n\t\t\t\t\t\tthis.updateImportStatus(\"insightsTiles\", !customData);\n\t\t\t\t\t},\n\t\t\t\t\tthis\n\t\t\t\t);\n\n\t\t\t\tthis.oEventBus.subscribe(\n\t\t\t\t\t\"importChannel\",\n\t\t\t\t\t\"appsImported\",\n\t\t\t\t\t(channelId?: string, eventId?: string, data?: object) => {\n\t\t\t\t\t\tconst customData = (data as { status: boolean }).status;\n\t\t\t\t\t\t//errorstate is false when import is successful\n\t\t\t\t\t\tthis.updateImportStatus(\"favApps\", !customData);\n\t\t\t\t\t},\n\t\t\t\t\tthis\n\t\t\t\t);\n\n\t\t\t\tthis.oEventBus.subscribe(\n\t\t\t\t\t\"importChannel\",\n\t\t\t\t\t\"favPagesImported\",\n\t\t\t\t\t(channelId?: string, eventId?: string, data?: object) => {\n\t\t\t\t\t\tconst customData = (data as { status: boolean }).status;\n\t\t\t\t\t\t//errorstate is false when import is successful\n\t\t\t\t\t\tthis.updateImportStatus(\"pages\", !customData);\n\t\t\t\t\t},\n\t\t\t\t\tthis\n\t\t\t\t);\n\n\t\t\t\tthis.oEventBus.subscribe(\n\t\t\t\t\t\"importChannel\",\n\t\t\t\t\t\"cardsImported\",\n\t\t\t\t\t(channelId?: string, eventId?: string, data?: object) => {\n\t\t\t\t\t\tconst customData = (data as { status: boolean }).status;\n\t\t\t\t\t\t//errorstate is false when import is successful\n\t\t\t\t\t\tthis.updateImportStatus(\"insightsCards\", !customData);\n\t\t\t\t\t},\n\t\t\t\t\tthis\n\t\t\t\t);\n\n\t\t\t\t//get the detailPage of advanced settingspanel\n\t\t\t\tthis.oDetailPage = Element.getElementById(this.getProperty(\"key\") + \"-detail-page\") as Page;\n\t\t\t\tconst layout = this._getPanel();\n\t\t\t\tif (checkPanelExists(layout, AppsContainerlName, RecommendedAppPanelName)) {\n\t\t\t\t\tvoid this._setRecommendationSettingsPanel();\n\t\t\t\t}\n\n\t\t\t\t//load user personalization data\n\t\t\t\tawait this.loadUserPersonalizationData();\n\n\t\t\t\t//import button set enabled/disabled based on sections selected\n\t\t\t\tthis.oImportBtn.setEnabled(this.oUserPersonalization.import.sectionsSelected);\n\t\t\t\tthis.enableDisableActions(this.oUserPersonalization.selectedTab as ImportExportType);\n\n\t\t\t\t//set export and import list\n\t\t\t\tthis.setImportExportList();\n\t\t\t\tthis.oExportMessage.setText(\n\t\t\t\t\tthis.oUserPersonalization.export.errorMessage ? String(this.oUserPersonalization.export.errorMessage) : \"\"\n\t\t\t\t);\n\t\t\t\tthis.oExportMessage.setType(this.oUserPersonalization.export.errorType as MessageType);\n\t\t\t\tthis.oExportMessage.setProperty(\"visible\", this.oUserPersonalization.export.error, true);\n\t\t\t\tthis.oFileNameInput.setValue(String(this.oUserPersonalization.export.fileName));\n\n\t\t\t\tthis.oImportMessage.setText(\n\t\t\t\t\tthis.oUserPersonalization.import.errorMessage ? String(this.oUserPersonalization.import.errorMessage) : \"\"\n\t\t\t\t);\n\t\t\t\tthis.oImportMessage.setType(this.oUserPersonalization.import.errorType as MessageType);\n\t\t\t\tthis.oImportMessage.setVisible(this.oUserPersonalization.import.error);\n\t\t\t})();\n\t\t});\n\t}\n\n\tprivate setImportExportList(): void {\n\t\tif (!this.oExportList) {\n\t\t\tthis.oExportList = this.setExportSectionList();\n\t\t\tthis._importExportPanel.addContent(this.oExportList);\n\t\t} else {\n\t\t\tthis.oExportList.invalidate();\n\t\t}\n\t\tif (!this.oImportList) {\n\t\t\tthis.oImportList = this.setImportSectionList();\n\t\t\tthis._importExportPanel.addContent(this.oImportList);\n\t\t} else {\n\t\t\tthis.oImportList.invalidate();\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param sType selected tab type\n\t * Set import / export button enable property and selectedkey of importexport tab\n\t */\n\tprivate enableDisableActions(sType: ImportExportType): void {\n\t\tthis.oImportExportTab?.setSelectedKey(sType);\n\t\tthis.oImportBtn?.setVisible(sType === ImportExportType.IMPORT);\n\t\tthis.oExportBtn?.setVisible(sType === ImportExportType.EXPORT);\n\t\tif (this.oUserPersonalization.import.sectionsSelected && sType === ImportExportType.IMPORT) {\n\t\t\tthis.oImportBtn.setEnabled(true);\n\t\t} else {\n\t\t\tthis.oImportBtn.setEnabled(false);\n\t\t}\n\n\t\tif (\n\t\t\tsType === ImportExportType.EXPORT &&\n\t\t\tthis.oUserPersonalization.export.fileName &&\n\t\t\tthis.oUserPersonalization.export.sections?.length &&\n\t\t\tthis.oUserPersonalization.export.sectionsSelected\n\t\t) {\n\t\t\tthis.oExportBtn.setEnabled(true);\n\t\t} else {\n\t\t\tthis.oExportBtn.setEnabled(false);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param sType selected tab type\n\t * Set import/ export message values\n\t */\n\tprivate setExportImportValues(sType: ImportExportType): void {\n\t\tif (sType === ImportExportType.EXPORT) {\n\t\t\tthis.oExportMessage.setText(\n\t\t\t\tthis.oUserPersonalization.export.errorMessage ? String(this.oUserPersonalization.export.errorMessage) : \"\"\n\t\t\t);\n\t\t\tthis.oExportMessage.setType(this.oUserPersonalization.export.errorType as MessageType);\n\t\t\tthis.oExportMessage.setProperty(\"visible\", this.oUserPersonalization.export.error, true);\n\t\t} else if (sType === ImportExportType.IMPORT) {\n\t\t\tthis.oImportMessage.setText(\n\t\t\t\tthis.oUserPersonalization.import.errorMessage ? String(this.oUserPersonalization.import.errorMessage) : \"\"\n\t\t\t);\n\t\t\tthis.oImportMessage.setType(this.oUserPersonalization.import.errorType as MessageType);\n\t\t\tthis.oImportMessage.setProperty(\"visible\", this.oUserPersonalization.import.error);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the outer content VBox for the Advanced Settings Panel.\n\t * @returns VBox\n\t */\n\tprivate getContent(): VBox {\n\t\tif (!this.oContentVBox) {\n\t\t\tthis.oContentVBox = new VBox(this.getId() + \"--idAdvancedVBox\", {\n\t\t\t\titems: [\n\t\t\t\t\tnew Text(this.getId() + \"--idPersonalizationSubheader\", {\n\t\t\t\t\t\ttext: this._i18nBundle.getText(\"advancedSettingsSubheader\")\n\t\t\t\t\t}).addStyleClass(\"sapUiSmallMarginBegin sapUiSmallMarginTop\"),\n\n\t\t\t\t\tthis._getImportExportPanel()\n\t\t\t\t]\n\t\t\t});\n\t\t}\n\t\treturn this.oContentVBox;\n\t}\n\n\t/**\n\t * Returns the import/export panel.\n\t *\n\t * @private\n\t * @returns {Panel} The import/export panel.\n\t */\n\tprivate _getImportExportPanel() {\n\t\tif (!this._importExportPanel) {\n\t\t\tthis._importExportPanel = new Panel(`${this.getId()}-importExportPanel`, {\n\t\t\t\theaderToolbar: new OverflowToolbar(`${this.getId()}-importExportPanelToolbar`, {\n\t\t\t\t\tstyle: ToolbarStyle.Clear,\n\t\t\t\t\tcontent: [\n\t\t\t\t\t\tnew Text(`${this.getId()}-importExportPanelToolbarText`, {\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"importAndExportPanelHeader\")\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tnew ToolbarSpacer(`${this.getId()}-importExportPanelToolbarSpacer`),\n\t\t\t\t\t\tthis._getImportButton(),\n\t\t\t\t\t\tthis._getExportButton()\n\t\t\t\t\t]\n\t\t\t\t}),\n\t\t\t\theaderText: this._i18nBundle.getText(\"importAndExportPanelHeader\"),\n\t\t\t\texpanded: true,\n\t\t\t\texpandable: true,\n\t\t\t\tcontent: []\n\t\t\t}).addStyleClass(\"sapUiSmallMarginTop\");\n\t\t}\n\n\t\treturn this._importExportPanel;\n\t}\n\n\t/**\n\t * Returns the import button.\n\t *\n\t * @private\n\t * @returns {Button} import button.\n\t */\n\tprivate _getImportButton() {\n\t\tif (!this.oImportBtn) {\n\t\t\tthis.oImportBtn = new Button({\n\t\t\t\tid: `${this.getId()}-importBtn`,\n\t\t\t\ttext: this._i18nBundle.getText(\"import\"),\n\t\t\t\ttype: \"Transparent\",\n\t\t\t\tpress: () => {\n\t\t\t\t\tvoid this.onImportPress();\n\t\t\t\t},\n\t\t\t\tvisible: false\n\t\t\t});\n\t\t\taddFESRSemanticStepName(this._getImportButton(), FESR_EVENTS.PRESS, \"importBtn\");\n\t\t}\n\t\treturn this.oImportBtn;\n\t}\n\n\t/**\n\t * Returns the export button.\n\t *\n\t * @private\n\t * @returns {Button} export button.\n\t */\n\tprivate _getExportButton() {\n\t\tif (!this.oExportBtn) {\n\t\t\tthis.oExportBtn = new Button({\n\t\t\t\tid: `${this.getId()}-exportBtn`,\n\t\t\t\ttext: this._i18nBundle.getText(\"export\"),\n\t\t\t\ttype: \"Transparent\",\n\t\t\t\tpress: this.onExportPress.bind(this),\n\t\t\t\tvisible: true\n\t\t\t});\n\t\t\taddFESRSemanticStepName(this.oExportBtn, FESR_EVENTS.PRESS, \"exportBtn\");\n\t\t}\n\t\treturn this.oExportBtn;\n\t}\n\n\t/**\n\t * Returns the inner content for the Advanced Settings Panel.\n\t *\n\t * @private\n\t * @returns {Control} The control containing the Advanced Settings Panel content.\n\t */\n\tprivate addInnerContent(): void {\n\t\t//if not already initialised, create the import/export tab and inner controls\n\t\tif (!this.oImportExportTab) {\n\t\t\tthis.oImportExportTab = new IconTabBar(this.getId() + \"--idImportExportTab\", {\n\t\t\t\texpandable: false,\n\t\t\t\tbackgroundDesign: \"Transparent\",\n\t\t\t\tselectedKey: this.oSelectedTab ? this.oSelectedTab : \"export\",\n\t\t\t\tselect: this.onImportExportTabSelect.bind(this)\n\t\t\t});\n\n\t\t\tconst exportTab = new IconTabFilter(this.getId() + \"--idExportTab\", {\n\t\t\t\tkey: \"export\",\n\t\t\t\ttext: this._i18nBundle.getText(\"exportFile\")\n\t\t\t});\n\t\t\t// Add FESR for export tab\n\t\t\taddFESRSemanticStepName(exportTab, FESR_EVENTS.SELECT, \"exportTab\");\n\n\t\t\t//export tab content\n\t\t\tthis.oExportMessage = new MessageStrip(this.getId() + \"--idExportMessageStrip\", {\n\t\t\t\tshowIcon: true,\n\t\t\t\tvisible: false\n\t\t\t}).addStyleClass(\"sapUiNoMarginBegin sapUiTinyMarginBottom\");\n\t\t\tconst exportText = new Text(this.getId() + \"--idExportText\", { text: this._i18nBundle.getText(\"exportText\") }).addStyleClass(\n\t\t\t\t\"advancePadding\"\n\t\t\t);\n\t\t\tconst fileInputContainer = new HBox(this.getId() + \"--idFileInputContainer\", {\n\t\t\t\talignItems: \"Center\"\n\t\t\t}).addStyleClass(\"sapUiSmallMargin\");\n\t\t\tconst filenameLabel = new Label(this.getId() + \"--idFilenameLabel\", {\n\t\t\t\ttext: this._i18nBundle.getText(\"exportFileNameLabel\"),\n\t\t\t\tlabelFor: \"idTitleFilenameInput\",\n\t\t\t\trequired: true,\n\t\t\t\tshowColon: true\n\t\t\t}).addStyleClass(\"sapUiSmallMarginEnd\");\n\t\t\tthis.oFileNameInput = new Input(this.getId() + \"--idFileNameInput\", {\n\t\t\t\tariaLabelledBy: [`${this.getId()}--idExportText`, `${this.getId()}--idFilenameLabel`],\n\t\t\t\trequired: true,\n\t\t\t\twidth: \"13rem\",\n\t\t\t\tliveChange: this.onFileNameInputChange.bind(this),\n\t\t\t\tvalue: \"\"\n\t\t\t});\n\n\t\t\tfileInputContainer.addItem(filenameLabel);\n\t\t\tfileInputContainer.addItem(this.oFileNameInput);\n\n\t\t\texportTab.addContent(this.oExportMessage);\n\t\t\texportTab.addContent(exportText);\n\t\t\texportTab.addContent(fileInputContainer);\n\n\t\t\t//import tab\n\t\t\tconst importTab = new IconTabFilter(this.getId() + \"--idImportTab\", {\n\t\t\t\tkey: \"import\",\n\t\t\t\ttext: this._i18nBundle.getText(\"importFile\")\n\t\t\t});\n\t\t\t// Add FESR for import tab\n\t\t\taddFESRSemanticStepName(importTab, FESR_EVENTS.SELECT, \"importTab\");\n\n\t\t\t//import tab content\n\t\t\tthis.oImportMessage = new MessageStrip(this.getId() + \"--idImportMessageStrip\", {\n\t\t\t\ttext: \"{advsettings>/import/errorMessage}\",\n\t\t\t\ttype: \"{advsettings>/import/errorType}\",\n\t\t\t\tshowIcon: true,\n\t\t\t\tvisible: false\n\t\t\t}).addStyleClass(\"sapUiNoMarginBegin sapUiTinyMarginBottom\");\n\t\t\tconst importText = new Text(this.getId() + \"--idImportText\", { text: this._i18nBundle.getText(\"importText\") }).addStyleClass(\n\t\t\t\t\"advancePadding\"\n\t\t\t);\n\t\t\tconst importSimpleForm = new SimpleForm(this.getId() + \"--idImportSimpleForm\", {\n\t\t\t\teditable: true,\n\t\t\t\tlayout: \"ResponsiveGridLayout\",\n\t\t\t\tlabelSpanS: 4,\n\t\t\t\tlabelSpanM: 4\n\t\t\t});\n\t\t\tconst fileUploader = new FileUploader(this.getId() + \"--idImportFileUploader\", {\n\t\t\t\ttooltip: this._i18nBundle.getText(\"uploadImportFile\"),\n\t\t\t\tfileType: [\"txt\"],\n\t\t\t\tchange: (oEvent: FileUploader$ChangeEvent) => {\n\t\t\t\t\tvoid this.onFileImport(oEvent);\n\t\t\t\t},\n\t\t\t\tmaximumFileSize: 25,\n\t\t\t\tsameFilenameAllowed: true,\n\t\t\t\twidth: \"80%\",\n\t\t\t\tariaLabelledBy: [`${this.getId()}--idImportText`],\n\t\t\t\tbuttonText: this._i18nBundle.getText(\"importFileUploaderButton\")\n\t\t\t});\n\t\t\timportSimpleForm.addContent(fileUploader);\n\t\t\timportTab.addContent(this.oImportMessage);\n\t\t\timportTab.addContent(importText);\n\t\t\timportTab.addContent(importSimpleForm);\n\n\t\t\tconst classicImportTab = new IconTabFilter(this.getId() + \"--idClassicImportTab\", {\n\t\t\t\tkey: \"classicImport\",\n\t\t\t\ttext: this._i18nBundle.getText(\"classicImport\")\n\t\t\t});\n\t\t\t// Add FESR for classic import tab\n\t\t\taddFESRSemanticStepName(classicImportTab, FESR_EVENTS.SELECT, \"classicImportTab\");\n\t\t\tconst classicText = new Text(this.getId() + \"--idClassicImportText\", {\n\t\t\t\ttext: this._i18nBundle.getText(\"classicImportText\")\n\t\t\t}).addStyleClass(\"sapUiSmallMarginBottom advancePadding\");\n\t\t\tconst resetImportAppsNow = new Button(this.getId() + \"--resetImportAppsNow\", {\n\t\t\t\ttext: this._i18nBundle.getText(\"resetButton\"),\n\t\t\t\tpress: this.onResetImportApps.bind(this),\n\t\t\t\tariaLabelledBy: [`${this.getId()}--idClassicImportText`]\n\t\t\t}).addStyleClass(\"resetButtonPadding\");\n\t\t\taddFESRSemanticStepName(resetImportAppsNow, FESR_EVENTS.PRESS, \"resetImportApps\");\n\t\t\tclassicImportTab.addContent(classicText);\n\t\t\tclassicImportTab.addContent(resetImportAppsNow);\n\n\t\t\tthis.oImportExportTab.addItem(exportTab);\n\t\t\tthis.oImportExportTab.addItem(importTab);\n\t\t\tthis.oImportExportTab.addItem(classicImportTab);\n\t\t\tthis._importExportPanel.addContent(this.oImportExportTab);\n\t\t\tthis._importExportPanel.addContent(this.setExportSectionList());\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @returns {List} export section list\n\t */\n\tprivate setExportSectionList(): List {\n\t\tconst exportSectionsList = new List(`${this.getId()}--exportSectionsList`, {\n\t\t\twidth: \"calc(100% - 2rem)\",\n\t\t\tgrowingThreshold: 50,\n\t\t\tincludeItemInSelection: true,\n\t\t\tvisible: \"{= ${advsettings>/selectedTab} === 'export'}\"\n\t\t}).addStyleClass(\"sapUiSmallMarginBegin\");\n\t\tconst headerToolbar = new Toolbar(`${this.getId()}--exportSectionsListToolbar`, {\n\t\t\tcontent: [\n\t\t\t\tnew Title(this.getId() + \"--idExportSectionsListHeaderText\", {\n\t\t\t\t\ttext: this._i18nBundle.getText(\"sectionExportListHeader\")\n\t\t\t\t}).addStyleClass(\"sectionTitle\")\n\t\t\t]\n\t\t});\n\t\texportSectionsList.setHeaderToolbar(headerToolbar);\n\t\t//set model for the list and bind items to path advsettings>/export/sections\n\t\texportSectionsList.setModel(this.oControlModel, \"advsettings\");\n\n\t\texportSectionsList.bindItems({\n\t\t\tpath: \"advsettings>/export/sections\",\n\t\t\ttemplate: new CustomListItem(`${this.getId()}--exportCustomListItem`, {\n\t\t\t\tvisible: {\n\t\t\t\t\tpath: \"advsettings>panelClass\",\n\t\t\t\t\tformatter: this._isPanelAvailable.bind(this)\n\t\t\t\t},\n\t\t\t\taccDescription: {\n\t\t\t\t\tpath: \"advsettings>title\",\n\t\t\t\t\tformatter: this._formatAccDescription.bind(this)\n\t\t\t\t},\n\t\t\t\tcontent: [\n\t\t\t\t\tnew HBox(`${this.getId()}--exportContentBox`, {\n\t\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\tnew CheckBox(`${this.getId()}--exportListItemCheck`, {\n\t\t\t\t\t\t\t\tselect: this.onSectionsSelectionChange.bind(this, false),\n\t\t\t\t\t\t\t\tselected: \"{advsettings>selected}\",\n\t\t\t\t\t\t\t\tenabled: \"{advsettings>enabled}\"\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew Text(`${this.getId()}--exportListItemText`, { text: \"{advsettings>title}\" })\n\t\t\t\t\t\t],\n\t\t\t\t\t\twidth: \"100%\"\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t})\n\t\t});\n\t\tthis.oExportList = exportSectionsList;\n\t\treturn exportSectionsList;\n\t}\n\n\t/**\n\t * Returns the accessibility description for a given title.\n\t *\n\t * @param title The title of the list item.\n\t * @returns The formatted accessibility description string.\n\t */\n\tprivate _formatAccDescription(title: string): string {\n\t\tconst instructionText = this._i18nBundle.getText(\"checkboxInstructionText\");\n\t\treturn `${title}. ${instructionText}`;\n\t}\n\n\tprivate _isPanelAvailable(panelClassName: string): boolean {\n\t\tconst panelMappings: Record<string, { containerName: string; panelName: string }> = {\n\t\t\t[FavAppPanelName]: { containerName: AppsContainerlName, panelName: FavAppPanelName },\n\t\t\t[PagePanelName]: { containerName: NewsAndPagesContainerName, panelName: PagePanelName },\n\t\t\t[TilesPanelName]: { containerName: InsightsContainerName, panelName: TilesPanelName },\n\t\t\t[CardsPanelName]: { containerName: InsightsContainerName, panelName: CardsPanelName }\n\t\t};\n\n\t\tconst mapping = panelMappings[panelClassName];\n\t\tif (!mapping) return false;\n\t\tconst layout = this._getPanel();\n\t\treturn checkPanelExists(layout, mapping.containerName, mapping.panelName);\n\t}\n\n\t/**\n\t *\n\t * @returns {List} import section list\n\t */\n\tprivate setImportSectionList(): List {\n\t\tconst importSectionsList = new List(this.getId() + \"--idImportSectionsList\", {\n\t\t\twidth: \"calc(100% - 2rem)\",\n\t\t\tgrowingThreshold: 50,\n\t\t\tincludeItemInSelection: true,\n\t\t\tvisible:\n\t\t\t\t\"{= ${advsettings>/selectedTab} === 'import' && (${advsettings>/import/sections/length} > 0 || ${advsettings>/showNoImport})}\"\n\t\t}).addStyleClass(\"sapUiSmallMarginBegin\");\n\t\tconst headerToolbar = new Toolbar(this.getId() + \"--idImportSectionsListToolbar\", {\n\t\t\tcontent: [\n\t\t\t\tnew Title(`${this.getId()}--importSectionsListHeaderText`, {\n\t\t\t\t\ttext: this._i18nBundle.getText(\"sectionImportListHeader\")\n\t\t\t\t}).addStyleClass(\"sectionTitle\")\n\t\t\t]\n\t\t});\n\t\timportSectionsList.setHeaderToolbar(headerToolbar);\n\t\t//set model for the list and bind items to path advsettings>/import/sections\n\t\timportSectionsList.setModel(this.oControlModel, \"advsettings\");\n\t\timportSectionsList.bindItems({\n\t\t\tpath: \"advsettings>/import/sections\",\n\t\t\ttemplate: new CustomListItem(`${this.getId()}--importCustomListItem`, {\n\t\t\t\taccDescription: {\n\t\t\t\t\tpath: \"advsettings>title\",\n\t\t\t\t\tformatter: this._formatAccDescription.bind(this)\n\t\t\t\t},\n\t\t\t\tcontent: [\n\t\t\t\t\tnew HBox(`${this.getId()}--importListCheckBox`, {\n\t\t\t\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\tnew HBox(`${this.getId()}--importListItemCheckHBox`, {\n\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\tnew CheckBox(`${this.getId()}--importListItemCheck`, {\n\t\t\t\t\t\t\t\t\t\tselect: this.onSectionsSelectionChange.bind(this, true),\n\t\t\t\t\t\t\t\t\t\tselected: \"{advsettings>selected}\",\n\t\t\t\t\t\t\t\t\t\tenabled: \"{advsettings>enabled}\"\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tnew Text(`${this.getId()}--importListItemText`, { text: \"{advsettings>title}\" }).addStyleClass(\n\t\t\t\t\t\t\t\t\t\t\"sapUiTinyMarginTop\"\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew HBox(`${this.getId()}--importStatusHBox`, {\n\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\tnew ObjectStatus(`${this.getId()}--importItemStatus`, {\n\t\t\t\t\t\t\t\t\t\ticon: \"{= ${advsettings>status} === 'Success' ? 'sap-icon://status-positive' : 'sap-icon://status-negative' }\",\n\t\t\t\t\t\t\t\t\t\tstate: \"{advsettings>status}\",\n\t\t\t\t\t\t\t\t\t\tvisible: \"{= ${advsettings>status} !== 'None'}\"\n\t\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiSmallMarginEnd sapUiTinyMarginTop\")\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t],\n\t\t\t\t\t\twidth: \"100%\"\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t})\n\t\t});\n\n\t\treturn importSectionsList;\n\t}\n\n\t/**\n\t * Selection change event handler for export and import sections\n\t * @param isImport boolean value to check if import or export tab is selected\n\t */\n\tprivate onSectionsSelectionChange(isImport: boolean): void {\n\t\tconst allSections = isImport ? this.oImportList.getItems() : this.oExportList.getItems();\n\t\tlet isSelected = false;\n\t\tlet content, innerCheckbox;\n\t\tconst isSectionSelected = allSections.some(function (oSection) {\n\t\t\tif (!isImport) {\n\t\t\t\tcontent = oSection.getAggregation(\"content\") as Control[];\n\t\t\t\tinnerCheckbox = (content[0] as HBox).getItems()[0] as CheckBox;\n\t\t\t\tisSelected = innerCheckbox.getSelected();\n\t\t\t} else {\n\t\t\t\tcontent = oSection.getAggregation(\"content\") as Control[];\n\t\t\t\tconst innerHbox = (content[0] as HBox).getItems()[0] as HBox;\n\t\t\t\tinnerCheckbox = innerHbox.getItems()[0] as CheckBox;\n\t\t\t\tisSelected = innerCheckbox.getSelected();\n\t\t\t}\n\t\t\treturn isSelected;\n\t\t});\n\t\tthis.oControlModel.setProperty((isImport ? \"/import\" : \"/export\") + \"/sectionsSelected\", isSectionSelected);\n\t\tthis.enableDisableActions((isImport ? \"import\" : \"export\") as ImportExportType);\n\t}\n\n\t/**\n\t * Handler for import button press\n\t *\n\t */\n\tprivate async onImportPress(): Promise<void> {\n\t\tthis.attachEvent(\"sectionsImported\", () => {\n\t\t\tthis.oDetailPage.setBusy(false);\n\t\t\tthis.oControlModel.setProperty(\"/import/sectionsSelected\", false);\n\t\t});\n\t\tthis.oImportBtn.setEnabled(false);\n\t\tthis.oDetailPage.setBusy(true);\n\t\tthis.handleUserPersonalizationError(ImportExportType.IMPORT, false, \"\", \"\");\n\t\tconst oExportData = this.oUserPersonalization.import.data;\n\t\ttry {\n\t\t\tconst aSelectedSections = await this.importSections(oExportData);\n\t\t\tconst bShowError: boolean = aSelectedSections.some((oSection) => {\n\t\t\t\treturn oSection.status === ValueState.Error;\n\t\t\t});\n\t\t\tif (bShowError) {\n\t\t\t\tthis.handleUserPersonalizationError(\n\t\t\t\t\tImportExportType.IMPORT,\n\t\t\t\t\ttrue,\n\t\t\t\t\tString(this._i18nBundle.getText(\"userPersonalizationImportError\")),\n\t\t\t\t\t\"Warning\"\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.oControlModel.setProperty(\"/import/sections\", aSelectedSections);\n\t\t} catch (oErr: unknown) {\n\t\t\tLog.error(\"importpress\", String(oErr));\n\t\t\tthis.handleUserPersonalizationError(\n\t\t\t\tImportExportType.IMPORT,\n\t\t\t\ttrue,\n\t\t\t\tString(this._i18nBundle.getText(\"userPersonalizationImportError\")),\n\t\t\t\t\"Error\"\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Invokes import of apps,tiles,pages and cards data\n\t * @param oImportData import data\n\t * @returns Promise<IExportSections[]>\n\t */\n\tprivate importSections(oImportData?: IExportData | IExportImportFile): Promise<IExportSections[] | []> {\n\t\tconst sectionImportChain: (() => Promise<void>)[] = [];\n\t\tconst aPromise: Promise<void>[] = [];\n\t\tconst oSelectedSections = this.oControlModel.getProperty(\"/import/sections\") as IExportSections[];\n\n\t\tsectionImportChain.push(() => this.importApps(oImportData));\n\t\tsectionImportChain.push(() => this.importTiles(oImportData));\n\t\tsectionImportChain.push(() => this.importFavPages(oImportData));\n\n\t\t// Execute apps, tiles, and pages sequentially\n\t\taPromise.push(\n\t\t\tsectionImportChain.reduce((chain, current) => {\n\t\t\t\treturn chain.then(() => current());\n\t\t\t}, Promise.resolve())\n\t\t);\n\n\t\taPromise.push(this.importCards(oImportData));\n\n\t\treturn Promise.all(aPromise)\n\t\t\t.then(() => {\n\t\t\t\treturn oSelectedSections;\n\t\t\t})\n\t\t\t.catch((oError: Error) => {\n\t\t\t\tLog.error(\"import failed\", String(oError));\n\t\t\t\treturn [];\n\t\t\t});\n\t}\n\n\tprivate importApps(oImportData?: IExportData | IExportImportFile): Promise<void> {\n\t\treturn new Promise<void>((resolve) => {\n\t\t\tconst oSelectedSections = this.oControlModel.getProperty(\"/import/sections\") as IExportSections[];\n\t\t\tif (\n\t\t\t\toImportData?.apps &&\n\t\t\t\toImportData?.apps.length > 0 &&\n\t\t\t\tthis.isSectionSelected(oSelectedSections, String(this._i18nBundle.getText(\"favApps\")))\n\t\t\t) {\n\t\t\t\tthis.oSectionsImported[String(this._i18nBundle.getText(\"favApps\"))] = false;\n\t\t\t\tthis.oEventBus.publish(\"importChannel\", \"appsImport\", { apps: oImportData.apps, groupInfo: oImportData.groupInfo });\n\t\t\t\tresolve();\n\t\t\t} else {\n\t\t\t\t// if no apps / apps selected then resolve the promise and mark the section as imported\n\t\t\t\tthis.oSectionsImported[String(this._i18nBundle.getText(\"favApps\"))] = true;\n\t\t\t\tthis.updateImportStatus(\"favApps\");\n\t\t\t\tresolve(); // Resolve the promise if condition doesn't meet\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate importTiles(oImportData?: IExportData | IExportImportFile): Promise<void> {\n\t\treturn new Promise<void>((resolve) => {\n\t\t\tconst oSelectedSections = this.oControlModel.getProperty(\"/import/sections\") as IExportSections[];\n\t\t\tif (\n\t\t\t\toImportData?.tiles &&\n\t\t\t\toImportData.tiles.length > 0 &&\n\t\t\t\tthis.isSectionSelected(oSelectedSections, String(this._i18nBundle.getText(\"insightsTiles\")))\n\t\t\t) {\n\t\t\t\tthis.oSectionsImported[String(this._i18nBundle.getText(\"insightsTiles\"))] = false;\n\t\t\t\tthis.oEventBus.publish(\"importChannel\", \"tilesImport\", oImportData.tiles);\n\t\t\t\tresolve();\n\t\t\t} else {\n\t\t\t\t// if no tiles / tiles section not selected then resolve the promise and mark the section as imported\n\t\t\t\tthis.oSectionsImported[String(this._i18nBundle.getText(\"insightsTiles\"))] = true;\n\t\t\t\tthis.updateImportStatus(\"insightsTiles\");\n\t\t\t\tresolve(); // Resolve the promise if condition doesn't meet\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate importFavPages(oImportData?: IExportData | IExportImportFile): Promise<void> {\n\t\treturn new Promise<void>((resolve) => {\n\t\t\tconst oSelectedSections = this.oControlModel.getProperty(\"/import/sections\") as IExportSections[];\n\t\t\tif (\n\t\t\t\toImportData?.favouritePages &&\n\t\t\t\toImportData.favouritePages.length > 0 &&\n\t\t\t\tthis.isSectionSelected(oSelectedSections, String(this._i18nBundle.getText(\"pages\")))\n\t\t\t) {\n\t\t\t\tthis.oSectionsImported[String(this._i18nBundle.getText(\"pages\"))] = false;\n\t\t\t\tthis.oEventBus.publish(\"importChannel\", \"favPagesImport\", oImportData.favouritePages);\n\t\t\t\tresolve();\n\t\t\t} else {\n\t\t\t\t// if no tiles / tiles section not selected then resolve the promise and mark the section as imported\n\t\t\t\tthis.oSectionsImported[String(this._i18nBundle.getText(\"pages\"))] = true;\n\t\t\t\tthis.updateImportStatus(\"pages\");\n\t\t\t\tresolve(); // Resolve the promise if condition doesn't meet\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate importCards(oImportData?: IExportData | IExportImportFile): Promise<void> {\n\t\treturn new Promise<void>((resolve) => {\n\t\t\tconst oSelectedSections = this.oControlModel.getProperty(\"/import/sections\") as IExportSections[];\n\t\t\tif (\n\t\t\t\toImportData?.cards &&\n\t\t\t\toImportData.cards.length > 0 &&\n\t\t\t\tthis.isSectionSelected(oSelectedSections, String(this._i18nBundle.getText(\"insightsCards\")))\n\t\t\t) {\n\t\t\t\tthis.oSectionsImported[String(this._i18nBundle.getText(\"insightsCards\"))] = false;\n\t\t\t\tthis.oEventBus.publish(\"importChannel\", \"cardsImport\", oImportData.cards);\n\t\t\t\tresolve();\n\t\t\t} else {\n\t\t\t\t// if no tiles / tiles section not selected then resolve the promise and mark the section as imported\n\t\t\t\tthis.oSectionsImported[String(this._i18nBundle.getText(\"insightsCards\"))] = true;\n\t\t\t\tthis.updateImportStatus(\"insightsCards\");\n\t\t\t\tresolve(); // Resolve the promise if condition doesn't meet\n\t\t\t}\n\t\t});\n\t}\n\t/**\n\t *  Updates status of sections being imported\n\t *\t@param {string} sSectionTitle - section title\n\t * \t@param {boolean} errorState - error state\n\t * \t@returns {void}\n\t */\n\tprivate updateImportStatus(sSectionTitle: string, errorState?: boolean): void {\n\t\tconst sSectionId = String(this._i18nBundle.getText(sSectionTitle));\n\t\tconst oSelectedSections = this.oControlModel.getProperty(\"/import/sections\") as IExportSections[];\n\t\tconst oSection = oSelectedSections.find(function (oSec) {\n\t\t\treturn oSec.title === sSectionId;\n\t\t});\n\t\tif (oSection) {\n\t\t\tif (errorState !== undefined) {\n\t\t\t\toSection.status = errorState ? ValueState.Error : ValueState.Success;\n\t\t\t} else {\n\t\t\t\toSection.status = ValueState.None;\n\t\t\t}\n\t\t\t//if a section's status has become success then disable that particular section\n\t\t\tif (oSection.status === ValueState.Success) {\n\t\t\t\toSection.enabled = false;\n\t\t\t}\n\t\t}\n\t\tthis.oSectionsImported[sSectionId] = true;\n\t\tconst sectionTitles = Object.keys(this.oSectionsImported);\n\t\t// if every section has been imported successfully then fire sectionsimported\n\t\tconst imported = sectionTitles.every((sTitle) => {\n\t\t\treturn this.oSectionsImported[sTitle];\n\t\t});\n\t\tif (imported) {\n\t\t\tthis.fireEvent(\"sectionsImported\");\n\t\t}\n\t}\n\n\t/**\n\t *  Resets the import model values\n\t *  @param {boolean} onOpen - value to show if the reset call is happening while opening the dialog for the first time\n\t * \t@private\n\t */\n\tpublic resetImportModel(onOpen?: boolean): void {\n\t\tthis.oControlModel.setProperty(\"/import/sections\", []);\n\t\tthis.oControlModel.setProperty(\"/import/sectionsSelected\", false);\n\t\tthis.oControlModel.setProperty(\"/import/error\", false);\n\t\t// if called on settingsdialog open , reset value of selectedtab and fileUploader value\n\t\tif (onOpen) {\n\t\t\tthis.oControlModel.setProperty(\"/selectedTab\", \"export\");\n\t\t\t(Element.getElementById(this.getId() + \"--idImportFileUploader\") as FileUploader)?.setValue(\"\");\n\t\t}\n\t}\n\n\t/**\n\t * \tFind visualizations that are not already present in the favsections\n\t * @param aImportedSections\n\t * @returns {Promise<ISection[] | []>} aImportedSections\n\t */\n\tprivate async getDeltaSectionViz(aImportedSections: ISection[]): Promise<ISection[] | []> {\n\t\ttry {\n\t\t\tconst favSections: ISection[] = await this.oAppManagerInstance._getSections(true);\n\n\t\t\taImportedSections.forEach((oImportedSection) => {\n\t\t\t\tlet oSection: ISection | undefined;\n\t\t\t\tif (oImportedSection.default) {\n\t\t\t\t\toSection = favSections.find((oSec) => oSec.default);\n\t\t\t\t} else {\n\t\t\t\t\toSection = favSections.find((oSec) => oSec.id === oImportedSection.id);\n\t\t\t\t}\n\t\t\t\tif (oSection) {\n\t\t\t\t\t// find visualizations that are not already present in the favsections\n\t\t\t\t\tconst aDelta = oImportedSection.visualizations?.filter((oImportViz) => {\n\t\t\t\t\t\treturn oSection.visualizations?.every((oViz) =>\n\t\t\t\t\t\t\toViz.isBookmark ? oViz.targetURL !== oImportViz.targetURL : oViz.vizId !== oImportViz.vizId\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\toImportedSection.visualizations = aDelta;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn aImportedSections;\n\t\t} catch (error) {\n\t\t\tLog.error(\"Error occurred while fetching delta section visualizations:\" + String(error));\n\t\t\treturn []; // Return an empty array in case of error\n\t\t}\n\t}\n\n\tprivate getDeltaAuthSectionViz(aImportedSections: ISection[]): Promise<[] | ISection[]> {\n\t\t// Get delta visualization\n\t\tif (aImportedSections && aImportedSections.length) {\n\t\t\treturn this.getDeltaSectionViz(aImportedSections)\n\t\t\t\t.then((aDeltaSections: ISection[]) => {\n\t\t\t\t\t// Filter authorized section visualizations\n\t\t\t\t\treturn this.filterAuthSectionViz(aDeltaSections);\n\t\t\t\t})\n\t\t\t\t.catch((oError) => {\n\t\t\t\t\tLog.error(String(oError));\n\t\t\t\t\treturn [];\n\t\t\t\t});\n\t\t}\n\t\treturn Promise.resolve([]); // Return a promise resolving to void\n\t}\n\n\tprivate async filterAuthSectionViz(aSections: ISection[]): Promise<ISection[]> {\n\t\tconst _getCatalogApps = function () {\n\t\t\treturn Container.getServiceAsync<SearchableContent>(\"SearchableContent\").then(function (SearchableContent) {\n\t\t\t\treturn SearchableContent.getApps({ includeAppsWithoutVisualizations: false });\n\t\t\t});\n\t\t};\n\n\t\tconst _filterAuthViz = function (aAppCatalog: AppData[], aViz: IVisualization[] | undefined) {\n\t\t\tconst aSectionViz: IVisualization[] | undefined = [];\n\t\t\taViz?.forEach(function (oViz) {\n\t\t\t\tfor (let appCatalog of aAppCatalog) {\n\t\t\t\t\tconst oAppCatalog = appCatalog;\n\t\t\t\t\tconst oSectionViz = oAppCatalog.visualizations.find(function (oCatalogViz: IVisualization) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\toCatalogViz.vizId === oViz.vizId ||\n\t\t\t\t\t\t\t(oViz.isBookmark &&\n\t\t\t\t\t\t\t\toCatalogViz.target &&\n\t\t\t\t\t\t\t\toViz.target?.action === oCatalogViz.target.action &&\n\t\t\t\t\t\t\t\toViz.target?.semanticObject === oCatalogViz.target.semanticObject)\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\tif (oSectionViz) {\n\t\t\t\t\t\toSectionViz.displayFormatHint =\n\t\t\t\t\t\t\toViz.displayFormatHint !== \"standard\" ? String(oViz.displayFormatHint) : String(oSectionViz.displayFormatHint);\n\t\t\t\t\t\taSectionViz.push(oViz.isBookmark ? oViz : oSectionViz);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn aSectionViz;\n\t\t};\n\n\t\treturn await _getCatalogApps().then(function (aAppCatalog) {\n\t\t\treturn aSections.map(function (oSection) {\n\t\t\t\toSection.visualizations = _filterAuthViz(aAppCatalog, oSection.visualizations);\n\t\t\t\treturn oSection;\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Filter authorized favorite pages\n\t *\n\t * @param {Array} aFavPages - array of favorite pages\n\t * @returns {Promise} resolves to an array of authorized pages\n\t */\n\tprivate async filterAuthFavPages(aFavPages: IPage[]): Promise<IPage[] | []> {\n\t\tif (aFavPages && aFavPages.length > 0) {\n\t\t\treturn await this.oPageManagerInstance.fetchAllAvailablePages().then(function (aAvailablePages) {\n\t\t\t\treturn aFavPages.filter(function (oimportedPage) {\n\t\t\t\t\treturn aAvailablePages.filter(function (oAvailabePage) {\n\t\t\t\t\t\treturn oAvailabePage.pageId === oimportedPage.pageId && oAvailabePage.spaceId === oimportedPage.spaceId;\n\t\t\t\t\t}).length;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\t/**\n\t * Filter authorized cards\n\t *\n\t * @param {Array} aCards - array of cards\n\t * @returns {Promise} resolves to an array of authorized cards\n\t */\n\tprivate async filterAuthCards(aCards: ICardManifest[] | void): Promise<ICardManifest[] | undefined> {\n\t\tconst _getParentApp = function (aAvailableApps: IAppInbounds[], oCard: ICardManifest) {\n\t\t\treturn aAvailableApps.find(function (oApp) {\n\t\t\t\treturn (\n\t\t\t\t\toApp.resolutionResult &&\n\t\t\t\t\toApp.resolutionResult.applicationDependencies &&\n\t\t\t\t\toCard[\"sap.insights\"] &&\n\t\t\t\t\toApp.resolutionResult.applicationDependencies.name === oCard[\"sap.insights\"].parentAppId\n\t\t\t\t);\n\t\t\t});\n\t\t};\n\n\t\tconst _isNavigationSupported = function (oService: Navigation, oParentApp: IAppInbounds | undefined) {\n\t\t\tif (oParentApp) {\n\t\t\t\treturn oService\n\t\t\t\t\t.isNavigationSupported([\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\tsemanticObject: oParentApp.semanticObject,\n\t\t\t\t\t\t\t\taction: oParentApp.action\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t])\n\t\t\t\t\t.then(function (aResponses) {\n\t\t\t\t\t\treturn aResponses[0].supported || false;\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn Promise.resolve(false);\n\t\t};\n\n\t\tif (aCards && aCards.length > 0) {\n\t\t\treturn await Promise.all([\n\t\t\t\tContainer.getServiceAsync<ClientSideTargetResolution>(\"ClientSideTargetResolution\"),\n\t\t\t\tContainer.getServiceAsync<Navigation>(\"Navigation\")\n\t\t\t]).then(function (aServices: [ClientSideTargetResolution, Navigation]) {\n\t\t\t\tconst clientSideTargetResolution = aServices[0];\n\t\t\t\tconst Navigation = aServices[1];\n\t\t\t\tconst aAvailableApps = clientSideTargetResolution._oAdapter._aInbounds || [];\n\n\t\t\t\treturn aCards.reduce<Promise<ICardManifest[]>>(async (promise: Promise<ICardManifest[]>, oCard: ICardManifest) => {\n\t\t\t\t\tconst aAuthCards: ICardManifest[] = await promise;\n\t\t\t\t\tconst oParentApp = _getParentApp(aAvailableApps, oCard);\n\t\t\t\t\tconst bIsNavigationSupported = await _isNavigationSupported(Navigation, oParentApp);\n\t\t\t\t\tif (bIsNavigationSupported) {\n\t\t\t\t\t\taAuthCards.push(oCard);\n\t\t\t\t\t}\n\t\t\t\t\treturn aAuthCards;\n\t\t\t\t}, Promise.resolve([]));\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\t/**\n\t * Handles change event for fileuploader on import file\n\t *\n\t * @returns {Promise} resolves to available import sections being shown\n\t */\n\tprivate onFileImport(oEvent: FileUploader$ChangeEvent): Promise<void> {\n\t\tthis.handleUserPersonalizationError(ImportExportType.IMPORT, false, \"\", \"\");\n\t\tthis.resetImportModel();\n\t\tthis.oDetailPage.setBusy(true);\n\n\t\tconst files = oEvent.getParameter(\"files\");\n\t\tconst oFile = files && (files[0] as File);\n\n\t\treturn this.readFileContent(oFile)\n\t\t\t.then((oFileContent) => {\n\t\t\t\t// btoa doesn't support the characters outside latin-1 range, so first encode to utf-8\n\t\t\t\tconst oEncodedFileContent = window.btoa(\n\t\t\t\t\tencodeURIComponent(oFileContent).replace(/%([0-9A-F]{2})/g, function (match, p1: string) {\n\t\t\t\t\t\treturn String.fromCharCode(parseInt(p1, 16)); // Convert p1 to a number using parseInt //String.fromCharCode(\"0x\" + p1);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\treturn HttpHelper.Post(EXPORT_API, { fileContent: oEncodedFileContent }).then((oResponse: unknown) => {\n\t\t\t\t\tif (oResponse && (oResponse as { error: string }).error) {\n\t\t\t\t\t\tthrow new Error((oResponse as { error: string }).error);\n\t\t\t\t\t}\n\t\t\t\t\tif (oResponse && (oResponse as { value: string[] }).value && (oResponse as { value: string[] }).value.length) {\n\t\t\t\t\t\tconst oImportDataString: string | undefined = (oResponse as ApiResponse).value[0].fileContent;\n\n\t\t\t\t\t\t// Parse the stringified JSON into the defined type\n\t\t\t\t\t\tconst oImportData = JSON.parse(oImportDataString) as IExportImportFile;\n\t\t\t\t\t\tif (oImportData.host === window.location.host) {\n\t\t\t\t\t\t\tconst aImportedSections = (oImportData.sections as ISection[]) || ([] as ISection[]);\n\t\t\t\t\t\t\taImportedSections.push({\n\t\t\t\t\t\t\t\tid: MYINSIGHT_SECTION_ID,\n\t\t\t\t\t\t\t\tvisualizations: (oImportData.tiles as IVisualization[]) || []\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t//filter authorized data\n\t\t\t\t\t\t\treturn this.filterAuthorizedImportData(aImportedSections, oImportData);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.handleUserPersonalizationError(\n\t\t\t\t\t\t\t\tImportExportType.IMPORT,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\tString(this._i18nBundle.getText(\"importSourceErrorMessage\")),\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((oError) => {\n\t\t\t\tLog.error(String(oError));\n\t\t\t\tthis.handleUserPersonalizationError(ImportExportType.IMPORT, true, \"\", \"\");\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tthis.oDetailPage.setBusy(false);\n\t\t\t\tthis.enableDisableActions(ImportExportType.IMPORT);\n\t\t\t});\n\t}\n\n\tprivate filterAuthorizedImportData(aImportedSections: ISection[], oImportData: IExportImportFile): Promise<void> {\n\t\treturn Promise.all([\n\t\t\tthis.getDeltaAuthSectionViz(aImportedSections),\n\t\t\tthis.filterAuthFavPages(oImportData.favouritePages),\n\t\t\tthis.filterAuthCards(oImportData.cards),\n\t\t\tthis.getInsightCards() // check : send only cards count here as all cards are not required\n\t\t]).then(async (aResponse) => {\n\t\t\tconst aAuthSections = aResponse[0] as ISection[];\n\t\t\tconst aAuthFavPages = aResponse[1];\n\t\t\tconst aAuthCards = aResponse[2];\n\t\t\tconst iInsightCardsCount = aResponse[3].getProperty(\"/cardCount\") as number;\n\t\t\toImportData.apps = aAuthSections.filter(function (oSection) {\n\t\t\t\treturn oSection.id !== MYINSIGHT_SECTION_ID;\n\t\t\t});\n\t\t\toImportData.tiles =\n\t\t\t\t(\n\t\t\t\t\taAuthSections.find(function (oSection) {\n\t\t\t\t\t\treturn oSection.id === MYINSIGHT_SECTION_ID;\n\t\t\t\t\t}) || {}\n\t\t\t\t).visualizations || [];\n\t\t\toImportData.favouritePages = aAuthFavPages;\n\t\t\toImportData.cards = aAuthCards || [];\n\t\t\tconst iTotalCardCount = iInsightCardsCount + Number(aAuthCards?.length);\n\t\t\tif (iTotalCardCount > 99) {\n\t\t\t\tthis.handleUserPersonalizationError(\n\t\t\t\t\tImportExportType.IMPORT,\n\t\t\t\t\ttrue,\n\t\t\t\t\tString(this._i18nBundle.getText(\"importCardCountErrorMessage\")),\n\t\t\t\t\t\"\"\n\t\t\t\t);\n\t\t\t}\n\t\t\tlet aSections = await this.getImportedSections(oImportData, ImportExportType.IMPORT, iInsightCardsCount);\n\t\t\taSections = aSections.map(function (oSection) {\n\t\t\t\toSection.status = ValueState.None;\n\t\t\t\treturn oSection;\n\t\t\t});\n\t\t\tthis.oUserPersonalization.import.data = oImportData;\n\t\t\tthis.oControlModel.setProperty(\"/import/sections\", aSections);\n\t\t\tthis.oControlModel.setProperty(\"/import/sectionsSelected\", this.getSelectedSections(aSections).length > 0);\n\t\t\tthis.oControlModel.setProperty(\"/showNoImport\", aSections.length === 0);\n\t\t});\n\t}\n\n\tprivate readFileContent(oFile: File | undefined): Promise<string> {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tif (oFile && window.FileReader) {\n\t\t\t\tconst reader = new FileReader();\n\t\t\t\treader.onload = function (event: ProgressEvent<FileReader>) {\n\t\t\t\t\tconst target = event.target as FileReader;\n\t\t\t\t\tresolve(target?.result as string);\n\t\t\t\t};\n\t\t\t\t// Convert oFile to Blob\n\t\t\t\tconst blob = oFile as unknown as Blob;\n\t\t\t\treader.readAsText(blob);\n\t\t\t} else {\n\t\t\t\treject(new Error(\"Error\"));\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async _getPersonalizationData(): Promise<IPersonalizationData> {\n\t\tif (!this.oPersonalizerInstance) {\n\t\t\tthis.oPersonalizerInstance = await UShellPersonalizer.getInstance(\n\t\t\t\tPersonalisationUtils.getPersContainerId(this._getPanel()),\n\t\t\t\tPersonalisationUtils.getOwnerComponent(this._getPanel()) as Component\n\t\t\t);\n\t\t}\n\t\tthis.persData = (await this.oPersonalizerInstance.read()) || {};\n\t\treturn this.persData;\n\t}\n\n\tprivate async loadUserPersonalizationData(): Promise<void> {\n\t\tthis.oExportList.setBusy(true);\n\t\tconst persData = await this._getPersonalizationData();\n\n\t\t// load all sections, insight apps and cards\n\t\tconst [favSections, insightModel] = await Promise.all([this.oAppManagerInstance._getSections(true), this.getInsightCards()]);\n\n\t\tconst aSections = favSections,\n\t\t\tfavApps = aSections.filter((oSection) => {\n\t\t\t\treturn oSection.id !== MYINSIGHT_SECTION_ID && oSection.visualizations?.length;\n\t\t\t});\n\n\t\tconst insightTiles =\n\t\t\taSections.find((oSection) => {\n\t\t\t\treturn oSection.id === MYINSIGHT_SECTION_ID;\n\t\t\t})?.visualizations || [];\n\n\t\tconst insightCards: ICardManifest[] =\n\t\t\tinsightModel && insightModel.getProperty(\"/visibleCards\")\n\t\t\t\t? (insightModel.getProperty(\"/visibleCards\") as ICard[]).map((oCard: ICard) => {\n\t\t\t\t\t\treturn oCard.descriptorContent;\n\t\t\t\t\t})\n\t\t\t\t: [];\n\t\tconst oExportData = {\n\t\t\tapps: favApps,\n\t\t\ttiles: insightTiles,\n\t\t\tfavouritePages: persData.favouritePages,\n\t\t\tcards: insightCards,\n\t\t\tpersonalization: persData\n\t\t} as IExportData;\n\t\tconst aExportSections = await this.getImportedSections(oExportData, ImportExportType.EXPORT, 0);\n\t\tthis.oUserPersonalization.export.data = oExportData;\n\t\tthis.oUserPersonalization.export.sections = aExportSections;\n\t\tthis.oUserPersonalization.export.sectionsSelected = this.getSelectedSections(aExportSections).length > 0;\n\t\tthis.oControlModel.refresh();\n\t\tthis.oExportList.setBusy(false);\n\t}\n\n\t/**\n\t * Returns selected sections out of provided sections\n\t *\n\t * @param {Array} aSections - array of sections to show in import/export\n\t * @returns {Array} array of selected sections\n\t */\n\tgetSelectedSections(aSections: IExportSections[]): IExportSections[] {\n\t\treturn (\n\t\t\taSections.filter(function (oSection) {\n\t\t\t\treturn oSection.selected && oSection.enabled;\n\t\t\t}) || []\n\t\t);\n\t}\n\n\t/**\n\t * Returns if section is selected\n\t *\n\t * @param {Array} oSections - import/export sections\n\t * @param {String} sSectionId - import/export section id\n\t * @returns {boolean} returns true if section is selected\n\t */\n\tisSectionSelected(sections: IExportSections[], sectionId: string): boolean {\n\t\tconst section = sections.find(function (sec) {\n\t\t\treturn sec.title === sectionId;\n\t\t});\n\t\treturn !!(section && section.selected && section.enabled);\n\t}\n\n\t/**\n\t * Returns import/export sections\n\t *\n\t * @param {object} oData - export/import data\n\t * @param {ImportExportType} sType - export/import type\n\t * @param {number} iInsightCardsCount - cards count\n\t * @returns {Array} array of import/export sections\n\t */\n\tprivate async getImportedSections(\n\t\toData: IExportData | IExportImportFile,\n\t\tsType: ImportExportType,\n\t\tiInsightCardsCount: number\n\t): Promise<IExportSections[]> {\n\t\tconst aFavPages =\n\t\t\t\t(sType === ImportExportType.IMPORT ? await this.getDeltaFavPages(oData.favouritePages) : oData.favouritePages) || [],\n\t\t\tisAppViz =\n\t\t\t\toData.apps &&\n\t\t\t\toData.apps.some(function (oSections) {\n\t\t\t\t\treturn oSections && oSections.visualizations && oSections.visualizations.length > 0;\n\t\t\t\t});\n\n\t\treturn [\n\t\t\t{\n\t\t\t\ttitle: this._i18nBundle.getText(\"favApps\") as string,\n\t\t\t\tselected: isAppViz,\n\t\t\t\tenabled: isAppViz,\n\t\t\t\tpanelClass: FavAppPanelName\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: this._i18nBundle.getText(\"pages\") as string,\n\t\t\t\tselected: aFavPages?.length > 0,\n\t\t\t\tenabled: aFavPages?.length > 0,\n\t\t\t\tpanelClass: PagePanelName\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: this._i18nBundle.getText(\"insightsTiles\") as string,\n\t\t\t\tselected: oData.tiles && oData.tiles.length > 0,\n\t\t\t\tenabled: oData.tiles && oData.tiles.length > 0,\n\t\t\t\tpanelClass: TilesPanelName\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: this._i18nBundle.getText(\"insightsCards\") as string,\n\t\t\t\tselected: oData.cards && oData.cards.length > 0 && oData.cards.length + iInsightCardsCount <= 99,\n\t\t\t\tenabled: oData.cards && oData.cards.length > 0 && oData.cards.length + iInsightCardsCount <= 99,\n\t\t\t\tpanelClass: CardsPanelName\n\t\t\t}\n\t\t];\n\t}\n\n\tprivate async getDeltaFavPages(aImportedFavPages: IPage[]): Promise<IPage[]> {\n\t\tconst persData = await this._getPersonalizationData();\n\t\tconst aFavPages = persData.favouritePages || [];\n\t\tif (aFavPages.length !== aImportedFavPages.length) {\n\t\t\treturn aImportedFavPages;\n\t\t}\n\t\treturn aImportedFavPages.filter(function (oImportedPage) {\n\t\t\treturn !aFavPages.find(function (oFavPage) {\n\t\t\t\treturn oImportedPage.pageId === oFavPage.pageId && oImportedPage.spaceId === oFavPage.spaceId;\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async getInsightCards(): Promise<JSONModel> {\n\t\ttry {\n\t\t\tthis.cardHelperInstance = await (CardHelper as ICardHelper).getServiceAsync();\n\t\t\tconst oUserVisibleCardModel = await this.cardHelperInstance._getUserAllCardModel();\n\t\t\tconst aCards = oUserVisibleCardModel.getProperty(\"/cards\") as ICard[];\n\t\t\tconst aVisibleCards = aCards.filter(function (oCard: ICard) {\n\t\t\t\treturn oCard.visibility;\n\t\t\t});\n\t\t\toUserVisibleCardModel.setProperty(\"/visibleCards\", aVisibleCards);\n\t\t\treturn oUserVisibleCardModel;\n\t\t} catch (error) {\n\t\t\t// Handle any errors\n\t\t\tconsole.error(\"Error in getInsightCards:\", error);\n\t\t\tthrow error; // Re-throw the error to be handled by the caller\n\t\t}\n\t}\n\n\t/**\n\t * Handles export button press\n\t */\n\tprivate onExportPress(): void {\n\t\tthis.handleUserPersonalizationError(ImportExportType.EXPORT, false, \"\", \"\");\n\t\tconst oExportFileName = this.oControlModel.getProperty(\"/export/fileName\") as string,\n\t\t\taExportSections = this.oControlModel.getProperty(\"/export/sections\") as IExportSections[],\n\t\t\toExportData = this.oUserPersonalization.export.data;\n\t\tconst oExportFileContent = this.getExportFileContent(oExportData, aExportSections);\n\t\tsap.ui.require([\"sap/ui/core/util/File\"], (File: File) => {\n\t\t\ttry {\n\t\t\t\tFile.save(JSON.stringify(oExportFileContent), oExportFileName, \"txt\", \"text/plain\", \"utf-8\");\n\t\t\t\tMessageToast.show(String(this._i18nBundle.getText(\"userPersonalizationExportSuccess\")));\n\t\t\t} catch (error) {\n\t\t\t\tLog.error(error instanceof Error ? error.message : String(error));\n\t\t\t\tif (error instanceof Error && error?.name !== undefined && error.name !== \"AbortError\") {\n\t\t\t\t\t// Handle the error appropriately\n\t\t\t\t\tthis.handleUserPersonalizationError(ImportExportType.EXPORT, true, \"\", \"\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getExportFileContent(exportData: IExportData | undefined, exportSections: IExportSections[]): IExportImportFile {\n\t\tconst oPersonalization = exportData?.personalization,\n\t\t\toExportFileContent = {\n\t\t\t\thost: window.location.host,\n\t\t\t\tcreatedDate: new Date(),\n\t\t\t\tsections: [] as ISectionAndVisualization[] | IVisualization[] | [],\n\t\t\t\tgroupInfo: [] as IAppPersonalization[] | IVisualization[] | [],\n\t\t\t\ttiles: [] as ISectionAndVisualization[] | IVisualization[] | [],\n\t\t\t\tcards: [] as ICardManifest[],\n\t\t\t\tfavouritePages: [] as IPage[] | []\n\t\t\t};\n\t\tif (this.isSectionSelected(exportSections, this._i18nBundle.getText(\"favApps\") as string)) {\n\t\t\toExportFileContent.sections = exportData?.apps || [];\n\t\t\toExportFileContent.groupInfo = oPersonalization?.favoriteApps || [];\n\t\t}\n\t\tif (this.isSectionSelected(exportSections, this._i18nBundle.getText(\"pages\") as string)) {\n\t\t\toExportFileContent.favouritePages = oPersonalization?.favouritePages || [];\n\t\t}\n\t\tif (this.isSectionSelected(exportSections, this._i18nBundle.getText(\"insightsTiles\") as string)) {\n\t\t\toExportFileContent.tiles = exportData?.tiles || [];\n\t\t}\n\t\tif (this.isSectionSelected(exportSections, this._i18nBundle.getText(\"insightsCards\") as string)) {\n\t\t\toExportFileContent.cards = this.filterNonSensitiveCards(exportData?.cards || []);\n\t\t}\n\t\treturn oExportFileContent;\n\t}\n\n\t/**\n\t * Filters out the sensitive cards from the import data\n\t *\n\t * @private\n\t * @param {ICardManifest[]} cards Array of card to filter out before import\n\t * @returns {ICardManifest[]} Array of filtered cards\n\t */\n\tprivate filterNonSensitiveCards(cards: ICardManifest[]): ICardManifest[] {\n\t\tconst nonSensitiveCards = [] as ICardManifest[];\n\n\t\tcards.forEach((oCard) => {\n\t\t\tif (oCard[\"sap.card\"]?.configuration?.parameters) {\n\t\t\t\tconst parameter = oCard[\"sap.card\"].configuration.parameters;\n\t\t\t\tlet sensitiveProps: string[] = [];\n\t\t\t\tsensitiveProps = sensitiveProps\n\t\t\t\t\t.concat(this.getSensitiveProps(parameter.headerState))\n\t\t\t\t\t.concat(this.getSensitiveProps(parameter.lineItemState))\n\t\t\t\t\t.concat(this.getSensitiveProps(parameter.state));\n\t\t\t\tif (sensitiveProps.length === 0) {\n\t\t\t\t\tnonSensitiveCards.push(oCard);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnonSensitiveCards.push(oCard);\n\t\t\t}\n\t\t});\n\t\tif (cards.length !== nonSensitiveCards.length) {\n\t\t\tthis.handleUserPersonalizationError(\n\t\t\t\tImportExportType.EXPORT,\n\t\t\t\ttrue,\n\t\t\t\tString(this._i18nBundle.getText(\"exportSensitiveCardsErrorMessage\")),\n\t\t\t\t\"Warning\"\n\t\t\t);\n\t\t}\n\t\treturn nonSensitiveCards;\n\t}\n\n\t/**\n\t * Finds the sensitive properties and parameters\n\t *\n\t * @private\n\t * @param {({ value: string } | undefined)} param\n\t * @returns {string[]} Array of sensitive props as strings\n\t */\n\tprivate getSensitiveProps(param: { value: string } | undefined) {\n\t\tlet paramSensitiveProps: string[] = [];\n\t\tif (param?.value) {\n\t\t\tconst paramValue = JSON.parse(param.value) as { sensitiveProps: string[]; parameters: ICardActionParameters };\n\t\t\tconst sensitiveProp = paramValue.sensitiveProps || Object.keys(paramValue.parameters?.ibnParams?.sensitiveProps || {});\n\t\t\tif (sensitiveProp.length > 0) {\n\t\t\t\tparamSensitiveProps = paramSensitiveProps.concat(sensitiveProp);\n\t\t\t}\n\t\t}\n\t\treturn paramSensitiveProps;\n\t}\n\n\t/**\n\t * Handles user personalization error, shows the error msg and reset values\n\t *\n\t * @param {string} sType - type of import/export\n\t * @param {boolean} bShowError - flag to show or hide error msg\n\t * @param {string} sErrorMsg - error msg text\n\t * @param {string} sErrorType - error msg type\n\t */\n\tprivate handleUserPersonalizationError(sType: ImportExportType, bShowError: boolean, sErrorMsg: string, sErrorType: string): void {\n\t\tconst sDefaultErrorMsg = this._i18nBundle.getText(sType === ImportExportType.IMPORT ? \"importErrorMessage\" : \"exportErrorMessage\");\n\t\tthis.oControlModel.setProperty(\"/\" + sType + \"/error\", bShowError, undefined, true);\n\t\tthis.oControlModel.setProperty(\"/\" + sType + \"/errorMessage\", sErrorMsg || sDefaultErrorMsg, undefined, true);\n\t\tthis.oControlModel.setProperty(\"/\" + sType + \"/errorType\", sErrorType || \"Error\", undefined, true);\n\t\tthis.setExportImportValues(sType);\n\t}\n\n\t/**\n\t * Handles import/export tab select\n\t *\n\t * @param {object} oEvent - IconTabBarSeelect event\n\t */\n\tprivate onImportExportTabSelect(oEvent: IconTabBar$SelectEvent): void {\n\t\tconst selectedKey = oEvent.getParameter(\"selectedKey\");\n\t\tthis.oSelectedTab = selectedKey;\n\t\tthis.oControlModel.setProperty(\"/selectedTab\", selectedKey);\n\t\tthis.oExportList.setVisible(selectedKey === \"export\");\n\n\t\tthis.oImportBtn.setVisible(selectedKey === \"import\");\n\t\tthis.oExportBtn.setVisible(selectedKey === \"export\");\n\t\tthis.oImportBtn.setEnabled(this.oUserPersonalization.import.sectionsSelected);\n\t\tthis.oExportBtn.setEnabled(this.oUserPersonalization.export.sectionsSelected);\n\t\tthis.oExportBtn.setEnabled(\n\t\t\t!!(\n\t\t\t\tthis.oUserPersonalization.export.fileName &&\n\t\t\t\tthis.oUserPersonalization.export.sections &&\n\t\t\t\tthis.oUserPersonalization.export.sections.length > 0 &&\n\t\t\t\tthis.oUserPersonalization.export.sectionsSelected\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Handles export file name input change\n\t *\n\t * @param {object} oEvent - event\n\t */\n\tprivate onFileNameInputChange(oEvent: Input$LiveChangeEvent): void {\n\t\tconst sInputValue: string | undefined = oEvent.getParameter(\"value\")?.trim();\n\t\tconst oInput = oEvent.getSource();\n\t\tlet sValueState = ValueState.None; // Initialize with ValueState.None\n\t\tlet sValueStateText = \"\";\n\n\t\t// Validate based on constraints provided at input\n\t\tif (!sInputValue || !sInputValue.length) {\n\t\t\tsValueState = ValueState.Error;\n\t\t\tsValueStateText = String(this._i18nBundle.getText(\"invalidExportFileName\"));\n\t\t}\n\n\t\t//update value state\n\t\toInput.setValueState(sValueState);\n\t\toInput.setValueStateText(sValueStateText);\n\t\tthis.oControlModel.setProperty(\"/export/fileName\", sInputValue);\n\t\tthis.enableDisableActions(ImportExportType.EXPORT);\n\t}\n\n\tprivate onResetImportApps(): void {\n\t\tthis.oEventBus.publish(\"importChannel\", \"resetImported\");\n\t\tMessageToast.show(this._i18nBundle.getText(\"importAppsNowBtnEnabled\") as string);\n\t}\n\n\t/**\n\t * Generates the recommendation settings panel\n\t * @returns {Panel} recommendation settings panel\n\t * @private\n\t */\n\tprivate async _getRecommendationSettingsPanel() {\n\t\tconst persData = await this._getPersonalizationData();\n\t\tif (!this._recommendationSettingsPanel) {\n\t\t\tconst panelId = this.getId() + \"--recommendationSettingsPanel\";\n\t\t\tthis._recommendationSettingsPanel = new Panel(panelId, {\n\t\t\t\theaderText: this._i18nBundle.getText(\"recommendationSettingsHeader\"),\n\t\t\t\texpanded: true,\n\t\t\t\texpandable: true,\n\t\t\t\tcontent: [\n\t\t\t\t\tnew Text({\n\t\t\t\t\t\tid: `${panelId}-container-subHeader`,\n\t\t\t\t\t\ttext: this._i18nBundle.getText(\"recommendationSettingsSubHeader\")\n\t\t\t\t\t}),\n\t\t\t\t\tnew HBox({\n\t\t\t\t\t\tid: `${panelId}-container`,\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\tnew CheckBox({\n\t\t\t\t\t\t\t\tid: `${panelId}-container-checkBox`,\n\t\t\t\t\t\t\t\tselected: persData.showRecommendation ?? true,\n\t\t\t\t\t\t\t\tselect: (event) => this.onRecommendationSettingChange(event),\n\t\t\t\t\t\t\t\tariaLabelledBy: [`${panelId}-container-subHeader`, `${panelId}-container-label`]\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew Text({\n\t\t\t\t\t\t\t\tid: `${panelId}-container-label`,\n\t\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"recommendationSettingsCheckboxLabel\")\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t],\n\t\t\t\t\t\talignItems: FlexAlignItems.Center\n\t\t\t\t\t}).addStyleClass(\"sapUiSmallMarginTop\")\n\t\t\t\t]\n\t\t\t}).addStyleClass(\"sapUiSmallMarginTop\");\n\t\t}\n\t\treturn this._recommendationSettingsPanel;\n\t}\n\n\t/**\n\t * Adds recommendation settings panel to the content vbox, if recommendation feature is enabled\n\t * @returns {Promise<void>}\n\t * @private\n\t */\n\tprivate async _setRecommendationSettingsPanel() {\n\t\tthis.oDetailPage.setBusy(true);\n\t\tconst recommendationSettingsPanel = await this._getRecommendationSettingsPanel();\n\t\tif (recommendationSettingsPanel) {\n\t\t\tthis.oContentVBox.addItem(recommendationSettingsPanel);\n\t\t\tthis.oDetailPage.setBusy(false);\n\t\t}\n\t}\n\n\t/**\n\t * Handles recommendation setting change\n\t *\n\t * @param {CheckBox$SelectEvent} event - checkbox select event\n\t * @private\n\t */\n\tprivate async onRecommendationSettingChange(event: CheckBox$SelectEvent) {\n\t\tconst showRecommendation = event.getParameter(\"selected\");\n\t\tthis.oEventBus.publish(\"importChannel\", \"recommendationSettingChanged\", { showRecommendation });\n\t\tconst oPersData = await this._getPersonalizationData();\n\t\tvoid this.oPersonalizerInstance.write({ ...oPersData, showRecommendation });\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":6,"column":0},"map":{"version":3,"names":["sap","ui","define","Log","GenericTile","mobileLibrary","Container","__BaseApp","__AppManager","_interopRequireDefault","obj","__esModule","default","BaseApp","AppManager","App","extend","metadata","library","properties","url","type","group","defaultValue","vizId","constructor","_constructor","id","settings","BaseApp.prototype.constructor.call","this","_getSSBRootControl","oSmartBusinessAppViz","getContent","getComponentInstance","getRootControl","oError","error","Error","message","String","_getInnerGenericTile","oControl","oControlMetadata","getMetadata","oDefaultAggregationDefinition","getDefaultAggregation","sDefaultAggregationName","name","aAggregationData","getAggregation","oAggregationValue","Array","isArray","getState","LoadState","Loaded","_launchApp","event","_this","appManagerInstance","getInstance","tile","getSource","Promise","resolve","fetchFavVizs","then","favoriteApps","selectedApp","find","app","appUrl","getUrl","includes","smartBusinessAppViz","vizInstance","isSmartBusinessTile","ssbRootControl","ssbGenericTile","firePress","getServiceAsync","spaceContentService","launchTileTarget","getTitle","e","reject","_handlePress","_this2","_temp"],"sources":["App.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport GenericTile, { GenericTile$PressEvent } from \"sap/m/GenericTile\";\nimport mobileLibrary from \"sap/m/library\";\nimport Control from \"sap/ui/core/Control\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport Container from \"sap/ushell/Container\";\nimport SpaceContent from \"sap/ushell/services/SpaceContent\";\nimport { $AppSettings } from \"./App\";\nimport BaseApp from \"./BaseApp\";\nimport { ICustomVizInstance, ISectionAndVisualization } from \"./interface/AppsInterface\";\nimport AppManager from \"./utils/AppManager\";\n\n/**\n *\n * App class for managing and storing Apps.\n *\n * @extends sap.cux.home.BaseApp\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121.0\n *\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.App\n */\nexport default class App extends BaseApp {\n\tconstructor(idOrSettings?: string | $AppSettings);\n\tconstructor(id?: string, settings?: $AppSettings);\n\tconstructor(id?: string, settings?: $AppSettings) {\n\t\tsuper(id, settings);\n\t}\n\tprivate appManagerInstance!: AppManager;\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * Url of the app where the user navigates to on click\n\t\t\t */\n\t\t\turl: { type: \"string\", group: \"Misc\", defaultValue: \"\" },\n\t\t\t/**\n\t\t\t * VizId of the app. Used for enabling addition of apps to FavoriteApp panel\n\t\t\t */\n\t\t\tvizId: { type: \"string\", group: \"Misc\", defaultValue: \"\" }\n\t\t}\n\t};\n\tprivate _getSSBRootControl(oSmartBusinessAppViz: ICustomVizInstance): Control | null {\n\t\ttry {\n\t\t\treturn oSmartBusinessAppViz.getContent().getComponentInstance().getRootControl() as Control | null;\n\t\t} catch (oError) {\n\t\t\tLog.error(oError instanceof Error ? oError.message : String(oError));\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate _getInnerGenericTile(oControl: Control | null): GenericTile | null {\n\t\tif (!oControl) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst oControlMetadata = oControl.getMetadata();\n\t\tconst oDefaultAggregationDefinition = oControlMetadata.getDefaultAggregation() as { name?: string } | null;\n\t\tconst sDefaultAggregationName = oDefaultAggregationDefinition ? oDefaultAggregationDefinition?.name : \"content\";\n\n\t\tconst aAggregationData = sDefaultAggregationName ? oControl.getAggregation(sDefaultAggregationName) : null;\n\t\tconst oAggregationValue = Array.isArray(aAggregationData) ? aAggregationData[0] : aAggregationData;\n\n\t\tif (!oAggregationValue) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (oAggregationValue instanceof GenericTile && oAggregationValue.getState() === mobileLibrary.LoadState.Loaded) {\n\t\t\treturn oAggregationValue;\n\t\t}\n\n\t\treturn this._getInnerGenericTile(oAggregationValue as Control);\n\t}\n\n\t/**\n\t * Navigates to the clicked app\n\t * @private\n\t */\n\tprivate async _launchApp(event: GenericTile$PressEvent): Promise<void> {\n\t\tthis.appManagerInstance = this.appManagerInstance || AppManager.getInstance();\n\t\tconst tile = event.getSource();\n\t\tconst favoriteApps: ISectionAndVisualization[] = await this.appManagerInstance.fetchFavVizs(false, true);\n\t\tconst selectedApp = favoriteApps.find((app) => {\n\t\t\tconst appUrl = app.url || \"\";\n\t\t\treturn tile.getUrl().includes(appUrl);\n\t\t});\n\t\tconst smartBusinessAppViz = selectedApp?.vizInstance;\n\t\tconst isSmartBusinessTile = selectedApp?.isSmartBusinessTile;\n\t\tif (smartBusinessAppViz) {\n\t\t\tconst ssbRootControl = this._getSSBRootControl(smartBusinessAppViz);\n\t\t\tconst ssbGenericTile = isSmartBusinessTile && this._getInnerGenericTile(ssbRootControl);\n\n\t\t\tif (ssbGenericTile) {\n\t\t\t\tssbGenericTile.firePress();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// Fallback in case smartBusinessAppViz is undefined or ssbGenericTile is not present\n\t\tconst spaceContentService = await Container.getServiceAsync<SpaceContent>(\"SpaceContent\");\n\t\tawait spaceContentService.launchTileTarget(this.getUrl(), this.getTitle());\n\t}\n\n\t/**\n\t * App Press Handler\n\t * @private\n\t */\n\tpublic async _handlePress(event: GenericTile$PressEvent) {\n\t\tif (this.getUrl()) {\n\t\t\tawait this._launchApp(event);\n\t\t}\n\t}\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,8BAAA,sHAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,sBAAAC,EAAAC,GAAA,OAAAA,KAAAC,mBAAAD,EAAAE,UAAA,YAAAF,EAAAE,QAAAF,CAAA,OAaOG,EAAOJ,EAAAF,GAAA,MAEPO,EAAUL,EAAAD,GAEjB,MAgBqBO,EAAYF,EAAOG,OAAA,oBAOvBC,SAA4B,CAC3CC,QAAS,eACTC,WAAY,CAIXC,IAAK,CAAEC,KAAM,SAAUC,MAAO,OAAQC,aAAc,IAIpDC,MAAO,CAAEH,KAAM,SAAUC,MAAO,OAAQC,aAAc,MAdxDE,YAAW,SAAAC,EAACC,EAAaC,GACxBC,6BAAAC,KAAMH,EAAIC,EACX,EAeQG,mBAAkB,SAAAA,EAACC,GAC1B,IACC,OAAOA,EAAqBC,aAAaC,uBAAuBC,gBACjE,CAAE,MAAOC,GACRjC,EAAIkC,MAAMD,aAAkBE,MAAQF,EAAOG,QAAUC,OAAOJ,IAC5D,OAAO,IACR,CACD,EAEQK,qBAAoB,SAAAA,EAACC,GAC5B,IAAKA,EAAU,CACd,OAAO,IACR,CAEA,MAAMC,EAAmBD,EAASE,cAClC,MAAMC,EAAgCF,EAAiBG,wBACvD,MAAMC,EAA0BF,EAAgCA,GAA+BG,KAAO,UAEtG,MAAMC,EAAmBF,EAA0BL,EAASQ,eAAeH,GAA2B,KACtG,MAAMI,EAAoBC,MAAMC,QAAQJ,GAAoBA,EAAiB,GAAKA,EAElF,IAAKE,EAAmB,CACvB,OAAO,IACR,CAEA,GAAIA,aAA6B/C,GAAe+C,EAAkBG,aAAejD,EAAckD,UAAUC,OAAQ,CAChH,OAAOL,CACR,CAEA,OAAOrB,KAAKW,qBAAqBU,EAClC,EAMcM,WAAU,SAAAA,EAACC,GAA6B,IAAiB,MAAAC,EACtE7B,KAAA6B,EAAKC,mBAAqBD,EAAKC,oBAAsB9C,EAAW+C,cAChE,MAAMC,EAAOJ,EAAMK,YAAY,OAAAC,QAAAC,QACwBN,EAAKC,mBAAmBM,aAAa,MAAO,OAAKC,KAAA,SAAlGC,GACN,MAAMC,EAAcD,EAAaE,KAAMC,IACtC,MAAMC,EAASD,EAAInD,KAAO,GAC1B,OAAO0C,EAAKW,SAASC,SAASF,EAAO,GAEtC,MAAMG,EAAsBN,GAAaO,YACzC,MAAMC,EAAsBR,GAAaQ,oBACzC,GAAIF,EAAqB,CACxB,MAAMG,EAAiBnB,EAAK5B,mBAAmB4C,GAC/C,MAAMI,EAAiBF,GAAuBlB,EAAKlB,qBAAqBqC,GAExE,GAAIC,EAAgB,CACnBA,EAAeC,YACf,MACD,CACD,CACA,OAAAhB,QAAAC,QACkC3D,EAAU2E,gBAA8B,iBAAed,KAAA,SAAnFe,GAAmB,OAAAlB,QAAAC,QACnBiB,EAAoBC,iBAAiBxB,EAAKc,SAAUd,EAAKyB,aAAWjB,KAAA,iBAC3E,CAAC,MAAAkB,GAAA,OAAArB,QAAAsB,OAAAD,EAAA,GAMYE,aAAY,SAAAA,EAAC7B,GAA6B,IAAE,MAAA8B,EACpD1D,KAAI,MAAA2D,EAAA,cAAJD,EAAKf,SAAQ,QAAAT,QAAAC,QACVuB,EAAK/B,WAAWC,IAAMS,KAAA,eADrB,GACqB,OAAAH,QAAAC,QAAAwB,KAAAtB,KAAAsB,EAAAtB,KAAA,qBAE9B,CAAC,MAAAkB,GAAA,OAAArB,QAAAsB,OAAAD,EAAA,YAxFmBtE,CAAG","ignoreList":[],"sourceRoot":""}},{"offset":{"line":11,"column":0},"map":{"version":3,"names":["sap","ui","define","Log","Button","CustomListItem","ExpandableText","FlexBox","GenericTile","HBox","Label","sap_m_library","MessageToast","Text","VBox","Fragment","JSONModel","ResourceModel","Container","__AppsContainer","__BaseSettingsPanel","__FavAppPanel","__AppManager","___utils_Constants","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","ButtonType","_finallyRethrows","finalizer","bind","AppsContainer","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","observer","prototype","onFulfilled","onRejected","this","callback","_this","_isSettledPact","thenable","_forTo","array","check","i","reject","_cycle","length","BaseSettingsPanel","_forOf","target","step","next","done","return","_fixup","TypeError","values","push","FavAppPanel","AppManager","AI_APP_FINDER_API","AI_APP_FINDER_BASE_URL","CONTENT_ADDITION_PANEL_TYPES","FEATURE_TOGGLES","Constants","DeprecatedInfoText","MinQueryLength","MaxDescriptionLength","SearchStatus","ErrorType","TileType","AppsAdditionPanel","extend","constructor","apply","arguments","appManagerInstance","getInstance","init","_init","BaseSettingsPanel.prototype.init.call","userSelectedApps","Set","setProperty","AI_APP_FINDER","_i18nBundle","getText","_setupActions","_setupContent","attachEvent","resetPanel","addAppsButton","getId","text","type","Emphasized","press","onPressAddApps","bindProperty","parts","formatter","hasError","searchStatus","Complete","addActionButton","Promise","resolve","getServiceAsync","_Container$getService","vizInstantiationService","load","id","name","controller","_Fragment$load","panelContent","addAggregation","model","query","errorType","DefaultError","errorDescription","Idle","loadingAnimation","_generateSearchingAnimation","suggestedAppsCount","suggestedApps","setModel","bundleName","appSuggestionList","byId","bindAggregation","path","factory","_generateListItem","context","listItem","selected","getProperty","content","renderType","wrap","direction","alignItems","items","_getAppPreviewContainer","_getAppDetailsContainer","addStyleClass","getMultiSelectControl","setEnabled","container","addItem","mode","frameType","header","subheader","tileIcon","visible","instance","instantiateVisualization","setActive","setClickable","gap","showColon","maxCharacters","_generateStatusTexts","isSupported","_isSupported","_this2","_temp5","isPanelSupported","removeActionButton","contentAdditionDialog","getParent","removePanel","updateActionButtons","_temp4","undefined","_temp3","getFavAppPanel","_temp2","isFeatureEnabled","AI_SMART_APPFINDER","_temp","navigationService","isNavigationSupported","semanticObject","action","_ref","supported","error","message","_resetPanel","defaultModelProperties","setData","getData","clear","onPressGo","_onPressGo","event","_this3","getParameter","isValidQuery","_temp7","Searching","removeSelections","fetchAppsFromSearch","rawApps","_temp6","fetchAllAvailableVisualizations","allVisualizations","fetchFavVizs","favoriteApps","fetchInsightApps","insightsApps","apps","_generateApps","_filterUnsupportedApps","err","_handleError","_wasThrown","_result","intents","map","app","vizData","supportedAppIndices","filter","_","index","homePageVisualizations","find","viz","vizId","chipID","addedToHomePage","some","visualization","title","subTitle","description","appDescription","icon","iconUrl","isStaticApp","tileType","Static","status","getAppStatusTexts","configuration","_isValidQuery","Boolean","trim","_fetchAllAvailableVisualizations","_this4","_temp9","allAvailableVisualizations","_temp8","searchableContentService","getApps","enableVisualizationPreview","allAvailableApps","reduce","visualizations","currentApp","concat","_fetchCSRFToken","fetch","method","headers","response","get","_fetchAppsFromSearch","_this5","token","JSON","stringify","UserInput","_exit","_temp12","_result2","json","_response$json2","queryResult","_temp11","ok","_response$json","errorResponse","_temp10","_getAppStatusTexts","statusTexts","parsedConfig","parse","tileConfig","tileConfiguration","infoText","display_info_text","toLowerCase","warning","stausTexts","applyStatusClass","_applyStatusClass","_onPressAddApps","_this6","_temp14","refreshFavoriteApps","close","show","vizIds","item","getBindingContext","_temp13","addVisualization","getAppsContainer","_getAppsContainer","layout","getContent","_getFavAppPanel","panel","_refreshFavoriteApps","_this7","refreshPanel","onListSelectionChange","_onListSelectionChange","delete","add","Array","from","errorCode","match","_getErrorType","ServiceError","NoResultsFound","ValidationError"],"sources":["AppsAdditionPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport Button from \"sap/m/Button\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport ExpandableText from \"sap/m/ExpandableText\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport GenericTile from \"sap/m/GenericTile\";\nimport HBox from \"sap/m/HBox\";\nimport Label from \"sap/m/Label\";\nimport { ButtonType } from \"sap/m/library\";\nimport List from \"sap/m/List\";\nimport { ListBase$SelectionChangeEvent } from \"sap/m/ListBase\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport { SearchField$SearchEvent } from \"sap/m/SearchField\";\nimport Text from \"sap/m/Text\";\nimport VBox from \"sap/m/VBox\";\nimport Control from \"sap/ui/core/Control\";\nimport Fragment from \"sap/ui/core/Fragment\";\nimport Context from \"sap/ui/model/Context\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport Container from \"sap/ushell/Container\";\nimport Navigation, { Target } from \"sap/ushell/services/Navigation\";\nimport SearchableContent, { AppData } from \"sap/ushell/services/SearchableContent\";\nimport VisualizationInstantiation from \"sap/ushell/services/VisualizationInstantiation\";\nimport AppsContainer from \"./AppsContainer\";\nimport BaseLayout from \"./BaseLayout\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\nimport ContentAdditionDialog from \"./ContentAdditionDialog\";\nimport FavAppPanel from \"./FavAppPanel\";\nimport { ICustomVisualization, ICustomVizInstance, IVisualization } from \"./interface/AppsInterface\";\nimport AppManager from \"./utils/AppManager\";\nimport { AI_APP_FINDER_API, AI_APP_FINDER_BASE_URL, CONTENT_ADDITION_PANEL_TYPES, FEATURE_TOGGLES } from \"./utils/Constants\";\n\nconst Constants = {\n\tDeprecatedInfoText: \"deprecated\",\n\tMinQueryLength: 5,\n\tMaxDescriptionLength: 400\n};\n\nenum SearchStatus {\n\tIdle = \"idle\",\n\tSearching = \"searching\",\n\tComplete = \"complete\"\n}\n\nenum ErrorType {\n\tNoResultsFound = \"noResultsFound\",\n\tServiceError = \"serviceError\",\n\tValidationError = \"validationError\",\n\tDefaultError = \"defaultError\"\n}\n\nenum TileType {\n\tStatic = \"STATIC\"\n}\n\ninterface RawAppData {\n\ttitle: string;\n\tsubTitle: string;\n\tappDescription: string;\n\tchipID: string;\n\ttileType: TileType;\n\ticonUrl: string;\n\tconfiguration: string;\n}\ninterface SuggestedApp {\n\ticon: string;\n\ttitle: string;\n\tchipID: string;\n\tstatus: string[];\n\tsubTitle: string;\n\tdescription: string;\n\tisStaticApp: boolean;\n\taddedToHomePage: boolean;\n\tvizData?: IVisualization;\n}\n\ninterface QueryResponse {\n\tvalue: RawAppData[];\n}\n\ninterface ErrorResponse {\n\terror: {\n\t\tcode: string;\n\t\tmessage: string;\n\t};\n}\n\ninterface Configuration {\n\ttileConfiguration: string;\n}\n\ninterface TileConfig {\n\tdisplay_info_text: string;\n\t[key: string]: string;\n}\n\n/**\n *\n * Class for Apps Addition Panel in MyHome.\n *\n * @extends BaseSettingsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.136\n *\n * @internal\n * @experimental Since 1.136\n * @private\n *\n * @alias sap.cux.home.AppsAdditionPanel\n */\nexport default class AppsAdditionPanel extends BaseSettingsPanel {\n\tprivate appManagerInstance: AppManager = AppManager.getInstance();\n\tprivate vizInstantiationService!: VisualizationInstantiation;\n\tprivate allAvailableVisualizations!: IVisualization[];\n\tprivate userSelectedApps!: Set<CustomListItem>;\n\tprivate appSuggestionList!: List;\n\tprivate model!: JSONModel;\n\tprivate addAppsButton!: Button;\n\tprivate isPanelSupported!: boolean;\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\t\tthis.userSelectedApps = new Set<CustomListItem>();\n\n\t\t//setup panel\n\t\tthis.setProperty(\"key\", CONTENT_ADDITION_PANEL_TYPES.AI_APP_FINDER);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"addAppsAndTile\"));\n\n\t\t//setup actions\n\t\tthis._setupActions();\n\n\t\t//setup content\n\t\tvoid this._setupContent();\n\n\t\t//setup events\n\t\tthis.attachEvent(\"onDialogClose\", this.resetPanel.bind(this));\n\t}\n\n\t/**\n\t * Sets up the actions for the Apps Addition Panel.\n\t *\n\t * @private\n\t */\n\tprivate _setupActions(): void {\n\t\tthis.addAppsButton = new Button(`${this.getId()}-add-app-btn`, {\n\t\t\ttext: this._i18nBundle.getText(\"addFromInsightsDialogBtn\"),\n\t\t\ttype: ButtonType.Emphasized,\n\t\t\tpress: () => {\n\t\t\t\tvoid this.onPressAddApps();\n\t\t\t}\n\t\t});\n\n\t\tthis.addAppsButton.bindProperty(\"enabled\", {\n\t\t\tparts: [\"/hasError\", \"/searchStatus\", \"/userSelectedApps\"],\n\t\t\tformatter: (hasError: boolean, searchStatus: SearchStatus, userSelectedApps: string[]) => {\n\t\t\t\treturn !hasError && searchStatus === SearchStatus.Complete && userSelectedApps.length > 0;\n\t\t\t}\n\t\t});\n\n\t\tthis.addActionButton(this.addAppsButton);\n\t}\n\n\t/**\n\t * Sets up the content for the Apps Addition Panel.\n\t *\n\t * @private\n\t * @async\n\t */\n\tprivate async _setupContent(): Promise<void> {\n\t\tthis.vizInstantiationService = await Container.getServiceAsync<VisualizationInstantiation>(\"VisualizationInstantiation\");\n\n\t\t//load ui fragment\n\t\tconst panelContent = (await Fragment.load({\n\t\t\tid: `${this.getId()}-content`,\n\t\t\tname: \"sap.cux.home.utils.fragment.appsAdditionContent\",\n\t\t\tcontroller: this\n\t\t})) as Control;\n\t\tthis.addAggregation(\"content\", panelContent);\n\n\t\t//initialize ui model\n\t\tthis.model = new JSONModel({\n\t\t\tquery: \"\",\n\t\t\thasError: false,\n\t\t\terrorType: ErrorType.DefaultError,\n\t\t\terrorDescription: \"\",\n\t\t\tsearchStatus: SearchStatus.Idle,\n\t\t\tloadingAnimation: this._generateSearchingAnimation(),\n\t\t\tsuggestedAppsCount: 0,\n\t\t\tuserSelectedApps: [],\n\t\t\tsuggestedApps: []\n\t\t});\n\n\t\tpanelContent.setModel(this.model);\n\t\tpanelContent.setModel(new ResourceModel({ bundleName: \"sap.cux.home.i18n.messagebundle\" }), \"i18n\");\n\t\tthis.addAppsButton.setModel(this.model);\n\n\t\t//bind suggested apps list\n\t\tthis.appSuggestionList = Fragment.byId(`${this.getId()}-content`, \"appsList\") as List;\n\t\tthis.appSuggestionList.bindAggregation(\"items\", {\n\t\t\tpath: \"/suggestedApps\",\n\t\t\tfactory: this._generateListItem.bind(this)\n\t\t});\n\t}\n\n\t/**\n\t * Generates a list item for the Apps Addition Panel.\n\t *\n\t * @private\n\t * @param {string} id - The unique ID for the list item.\n\t * @param {Context} context - The binding context for the list item.\n\t * @returns {CustomListItem} The generated list item control.\n\t */\n\tprivate _generateListItem(id: string, context: Context): CustomListItem {\n\t\tconst listItem = new CustomListItem(id, {\n\t\t\tselected: context.getProperty(\"addedToHomePage\") as boolean,\n\t\t\tcontent: [\n\t\t\t\tnew FlexBox(`${id}-result-container`, {\n\t\t\t\t\trenderType: \"Bare\",\n\t\t\t\t\twrap: \"Wrap\",\n\t\t\t\t\tdirection: context.getProperty(\"isStaticApp\") ? \"Column\" : \"Row\",\n\t\t\t\t\talignItems: context.getProperty(\"isStaticApp\") ? \"Start\" : \"Center\",\n\t\t\t\t\titems: [this._getAppPreviewContainer(id, context), this._getAppDetailsContainer(id, context)]\n\t\t\t\t}).addStyleClass(\"sapUiSmallMargin\")\n\t\t\t]\n\t\t});\n\n\t\t//bind associated checkbox to disable it when the app is already added to home page\n\t\tlistItem.getMultiSelectControl(true).setEnabled(!context.getProperty(\"addedToHomePage\"));\n\n\t\treturn listItem;\n\t}\n\n\t/**\n\t * Creates a preview container for the suggested app.\n\t *\n\t * @private\n\t * @param {string} id - The unique ID for the container.\n\t * @param {Context} context - The binding context for the app.\n\t * @returns {HBox} The app preview container.\n\t */\n\tprivate _getAppPreviewContainer(id: string, context: Context): HBox {\n\t\tconst container = new HBox(`${id}-suggestedAppContainer`, {\n\t\t\trenderType: \"Bare\"\n\t\t});\n\n\t\tif (context.getProperty(\"isStaticApp\") as boolean) {\n\t\t\t// create generic tile for static app\n\t\t\tcontainer.addItem(\n\t\t\t\tnew GenericTile(`${id}-staticApp`, {\n\t\t\t\t\tmode: \"IconMode\",\n\t\t\t\t\tframeType: \"TwoByHalf\",\n\t\t\t\t\theader: context.getProperty(\"title\") as string,\n\t\t\t\t\tsubheader: context.getProperty(\"subTitle\") as string,\n\t\t\t\t\ttileIcon: context.getProperty(\"icon\") as string,\n\t\t\t\t\tvisible: context.getProperty(\"isStaticApp\") as boolean\n\t\t\t\t}).addStyleClass(\"suggestedTile\")\n\t\t\t);\n\t\t} else {\n\t\t\t// create custom visualization for other apps\n\t\t\tconst instance = this.vizInstantiationService.instantiateVisualization(\n\t\t\t\tcontext.getProperty(\"vizData\") as ICustomVisualization\n\t\t\t) as ICustomVizInstance;\n\t\t\tinstance?.setActive(true);\n\t\t\tinstance.setClickable(false);\n\t\t\tcontainer.addItem(instance);\n\t\t}\n\n\t\treturn container;\n\t}\n\n\t/**\n\t * Creates a details container for the suggested app.\n\t *\n\t * @private\n\t * @param {string} id - The unique ID for the container.\n\t * @param {Context} context - The binding context for the app.\n\t * @returns {VBox} The app details container.\n\t */\n\tprivate _getAppDetailsContainer(id: string, context: Context): VBox {\n\t\treturn new VBox(`${id}-app-details-container`, {\n\t\t\trenderType: \"Bare\",\n\t\t\tgap: \"0.5rem\",\n\t\t\titems: [\n\t\t\t\tnew Label(`${id}-descriptionLabel`, {\n\t\t\t\t\ttext: this._i18nBundle.getText(\"appDescription\"),\n\t\t\t\t\tshowColon: true\n\t\t\t\t}),\n\t\t\t\tnew ExpandableText(`${id}-description`, {\n\t\t\t\t\ttext: context.getProperty(\"description\") as string,\n\t\t\t\t\tmaxCharacters: Constants.MaxDescriptionLength\n\t\t\t\t}),\n\t\t\t\tnew HBox(`${id}-app-status-container`, {\n\t\t\t\t\trenderType: \"Bare\",\n\t\t\t\t\tvisible: (context.getProperty(\"status\") as string[]).length > 0,\n\t\t\t\t\titems: [\n\t\t\t\t\t\tnew Label(`${id}-appStatusLabel`, {\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"appStatus\"),\n\t\t\t\t\t\t\tshowColon: true\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tnew HBox(`${id}-app-status-texts`, {\n\t\t\t\t\t\t\trenderType: \"Bare\",\n\t\t\t\t\t\t\titems: this._generateStatusTexts(context.getProperty(\"status\") as string[])\n\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginBegin statusTextsContainer\")\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t]\n\t\t}).addStyleClass((context.getProperty(\"isStaticApp\") as boolean) ? \"sapUiSmallMarginTop\" : \"sapUiSmallMarginBegin\");\n\t}\n\n\t/**\n\t * Checks if the Apps Addition Panel is supported. Internally, it checks if the\n\t * AI Smart App Finder feature toggle is enabled and if the associated application\n\t * is accessible for the user.\n\t *\n\t * @public\n\t * @override\n\t * @async\n\t * @returns {Promise<boolean>} A promise that resolves to a boolean indicating support.\n\t */\n\tpublic async isSupported(): Promise<boolean> {\n\t\tif (this.isPanelSupported === undefined) {\n\t\t\tthis.isPanelSupported = false;\n\n\t\t\tif (this.getFavAppPanel()) {\n\t\t\t\ttry {\n\t\t\t\t\tconst isFeatureEnabled = await this.appManagerInstance.isFeatureEnabled(FEATURE_TOGGLES.AI_SMART_APPFINDER);\n\t\t\t\t\tif (isFeatureEnabled) {\n\t\t\t\t\t\tconst navigationService = await Container.getServiceAsync<Navigation>(\"Navigation\");\n\t\t\t\t\t\tconst [{ supported }] = await navigationService.isNavigationSupported([\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\t\tsemanticObject: \"IntelligentPrompt\",\n\t\t\t\t\t\t\t\t\taction: \"propose\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]);\n\n\t\t\t\t\t\tthis.isPanelSupported = supported;\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tLog.error((error as Error).message);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//remove panel if it's not supported\n\t\tif (!this.isPanelSupported) {\n\t\t\tthis.removeActionButton(this.addAppsButton);\n\t\t\tconst contentAdditionDialog = this.getParent() as ContentAdditionDialog;\n\t\t\tcontentAdditionDialog.removePanel(this);\n\t\t\tcontentAdditionDialog.updateActionButtons();\n\t\t}\n\n\t\treturn this.isPanelSupported;\n\t}\n\n\t/**\n\t * Generates the searching animation SVG as a string.\n\t *\n\t * @private\n\t * @returns {string} The SVG string for the loading animation.\n\t */\n\tprivate _generateSearchingAnimation(): string {\n\t\treturn `<svg height=\"210\" fill=\"none\">\n            <g>\n                <rect height=\"210\" rx=\"4\" fill=\"white\"/>\n                <rect x=\"16\" y=\"143\" width=\"90%\" height=\"8\" rx=\"4\" fill=\"var(--sapContent_Placeholderloading_Background)\"/>\n                <rect x=\"16\" y=\"103\" width=\"84%\" height=\"32\" rx=\"4\" fill=\"var(--sapContent_Placeholderloading_Background)\"/>\n                <rect x=\"16\" y=\"33\" width=\"90%\" height=\"8\" rx=\"4\" fill=\"var(--sapContent_Placeholderloading_Background)\"/>\n                <rect x=\"16\" y=\"16\" width=\"96%\" height=\"12\" rx=\"4\" fill=\"var(--sapContent_Placeholderloading_Background)\"/>\n            </g>\n        </svg>`;\n\t}\n\n\t/**\n\t * Resets the panel to its default state.\n\t *\n\t * @private\n\t */\n\tpublic resetPanel(): void {\n\t\tconst defaultModelProperties = {\n\t\t\tquery: \"\",\n\t\t\thasError: false,\n\t\t\tsearchStatus: SearchStatus.Idle,\n\t\t\tsuggestedAppsCount: 0,\n\t\t\tuserSelectedApps: [],\n\t\t\tsuggestedApps: []\n\t\t};\n\n\t\tthis.model.setData({ ...this.model.getData(), ...defaultModelProperties } as object);\n\t\tthis.userSelectedApps.clear();\n\t}\n\n\t/**\n\t * Handles the \"Go\" button press event for searching suggested apps.\n\t *\n\t * @private\n\t * @async\n\t * @param {SearchField$SearchEvent} event - The search event triggered by the user.\n\t */\n\tpublic async onPressGo(event: SearchField$SearchEvent): Promise<void> {\n\t\t// reset panel if clear button is pressed\n\t\tif (event.getParameter(\"clearButtonPressed\")) {\n\t\t\tthis.resetPanel();\n\t\t\treturn;\n\t\t}\n\n\t\t// validate query\n\t\tconst query = this.model.getProperty(\"/query\") as string;\n\t\tif (!this.isValidQuery(query)) return;\n\n\t\ttry {\n\t\t\t// initiate search\n\t\t\tthis.model.setProperty(\"/hasError\", false);\n\t\t\tthis.model.setProperty(\"/searchStatus\", SearchStatus.Searching);\n\t\t\tthis.appSuggestionList.removeSelections(true);\n\n\t\t\tconst rawApps = await this.fetchAppsFromSearch(query);\n\t\t\t// suggest apps if there are results and search is not cancelled\n\t\t\tif (rawApps.length > 0 && this.model.getProperty(\"/searchStatus\") === SearchStatus.Searching) {\n\t\t\t\tconst allVisualizations = await this.fetchAllAvailableVisualizations();\n\t\t\t\tconst favoriteApps = await this.appManagerInstance.fetchFavVizs(true, true);\n\t\t\t\tconst insightsApps = await this.appManagerInstance.fetchInsightApps(true, this._i18nBundle.getText(\"insights\") as string);\n\n\t\t\t\t// generate suggested apps\n\t\t\t\tconst apps = this._generateApps(rawApps, allVisualizations, [...favoriteApps, ...insightsApps]);\n\t\t\t\tconst suggestedApps = await this._filterUnsupportedApps(apps);\n\n\t\t\t\t// update model with filtered apps\n\t\t\t\tthis.model.setProperty(\"/suggestedApps\", suggestedApps);\n\t\t\t\tthis.model.setProperty(\"/suggestedAppsCount\", suggestedApps.length);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tLog.error((err as Error).message);\n\t\t\tthis._handleError();\n\t\t} finally {\n\t\t\t// update search status only if search is not cancelled\n\t\t\tif (this.model.getProperty(\"/searchStatus\") === SearchStatus.Searching) {\n\t\t\t\tthis.model.setProperty(\"/searchStatus\", SearchStatus.Complete);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Filters out unsupported apps based on accessibility.\n\t *\n\t * @private\n\t * @param {SuggestedApp[]} apps - The list of suggested apps to filter.\n\t * @returns {Promise<SuggestedApp[]>} A promise that resolves to the filtered list of supported apps.\n\t */\n\tprivate async _filterUnsupportedApps(apps: SuggestedApp[]): Promise<SuggestedApp[]> {\n\t\tconst intents = apps.map((app) => app.vizData?.target) || [];\n\t\tconst navigationService = await Container.getServiceAsync<Navigation>(\"Navigation\");\n\t\tconst supportedAppIndices = await navigationService.isNavigationSupported(intents as Target[]);\n\n\t\treturn apps.filter((_, index) => supportedAppIndices[index]);\n\t}\n\n\t/**\n\t * Generates suggested apps from raw app data and visualizations.\n\t *\n\t * @private\n\t * @param {RawAppData[]} rawApps - The raw app data to process.\n\t * @param {IVisualization[]} allVisualizations - All available visualizations.\n\t * @param {ICustomVisualization[]} homePageVisualizations - Visualizations available in homepage.\n\t * @returns {SuggestedApp[]} The list of suggested apps.\n\t */\n\tprivate _generateApps(\n\t\trawApps: RawAppData[],\n\t\tallVisualizations: IVisualization[],\n\t\thomePageVisualizations: ICustomVisualization[]\n\t): SuggestedApp[] {\n\t\treturn rawApps.map((app) => {\n\t\t\tconst vizData = allVisualizations.find((viz) => viz.vizId === app.chipID);\n\t\t\tconst addedToHomePage = homePageVisualizations.some((viz) => viz.visualization?.vizId === app.chipID);\n\t\t\treturn {\n\t\t\t\ttitle: app.title,\n\t\t\t\tchipID: app.chipID,\n\t\t\t\tsubTitle: app.subTitle,\n\t\t\t\tdescription: app.appDescription,\n\t\t\t\ticon: app.iconUrl,\n\t\t\t\tvizData,\n\t\t\t\taddedToHomePage,\n\t\t\t\tisStaticApp: app.tileType === TileType.Static,\n\t\t\t\tstatus: this.getAppStatusTexts(app.configuration, addedToHomePage)\n\t\t\t};\n\t\t}) as SuggestedApp[];\n\t}\n\n\t/**\n\t * Validates the query string based on minimum length.\n\t *\n\t * @private\n\t * @param {string} query - The query string to validate.\n\t * @returns {boolean} True if the query is valid, otherwise false.\n\t */\n\tprivate isValidQuery(query: string): boolean {\n\t\treturn Boolean(query?.trim() && query.trim().length >= Constants.MinQueryLength);\n\t}\n\n\t/**\n\t * Fetches all available visualizations for the user.\n\t *\n\t * @private\n\t * @async\n\t * @returns {Promise<IVisualization[]>} A promise that resolves to the list of visualizations.\n\t */\n\tprivate async fetchAllAvailableVisualizations(): Promise<IVisualization[]> {\n\t\tif (!this.allAvailableVisualizations) {\n\t\t\tconst searchableContentService = await Container.getServiceAsync<SearchableContent>(\"SearchableContent\");\n\t\t\tconst allAvailableApps = await searchableContentService.getApps({ enableVisualizationPreview: false });\n\t\t\tthis.allAvailableVisualizations = allAvailableApps.reduce((visualizations: IVisualization[], currentApp: AppData) => {\n\t\t\t\treturn visualizations.concat(currentApp.visualizations);\n\t\t\t}, []);\n\t\t}\n\n\t\treturn this.allAvailableVisualizations;\n\t}\n\n\t/**\n\t * Fetches a CSRF token for secure API requests.\n\t *\n\t * @private\n\t * @async\n\t * @returns {Promise<string | null>} A promise that resolves to the CSRF token or null if fetching fails.\n\t */\n\tprivate async _fetchCSRFToken(): Promise<string | null> {\n\t\ttry {\n\t\t\tconst response = await fetch(AI_APP_FINDER_BASE_URL, { method: \"GET\", headers: { \"X-CSRF-Token\": \"Fetch\" } });\n\t\t\treturn response.headers.get(\"X-CSRF-Token\");\n\t\t} catch (error) {\n\t\t\tLog.error(\"Failed to fetch CSRF token\", error as Error);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Fetches apps from the search API based on the query.\n\t *\n\t * @private\n\t * @async\n\t * @param {string} query - The search query string.\n\t * @returns {Promise<RawAppData[]>} A promise that resolves to the list of raw app data.\n\t */\n\tprivate async fetchAppsFromSearch(query: string): Promise<RawAppData[]> {\n\t\ttry {\n\t\t\tconst token = await this._fetchCSRFToken();\n\t\t\tconst headers = {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t...(token && { \"X-CSRF-Token\": token })\n\t\t\t};\n\n\t\t\tconst response = await fetch(AI_APP_FINDER_API, {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders,\n\t\t\t\tbody: JSON.stringify({ UserInput: query })\n\t\t\t});\n\n\t\t\t// handle error responses\n\t\t\tif (!response.ok) {\n\t\t\t\tconst errorResponse = (await response.json()) as ErrorResponse;\n\t\t\t\tthis._handleError(errorResponse.error?.message || \"\");\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tconst queryResult = (await response.json()) as QueryResponse;\n\t\t\treturn queryResult.value || [];\n\t\t} catch (error) {\n\t\t\tLog.error((error as Error).message);\n\t\t\tthis._handleError();\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves status texts for an app based on its configuration and homepage status.\n\t *\n\t * @private\n\t * @param {string} configuration - The app's configuration string.\n\t * @param {boolean} addedToHomePage - Indicates if the app is already added to the homepage.\n\t * @returns {string[]} An array of status texts for the app.\n\t */\n\tprivate getAppStatusTexts(configuration: string, addedToHomePage: boolean): string[] {\n\t\tlet statusTexts = [];\n\n\t\tif (addedToHomePage) {\n\t\t\tstatusTexts.push(this._i18nBundle.getText(\"alreadyAddedApp\") as string);\n\t\t}\n\t\tif (configuration) {\n\t\t\ttry {\n\t\t\t\tconst parsedConfig = JSON.parse(configuration) as Configuration;\n\t\t\t\tconst tileConfig = JSON.parse(parsedConfig?.tileConfiguration) as TileConfig;\n\t\t\t\tconst infoText = (tileConfig?.display_info_text || \"\").toLowerCase();\n\t\t\t\tif (infoText === Constants.DeprecatedInfoText) {\n\t\t\t\t\tstatusTexts.push(this._i18nBundle.getText(\"deprecatedApp\") as string);\n\t\t\t\t}\n\t\t\t} catch (error: unknown) {\n\t\t\t\tLog.warning((error as Error).message);\n\t\t\t}\n\t\t}\n\n\t\treturn statusTexts;\n\t}\n\n\t/**\n\t * Generates status text controls for the provided status texts.\n\t *\n\t * @private\n\t * @param {string[]} stausTexts - The list of status texts.\n\t * @returns {Text[]} An array of Text controls with applied styles.\n\t */\n\tprivate _generateStatusTexts(stausTexts: string[]): Text[] {\n\t\treturn stausTexts.map((status) => {\n\t\t\treturn new Text({\n\t\t\t\ttext: this._i18nBundle.getText(status)\n\t\t\t}).addStyleClass(this.applyStatusClass(status));\n\t\t});\n\t}\n\n\t/**\n\t * Applies a CSS class to the status text based on its type.\n\t *\n\t * @private\n\t * @param {string} status - The status text to classify.\n\t * @returns {string} The CSS class for the status text.\n\t */\n\tpublic applyStatusClass(status: string): string {\n\t\tif (status === this._i18nBundle.getText(\"alreadyAddedApp\")) {\n\t\t\treturn \"addedAppStatusText\";\n\t\t} else if (status === this._i18nBundle.getText(\"deprecatedApp\")) {\n\t\t\treturn \"deprecatedAppStatusText\";\n\t\t} else {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\t/**\n\t * Handles the \"Add Apps\" button press event to add selected apps to favorites.\n\t *\n\t * @private\n\t * @async\n\t */\n\tprivate async onPressAddApps(): Promise<void> {\n\t\tconst userSelectedApps = this.model.getProperty(\"/userSelectedApps\") as CustomListItem[];\n\t\tconst vizIds = userSelectedApps.map((item) => item.getBindingContext()?.getProperty(\"chipID\") as string);\n\t\tfor (const vizId of vizIds) {\n\t\t\tawait this.appManagerInstance.addVisualization(vizId);\n\t\t}\n\n\t\t// refresh the favorite apps panel\n\t\tawait this.refreshFavoriteApps();\n\t\t(this.getParent() as ContentAdditionDialog).close();\n\t\tMessageToast.show(this._i18nBundle.getText(\"appAddedToFavorites\") as string);\n\t\tthis.resetPanel();\n\t}\n\n\t/**\n\t * Retrieves the AppsContainer instance from the parent layout.\n\t *\n\t * @private\n\t * @returns {AppsContainer | undefined} The AppsContainer instance or undefined if not found.\n\t */\n\tprivate getAppsContainer(): AppsContainer | undefined {\n\t\tconst layout = this.getParent()?.getParent() as BaseLayout;\n\t\treturn layout.getContent().find((container) => container instanceof AppsContainer) as AppsContainer | undefined;\n\t}\n\n\t/**\n\t * Retrieves the favorite apps panel from the AppsContainer.\n\t *\n\t * @private\n\t * @returns {FavAppPanel | undefined} The favorite apps panel or undefined if not found.\n\t */\n\tprivate getFavAppPanel(): FavAppPanel | undefined {\n\t\treturn this.getAppsContainer()\n\t\t\t?.getContent()\n\t\t\t.find((panel) => panel instanceof FavAppPanel);\n\t}\n\n\t/**\n\t * Refreshes the favorite apps panel in the AppsContainer.\n\t *\n\t * @private\n\t * @async\n\t */\n\tprivate async refreshFavoriteApps(): Promise<void> {\n\t\tawait this.getAppsContainer()?.refreshPanel(this.getFavAppPanel() as FavAppPanel);\n\t}\n\n\t/**\n\t * Handles the selection change event for the suggested apps list.\n\t *\n\t * @public\n\t * @param {ListBase$SelectionChangeEvent} event - The selection change event.\n\t */\n\tpublic onListSelectionChange(event: ListBase$SelectionChangeEvent): void {\n\t\tconst listItem = event.getParameter(\"listItem\") as CustomListItem;\n\t\tconst selected = event.getParameter(\"selected\") as boolean;\n\n\t\tif (!selected) this.userSelectedApps.delete(listItem);\n\t\telse {\n\t\t\tconst context = listItem.getBindingContext();\n\t\t\tconst addedToHomePage = context?.getProperty(\"addedToHomePage\") as boolean;\n\t\t\tif (!addedToHomePage) this.userSelectedApps.add(listItem);\n\t\t}\n\n\t\tthis.model.setProperty(\"/userSelectedApps\", Array.from(this.userSelectedApps));\n\t}\n\n\t/**\n\t * Handles errors by updating the model with error details.\n\t *\n\t * @private\n\t * @param {string} [message=\"\"] - The error message to process.\n\t */\n\tprivate _handleError(message: string = \"\"): void {\n\t\tconst [, errorCode, errorDescription] = message.match(/\\((\\d{2})\\d*\\)\\s*(.*)/) || [];\n\t\tthis.model.setProperty(\"/hasError\", true);\n\t\tthis.model.setProperty(\"/errorType\", this._getErrorType(errorCode));\n\t\tthis.model.setProperty(\"/errorDescription\", errorDescription || \"\");\n\t}\n\n\t/**\n\t * Determines the error type based on the provided error code.\n\t *\n\t * @private\n\t * @param {string} [errorCode=\"\"] - The error code to evaluate.\n\t * @returns {ErrorType} The corresponding error type.\n\t */\n\tprivate _getErrorType(errorCode: string = \"\"): ErrorType {\n\t\tswitch (errorCode) {\n\t\t\tcase \"10\":\n\t\t\t\treturn ErrorType.ServiceError;\n\t\t\tcase \"20\":\n\t\t\tcase \"40\":\n\t\t\t\treturn ErrorType.NoResultsFound;\n\t\t\tcase \"30\":\n\t\t\t\treturn ErrorType.ValidationError;\n\t\t\tdefault:\n\t\t\t\treturn ErrorType.DefaultError;\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":16,"column":0},"map":{"version":3,"names":["sap","ui","define","Log","GenericTile","Panel","sap_m_library","EventBus","Parameters","S4MyHome","___AppsContainerGenericPlaceholder","__BaseContainer","__RecommendedAppPanel","___library","___utils_DataFormatUtils","___utils_Device","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","BackgroundDesign","FrameType","GenericTileMode","GenericTileScope","TileSizeBehavior","getAppsPlaceholder","BaseContainer","RecommendedAppPanel","OrientationType","getLeanURL","DeviceType","getDefaultAppColor","sLegendName","key","value","get","name","assigned","CONSTANTS","PLACEHOLDER_ITEMS_COUNT","AppsContainer","extend","metadata","events","appsLoaded","parameters","apps","type","tiles","renderer","apiVersion","constructor","_constructor","id","settings","BaseContainer.prototype.constructor.call","this","_isInitialRender","init","_init","BaseContainer.prototype.init.call","setProperty","_i18nBundle","getText","getDeviceType","Mobile","Vertical","eventBus","getInstance","subscribe","channelId","eventId","data","showRecommendation","firstAppsPanel","getContent","getProperty","addStyleClass","addCustomSetting","_attachRouteChangeEvent","_this","handleRouteChange","event","show","getParameter","_temp2","_temp","_appSwitched","showPersistedDialog","Promise","resolve","load","_setPanelsDirty","reject","attachRouteMatched","error","warning","Error","message","String","onBeforeRendering","_onBeforeRendering","_attachPanelSupportedEvent","_removeUnsupportedPanels","adjustLayout","BaseContainer.prototype.onBeforeRendering.call","onAfterRendering","_onAfterRendering","_this2","_activateRecommendationTabPanel","_load","_this3","selectedPanels","getPanels","all","map","selectedPanel","_setApps","_getPanels","isPhone","_getSelectedPanel","_showPersistedDialog","firePersistDialog","panels","panel","setDesktopViewDirty","setMobileViewDirty","_generatePlaceholder","isLoaded","destroyAggregation","placeholderApps","generateApps","Array","fill","status","setApps","_updatePanelContent","_this4","_temp7","_temp6","fireEvent","_temp5","isDirty","isMobileDirty","loadApps","_temp4","getApps","fetchTileVisualization","setLoaded","_temp3","isA","applyPersonalization","showErrorCard","getTitle","groups","getAggregation","wrapper","_generateMobileAppsWrapper","_generateAppsWrapper","aggregationName","items","_generateMobileCards","getId","_generateTiles","_addWrapperContent","_updatePanelContentVisibility","appsWrapper","_generateDesktopAppsWrapper","mobileAppsWrapper","errorCard","_generateErrorMessage","hasApps","length","setVisible","getParent","setWidth","_getAppTile","app","actions","tileId","scope","ActionMore","Display","state","getStatus","mode","IconMode","sizeBehavior","Small","header","backgroundColor","getBgColor","tileIcon","getIcon","url","getUrl","frameType","TwoByHalf","renderOnThemeChange","dropAreaOffset","subheader","getSubTitle","press","_onPress","width","_getGroupTile","group","tileBadge","getNumber","getGroupId","_onPanelSelect","_this5","BaseContainer.prototype._onPanelSelect.call","_refreshAllPanels","_this6","refreshPanel","_refreshPanel","_this7","_toggleTabView","supportedPanels","filter","isSupported","iconTabBarControl","_getInnerControl","toggleStyleClass","_onPanelSupported","currentPanel","setSupported","_togglePanelVisibility","isVisible","panelWrapper","_getPanelContentWrapper","iconTabBar","tabs","getItems","selectedTab","find","tab","getKey","unSupportedPanels","hasListeners","attachSupported","bind","_this8","recommendedPanel","_temp8","_enableRecommendationTab","_adjustLayout","currentLayout","newLayout","SideBySide","shouldAdjustLayout","toggleActionButtons","forEach","currentPanelId","i","panelItems","slice","backgroundDesign","Solid","height","content","push","item","addAggregation","_showErrorCard","getGenericPlaceholderContent","_getGenericPlaceholderContent"],"sources":["AppsContainer.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport GridContainer from \"sap/f/GridContainer\";\nimport GenericTile from \"sap/m/GenericTile\";\nimport HeaderContainer from \"sap/m/HeaderContainer\";\nimport IconTabBar, { IconTabBar$SelectEvent } from \"sap/m/IconTabBar\";\nimport IconTabFilter from \"sap/m/IconTabFilter\";\nimport Panel from \"sap/m/Panel\";\nimport VBox from \"sap/m/VBox\";\nimport { BackgroundDesign, FrameType, GenericTileMode, GenericTileScope, LoadState, TileSizeBehavior } from \"sap/m/library\";\nimport Event from \"sap/ui/base/Event\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport Parameters from \"sap/ui/core/theming/Parameters\";\nimport S4MyHome from \"sap/ushell/api/S4MyHome\";\nimport App from \"./App\";\nimport { $AppsContainerSettings } from \"./AppsContainer\";\nimport { getAppsPlaceholder } from \"./AppsContainerGenericPlaceholder\";\nimport BaseApp from \"./BaseApp\";\nimport BaseAppPanel, { BaseAppPanel$SupportedEvent } from \"./BaseAppPanel\";\nimport BaseAppPersPanel from \"./BaseAppPersPanel\";\nimport BaseContainer from \"./BaseContainer\";\nimport Group from \"./Group\";\nimport MenuItem from \"./MenuItem\";\nimport RecommendedAppPanel from \"./RecommendedAppPanel\";\nimport { ICustomVisualization } from \"./interface/AppsInterface\";\nimport { OrientationType } from \"./library\";\nimport { getLeanURL } from \"./utils/DataFormatUtils\";\nimport { DeviceType } from \"./utils/Device\";\n\nconst getDefaultAppColor = () => {\n\tconst sLegendName = \"sapLegendColor9\";\n\treturn {\n\t\tkey: sLegendName,\n\t\tvalue: Parameters.get({\n\t\t\tname: sLegendName\n\t\t}),\n\t\tassigned: false\n\t};\n};\n\nconst CONSTANTS = {\n\tPLACEHOLDER_ITEMS_COUNT: 5\n};\n\n/**\n *\n * Container class for managing and storing apps.\n *\n * @extends BaseContainer\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @public\n *\n * @alias sap.cux.home.AppsContainer\n */\nexport default class AppsContainer extends BaseContainer {\n\tprivate _isInitialRender = true;\n\tprivate _appSwitched!: boolean;\n\tstatic readonly renderer = {\n\t\t...BaseContainer.renderer,\n\t\tapiVersion: 2\n\t};\n\tstatic readonly metadata: MetadataOptions = {\n\t\tevents: {\n\t\t\t/**\n\t\t\t * Event is fired when apps are loaded.\n\t\t\t */\n\t\t\tappsLoaded: {\n\t\t\t\tparameters: {\n\t\t\t\t\tapps: { type: \"sap.cux.home.App[]\" },\n\t\t\t\t\ttiles: { type: \"sap.m.GenericTile[]\" }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tconstructor(idOrSettings?: string | $AppsContainerSettings);\n\tconstructor(id?: string, settings?: $AppsContainerSettings);\n\t/**\n\t * Constructor for a new app container.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $AppsContainerSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\t\tthis.setProperty(\"title\", this._i18nBundle?.getText(\"appsTitle\"));\n\t\tif (this.getDeviceType() === DeviceType.Mobile) {\n\t\t\tthis.setProperty(\"orientation\", OrientationType.Vertical);\n\t\t}\n\t\t// Subscribe to recommendation setting change event\n\t\tconst eventBus = EventBus.getInstance();\n\t\teventBus.subscribe(\"importChannel\", \"recommendationSettingChanged\", (channelId?: string, eventId?: string, data?: object) => {\n\t\t\tconst showRecommendation = (data as { showRecommendation: boolean }).showRecommendation;\n\t\t\tif (!showRecommendation) {\n\t\t\t\tconst firstAppsPanel = this.getContent()?.[0];\n\t\t\t\tthis.setProperty(\"selectedKey\", firstAppsPanel?.getProperty(\"key\"));\n\t\t\t}\n\t\t});\n\n\t\t// disable lazy load for apps container as it's the hero element\n\t\tthis.setProperty(\"enableLazyLoad\", false);\n\t\tthis.addStyleClass(\"sapCuxAppsContainer\");\n\t\tthis.addCustomSetting(\"text\", this._i18nBundle.getText(\"myAppMsg\") as string);\n\t\tthis._attachRouteChangeEvent();\n\t}\n\n\t/**\n\t * Attaches an event handler to monitor route changes and manage application state accordingly.\n\t * @private\n\t *\n\t * @returns {void}\n\t */\n\n\tprivate _attachRouteChangeEvent(): void {\n\t\tconst handleRouteChange = async (event: Event<{ isMyHomeRoute: boolean }>) => {\n\t\t\tconst show = event.getParameter(\"isMyHomeRoute\");\n\t\t\tif (show) {\n\t\t\t\tif (this._appSwitched) {\n\t\t\t\t\tthis.showPersistedDialog();\n\t\t\t\t\tawait this.load();\n\t\t\t\t\tthis._appSwitched = false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._setPanelsDirty();\n\t\t\t\tthis._appSwitched = true;\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\tS4MyHome.attachRouteMatched({}, handleRouteChange, this);\n\t\t} catch (error) {\n\t\t\tLog.warning(\"Unable to attach route change handler\", error instanceof Error ? error.message : String(error));\n\t\t}\n\t}\n\n\t/**\n\t * onBeforeRendering lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic onBeforeRendering() {\n\t\tif (this._isInitialRender) {\n\t\t\tthis._isInitialRender = false;\n\t\t\tthis._attachPanelSupportedEvent();\n\t\t\tthis._removeUnsupportedPanels();\n\t\t}\n\n\t\tthis.adjustLayout();\n\t\tsuper.onBeforeRendering();\n\t}\n\n\t/**\n\t * onAfterRendering lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic async onAfterRendering() {\n\t\t// activating the recommendation tab from appsContainer as personalization data in not available on init of panel.\n\t\tawait this._activateRecommendationTabPanel();\n\t}\n\n\t/**\n\t * Loads the AppsContainer section.\n\t * Overrides the load method of the BaseContainer.\n\t *\n\t * @private\n\t * @async\n\t * @override\n\t */\n\tpublic async load(): Promise<void> {\n\t\tconst selectedPanels = this.getPanels();\n\t\tawait Promise.all(selectedPanels.map((selectedPanel) => this._setApps(selectedPanel)));\n\t}\n\n\t/**\n\t * Retrieves the relevant panels based on the device type.\n\t *\n\t * @private\n\t * @returns {BaseAppPanel[]} An array of panels based on the device type.\n\t */\n\n\tprivate getPanels(): BaseAppPanel[] {\n\t\tconst isPhone = this.getDeviceType() === DeviceType.Mobile;\n\t\treturn (isPhone ? this.getContent() : [this._getSelectedPanel()]) as BaseAppPanel[];\n\t}\n\n\t/**\n\t * Triggers navigation actions for the currently relevant panels.\n\t *\n\t * @private\n\t * @returns {void}\n\t */\n\n\tprivate showPersistedDialog(): void {\n\t\tconst selectedPanels = this.getPanels();\n\t\tfor (const selectedPanel of selectedPanels) {\n\t\t\tselectedPanel.firePersistDialog();\n\t\t}\n\t}\n\n\t/**\n\t * Set all panels dirty state to true, to refresh all panels\n\t * @private\n\t */\n\tprivate _setPanelsDirty(): void {\n\t\tconst panels = this.getContent() as BaseAppPanel[];\n\t\tfor (const panel of panels) {\n\t\t\tpanel.setDesktopViewDirty(true);\n\t\t\tpanel.setMobileViewDirty(true);\n\t\t}\n\t}\n\n\t/**\n\t * Generate placeholer for the panel.\n\t * @private\n\t * @param {BaseAppPanel} panel - Panel for which placeholders has to be generated.\n\t */\n\tprivate _generatePlaceholder(panel: BaseAppPanel): void {\n\t\tif (!panel.isLoaded()) {\n\t\t\tpanel.destroyAggregation(\"apps\", true);\n\t\t\tconst placeholderApps = panel.generateApps(\n\t\t\t\tnew Array(CONSTANTS.PLACEHOLDER_ITEMS_COUNT).fill({ status: \"Loading\" }) as ICustomVisualization[]\n\t\t\t);\n\t\t\tpanel.setApps(placeholderApps);\n\t\t\tthis._updatePanelContent(panel);\n\t\t}\n\t}\n\n\t/**\n\t * Loads and sets the apps.\n\t * @private\n\t * @param {BaseAppPanel} panel - Panel for which apps has to be loaded.\n\t * @returns {Promise<void>} resolves when apps are loaded.\n\t */\n\tprivate async _setApps(panel: BaseAppPanel): Promise<void> {\n\t\ttry {\n\t\t\t// only load the apps if panel is in dirty state\n\t\t\tif (panel.isDirty() && panel.isMobileDirty()) {\n\t\t\t\tthis._generatePlaceholder(panel);\n\t\t\t\tawait panel.loadApps?.();\n\t\t\t\tif (this.getDeviceType() === DeviceType.Mobile) {\n\t\t\t\t\tpanel.setMobileViewDirty(false);\n\t\t\t\t} else {\n\t\t\t\t\tpanel.setDesktopViewDirty(false);\n\t\t\t\t}\n\t\t\t\tpanel.setLoaded(true);\n\t\t\t\tthis._updatePanelContent(panel);\n\n\t\t\t\tif (panel.isA(\"sap.cux.home.BaseAppPersPanel\")) {\n\t\t\t\t\tawait (panel as BaseAppPersPanel).applyPersonalization();\n\t\t\t\t}\n\t\t\t\tlet tiles: GenericTile[] = [];\n\t\t\t\tlet apps = panel.getApps();\n\t\t\t\ttiles = panel.fetchTileVisualization(tiles);\n\t\t\t\tthis.fireEvent(\"appsLoaded\", { apps, tiles });\n\t\t\t}\n\n\t\t\t// fire panel loaded event\n\t\t\tpanel.fireEvent(\"loaded\");\n\t\t} catch (error: unknown) {\n\t\t\tthis.showErrorCard(panel);\n\t\t\tLog.error(`Error setting apps for panel: ${panel.getTitle()}`, error instanceof Error ? error.message : String(error));\n\t\t}\n\t}\n\n\t/**\n\t * Updates the content of the panel by replacing existing items with new apps and groups.\n\t * This method selects the appropriate wrapper based on the device type, and add apps/group or mobile cards to the wrapper.\n\t *\n\t * @param {BaseAppPanel} panel - The panel whose content needs to be updated.\n\t * @returns {void}\n\t * @private\n\t */\n\tprivate _updatePanelContent(panel: BaseAppPanel): void {\n\t\tconst apps = panel.getApps() || [];\n\t\tconst groups = (panel.getAggregation(\"groups\") || []) as Group[];\n\t\tconst isPhone = this.getDeviceType() === DeviceType.Mobile;\n\t\tconst wrapper = isPhone ? panel._generateMobileAppsWrapper() : panel._generateAppsWrapper();\n\t\tconst aggregationName = isPhone ? \"content\" : \"items\";\n\t\twrapper.destroyAggregation(aggregationName);\n\t\tlet items = isPhone ? this._generateMobileCards([...groups, ...apps], panel.getId()) : this._generateTiles([...groups, ...apps]);\n\t\tthis._addWrapperContent(wrapper, items, aggregationName);\n\t\tthis._updatePanelContentVisibility(panel);\n\t}\n\n\t/**\n\t * Updates the visibility of the panel's content based on the current state and device type.\n\t * This method determines whether to display the apps or an error message based on the presence of apps and groups.\n\t * It also adjusts the visibility of different containers depending on whether the device is a phone or not.\n\t *\n\t * @param {BaseAppPanel} panel - The panel whose content visibility needs to be updated.\n\t * @returns {void}\n\t * @private\n\t */\n\tprivate _updatePanelContentVisibility(panel: BaseAppPanel): void {\n\t\tconst apps = panel.getApps() || [];\n\t\tconst groups = (panel.getAggregation(\"groups\") || []) as Group[];\n\t\tconst isPhone = this.getDeviceType() === DeviceType.Mobile;\n\t\tconst appsWrapper = panel._generateDesktopAppsWrapper();\n\t\tconst mobileAppsWrapper = panel._generateMobileAppsWrapper();\n\t\tconst errorCard = panel._generateErrorMessage();\n\t\tconst hasApps = [...apps, ...groups].length !== 0;\n\t\tappsWrapper.setVisible(hasApps && !isPhone);\n\t\tmobileAppsWrapper.setVisible(hasApps && isPhone);\n\t\t(mobileAppsWrapper.getParent() as VBox).setWidth(isPhone && hasApps ? \"100%\" : \"auto\");\n\t\terrorCard.setVisible(!hasApps);\n\t}\n\n\t/**\n\t * Generates generic tile based on app.\n\t * @private\n\t * @param {sap.cux.home.App} app - App.\n\t * @returns {sap.m.GenericTile}.\n\t */\n\tpublic _getAppTile(app: App): GenericTile {\n\t\tconst isPhone = this.getDeviceType() === DeviceType.Mobile;\n\t\tconst actions = (app.getAggregation(\"menuItems\") || []) as MenuItem[];\n\t\tconst tileId = isPhone ? `${app.getId()}-mobile-tile` : `${app.getId()}-tile`;\n\t\treturn new GenericTile(tileId, {\n\t\t\tscope: actions.length && !isPhone ? GenericTileScope.ActionMore : GenericTileScope.Display,\n\t\t\tstate: app.getStatus() as LoadState,\n\t\t\tmode: GenericTileMode.IconMode,\n\t\t\tsizeBehavior: TileSizeBehavior.Small,\n\t\t\theader: app.getTitle(),\n\t\t\tbackgroundColor: app.getBgColor() || getDefaultAppColor()?.key,\n\t\t\ttileIcon: app.getIcon(),\n\t\t\turl: getLeanURL(app.getUrl()),\n\t\t\tframeType: FrameType.TwoByHalf,\n\t\t\trenderOnThemeChange: true,\n\t\t\tdropAreaOffset: 4,\n\t\t\tsubheader: app.getSubTitle(),\n\t\t\tpress: (e) => app._onPress(e),\n\t\t\twidth: isPhone ? \"15rem\" : \"100%\"\n\t\t}).addStyleClass(\"tileLayout sapMGTTwoByHalf\");\n\t}\n\n\t/**\n\t * Generates generic tile based on group.\n\t * @private\n\t * @param {sap.cux.home.Group} group - Group.\n\t * @returns {sap.m.GenericTile}.\n\t */\n\tprivate _getGroupTile(group: Group): GenericTile {\n\t\tconst isPhone = this.getDeviceType() === DeviceType.Mobile;\n\t\tconst actions = (group.getAggregation(\"menuItems\") || []) as MenuItem[];\n\t\tconst tileId = isPhone ? `${group.getId()}-mobile-tile` : `${group.getId()}-tile`;\n\t\treturn new GenericTile(tileId, {\n\t\t\tscope: actions.length && !isPhone ? GenericTileScope.ActionMore : GenericTileScope.Display,\n\t\t\tstate: group.getStatus() as LoadState,\n\t\t\tmode: GenericTileMode.IconMode,\n\t\t\tsizeBehavior: TileSizeBehavior.Small,\n\t\t\theader: group.getTitle(),\n\t\t\tbackgroundColor: group.getBgColor() || getDefaultAppColor()?.key,\n\t\t\ttileIcon: group.getIcon(),\n\t\t\tframeType: FrameType.TwoByHalf,\n\t\t\trenderOnThemeChange: true,\n\t\t\tdropAreaOffset: 4,\n\t\t\ttileBadge: group.getNumber(),\n\t\t\tpress: (e) => group._onPress(e),\n\t\t\twidth: isPhone ? \"15rem\" : \"100%\"\n\t\t})\n\t\t\t.addStyleClass(\"tileLayout sapMGTTwoByHalf\")\n\t\t\t.data(\"groupId\", group.getGroupId()) as GenericTile;\n\t}\n\n\t/**\n\t * Overridden method for selection of panel in the IconTabBar.\n\t * Loads the apps in selected panel\n\t * @private\n\t * @returns {Promise<void>} resolves when apps are loaded on panel selection.\n\t */\n\tprotected async _onPanelSelect(event: IconTabBar$SelectEvent) {\n\t\tsuper._onPanelSelect(event);\n\t\tconst selectedPanel = this._getSelectedPanel() as BaseAppPanel;\n\t\tawait this._setApps(selectedPanel);\n\t}\n\n\t/**\n\t * Refresh apps for all the panels.\n\t * @private\n\t * @returns {Promise<void>} resolves when all panels are set to dirty and apps for current panel are refreshed.\n\t */\n\tpublic async _refreshAllPanels(): Promise<void> {\n\t\t//set all panels to dirty\n\t\tthis._setPanelsDirty();\n\t\t//set apps for current section\n\t\tawait this._setApps(this._getSelectedPanel() as BaseAppPanel);\n\t}\n\n\t/**\n\t * Refresh apps for selected panel.\n\t * @private\n\t * @param {BaseAppPanel} panel - Panel that has be refreshed.\n\t * @returns {Promise<void>} resolves when apps are refreshed.\n\t */\n\tpublic async refreshPanel(panel: BaseAppPanel): Promise<void> {\n\t\tpanel.setMobileViewDirty(true);\n\t\tpanel.setDesktopViewDirty(true);\n\t\tawait this._setApps(panel);\n\t}\n\n\t/**\n\t * Toggles the visibility of the tab view based on the supported panels.\n\t * @private\n\t */\n\tprivate _toggleTabView() {\n\t\tif (this.getDeviceType() !== DeviceType.Mobile) {\n\t\t\tconst panels = this.getContent() as BaseAppPanel[];\n\t\t\tconst supportedPanels = panels.filter((panel) => panel.isSupported());\n\t\t\tconst iconTabBarControl = this._getInnerControl() as IconTabBar;\n\t\t\ticonTabBarControl?.toggleStyleClass(\"sapUiITBHide\", supportedPanels.length === 1);\n\t\t}\n\t}\n\n\t/**\n\t * Handles the supported state of the current panel.\n\t * If the panel is supported, it adds the panel to the content.\n\t * If the panel is not supported, it removes the panel from the content.\n\t * @param {BaseAppPanel} currentPanel - The panel to handle the supported state for.\n\t * @private\n\t */\n\tprivate _onPanelSupported(currentPanel: BaseAppPanel, event: BaseAppPanel$SupportedEvent) {\n\t\tconst isSupported = event.getParameter(\"isSupported\") as boolean;\n\t\tcurrentPanel.setSupported(isSupported);\n\t\tthis._togglePanelVisibility(currentPanel, isSupported);\n\t\tthis._toggleTabView();\n\t}\n\n\t/**\n\t * Toggles the visibility of the panel.\n\t * @param {BaseAppPanel} panel - The panel to toggle the visibility for.\n\t * @param {boolean} isVisible - The visibility state of the panel.\n\t * @private\n\t */\n\tprivate _togglePanelVisibility(panel: BaseAppPanel, isVisible: boolean) {\n\t\tif (this.getDeviceType() === DeviceType.Mobile) {\n\t\t\tconst panelWrapper = this._getPanelContentWrapper(panel);\n\t\t\tpanelWrapper.setVisible(isVisible);\n\t\t} else {\n\t\t\tconst iconTabBar = this._getInnerControl() as IconTabBar;\n\t\t\tconst tabs = (iconTabBar?.getItems() as IconTabFilter[]) || [];\n\t\t\tconst selectedTab = tabs.find((tab) => tab.getKey() === panel.getKey());\n\t\t\tselectedTab?.setVisible(isVisible);\n\t\t}\n\t}\n\n\t/**\n\t * Removes unsupported panels from the container.\n\t * @private\n\t */\n\tprivate _removeUnsupportedPanels() {\n\t\tconst panels = this.getContent() as BaseAppPanel[];\n\t\tconst unSupportedPanels = panels.filter((panel) => !panel.isSupported());\n\t\tfor (const panel of unSupportedPanels) {\n\t\t\tthis._togglePanelVisibility(panel, false);\n\t\t}\n\t\tthis._toggleTabView();\n\t}\n\n\t/**\n\t * Attaches an event handler to the \"supported\" event for each panel in the container.\n\t * @private\n\t */\n\tprivate _attachPanelSupportedEvent() {\n\t\tconst panels = this.getContent() as BaseAppPanel[];\n\t\tfor (const panel of panels) {\n\t\t\tif (!panel.hasListeners(\"supported\")) {\n\t\t\t\tpanel.attachSupported(this._onPanelSupported.bind(this, panel));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Calls the enable function to activate the recommendation tab for `RecommendedAppPanel`, unless the device is a mobile phone.\n\t *\n\t * @private\n\t */\n\tprivate async _activateRecommendationTabPanel(): Promise<void> {\n\t\tconst panels = this.getContent() as BaseAppPanel[];\n\t\tconst isPhone = this.getDeviceType() === DeviceType.Mobile;\n\t\tconst recommendedPanel = panels ? panels.find((panel) => panel instanceof RecommendedAppPanel) : null;\n\t\tif (recommendedPanel instanceof RecommendedAppPanel && !isPhone) {\n\t\t\tawait recommendedPanel._enableRecommendationTab();\n\t\t}\n\t}\n\n\t/**\n\t * Adjusts the layout and visibility based on the device type.\n\t *\n\t * This method adjusts the layout type and visibility of containers based on whether the device is a phone\n\t * or not. It sets the container's layout property, toggles visibility of panels and their containers, and\n\t * adjusts background design accordingly.\n\t *\n\t * @private\n\t * @returns {void}\n\t */\n\tpublic adjustLayout(): void {\n\t\tconst isPhone = this.getDeviceType() === DeviceType.Mobile;\n\t\tconst currentLayout = this.getProperty(\"orientation\") as OrientationType;\n\t\tconst newLayout = isPhone ? OrientationType.Vertical : OrientationType.SideBySide;\n\t\tconst shouldAdjustLayout = currentLayout !== newLayout;\n\t\t//hide actions if the device is a phone\n\t\tthis.toggleActionButtons(!isPhone);\n\n\t\tif (!shouldAdjustLayout) {\n\t\t\treturn;\n\t\t}\n\t\tthis.setProperty(\"orientation\", newLayout);\n\t\tconst panels = this.getContent() as BaseAppPanel[];\n\t\tpanels.forEach((panel) => {\n\t\t\t//if both the panels are dirty, then updated data will be loaded from onBeforeRendering, as layout change will trigger re-rendering\n\t\t\t//if both the panels are not dirty, i.e. doen't have any changes, then just toggle the visibility\n\t\t\tif (!panel.isDirty() && !panel.isMobileDirty()) {\n\t\t\t\tthis._updatePanelContentVisibility(panel);\n\t\t\t} else if (panel.isDirty() !== panel.isMobileDirty()) {\n\t\t\t\t//if one of the panels is dirty i.e. have updated data and other is not, then re-create the inner controls\n\t\t\t\tpanel.setDesktopViewDirty(false);\n\t\t\t\tpanel.setMobileViewDirty(false);\n\t\t\t\tthis._updatePanelContent(panel);\n\t\t\t}\n\t\t});\n\n\t\t//this is to handle scenario when unsupported propert is changed and then layout is changed.\n\t\tthis._removeUnsupportedPanels();\n\t}\n\n\t/**\n\t * Generates mobile card panel and add given apps/groups in the panel.\n\t *\n\t * @private\n\t * @param {BaseApp[]} items - Apps/Groups for which card panels has to be generated.\n\t * @param {string} currentPanelId - ID of the current panel.\n\t * @returns {sap.m.Panel} The newly created mobile card panel.\n\t */\n\tprivate _generateMobileCards(items: BaseApp[], currentPanelId?: string): Panel[] {\n\t\tconst panels: Panel[] = [];\n\t\tfor (let i = 0; i < items.length; i += 7) {\n\t\t\tconst panelItems = items.slice(i, i + 7);\n\t\t\tconst panel = new Panel(`${currentPanelId}--${i}`, {\n\t\t\t\tbackgroundDesign: BackgroundDesign.Solid,\n\t\t\t\theight: \"23.5rem\",\n\t\t\t\twidth: \"17rem\",\n\t\t\t\tcontent: this._generateTiles(panelItems)\n\t\t\t}).addStyleClass(\"sapUiMobileAppsCard appPanelBorder myAppMFBContent\");\n\t\t\tpanels.push(panel);\n\t\t}\n\t\treturn panels;\n\t}\n\n\t/**\n\t * Generates group/app generic tiles for given apps/groups.\n\t *\n\t * @private\n\t * @param {BaseApp[]} items - Apps/Groups for which tiles has to be generated.\n\t * @returns {sap.m.GenericTile[]} The generated tiles.\n\t */\n\tprivate _generateTiles(items: BaseApp[]): GenericTile[] {\n\t\treturn items.map((item) => (item.isA(\"sap.cux.home.Group\") ? this._getGroupTile(item as Group) : this._getAppTile(item as App)));\n\t}\n\n\t/**\n\t * Adds given items into the wrapper.\n\t * @param {HeaderContainer | GridContainer} wrapper - wrapper for which items has to be added.\n\t * @param {Panel[] | GenericTile[]} items - items to be added.\n\t * @param {string} aggregationName - aggregation name to which items has to be added.\n\t * @private\n\t */\n\tprivate _addWrapperContent(wrapper: HeaderContainer | GridContainer, items: Panel[] | GenericTile[], aggregationName: string) {\n\t\twrapper.destroyAggregation(aggregationName);\n\t\titems.forEach((item) => {\n\t\t\twrapper.addAggregation(aggregationName, item);\n\t\t});\n\t}\n\n\t/**\n\t * Displays an error card in the provided panel.\n\t *\n\t * @param panel - The panel in which the error card should be displayed.\n\t */\n\tprivate showErrorCard(panel: BaseAppPanel): void {\n\t\tconst errorCard = panel._generateErrorMessage();\n\t\tconst appsWrapper = panel._generateDesktopAppsWrapper();\n\t\tconst mobileAppsWrapper = panel._generateMobileAppsWrapper();\n\t\tappsWrapper?.setVisible(false);\n\t\tmobileAppsWrapper?.setVisible(false);\n\t\terrorCard?.setVisible(true);\n\t}\n\n\t/**\n\t * Retrieves the generic placeholder content for the Apps container.\n\t *\n\t * @returns {string} The HTML string representing the Apps container's placeholder content.\n\t */\n\tprotected getGenericPlaceholderContent(): string {\n\t\treturn getAppsPlaceholder();\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":21,"column":0},"map":{"version":3,"names":["sap","ui","define","getAppsPlaceholder","__exports","__esModule"],"sources":["AppsContainerGenericPlaceholder.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nexport function getAppsPlaceholder(): string {\n\treturn `\n        <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plContent plResponsivePadding\" style=\"background-color:transparent\">\n            <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM\" style=\"width: 225px;\"></div>\n            <div class=\"plPHPCardContainer\" style=\"background-color:white\">\n                <div class=\"plPHPCard plPHPCardVersion4 PHPContentCard8\">\n                    <div class=\"plPHPCardHeader\"></div>\n                    <div class=\"plPHPCardContent\">\n                        <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                            <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                                <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare\">\n                                    </div>\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                    </div>\n                                </div>\n                                <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare\">\n                                    </div>\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                    </div>\n                                </div>\n                                <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare\">\n                                    </div>\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                    </div>\n                                </div>\n                                <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare\">\n                                    </div>\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                    </div>\n                                </div>\n                                <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare\">\n                                    </div>\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div\n                                class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plSmallestVisibleSizeM\">\n                                <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare\">\n                                    </div>\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                    </div>\n                                </div>\n                                <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare\">\n                                    </div>\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                    </div>\n                                </div>\n                                <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare\">\n                                    </div>\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                    </div>\n                                </div>\n                                <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare\">\n                                    </div>\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                    </div>\n                                </div>\n                                <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare\">\n                                    </div>\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div\n                                class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plSmallestVisibleSizeL\">\n                                <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare\">\n                                    </div>\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                    </div>\n                                </div>\n                                <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare\">\n                                    </div>\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                    </div>\n                                </div>\n                                <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare\">\n                                    </div>\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                    </div>\n                                </div>\n                                <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare\">\n                                    </div>\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                    </div>\n                                </div>\n                                <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare\">\n                                    </div>\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div\n                                class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plSmallestVisibleSizeXL\">\n                                <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare\">\n                                    </div>\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                    </div>\n                                </div>\n                                <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare\">\n                                    </div>\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                    </div>\n                                </div>\n                                <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare\">\n                                    </div>\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                    </div>\n                                </div>\n                                <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare\">\n                                    </div>\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                    </div>\n                                </div>\n                                <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare\">\n                                    </div>\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextLine\"\n                                            style=\"width: 100%;\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `;\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,0DAAA,2BAIO,SAASC,IACf,MAAO,m/qBAqPR,CAAC,IAAAC,EAAA,CAAAC,WAAA,MAAAD,EAAAD,qBAAA,OAAAC,CAAA","ignoreList":[],"sourceRoot":""}},{"offset":{"line":26,"column":0},"map":{"version":3,"names":["sap","ui","define","List","Popover","StandardListItem","sap_m_library","Element","___utils_FESRUtil","ListType","addFESRSemanticStepName","FESR_EVENTS","getFESRId","BaseApp","extend","metadata","library","properties","title","type","group","defaultValue","subTitle","bgColor","icon","status","aggregations","menuItems","multiple","singularName","visibility","constructor","_constructor","id","settings","Element.prototype.constructor.call","this","_onPress","event","sAction","getParameter","_handlePress","_loadActionsPopover","tile","getSource","actions","getAggregation","oPopover","ActionsPopover","get","onPopoverOpen","addStyleClass","onPopoverClose","removeStyleClass","detachBeforeOpen","detachAfterClose","attachBeforeOpen","attachAfterClose","openBy","_oMoreIcon","_closeActionsPopover","_popover","close","_actionsList","showHeader","placement","addContent","destroyItems","forEach","action","actionType","getType","oListItem","getId","getIcon","getTitle","tooltip","visible","press","oEvent","Navigation","firePress","listItem","PRESS","addItem"],"sources":["BaseApp.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Button from \"sap/m/Button\";\nimport GenericTile, { GenericTile$PressEvent } from \"sap/m/GenericTile\";\nimport List from \"sap/m/List\";\nimport Popover from \"sap/m/Popover\";\nimport StandardListItem from \"sap/m/StandardListItem\";\nimport { ListType } from \"sap/m/library\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport Element from \"sap/ui/core/Element\";\nimport { $BaseAppSettings } from \"./BaseApp\";\nimport MenuItem from \"./MenuItem\";\nimport { addFESRSemanticStepName, FESR_EVENTS, getFESRId } from \"./utils/FESRUtil\";\n\n/**\n *\n * Base App class for managing and storing Apps.\n *\n * @extends sap.ui.core.Element\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121.0\n *\n * @abstract\n * @internal\n * @experimental Since 1.121\n * @private\n * @alias sap.cux.home.BaseApp\n */\nexport default abstract class BaseApp extends Element {\n\tconstructor(idOrSettings?: string | $BaseAppSettings);\n\tconstructor(id?: string, settings?: $BaseAppSettings);\n\tconstructor(id?: string, settings?: $BaseAppSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * Title of the app\n\t\t\t */\n\t\t\ttitle: { type: \"string\", group: \"Misc\", defaultValue: \"\" },\n\t\t\t/**\n\t\t\t * Sub header of the app\n\t\t\t */\n\t\t\tsubTitle: { type: \"string\", group: \"Misc\", defaultValue: \"\" },\n\t\t\t/**\n\t\t\t * Background color of the app\n\t\t\t */\n\t\t\tbgColor: { type: \"string\", group: \"Misc\", defaultValue: \"\" },\n\t\t\t/**\n\t\t\t * Icon of the app\n\t\t\t */\n\t\t\ticon: { type: \"string\", group: \"Misc\", defaultValue: \"\" },\n\t\t\t/**\n\t\t\t * Whether the app is in loaded or loading status\n\t\t\t */\n\t\t\tstatus: { type: \"string\", group: \"Misc\", defaultValue: \"Loaded\" }\n\t\t},\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * MenuItems aggregation of the app. These items will be shown in a popover on click of showMore\n\t\t\t */\n\t\t\tmenuItems: { type: \"sap.cux.home.MenuItem\", multiple: true, singularName: \"menuItem\", visibility: \"hidden\" }\n\t\t}\n\t};\n\n\tabstract _handlePress(event: GenericTile$PressEvent): void;\n\n\t/**\n\t * Base App Press Handler\n\t * @private\n\t * @param {GenericTile$PressEvent} event - The event object.\n\t */\n\tpublic _onPress(event: GenericTile$PressEvent): void {\n\t\tconst sAction = event.getParameter(\"action\") || \"Press\";\n\t\tif (sAction === \"Press\") {\n\t\t\tthis._handlePress(event);\n\t\t} else if (sAction === \"More\") {\n\t\t\tthis._loadActionsPopover(event);\n\t\t}\n\t}\n\n\t/**\n\t * Loads Actions available for selected app tile in popover\n\t * @private\n\t * @param {GenericTile$PressEvent} event - The event object.\n\t */\n\tpublic _loadActionsPopover(event: GenericTile$PressEvent) {\n\t\tconst tile: GenericTile & { _oMoreIcon: Button } = event.getSource?.();\n\t\tconst actions = this.getAggregation(\"menuItems\") as MenuItem[];\n\t\tconst oPopover = ActionsPopover.get(actions);\n\t\t//Add Border around current tile\n\t\tconst onPopoverOpen = () => {\n\t\t\ttile.addStyleClass(\"sapThemeBrand-asOutlineColor\");\n\t\t};\n\t\tconst onPopoverClose = () => {\n\t\t\ttile.removeStyleClass(\"sapThemeBrand-asOutlineColor\");\n\t\t\toPopover.detachBeforeOpen(onPopoverOpen);\n\t\t\toPopover.detachAfterClose(onPopoverClose);\n\t\t};\n\t\toPopover.attachBeforeOpen(onPopoverOpen);\n\t\toPopover.attachAfterClose(onPopoverClose);\n\t\toPopover.openBy(tile._oMoreIcon);\n\t}\n}\n\nexport class ActionsPopover {\n\tprivate static _popover: Popover;\n\tprivate static _actionsList: List;\n\n\tprivate constructor() {}\n\n\tstatic _closeActionsPopover() {\n\t\tActionsPopover._popover.close();\n\t}\n\n\t// Method to get the singleton instance\n\tstatic get(actions?: MenuItem[]): Popover {\n\t\tif (!ActionsPopover._popover) {\n\t\t\tActionsPopover._actionsList = new List({\n\t\t\t\tid: `appActionsList`\n\t\t\t});\n\t\t\tActionsPopover._popover = new Popover(`appActionsPopover`, {\n\t\t\t\tshowHeader: false,\n\t\t\t\tplacement: \"HorizontalPreferredRight\"\n\t\t\t})\n\t\t\t\t.addStyleClass(\"sapContrastPlus\")\n\t\t\t\t.addContent(ActionsPopover._actionsList);\n\t\t}\n\t\tActionsPopover._actionsList.destroyItems();\n\t\tactions?.forEach((action) => {\n\t\t\tconst actionType = action.getType() as ListType;\n\t\t\tconst oListItem = new StandardListItem(`${action.getId()}-index`, {\n\t\t\t\ticon: action.getIcon(),\n\t\t\t\ttitle: action.getTitle(),\n\t\t\t\ttooltip: action.getTitle(),\n\t\t\t\ttype: actionType,\n\t\t\t\tvisible: true,\n\t\t\t\tpress: (oEvent) => {\n\t\t\t\t\tif (actionType !== ListType.Navigation) {\n\t\t\t\t\t\tActionsPopover._closeActionsPopover();\n\t\t\t\t\t}\n\t\t\t\t\taction.firePress({ listItem: oEvent.getSource() });\n\t\t\t\t}\n\t\t\t});\n\t\t\taddFESRSemanticStepName(oListItem, FESR_EVENTS.PRESS, getFESRId(action));\n\t\t\tActionsPopover._actionsList.addItem(oListItem);\n\t\t});\n\t\treturn ActionsPopover._popover;\n\t}\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,kCAAA,0HAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,mBAUSC,EAAQH,EAAA,kBAKRI,EAAuBF,EAAA,iCAAEG,EAAWH,EAAA,qBAAEI,EAASJ,EAAA,aAExD,MAgB8BK,EAAgBN,EAAOO,OAAA,wBAOpCC,SAA4B,CAC3CC,QAAS,eACTC,WAAY,CAIXC,MAAO,CAAEC,KAAM,SAAUC,MAAO,OAAQC,aAAc,IAItDC,SAAU,CAAEH,KAAM,SAAUC,MAAO,OAAQC,aAAc,IAIzDE,QAAS,CAAEJ,KAAM,SAAUC,MAAO,OAAQC,aAAc,IAIxDG,KAAM,CAAEL,KAAM,SAAUC,MAAO,OAAQC,aAAc,IAIrDI,OAAQ,CAAEN,KAAM,SAAUC,MAAO,OAAQC,aAAc,WAExDK,aAAc,CAIbC,UAAW,CAAER,KAAM,wBAAyBS,SAAU,KAAMC,aAAc,WAAYC,WAAY,YAhCpGC,YAAW,SAAAC,EAACC,EAAaC,GACxBC,6BAAAC,KAAMH,EAAIC,EACX,EAyCOG,SAAQ,SAAAA,EAACC,GACf,MAAMC,EAAUD,EAAME,aAAa,WAAa,QAChD,GAAID,IAAY,QAAS,CACxBH,KAAKK,aAAaH,EACnB,MAAO,GAAIC,IAAY,OAAQ,CAC9BH,KAAKM,oBAAoBJ,EAC1B,CACD,EAOOI,oBAAmB,SAAAA,EAACJ,GAC1B,MAAMK,EAA6CL,EAAMM,cACzD,MAAMC,EAAUT,KAAKU,eAAe,aACpC,MAAMC,EAAWC,EAAeC,IAAIJ,GAEpC,MAAMK,EAAgBA,KACrBP,EAAKQ,cAAc,+BAA+B,EAEnD,MAAMC,EAAiBA,KACtBT,EAAKU,iBAAiB,gCACtBN,EAASO,iBAAiBJ,GAC1BH,EAASQ,iBAAiBH,EAAe,EAE1CL,EAASS,iBAAiBN,GAC1BH,EAASU,iBAAiBL,GAC1BL,EAASW,OAAOf,EAAKgB,WACtB,IAGM,MAAMX,EAIJjB,cAAe,CAEvB,2BAAO6B,GACNZ,EAAea,SAASC,OACzB,CAGA,UAAOb,CAAIJ,GACV,IAAKG,EAAea,SAAU,CAC7Bb,EAAee,aAAe,IAAI5D,EAAK,CACtC8B,GAAI,mBAELe,EAAea,SAAW,IAAIzD,EAAQ,oBAAqB,CAC1D4D,WAAY,MACZC,UAAW,6BAEVd,cAAc,mBACde,WAAWlB,EAAee,aAC7B,CACAf,EAAee,aAAaI,eAC5BtB,GAASuB,QAASC,IACjB,MAAMC,EAAaD,EAAOE,UAC1B,MAAMC,EAAY,IAAInE,EAAiB,GAAGgE,EAAOI,gBAAiB,CACjEjD,KAAM6C,EAAOK,UACbxD,MAAOmD,EAAOM,WACdC,QAASP,EAAOM,WAChBxD,KAAMmD,EACNO,QAAS,KACTC,MAAQC,IACP,GAAIT,IAAe7D,EAASuE,WAAY,CACvChC,EAAeY,sBAChB,CACAS,EAAOY,UAAU,CAAEC,SAAUH,EAAOnC,aAAc,IAGpDlC,EAAwB8D,EAAW7D,EAAYwE,MAAOvE,EAAUyD,IAChErB,EAAee,aAAaqB,QAAQZ,EAAU,GAE/C,OAAOxB,EAAea,QACvB,EACAhD,EAAAmC,iBAAA,OA3H6BnC,CAAO","ignoreList":[],"sourceRoot":""}},{"offset":{"line":31,"column":0},"map":{"version":3,"names":["sap","ui","define","Log","GridContainer","GridContainerSettings","HeaderContainer","IllustratedMessage","IllustratedMessageSize","MessageToast","VBox","sap_m_library","Config","Container","__App","__BasePanel","__AppManager","___utils_DataFormatUtils","___utils_Device","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","BackgroundDesign","_finallyRethrows","finalizer","bind","App","BasePanel","AppManager","getLeanURL","DeviceType","BaseAppPanel","extend","metadata","library","defaultAggregation","aggregations","apps","type","singularName","multiple","events","persistDialog","supported","parameters","isSupported","constructor","_constructor","id","settings","BasePanel.prototype.constructor.call","this","_isDirty","_isMobileDirty","_isLoaded","_isSupported","_setAggregation","control","items","arguments","length","undefined","aggregationName","forEach","oItem","addAggregation","init","_init","BasePanel.prototype.init.call","appManagerInstance","getInstance","_controlMap","Map","_appsPanelWrapper","_generateWrapper","_addContent","getId","_generateDesktopAppsWrapper","_generateMobileAppsWrapper","_generateErrorMessage","width","addStyleClass","controlId","get","set","_generateAppsWrapper","visible","getDeviceType","Mobile","backgroundDesign","Solid","_appsWrapper","layout","columnSize","rowSize","gap","_mobileAppsWrapper","gridLayout","showDividers","height","content","_errorCard","wrap","generateIllustratedMessage","getApps","justifyContent","setHeight","generateApps","_generateApps","visualizationsData","map","visualizationData","index","groupId","persConfig","sectionId","defaultSection","isDefaultSection","getKey","app","title","subTitle","subtitle","bgColor","BGColor","key","icon","url","vizId","visualization","status","oldAppId","data","menuItems","menuItem","setApps","_setApps","fetchTileVisualization","_fetchTileVisualization","tiles","cards","getContent","card","concat","getItems","convertActivitiesToVisualizations","_convertActivitiesToVisualizations","activities","_this","Promise","resolve","all","_getAllAvailableVisualizations","getServiceAsync","_ref","availableVisualizations","URLParsingService","appActivities","filter","activity","appType","orgAppId","appId","visualizations","_convertToVisualization","_updateVisualizationAvailability","reject","_this2","_temp2","_allAvailableVisualizations","_temp","_getCatalogApps","catalogApps","reduce","catalogApp","_this3","fetchFavVizs","favoriteVisualizations","addedInFavorites","some","favoriteVisualization","_updateActivityInfo","updatedVizConfig","_catalogVisualizationCache","targetURL","_findBestMatchingVisualization","matchingVisualizations","matchedVisualization","find","matchingViz","matchedVisualizationCache","matchedVisualizations","viz","params","parseShellHash","prio","push","filteredVisualizations","_filterMatchingVisualization","sort","val1","val2","parshedShellHash","activityParameters","activityParameterKeys","Object","keys","visualizationParams","visualizationParamKeys","bMatch","every","includes","catalogVisualizations","catalogVisualization","target","semanticObject","action","_addAppToFavorites","event","_this4","setBusy","source","getSource","getParent","getVizId","_temp3","addVisualization","_refreshAllPanels","message","_i18nBundle","getText","getTitle","show","error","_wasThrown","_result","isLoaded","setLoaded","_setLoaded","val","isDirty","setDesktopViewDirty","_setDesktopViewDirty","isMobileDirty","setMobileViewDirty","_setMobileViewDirty","_setBusy","isBusy","oAppsWrapper","_getGroup","groups","getAggregation","group","getGroupId","setSupported","_setSupported","_attachUserActivityTracking","last","on","do","isTrackingActivityEnabled","fireSupported","refresh","_refresh","_this5","refreshPanel","_generateIllustratedMessage","_errorMessage","illustrationSize","Base","description","_applyUngroupedTileColor","item","color","isA","updatedTileIndex","findIndex","tile","getUrl","setBackgroundColor"],"sources":["BaseAppPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport GridContainer from \"sap/f/GridContainer\";\nimport GridContainerSettings from \"sap/f/GridContainerSettings\";\nimport Button from \"sap/m/Button\";\nimport GenericTile from \"sap/m/GenericTile\";\nimport HeaderContainer from \"sap/m/HeaderContainer\";\nimport IllustratedMessage from \"sap/m/IllustratedMessage\";\nimport IllustratedMessageSize from \"sap/m/IllustratedMessageSize\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport Panel from \"sap/m/Panel\";\nimport VBox from \"sap/m/VBox\";\nimport { BackgroundDesign } from \"sap/m/library\";\nimport Event from \"sap/ui/base/Event\";\nimport Control from \"sap/ui/core/Control\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport Config from \"sap/ushell/Config\";\nimport Container from \"sap/ushell/Container\";\nimport URLParsing from \"sap/ushell/services/URLParsing\";\nimport App from \"./App\";\nimport AppsContainer from \"./AppsContainer\";\nimport { $BaseAppPanelSettings } from \"./BaseAppPanel\";\nimport BasePanel from \"./BasePanel\";\nimport Group from \"./Group\";\nimport MenuItem from \"./MenuItem\";\nimport { IActivity, ICustomVisualization, IVisualization } from \"./interface/AppsInterface\";\nimport AppManager from \"./utils/AppManager\";\nimport { getLeanURL } from \"./utils/DataFormatUtils\";\nimport { DeviceType } from \"./utils/Device\";\n\n/**\n *\n * Base App Panel class for managing and storing Apps.\n *\n * @extends sap.cux.home.BasePanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121.0\n *\n * @abstract\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.BaseAppPanel\n */\n\nexport default abstract class BaseAppPanel extends BasePanel {\n\tprivate _isDirty: boolean = true;\n\tprivate _isMobileDirty: boolean = true;\n\tprivate _isLoaded: boolean = false;\n\tprivate _appsWrapper!: GridContainer;\n\tprivate _errorCard!: VBox;\n\tprivate _errorMessage!: IllustratedMessage;\n\tprivate _appsPanelWrapper!: VBox;\n\tprivate _allAvailableVisualizations!: IVisualization[];\n\tprivate _catalogVisualizationCache!: Map<string, IVisualization>;\n\tprotected appManagerInstance!: AppManager;\n\tprivate _isSupported: boolean = true;\n\tprivate _mobileAppsWrapper!: HeaderContainer;\n\tprotected _menuItems!: MenuItem[];\n\tprotected _actionButtons!: Button[];\n\tprotected _controlMap!: Map<string, Control | Element>;\n\n\tconstructor(idOrSettings?: string | $BaseAppPanelSettings);\n\tconstructor(id?: string, settings?: $BaseAppPanelSettings);\n\tconstructor(id?: string, settings?: $BaseAppPanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tdefaultAggregation: \"apps\",\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * Holds the apps aggregation\n\t\t\t */\n\t\t\tapps: { type: \"sap.cux.home.App\", singularName: \"app\", multiple: true }\n\t\t},\n\t\tevents: {\n\t\t\t/**\n\t\t\t * Fired when OnBeforeRendering of container is triggered.\n\t\t\t */\n\t\t\tpersistDialog: {},\n\t\t\t/**\n\t\t\t * Fired when the panel supported property is changed.\n\t\t\t */\n\t\t\tsupported: {\n\t\t\t\tparameters: {\n\t\t\t\t\tisSupported: { type: \"boolean\" }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * This method must be implemented by panel, to set the apps that needs to be shown in the panel.\n\t * @abstract\n\t */\n\tabstract loadApps(): Promise<void>;\n\n\tpublic init() {\n\t\tsuper.init();\n\t\tthis.appManagerInstance = AppManager.getInstance();\n\t\tthis._controlMap = new Map();\n\t\t//Add Wrapper to Panel\n\t\tthis._appsPanelWrapper = this._generateWrapper();\n\t\tthis._addContent(this._appsPanelWrapper);\n\t}\n\n\t/**\n\t * Generates the wrapper for the apps panel, if it doesn't already exist\n\t *\n\t * @private\n\t * @override\n\t * @returns {sap.m.VBox} The apps panel wrapper.\n\t */\n\tprotected _generateWrapper() {\n\t\tif (!this._appsPanelWrapper) {\n\t\t\tthis._appsPanelWrapper = new VBox(`${this.getId()}-appsPanelWrapper`, {\n\t\t\t\titems: [this._generateDesktopAppsWrapper(), this._generateMobileAppsWrapper(), this._generateErrorMessage()],\n\t\t\t\twidth: \"100%\"\n\t\t\t}).addStyleClass(\"sapCuxAppsPanel sapCuxAppsPanelWrapper\");\n\t\t}\n\t\treturn this._appsPanelWrapper;\n\t}\n\n\t/**\n\t * Generates desktop apps wrapper for displaying apps.\n\t * @private\n\t * @returns {sap.m.VBox} The generated apps wrapper.\n\t */\n\tpublic _generateDesktopAppsWrapper() {\n\t\tconst controlId = `${this.getId()}-desktopAppsWrapper`;\n\t\tif (!this._controlMap.get(controlId)) {\n\t\t\tthis._controlMap.set(\n\t\t\t\tcontrolId,\n\t\t\t\tnew VBox({\n\t\t\t\t\tid: `${this.getId()}-desktopAppsWrapper`,\n\t\t\t\t\titems: [this._generateAppsWrapper()],\n\t\t\t\t\tvisible: this.getDeviceType() !== DeviceType.Mobile,\n\t\t\t\t\tbackgroundDesign: BackgroundDesign.Solid\n\t\t\t\t}).addStyleClass(\"sapCuxAppsPanel sapCuxAppsContainerBorder\")\n\t\t\t);\n\t\t}\n\t\treturn this._controlMap.get(controlId) as VBox;\n\t}\n\n\t/**\n\t * Generates app wrapper (GridContainer) for displaying apps.\n\t * @private\n\t * @returns {sap.m.GridContainer} The generated apps wrapper.\n\t */\n\tpublic _generateAppsWrapper(): GridContainer {\n\t\t//create container\n\t\tif (!this._appsWrapper) {\n\t\t\tthis._appsWrapper = new GridContainer({\n\t\t\t\tid: `${this.getId()}-appsWrapper`,\n\t\t\t\tlayout: new GridContainerSettings(`${this.getId()}-appsWrapperLayout`, {\n\t\t\t\t\tcolumnSize: \"19rem\",\n\t\t\t\t\trowSize: \"4.375rem\",\n\t\t\t\t\tgap: \"0.5rem\"\n\t\t\t\t})\n\t\t\t});\n\t\t}\n\t\treturn this._appsWrapper;\n\t}\n\n\t/**\n\t * Generates wrapper for displaying apps in mobile mode.\n\t * @private\n\t * @returns {sap.m.HeaderContainer} The generated apps wrapper.\n\t */\n\tpublic _generateMobileAppsWrapper() {\n\t\tif (!this._mobileAppsWrapper) {\n\t\t\tthis._mobileAppsWrapper = new HeaderContainer({\n\t\t\t\tid: `${this.getId()}-mobileAppsWrapper`,\n\t\t\t\tgridLayout: true,\n\t\t\t\tshowDividers: false,\n\t\t\t\theight: \"23.5rem\",\n\t\t\t\tcontent: [],\n\t\t\t\tvisible: this.getDeviceType() === DeviceType.Mobile\n\t\t\t}).addStyleClass(\"sapUiMargin-26Bottom sapMHeaderContainerAlign\");\n\t\t}\n\t\treturn this._mobileAppsWrapper;\n\t}\n\n\t/**\n\t * Generates the error message wrapper with illustrated message.\n\t * @private\n\t * @returns {sap.m.VBox} Wrapper with illustrated message.\n\t */\n\tpublic _generateErrorMessage(): VBox {\n\t\tif (!this._errorCard) {\n\t\t\tthis._errorCard = new VBox(`${this.getId()}-errorCard`, {\n\t\t\t\twrap: \"Wrap\",\n\t\t\t\tbackgroundDesign: \"Solid\",\n\t\t\t\titems: [this.generateIllustratedMessage()],\n\t\t\t\tvisible: this.getApps().length === 0,\n\t\t\t\tjustifyContent: \"Center\"\n\t\t\t}).addStyleClass(\"sapCuxAppsPanel\");\n\t\t}\n\t\tthis._errorCard.setHeight(this.getDeviceType() === DeviceType.Mobile ? \"23.5rem\" : \"auto\");\n\t\treturn this._errorCard;\n\t}\n\n\t/**\n\t * Creates and returns app instances for given app objects\n\t * @private\n\t * @param {object[]} appObjects - Array of app object.\n\t * @returns {sap.cux.home.App[]} - Array of app instances\n\t */\n\tpublic generateApps(visualizationsData: ICustomVisualization[]) {\n\t\treturn visualizationsData.map((visualizationData, index) => {\n\t\t\tconst groupId = visualizationData.persConfig?.sectionId;\n\t\t\tconst defaultSection = visualizationData.persConfig?.isDefaultSection;\n\t\t\tconst id = groupId && !defaultSection ? `${this.getKey()}-groupApp-${index}` : `${this.getKey()}-app-${index}`;\n\t\t\tconst app = new App(id, {\n\t\t\t\ttitle: visualizationData.title,\n\t\t\t\tsubTitle: visualizationData.subtitle,\n\t\t\t\tbgColor: typeof visualizationData.BGColor === \"object\" ? visualizationData.BGColor.key : visualizationData.BGColor,\n\t\t\t\ticon: visualizationData.icon,\n\t\t\t\turl: visualizationData.url,\n\t\t\t\tvizId: visualizationData.vizId || visualizationData.visualization?.vizId,\n\t\t\t\tstatus: visualizationData.status\n\t\t\t});\n\t\t\tif (visualizationData.oldAppId) {\n\t\t\t\tapp.data(\"oldAppId\", visualizationData.oldAppId);\n\t\t\t}\n\t\t\tvisualizationData.menuItems?.forEach((menuItem) => {\n\t\t\t\tapp.addAggregation(\"menuItems\", menuItem, true);\n\t\t\t});\n\t\t\treturn app;\n\t\t});\n\t}\n\n\t/**\n\t * Add multiple apps in the apps aggregation.\n\t * @param {sap.cux.home.App[]} apps - Array of apps.\n\t */\n\tpublic setApps(apps: App[]) {\n\t\tapps.forEach((app) => {\n\t\t\tthis.addAggregation(\"apps\", app, true);\n\t\t});\n\t}\n\n\t/**\n\t * Fetches and returns the tile visualizations for the current device type (Mobile or Desktop).\n\t *\n\t * @public\n\t * @param {GenericTile[]} tiles - This array will be updated with new tile data based on the device type.\n\t *\n\t * @returns {GenericTile[]} - returns updated tiles\n\t */\n\tpublic fetchTileVisualization(tiles: GenericTile[] = []): GenericTile[] {\n\t\tif (this.getDeviceType() === DeviceType.Mobile) {\n\t\t\tconst cards = (this._generateMobileAppsWrapper()?.getContent() || []) as Panel[];\n\t\t\tfor (const card of cards) {\n\t\t\t\ttiles = tiles.concat((card?.getContent() || []) as GenericTile[]);\n\t\t\t}\n\t\t} else {\n\t\t\ttiles = (this._generateAppsWrapper()?.getItems() || []) as GenericTile[];\n\t\t}\n\t\treturn tiles;\n\t}\n\n\t/**\n\t * Convert array of provided activities to app\n\t * @private\n\t * @param {object[]} activities - Array of activities.\n\t * @returns {object[]} - Array of apps\n\t */\n\tprotected async convertActivitiesToVisualizations(activities: IActivity[]) {\n\t\tconst [availableVisualizations, URLParsingService] = await Promise.all([\n\t\t\tthis._getAllAvailableVisualizations(),\n\t\t\tContainer.getServiceAsync<URLParsing>(\"URLParsing\")\n\t\t]);\n\t\tconst appActivities = activities\n\t\t\t.filter((activity) => activity.appType === \"Application\")\n\t\t\t.map((activity) => {\n\t\t\t\tactivity.orgAppId = activity.appId;\n\t\t\t\tactivity.appId = activity.url;\n\t\t\t\treturn activity;\n\t\t\t});\n\t\tconst visualizations = appActivities\n\t\t\t.map((activity) => this._convertToVisualization(activity, availableVisualizations, URLParsingService))\n\t\t\t.filter((activity): activity is IActivity => activity !== undefined);\n\t\tconst updatedVisualizations = await this._updateVisualizationAvailability(visualizations);\n\t\treturn updatedVisualizations;\n\t}\n\n\t/**\n\t * Returns promise that resolves to array of all available visualizations\n\t * @private\n\t * @returns {Promise} A Promise that resolves to array of all available visualizations.\n\t */\n\tprivate async _getAllAvailableVisualizations() {\n\t\tif (!this._allAvailableVisualizations) {\n\t\t\tconst catalogApps = await this.appManagerInstance._getCatalogApps();\n\t\t\tthis._allAvailableVisualizations = catalogApps.reduce((visualizations: IVisualization[], catalogApp) => {\n\t\t\t\treturn visualizations.concat(catalogApp.visualizations || []);\n\t\t\t}, []);\n\t\t}\n\t\treturn this._allAvailableVisualizations;\n\t}\n\n\t/**\n\t * Updates vizualization array with information - if vizualization is present in favorites .\n\t * @private\n\t * @param {object[]} visualizations - Array of vizualizations.\n\t * @returns {object[]} - Array of updated vizualizations.\n\t */\n\tprivate async _updateVisualizationAvailability(visualizations: IActivity[]) {\n\t\tconst favoriteVisualizations: ICustomVisualization[] = await this.appManagerInstance.fetchFavVizs(true, true);\n\t\tvisualizations.forEach((visualization) => {\n\t\t\tvisualization.addedInFavorites = favoriteVisualizations.some(\n\t\t\t\t(favoriteVisualization) => favoriteVisualization.oldAppId === visualization.orgAppId\n\t\t\t);\n\t\t});\n\t\treturn visualizations;\n\t}\n\n\t/**\n\t * Updates user activity with provided vizualization info\n\t * @private\n\t * @param {object} activity - User activity.\n\t * @param {object} updatedVizConfig - Updated vizualization config.\n\t * @returns {object} - Updated user acitvity.\n\t */\n\tprivate _updateActivityInfo(activity: IActivity, updatedVizConfig: IVisualization) {\n\t\tthis._catalogVisualizationCache = this._catalogVisualizationCache || new Map<string, IVisualization>();\n\t\tactivity.targetURL = updatedVizConfig.targetURL;\n\t\tactivity.vizId = updatedVizConfig.vizId;\n\t\tthis._catalogVisualizationCache.set(activity.orgAppId, updatedVizConfig);\n\t\treturn activity;\n\t}\n\n\t/**\n\t * Finds the best matching visualization for a given activity from a list of matching visualizations.\n\t *\n\t * This method first attempts to find an exact match for the target URL of the activity among the matching visualizations.\n\t * If no exact match is found, it uses the URLParsingService to compare parameters of the target URLs to find the best match.\n\t * It then updates the activity information with the best matching visualization.\n\t *\n\t * @private\n\t * @param {IActivity} activity - The activity for which to find the best matching visualization.\n\t * @param {IVisualization[]} matchingVisualizations - A list of visualizations that match the activity.\n\t * @param {URLParsing} URLParsingService - A service used to parse and compare target URLs.\n\t * @returns {IVisualization | undefined} The best matching visualization, or undefined if no match is found.\n\t */\n\tprivate _findBestMatchingVisualization(activity: IActivity, matchingVisualizations: IVisualization[], URLParsingService: URLParsing) {\n\t\t//if there are multiple matching apps, compare the target urls\n\t\tconst matchedVisualization = matchingVisualizations.find((matchingViz) => matchingViz.targetURL === activity.url);\n\t\tif (matchedVisualization) {\n\t\t\treturn this._updateActivityInfo(activity, matchedVisualization);\n\t\t} else {\n\t\t\t//edge cases, when no exact targetUrl match\n\t\t\tconst matchedVisualizationCache = new Map<string, object>();\n\t\t\tconst matchedVisualizations: { viz: IVisualization; params: unknown; prio: number }[] = [];\n\n\t\t\tmatchingVisualizations.forEach((visualization) => {\n\t\t\t\tconst targetURL: string = visualization.targetURL;\n\t\t\t\tif (!matchedVisualizationCache.get(targetURL)) {\n\t\t\t\t\tconst matchedVisualization = {\n\t\t\t\t\t\tviz: visualization,\n\t\t\t\t\t\tparams: (URLParsingService.parseShellHash(visualization.targetURL) as { params: { [key: string]: unknown[] } })\n\t\t\t\t\t\t\t.params,\n\t\t\t\t\t\tprio: 0\n\t\t\t\t\t};\n\t\t\t\t\tmatchedVisualizationCache.set(targetURL, matchedVisualization);\n\t\t\t\t\tmatchedVisualizations.push(matchedVisualization);\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst filteredVisualizations = matchedVisualizations.filter((matchedVisualization) =>\n\t\t\t\tthis._filterMatchingVisualization(activity, matchedVisualization, URLParsingService)\n\t\t\t);\n\t\t\tif (filteredVisualizations.length) {\n\t\t\t\t// more than 1 matching condition for unique targetUrls\n\t\t\t\t// this could be either because there is exact match and/or also allItems true and/or no params in VizData param keys\n\t\t\t\t// then find best match possible, based on prio\n\t\t\t\tfilteredVisualizations.sort((val1, val2) => val1.prio - val2.prio);\n\t\t\t\treturn this._updateActivityInfo(activity, filteredVisualizations[0].viz);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Filters matching visualizations based on activity parameters and assigns priority.\n\t *\n\t * This method compares the parameters of the activity with those of a matched visualization\n\t * to determine if they match.\n\t *\n\t * @private\n\t * @returns {boolean} Returns true if the visualization matches the activity, false otherwise.\n\t */\n\tprivate _filterMatchingVisualization(\n\t\tactivity: IActivity,\n\t\tmatchedVisualization: { viz: IVisualization; params: unknown; prio: number },\n\t\tURLParsingService: URLParsing\n\t) {\n\t\tconst parshedShellHash = URLParsingService.parseShellHash(activity.url) as { params: { [key: string]: unknown[] } };\n\t\tconst activityParameters = parshedShellHash.params;\n\n\t\tconst activityParameterKeys = Object.keys(activityParameters);\n\t\tconst visualizationParams = matchedVisualization.params as { [key: string]: unknown[] };\n\t\t//filter keys other than 'allItems', for myinbox tasks allItems key is a generally common key hence filter that\n\t\tconst visualizationParamKeys = Object.keys(visualizationParams).filter((key) => key !== \"allItems\");\n\t\tif (visualizationParamKeys.length === activityParameterKeys.length) {\n\t\t\tconst bMatch = activityParameterKeys.every(\n\t\t\t\t(key) => visualizationParamKeys.includes(key) && visualizationParams[key][0] === activityParameters[key][0]\n\t\t\t);\n\t\t\tif (bMatch) {\n\t\t\t\tmatchedVisualization.prio = 1;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t} else if (!visualizationParamKeys.length) {\n\t\t\t//this could mean either visualizationParamKeys did not have any key or the only key present was 'allItems'\n\t\t\t//if 'allItems' present give prio 2 else prio 3\n\t\t\tmatchedVisualization.prio = Object.keys(matchedVisualization.params as { [key: string]: unknown[] }).length ? 2 : 3;\n\t\t\treturn true;\n\t\t}\n\t\t//filtered visualizationParamKeys length doesnt match aAppParamKeys length & visualizationParamKeys length is not 0\n\t\treturn false;\n\t}\n\n\t/**\n\t * Converts given user activity to vizualization\n\t * @private\n\t * @param {object} activity - User Activity.\n\t * @param {object[]} catalogVisualizations - array of all available visualizations in catalog.\n\t * @param {object} URLParsingService - URL parsing service.\n\t * @returns {object} - visualization\n\t */\n\tprivate _convertToVisualization(activity: IActivity, catalogVisualizations: IVisualization[], URLParsingService: URLParsing) {\n\t\tthis._catalogVisualizationCache = this._catalogVisualizationCache || new Map<string, IVisualization>();\n\t\tconst catalogVisualization = this._catalogVisualizationCache.get(activity.orgAppId);\n\t\tif (catalogVisualization) {\n\t\t\treturn this._updateActivityInfo(activity, catalogVisualization);\n\t\t} else {\n\t\t\tconst matchingVisualizations = catalogVisualizations.filter(\n\t\t\t\t(visualization) =>\n\t\t\t\t\tvisualization.vizId && `#${visualization.target?.semanticObject}-${visualization.target?.action}` === activity.orgAppId\n\t\t\t);\n\t\t\tif (matchingVisualizations.length > 1) {\n\t\t\t\treturn this._findBestMatchingVisualization(activity, matchingVisualizations, URLParsingService);\n\t\t\t} else if (matchingVisualizations.length === 1) {\n\t\t\t\treturn this._updateActivityInfo(activity, matchingVisualizations[0]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Adds visualization to favorite apps\n\t * @private\n\t * @param {sap.ui.base.Event} event - The event object.\n\t */\n\tprotected async _addAppToFavorites(event: Event) {\n\t\tthis.setBusy(true);\n\t\ttry {\n\t\t\tconst source = event.getSource<MenuItem>();\n\t\t\tconst app = source.getParent() as App;\n\t\t\tconst vizId = app.getVizId?.();\n\t\t\tif (vizId) {\n\t\t\t\t//Add Apps to the 'Recently Added Apps' section\n\t\t\t\tawait this.appManagerInstance.addVisualization(vizId);\n\t\t\t\tawait (this.getParent?.() as AppsContainer)._refreshAllPanels();\n\t\t\t\tconst message = this._i18nBundle.getText(\"appMovedToFavorites\", [app.getTitle()]) as string;\n\t\t\t\tMessageToast.show(message);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tLog.error(error as string);\n\t\t} finally {\n\t\t\tthis.setBusy(false);\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the panel is loaded. If the panel is not loaded then placholders are shown otherwise not\n\t * @private\n\t * @returns {boolean} true if the panel is loaded, false otherwise.\n\t */\n\tpublic isLoaded(): boolean {\n\t\treturn this._isLoaded;\n\t}\n\n\t/**\n\t * Set the loaded status of the app panel.\n\t * @private\n\t * @param {boolean} val - The new loaded status to set for the app panel.\n\t */\n\tpublic setLoaded(val: boolean): void {\n\t\tthis._isLoaded = val;\n\t}\n\n\t/**\n\t * Returns the dirty status of the app panel. If the panel is dirty then only re-render the apps\n\t * @private\n\t * @returns {boolean} true if the panel is dirty, false otherwise.\n\t */\n\tpublic isDirty(): boolean {\n\t\treturn this._isDirty;\n\t}\n\n\t/**\n\t * Set the dirty status of the app panel.\n\t * @private\n\t * @param {boolean} val - The new dirty status to set for the app panel.\n\t */\n\tpublic setDesktopViewDirty(val: boolean): void {\n\t\tthis._isDirty = val;\n\t}\n\n\t/**\n\t * Returns the dirty status of the app mobile panel. If the panel is dirty then only re-render the apps\n\t * @private\n\t * @returns {boolean} true if the panel is dirty, false otherwise.\n\t */\n\tpublic isMobileDirty(): boolean {\n\t\treturn this._isMobileDirty;\n\t}\n\n\t/**\n\t * Set the dirty status of the app mobile panel.\n\t * @private\n\t * @param {boolean} val - The new dirty status to set for the app mobile panel.\n\t */\n\tpublic setMobileViewDirty(val: boolean): void {\n\t\tthis._isMobileDirty = val;\n\t}\n\n\t/**\n\t * Sets aggregation for give control.\n\t * @param {Object} control - Control for which aggregation has to be set.\n\t * @param {Object[]} items - Items to be added in aggregation.\n\t * @param {string} aggregationName - Aggregation name\n\t * @private\n\t */\n\tpublic _setAggregation = function (control: Control | Group, items: Control[] | App[] = [], aggregationName = \"items\") {\n\t\titems.forEach((oItem) => {\n\t\t\tcontrol.addAggregation(aggregationName, oItem, true);\n\t\t});\n\t};\n\n\t/**\n\t * Sets the busy state of panel.\n\t * @private\n\t * @param {boolean} isBusy - Indicates whether the panel should be set to busy state.\n\t */\n\tprotected setBusy(isBusy: boolean) {\n\t\tconst oAppsWrapper = this._generateAppsWrapper();\n\t\toAppsWrapper.setBusy(isBusy);\n\t}\n\n\t/**\n\t * Retrieves the group with the specified group Id.\n\t * @private\n\t * @param {string} groupId - The Id of the group.\n\t * @returns {sap.cux.home.Group} The group with the specified group Id, or null if not found.\n\t */\n\tprotected _getGroup(groupId: string) {\n\t\tconst groups = (this.getAggregation(\"groups\") || []) as Group[];\n\t\treturn groups.find((group) => group.getGroupId() === groupId);\n\t}\n\n\t/**\n\t * Checks if the panel is supported.\n\t * @returns {boolean} True if the panel is supported, false otherwise.\n\t * @private\n\t */\n\tpublic isSupported() {\n\t\treturn this._isSupported;\n\t}\n\n\t/**\n\t * Sets panel as supported or unsupported.\n\t * @param {boolean} isSupported true if the panel is supported, false otherwise.\n\t * @private\n\t */\n\tpublic setSupported(isSupported: boolean) {\n\t\tthis._isSupported = isSupported;\n\t}\n\n\t/**\n\t * Attaches user activity tracking based on the configuration.\n\t * If user activity tracking is enabled, it listens to changes in tracking activity configuration\n\t * and fires a 'supported' event accordingly.\n\t * @private\n\t */\n\tprotected _attachUserActivityTracking() {\n\t\tif (Config.last(\"/core/shell/enableRecentActivity\")) {\n\t\t\tConfig.on(\"/core/shell/model/enableTrackingActivity\").do((isTrackingActivityEnabled: boolean) => {\n\t\t\t\tthis.fireSupported({ isSupported: isTrackingActivityEnabled });\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Refreshes the panel.\n\t * @public\n\t */\n\tprotected async refresh() {\n\t\tawait (this.getParent() as AppsContainer).refreshPanel(this);\n\t}\n\n\t/**\n\t * Generates default illustrated message for panel.\n\t * @private\n\t * @returns {sap.m.IllustratedMessage} Illustrated error message for panel.\n\t */\n\tprotected generateIllustratedMessage() {\n\t\tif (!this._errorMessage) {\n\t\t\tthis._errorMessage = new IllustratedMessage(`${this.getId()}-errorMessage`, {\n\t\t\t\tillustrationSize: IllustratedMessageSize.Base,\n\t\t\t\ttitle: this._i18nBundle.getText(\"noAppsTitle\"),\n\t\t\t\tdescription: this._i18nBundle.getText(\"noData\")\n\t\t\t});\n\t\t}\n\t\treturn this._errorMessage;\n\t}\n\n\t/**\n\t * Applies the selected color to an ungrouped tile.\n\t * @param {sap.cux.home.App | sap.cux.home.Group} item - The item control.\n\t * @param {string} color - The selected color.\n\t * @private\n\t */\n\tprotected _applyUngroupedTileColor(item: App | Group, color: string) {\n\t\tconst tiles: GenericTile[] = this.fetchTileVisualization();\n\t\tconst groupId = item.isA(\"sap.cux.home.Group\") ? (item as Group).getGroupId() : null;\n\t\tconst updatedTileIndex = tiles.findIndex((tile) =>\n\t\t\tgroupId ? tile.data(\"groupId\") === groupId : tile.getUrl() === getLeanURL((item as App).getUrl())\n\t\t);\n\t\ttiles[updatedTileIndex]?.setBackgroundColor(color);\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":36,"column":0},"map":{"version":3,"names":["sap","ui","define","EventBus","__BaseAppPanel","___utils_Constants","___utils_DataFormatUtils","__PageManager","__PersonalisationUtils","__UshellPersonalizer","_interopRequireDefault","obj","__esModule","default","BaseAppPanel","DEFAULT_APP_ICON","DEFAULT_BG_COLOR","FALLBACK_ICON","MYHOME_PAGE_ID","getLeanURL","PageManager","PersonalisationUtils","UshellPersonalizer","BaseAppPersPanel","extend","metadata","library","properties","persContainerId","type","group","defaultValue","visibility","constructor","_constructor","id","settings","BaseAppPanel.prototype.constructor.call","this","init","_init","BaseAppPanel.prototype.init.call","_eventBus","getInstance","subscribe","applyPersonalization","_getPersonalizer","_this","_getPersContainerId","Error","Promise","resolve","getOwnerComponent","e","reject","getPersonalization","_getPersonalization","_this2","then","personalizer","read","persData","setPersonalization","_setPersonalization","_this3","write","_getAppPersonalization","_this4","personalization","favoriteApps","setFavAppsPersonalization","_setFavAppsPersonalization","appsPersonalization","_this5","_temp","_applyPersonalization","_this6","tiles","fetchTileVisualization","_applyTilesPersonalization","groupId","shouldReload","arguments","length","undefined","_this7","all","_getFavPages","_ref","personalizations","favPages","appManagerInstance","_getAllFavPageApps","favPageVisualizations","groups","getAggregation","apps","_getGroup","getApps","tile","item","_getItem","color","icon","_getItemPersonalization","setProperty","setBackgroundColor","setTileIcon","tileGroupId","data","find","oGroup","getGroupId","oApp","getUrl","isA","isSection","sectionId","BGColor","app","appIds","oldAppId","push","vizId","getVizId","appId","includes","oPersonalization","isRecentlyAddedApp","favPageVisualization","oVisualization","colorInfo","key","_getFavAppIcon","getAppIcon","_this8","_getPageManagerInstance","getFavoritePages","aFavPages","concat","pageId","_getAppIcon","favPageIcon","getIcon","_pageManagerInstance","getProperty","getPersContainerId"],"sources":["BaseAppPersPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport GenericTile from \"sap/m/GenericTile\";\nimport Component from \"sap/ui/core/Component\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport App from \"./App\";\nimport BaseAppPanel from \"./BaseAppPanel\";\nimport { $BaseAppPersPanelSettings } from \"./BaseAppPersPanel\";\nimport Group from \"./Group\";\nimport { IAppPersonalization, ICustomVisualization, IItemPersonalization } from \"./interface/AppsInterface\";\nimport { DEFAULT_APP_ICON, DEFAULT_BG_COLOR, FALLBACK_ICON, MYHOME_PAGE_ID } from \"./utils/Constants\";\nimport { getLeanURL } from \"./utils/DataFormatUtils\";\nimport PageManager from \"./utils/PageManager\";\nimport PersonalisationUtils from \"./utils/PersonalisationUtils\";\nimport UshellPersonalizer, { IPersonalizationData } from \"./utils/UshellPersonalizer\";\n\n/**\n *\n * Provides the BaseAppPersPanel Class which is BaseAppPanel with personalisation.\n *\n * @extends sap.cux.home.BaseAppPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121.0\n *\n * @abstract\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.BaseAppPersPanel\n */\nexport default abstract class BaseAppPersPanel extends BaseAppPanel {\n\tprivate _pageManagerInstance!: PageManager;\n\tprivate _eventBus!: EventBus;\n\n\tconstructor(idOrSettings?: string | $BaseAppPersPanelSettings);\n\tconstructor(id?: string, settings?: $BaseAppPersPanelSettings);\n\tconstructor(id?: string, settings?: $BaseAppPersPanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\tpersContainerId: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"hidden\" }\n\t\t}\n\t};\n\n\tpublic init() {\n\t\tsuper.init();\n\t\tthis._eventBus = EventBus.getInstance();\n\t\t//apply personalization on page update\n\t\tthis._eventBus.subscribe(\n\t\t\t\"pageChannel\",\n\t\t\t\"pageUpdated\",\n\t\t\t() => {\n\t\t\t\tvoid this.applyPersonalization();\n\t\t\t},\n\t\t\tthis\n\t\t);\n\t}\n\n\t/**\n\t * Retrieves the personalizer instance.\n\t * @returns {Promise<sap.cux.home.UshellPersonalizer>} A promise resolving to the personalizer instance.\n\t * @throws {Error} Throws an error if no container ID is provided for personalization.\n\t * @private\n\t */\n\tprivate async _getPersonalizer() {\n\t\tconst persContainerId = this._getPersContainerId();\n\t\tif (!persContainerId) {\n\t\t\tthrow new Error(\"No Container ID Provided for personalisation!\");\n\t\t}\n\t\tconst personalizer = await UshellPersonalizer?.getInstance(\n\t\t\tpersContainerId,\n\t\t\tPersonalisationUtils.getOwnerComponent(this) as Component\n\t\t);\n\t\treturn personalizer;\n\t}\n\n\t/**\n\t * Retrieves personalization data.\n\t * @returns {Promise<IPersonalizationData>} A promise that resolves with the personalization data.\n\t * @private\n\t */\n\tprotected async getPersonalization() {\n\t\tconst personalizer = await this._getPersonalizer();\n\t\tconst persData = await personalizer?.read();\n\t\treturn persData || {};\n\t}\n\n\t/**\n\t * Sets the personalization data.\n\t * @param {IPersonalizationData} persData - The personalization data to set.\n\t * @returns {Promise<void>} A promise that resolves when the personalization data is set.\n\t * @private\n\t */\n\tprotected async setPersonalization(persData: IPersonalizationData) {\n\t\tconst personalizer = await this._getPersonalizer();\n\t\tawait personalizer.write(persData);\n\t}\n\n\t/**\n\t * Returns array of personalized favorite apps\n\t *\n\t * @returns {Promise} resolves to return array of personalized favorite apps\n\t */\n\tprotected async _getAppPersonalization() {\n\t\tconst personalization = await this.getPersonalization();\n\t\treturn personalization?.favoriteApps || ([] as IAppPersonalization[]);\n\t}\n\n\t/**\n\t * Sets the personalization data.\n\t * @param {IAppPersonalization[]} appsPersonalization - Personalization data for favorite apps.\n\t * @returns {Promise<void>} A promise that resolves when the personalization data is set.\n\t * @private\n\t */\n\tprotected async setFavAppsPersonalization(appsPersonalization: IAppPersonalization[]): Promise<void> {\n\t\tlet personalization = await this.getPersonalization();\n\t\tif (personalization) {\n\t\t\tpersonalization.favoriteApps = appsPersonalization;\n\t\t\tawait this.setPersonalization(personalization);\n\t\t}\n\t}\n\n\t/**\n\t * Applies personalization settings to the tiles.\n\t * Retrieves tiles from the generated apps wrapper and applies personalization settings to each tile.\n\t * Personalization settings include background color and icon customization.\n\t * @private\n\t * @async\n\t */\n\tpublic async applyPersonalization() {\n\t\tlet tiles = this.fetchTileVisualization();\n\t\treturn await this._applyTilesPersonalization(tiles);\n\t}\n\n\t/**\n\t * Applies personalization settings to the provided tiles.\n\t * @param {Array} tiles - An array of tiles to apply personalization settings to.\n\t * @param {string} [groupId] - Optional group ID for filtering personalization settings.\n\t * @param {boolean} [shouldReload=true] - A flag indicating whether to reload page visualizations.\n\t * @returns {Promise<void>} A promise that resolves when personalization settings are applied to the tiles.\n\t * @private\n\t */\n\tprotected async _applyTilesPersonalization(tiles: GenericTile[], groupId?: string, shouldReload = true) {\n\t\tconst [personalizations, favPages] = await Promise.all([this._getAppPersonalization(), this._getFavPages()]);\n\t\tconst favPageVisualizations = await this.appManagerInstance._getAllFavPageApps(favPages, shouldReload);\n\t\tconst groups = (this.getAggregation(\"groups\") || []) as Group[];\n\t\tconst apps = groupId ? this._getGroup(groupId)?.getApps() || [] : this.getApps() || [];\n\t\tfor (const tile of tiles) {\n\t\t\tconst item = this._getItem(tile, groups, apps);\n\t\t\tconst { color, icon } = this._getItemPersonalization(item, personalizations, favPageVisualizations, groupId);\n\n\t\t\tif (color) {\n\t\t\t\titem?.setProperty(\"bgColor\", color, true);\n\t\t\t\ttile.setBackgroundColor(color);\n\t\t\t}\n\n\t\t\tif (icon) {\n\t\t\t\titem?.setProperty(\"icon\", icon, true);\n\t\t\t\ttile.setTileIcon(icon);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the corresponding App or Group object associated with the given tile.\n\t * @param {GenericTile} tile - The tile for which to retrieve the corresponding item.\n\t * @param {Group[]} groups - An array of Group objects.\n\t * @param {App[]} apps - An array of App objects.\n\t * @returns {App | Group | undefined} The corresponding App or Group object, or undefined if not found.\n\t * @private\n\t */\n\tprivate _getItem(tile: GenericTile, groups: Group[], apps: App[]): App | Group | undefined {\n\t\tconst tileGroupId = tile.data(\"groupId\") as string | undefined;\n\t\tif (tileGroupId) {\n\t\t\treturn groups.find((oGroup) => oGroup.getGroupId() === tileGroupId);\n\t\t} else {\n\t\t\treturn apps.find((oApp) => getLeanURL(oApp.getUrl()) === tile.getUrl());\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the color and icon associated with the specified item based on personalizations.\n\t * @param {App | Group | undefined} item - The App or Group object for which to retrieve personalization data.\n\t * @param {IAppPersonalization[] | undefined} personalizations - An array of personalization objects.\n\t * @param {ICustomVisualization[]} favPageVisualizations - An array of favorite page visualizations.\n\t * @param {string | undefined} groupId - The ID of the group to which the item belongs.\n\t * @returns {IItemPersonalization} An object containing the color and icon associated with the item.\n\t * @private\n\t */\n\tprivate _getItemPersonalization(\n\t\titem: App | Group | undefined,\n\t\tpersonalizations: IAppPersonalization[] | undefined,\n\t\tfavPageVisualizations: ICustomVisualization[],\n\t\tgroupId?: string\n\t): IItemPersonalization {\n\t\tlet color: string = \"\";\n\t\tlet icon: string = \"\";\n\n\t\tif (!item) return { color, icon };\n\n\t\tif (item.isA(\"sap.cux.home.Group\")) {\n\t\t\tconst personalization = personalizations?.find(\n\t\t\t\t(personalization) => personalization.isSection && personalization.sectionId === (item as Group).getGroupId()\n\t\t\t);\n\t\t\tcolor = personalization?.BGColor as string;\n\t\t} else {\n\t\t\tconst app = item as App;\n\t\t\tconst appIds = [app.getUrl()];\n\t\t\tconst oldAppId = app.data(\"oldAppId\") as string | undefined;\n\t\t\tif (oldAppId) {\n\t\t\t\tappIds.push(oldAppId);\n\t\t\t}\n\t\t\tconst vizId = app.getVizId();\n\t\t\tconst personalization = groupId\n\t\t\t\t? personalizations?.find(\n\t\t\t\t\t\t(personalization) =>\n\t\t\t\t\t\t\t!personalization.isSection &&\n\t\t\t\t\t\t\tpersonalization.sectionId === groupId &&\n\t\t\t\t\t\t\tpersonalization.appId &&\n\t\t\t\t\t\t\tappIds.includes(personalization.appId)\n\t\t\t\t\t)\n\t\t\t\t: personalizations?.find((oPersonalization) =>\n\t\t\t\t\t\tthis?.isA(\"sap.cux.home.FavAppPanel\")\n\t\t\t\t\t\t\t? oPersonalization.isRecentlyAddedApp && oPersonalization.appId && appIds.includes(oPersonalization.appId)\n\t\t\t\t\t\t\t: oPersonalization.appId && appIds.includes(oPersonalization.appId)\n\t\t\t\t\t);\n\t\t\tconst favPageVisualization = favPageVisualizations.find(\n\t\t\t\t(oVisualization) => oVisualization.vizId === vizId || (oVisualization.appId && appIds.includes(oVisualization.appId))\n\t\t\t);\n\t\t\tconst colorInfo = personalization?.BGColor || favPageVisualization?.BGColor || DEFAULT_BG_COLOR().key;\n\t\t\tcolor = typeof colorInfo === \"object\" ? colorInfo.key : colorInfo;\n\t\t\ticon = this?.isA(\"sap.cux.home.FavAppPanel\") ? this._getFavAppIcon(app, favPageVisualization?.icon) : this.getAppIcon();\n\t\t}\n\n\t\treturn { color, icon };\n\t}\n\n\t/**\n\t * Retrieves favorite pages.\n\t * @returns {Promise<Array>} A promise that resolves with an array of favorite pages.\n\t * @private\n\t */\n\tprivate async _getFavPages() {\n\t\tconst aFavPages = await this._getPageManagerInstance().getFavoritePages();\n\t\treturn aFavPages.concat({\n\t\t\tpageId: MYHOME_PAGE_ID,\n\t\t\tBGColor: DEFAULT_BG_COLOR().key\n\t\t});\n\t}\n\n\t/**\n\t * Returns default app icon.\n\t * @returns {string} The icon URL for the app.\n\t * @private\n\t */\n\tprotected getAppIcon(): string {\n\t\treturn DEFAULT_APP_ICON;\n\t}\n\n\t/**\n\t * Retrieves the icon for the specified app, prioritizing the favorite page icon if available.\n\t * @param {sap.cux.home.App} app - The app object.\n\t * @param {string} favPageIcon - The icon for the app from the favorite page.\n\t * @returns {string} The icon URL for the app.\n\t * @private\n\t */\n\tprivate _getFavAppIcon(app?: App, favPageIcon?: string): string {\n\t\treturn favPageIcon || app?.getIcon() || FALLBACK_ICON;\n\t}\n\n\tprivate _getPageManagerInstance() {\n\t\tif (!this._pageManagerInstance) {\n\t\t\tthis._pageManagerInstance = PageManager.getInstance(\n\t\t\t\tthis._getPersContainerId(),\n\t\t\t\tPersonalisationUtils.getOwnerComponent(this) as Component\n\t\t\t);\n\t\t}\n\t\treturn this._pageManagerInstance;\n\t}\n\n\tprivate _getPersContainerId(): string {\n\t\tlet persContainerId = this.getProperty(\"persContainerId\") as string;\n\t\tif (!persContainerId) {\n\t\t\tpersContainerId = PersonalisationUtils.getPersContainerId(this);\n\t\t}\n\t\treturn persContainerId;\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":41,"column":0},"map":{"version":3,"names":["sap","ui","define","Button","FlexBox","HBox","IconTabBar","IconTabFilter","List","Popover","StandardListItem","Title","sap_m_library","Control","CustomData","UI5Element","HTML","Lib","__BaseContainerRenderer","__BasePanel","__MenuItem","___library","___utils_Accessibility","___utils_Device","___utils_FESRUtil","___utils_PerformanceUtils","_interopRequireDefault","obj","__esModule","default","BackgroundDesign","ButtonType","PlacementType","BaseContainerRenderer","BasePanel","MenuItem","OrientationType","getInvisibleText","calculateDeviceType","DeviceType","addFESRId","addFESRSemanticStepName","FESR_EVENTS","getFESRId","recordElementLoadEnd","recordElementLoadStart","BaseContainer","extend","renderer","metadata","library","properties","title","type","group","defaultValue","visibility","orientation","SideBySide","selectedKey","width","height","blocked","busy","busyIndicatorDelay","busyIndicatorSize","fieldGroupIds","visible","enableSettings","enableFullScreen","fullScreenName","enableLazyLoad","loaded","defaultAggregation","aggregations","content","singularName","multiple","actionButtons","menuItems","associations","layout","fullScreenButton","fullScreenMenuItem","events","onExpand","designtime","adjustLayout","_adjustLayout","load","_load","constructor","_constructor","id","settings","Control.prototype.constructor.call","this","_exemptedActions","init","_init","_controlMap","Map","_commonHeaderElementStates","_i18nBundle","getResourceBundleFor","_createHeader","containerCustomSettings","getId","key","value","addCustomData","getCustomSettings","_getCustomSettings","data","addCustomSetting","_addCustomSetting","control","controlId","isPanel","isA","hasContainerTitle","getProperty","trim","length","get","set","renderType","addStyleClass","justifyContent","items","alignItems","addDependent","setTitleStyle","_getHeader","_getInnerControl","_iconTabBar","_wrapper","_onPanelSelect","event","setProperty","getParameter","_updateContainerHeader","_setPanelCount","panel","count","_getIconTabFilter","setCount","_addToPanel","addContent","addItem","iconTabFilter","text","tooltip","writeToDom","SELECT","_getContent","forEach","onBeforeRendering","_onBeforeRendering","defaultKey","getContent","_createInnerControl","_addAllPanelContent","_loadContent","_markPerformanceMetrics","onAfterRendering","_onAfterRendering","_attachResizeHandler","_observeContainer","getDomRef","_resizeObserver","disconnect","ResizeObserver","entries","_resizeTimeout","clearTimeout","window","setTimeout","getVisible","_setDeviceType","observe","_detachResizeHandler","target","_containerObserver","IntersectionObserver","entry","isIntersecting","rootMargin","threshold","Horizontal","Vertical","setDirection","expandable","backgroundDesign","Transparent","headerMode","headerBackgroundDesign","select","isSideBySideLayout","isContainer","targetControl","removeAllItems","_updateHeader","headerTitle","setText","setVisible","_getLayout","_addLayoutHeaderElements","currentControl","_getSelectedPanel","_filterVisibleHeaderElements","getMenuItems","_addMenuItems","getAggregation","actionButton","_getHeaderButton","attachHeaderElements","elements","property","aggregation","headerElement","_getFullScreenMenuItem","_getHomeSettingsMenuItem","_getFullScreenButton","_ref","currentPropertyValue","previousPropertyValue","addAggregation","removeAggregation","setFullScreenElementRelations","isFullScreenEnabled","panels","_setupFullScreenElements","setupFullScreenElement","registerFullScreenElement","deregisterFullScreenElement","updateFullScreenElement","index","indexOfItem","_setFullScreenElementRelations","relation","targetAggregation","setAssociation","removeAssociation","menuItem","getText","icon","press","openSettingsDialog","toggleFullScreen","push","find","setSelectedKey","_getPanelContentWrapper","direction","_updatePanelHeader","header","isTitleVisible","toggleStyleClass","getActionButtons","arguments","undefined","filter","element","_setTitle","list","itemPress","getSource","getParent","close","invisiblePopoverText","menuPopover","placement","VerticalPreferredBottom","showHeader","ariaLabelledBy","menuButton","openBy","item","_getMenuListItem","headerButton","firePress","PRESS","button","setTooltip","getTooltip","setIcon","getIcon","setEnabled","getEnabled","getElementById","getAssociation","getTitle","menuListItem","setTitle","toggleMenuListItem","_toggleMenuListItem","show","toggleActionButton","_toggleActionButton","actionButtonControl","removeContent","_removeContent","getWidth","_getWidth","toggleActionButtons","_toggleActionButtons","visibilityChanged","currentVisibility","includes","toggleFullScreenElements","_toggleFullScreenElements","fullScreenMenuButton","isPhone","getDeviceType","Mobile","parent","elementVisibilityChanged","fullScreenElement","elementKey","getKey","parentLayout","parentNode","clientWidth","deviceType","_deviceType","_getDeviceType","elementName","getMetadata","getName","attachEventOnce","getGenericPlaceholder","_getGenericPlaceholder","getGenericPlaceholderContent","_getGenericPlaceholderContent"],"sources":["BaseContainer.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport Button from \"sap/m/Button\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport HBox from \"sap/m/HBox\";\nimport IconTabBar, { IconTabBar$SelectEvent } from \"sap/m/IconTabBar\";\nimport IconTabFilter from \"sap/m/IconTabFilter\";\nimport List from \"sap/m/List\";\nimport Popover from \"sap/m/Popover\";\nimport StandardListItem from \"sap/m/StandardListItem\";\nimport Title from \"sap/m/Title\";\nimport { BackgroundDesign, ButtonType, PlacementType } from \"sap/m/library\";\nimport Event from \"sap/ui/base/Event\";\nimport Control from \"sap/ui/core/Control\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport HTML from \"sap/ui/core/HTML\";\nimport Lib from \"sap/ui/core/Lib\";\nimport { CSSSize } from \"sap/ui/core/library\";\nimport { $BaseContainerSettings } from \"./BaseContainer\";\nimport BaseContainerRenderer from \"./BaseContainerRenderer\";\nimport BaseLayout from \"./BaseLayout\";\nimport BasePanel from \"./BasePanel\";\nimport MenuItem from \"./MenuItem\";\nimport { OrientationType } from \"./library\";\nimport { getInvisibleText } from \"./utils/Accessibility\";\nimport { calculateDeviceType, DeviceType } from \"./utils/Device\";\nimport { addFESRId, addFESRSemanticStepName, FESR_EVENTS, getFESRId } from \"./utils/FESRUtil\";\nimport { recordElementLoadEnd, recordElementLoadStart, UIElements } from \"./utils/PerformanceUtils\";\n\ntype FullScreenElementRelation = {\n\tisFullScreenEnabled: boolean;\n\tcontrol: BaseContainer | BasePanel;\n\taggregation: string;\n\theaderElement: MenuItem | Button;\n};\n\n/**\n *\n * Abstract base class for all container controls in the Home Page Layout.\n *\n * @extends sap.ui.core.Control\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @abstract\n * @internal\n * @experimental Since 1.121\n * @public\n *\n * @ui5-metamodel\n * @alias sap.cux.home.BaseContainer\n */\nexport default abstract class BaseContainer extends Control {\n\tprotected _i18nBundle!: ResourceBundle;\n\tprivate _controlMap!: Map<string, Control | UI5Element>;\n\tprivate _wrapper!: FlexBox;\n\tprivate _iconTabBar!: IconTabBar;\n\tprivate _commonHeaderElementStates!: Map<string, boolean>;\n\tprivate _resizeObserver!: ResizeObserver;\n\tprivate _deviceType!: DeviceType;\n\tprivate _containerObserver!: IntersectionObserver;\n\tprivate _exemptedActions: string[] = [];\n\tpublic adjustLayout() {}\n\tprotected load() {}\n\tprivate _resizeTimeout!: number;\n\n\tconstructor(id?: string | $BaseContainerSettings);\n\tconstructor(id?: string, settings?: $BaseContainerSettings);\n\t/**\n\t * Constructor for a new Base Container.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $BaseContainerSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * Title of the container.\n\t\t\t */\n\t\t\ttitle: { type: \"string\", group: \"Data\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Orientation of the container.\n\t\t\t */\n\t\t\torientation: {\n\t\t\t\ttype: \"sap.cux.home.OrientationType\",\n\t\t\t\tgroup: \"Data\",\n\t\t\t\tdefaultValue: OrientationType.SideBySide,\n\t\t\t\tvisibility: \"hidden\"\n\t\t\t},\n\t\t\t/**\n\t\t\t * Key of the selected panel of the container.\n\t\t\t */\n\t\t\tselectedKey: { type: \"string\", group: \"Data\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Width to be set for the container.\n\t\t\t * @public\n\t\t\t */\n\t\t\twidth: { type: \"sap.ui.core.CSSSize\", group: \"Appearance\", defaultValue: \"100%\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * Height to be set for the container.\n\t\t\t * @public\n\t\t\t */\n\t\t\theight: { type: \"sap.ui.core.CSSSize\", group: \"Appearance\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * Whether the control is currently in blocked state.\n\t\t\t */\n\t\t\tblocked: { type: \"boolean\", group: \"Appearance\", defaultValue: false, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Whether the layout is currently in busy state.\n\t\t\t */\n\t\t\tbusy: { type: \"boolean\", group: \"Appearance\", defaultValue: false, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * The delay in milliseconds, after which the busy indicator will show up for this control.\n\t\t\t */\n\t\t\tbusyIndicatorDelay: { type: \"int\", defaultValue: 1000, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * The size of the BusyIndicator.\n\t\t\t */\n\t\t\tbusyIndicatorSize: { type: \"sap.ui.core.BusyIndicatorSize\", defaultValue: \"Medium\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * The IDs of a logical field group that this control belongs to.\n\t\t\t */\n\t\t\tfieldGroupIds: { type: \"string[]\", defaultValue: [], visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * The visible property of the container.\n\t\t\t */\n\t\t\tvisible: { type: \"boolean\", group: \"Appearance\", defaultValue: true, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Indicates whether home settings are enabled for this control.\n\t\t\t */\n\t\t\tenableSettings: { type: \"boolean\", group: \"Misc\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Indicates whether full screen is enabled for this control.\n\t\t\t */\n\t\t\tenableFullScreen: { type: \"boolean\", group: \"Misc\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * The name of the URL parameter used to expand the container into full-screen mode.\n\t\t\t * This property specifies the parameter key expected in the URL query string\n\t\t\t * to identify the container to be expanded.\n\t\t\t */\n\t\t\tfullScreenName: { type: \"string\", group: \"Misc\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Indicates whether lazy loading is enabled for this control.\n\t\t\t */\n\t\t\tenableLazyLoad: { type: \"boolean\", group: \"Misc\", defaultValue: true, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Indicates if the container is loaded.\n\t\t\t */\n\t\t\tloaded: { type: \"boolean\", group: \"Appearance\", defaultValue: false, visibility: \"hidden\" }\n\t\t},\n\t\tdefaultAggregation: \"content\",\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * The container content aggregation which should be of type BasePanel.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\tcontent: { type: \"sap.cux.home.BasePanel\", singularName: \"content\", multiple: true, visibility: \"public\" },\n\t\t\t/**\n\t\t\t * This aggregation contains the actions that should be displayed within the container.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\tactionButtons: { type: \"sap.m.Button\", multiple: true, singularName: \"actionButton\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * This aggregation holds the items that should be shown within the dropdown menu of the container.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\tmenuItems: { type: \"sap.cux.home.MenuItem\", multiple: true, singularName: \"menuItem\", visibility: \"public\" }\n\t\t},\n\t\tassociations: {\n\t\t\tlayout: { type: \"sap.cux.home.BaseLayout\", multiple: false, singularName: \"layout\", visibility: \"hidden\" },\n\t\t\tfullScreenButton: { type: \"sap.m.Button\", multiple: false, singularName: \"fullScreenButton\", visibility: \"hidden\" },\n\t\t\tfullScreenMenuItem: { type: \"sap.cux.home.MenuItem\", multiple: false, singularName: \"fullScreenMenuItem\", visibility: \"hidden\" }\n\t\t},\n\t\tevents: {\n\t\t\t/**\n\t\t\t * Event is fired before the container is expanded.\n\t\t\t */\n\t\t\tonExpand: {}\n\t\t},\n\t\tdesigntime: true\n\t};\n\n\tstatic renderer: typeof BaseContainerRenderer = BaseContainerRenderer;\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tthis._controlMap = new Map();\n\t\tthis._commonHeaderElementStates = new Map();\n\t\tthis._i18nBundle = Lib.getResourceBundleFor(\"sap.cux.home.i18n\") as ResourceBundle;\n\t\tthis._createHeader(this);\n\n\t\t//create custom settings data\n\t\tconst containerCustomSettings = new CustomData(`${this.getId()}-custom-settings`, {\n\t\t\tkey: \"custom-settings\",\n\t\t\tvalue: {}\n\t\t});\n\t\tthis.addCustomData(containerCustomSettings);\n\t}\n\n\t/**\n\t * Returns the custom settings data associated with the container\n\t * @private\n\t */\n\tpublic getCustomSettings() {\n\t\treturn (this.data(\"custom-settings\") || {}) as Record<string, string>;\n\t}\n\n\t/**\n\t * Adds the Custom setting data for the Section\n\t * @private\n\t * @param {string} key - The key of the Custom setting data\n\t * @param {string} value - The value to set for the specified key\n\t */\n\tprotected addCustomSetting(key: string, value: string) {\n\t\t(this.data(\"custom-settings\") as Record<string, string>)[key] = value;\n\t}\n\n\t/**\n\t * Creates and returns header for both container as well as panels\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} control - can be a container or a panel\n\t * @returns {HBox} header for the given container or panel\n\t */\n\tprivate _createHeader(control: BaseContainer | BasePanel): HBox {\n\t\tconst controlId = control.getId();\n\t\tconst id = `${controlId}-header`;\n\t\tconst isPanel = control.isA(\"sap.cux.home.BasePanel\");\n\t\tconst hasContainerTitle = (this.getProperty(\"title\") as string)?.trim().length > 0;\n\n\t\tif (!this._controlMap.get(id)) {\n\t\t\t//create header elements\n\t\t\tthis._controlMap.set(`${controlId}-header-title`, new Title(`${controlId}-title`));\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${controlId}-header-contentLeft`,\n\t\t\t\tnew HBox(`${controlId}-contentLeft`, { renderType: \"Bare\" }).addStyleClass(\"sapCuxSectionContentArea\")\n\t\t\t);\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${controlId}-header-contentRight`,\n\t\t\t\tnew HBox(`${controlId}-contentRight`, { renderType: \"Bare\" }).addStyleClass(\"sapCuxSectionContentArea\")\n\t\t\t);\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${controlId}-header-content`,\n\t\t\t\tnew HBox(`${controlId}-header-content`, {\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\t\t\trenderType: \"Bare\",\n\t\t\t\t\titems: [\n\t\t\t\t\t\tthis._controlMap.get(`${controlId}-header-contentLeft`) as Control,\n\t\t\t\t\t\tthis._controlMap.get(`${controlId}-header-contentRight`) as Control\n\t\t\t\t\t]\n\t\t\t\t}).addStyleClass(\"sapUiTinyMarginBegin\")\n\t\t\t);\n\n\t\t\t//create header container\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew HBox(`${controlId}-header`, {\n\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\titems: [\n\t\t\t\t\t\tthis._controlMap.get(`${controlId}-header-title`) as Control,\n\t\t\t\t\t\tthis._controlMap.get(`${controlId}-header-content`) as Control\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tthis.addDependent(this._controlMap.get(id) as Control);\n\t\t}\n\n\t\t//add control-specific styling\n\t\t(this._controlMap.get(id) as HBox)?.addStyleClass(isPanel && hasContainerTitle ? \"sapCuxPanelHeader\" : \"sapUiContainerHeader\");\n\t\t(this._controlMap.get(`${controlId}-header-title`) as Title).setTitleStyle(isPanel && hasContainerTitle ? \"H6\" : \"H4\");\n\n\t\treturn this._controlMap.get(id) as HBox;\n\t}\n\n\t/**\n\t * Returns container header\n\t *\n\t * @private\n\t * @returns {Object} container header\n\t */\n\tpublic _getHeader(): HBox {\n\t\treturn this._controlMap.get(`${this.getId()}-header`) as HBox;\n\t}\n\n\t/**\n\t * Returns inner control corresponding to the specified layout\n\t *\n\t * @private\n\t * @returns {IconTabBar | FlexBox} inner control based on the layout\n\t */\n\tpublic _getInnerControl(): IconTabBar | FlexBox {\n\t\treturn this.getProperty(\"orientation\") === OrientationType.SideBySide ? this._iconTabBar : this._wrapper;\n\t}\n\n\t/**\n\t * Handler for selection of panel in SideBySide layout\n\t *\n\t * @private\n\t * @param {Event} event - event object\n\t */\n\tprotected _onPanelSelect(event: IconTabBar$SelectEvent) {\n\t\t//suppress invalidation to prevent container re-rendering. render the specific header element instead\n\t\tthis.setProperty(\"selectedKey\", event.getParameter(\"selectedKey\"), true);\n\t\tthis._updateContainerHeader(this);\n\t}\n\n\t/**\n\t * Updates the count information of IconTabFilter of IconTabBar inner control\n\t * in case of SideBySide layout\n\t *\n\t * @private\n\t * @param {BasePanel} panel - associated panel\n\t * @param {string} count - updated count\n\t */\n\tpublic _setPanelCount(panel: BasePanel, count?: string) {\n\t\tif (this.getProperty(\"orientation\") === OrientationType.SideBySide) {\n\t\t\tthis._getIconTabFilter(panel).setCount(count);\n\t\t}\n\t}\n\n\t/**\n\t * Adds corresponding control to panel. The control would be added to the\n\t * corresponding target inner control based on the layout.\n\t *\n\t * @private\n\t * @param {BasePanel} panel - panel to which control must be added\n\t * @param {Control} control - control to be added\n\t */\n\tpublic _addToPanel(panel: BasePanel, control: Control): void {\n\t\tif (this.getProperty(\"orientation\") === OrientationType.SideBySide) {\n\t\t\tthis._getIconTabFilter(panel)?.addContent(control);\n\t\t} else {\n\t\t\t(this._controlMap.get(`${panel.getId()}-wrapper`) as FlexBox)?.addItem(control);\n\t\t}\n\t}\n\n\t/**\n\t * Creates and returns IconTabBarFilter for the specified panel to be placed\n\t * in the IconTabBar inner control in case of SideBySide layout\n\t *\n\t * @private\n\t * @param {BasePanel} panel - panel whose icon tab filter must be fetched\n\t * @returns {IconTabFilter} IconTabFilter for the specified panel\n\t */\n\tprivate _getIconTabFilter(panel: BasePanel): IconTabFilter {\n\t\tconst id = `${panel.getId()}-tabFilter`;\n\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tconst iconTabFilter = new IconTabFilter(id, {\n\t\t\t\tkey: panel.getProperty(\"key\") as string,\n\t\t\t\ttext: panel.getProperty(\"title\") as string,\n\t\t\t\ttooltip: panel.getProperty(\"tooltip\") as string\n\t\t\t});\n\t\t\ticonTabFilter.addCustomData(\n\t\t\t\tnew CustomData(`${panel.getId()}--customFilter`, {\n\t\t\t\t\tkey: \"sap-ui-fastnavgroup\",\n\t\t\t\t\tvalue: \"true\",\n\t\t\t\t\twriteToDom: true\n\t\t\t\t})\n\t\t\t);\n\t\t\tthis._controlMap.set(id, iconTabFilter);\n\t\t\taddFESRSemanticStepName(iconTabFilter, FESR_EVENTS.SELECT, panel.getProperty(\"key\") as string);\n\t\t}\n\n\t\t//Add panel content to the created filter\n\t\tpanel._getContent()?.forEach((content) => (this._controlMap.get(id) as IconTabFilter).addContent(content));\n\n\t\treturn this._controlMap.get(id) as IconTabFilter;\n\t}\n\n\t/**\n\t * onBeforeRendering lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic onBeforeRendering(): void {\n\t\t// set selected key to the first panel key if not set\n\t\tif (this.getProperty(\"selectedKey\") === \"\") {\n\t\t\tconst defaultKey = this.getContent()?.[0]?.getProperty(\"key\") as string;\n\t\t\tthis.setProperty(\"selectedKey\", defaultKey, true);\n\t\t}\n\n\t\t//create layout-specific inner control\n\t\tthis._createInnerControl();\n\n\t\t//fetch and update container header\n\t\tthis._updateContainerHeader(this);\n\n\t\t//add content from all panels to inner control\n\t\tthis._addAllPanelContent();\n\n\t\t//load content if lazy loading is disabled\n\t\tif (this.getProperty(\"enableLazyLoad\") === false && !this.getProperty(\"loaded\")) {\n\t\t\tthis._loadContent();\n\t\t}\n\n\t\t// mark performance metrics\n\t\tthis._markPerformanceMetrics();\n\t}\n\n\t/**\n\t * onAfterRendering lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic onAfterRendering(): void {\n\t\tthis._attachResizeHandler();\n\n\t\t//observe container for lazy loading if enabled\n\t\tif (this.getProperty(\"enableLazyLoad\") as boolean) {\n\t\t\tthis._observeContainer();\n\t\t}\n\t}\n\n\t/**\n\t * Loads the content for the container.\n\t *\n\t * @private\n\t */\n\tprivate _loadContent() {\n\t\tthis.setProperty(\"loaded\", true);\n\t\tthis.load?.();\n\t}\n\n\t/**\n\t * Attaches a resize handler to the container to adjust\n\t * the layout based on device size changes.\n\t *\n\t * @private\n\t */\n\tpublic _attachResizeHandler() {\n\t\tif (this.getDomRef() && this.getProperty(\"loaded\")) {\n\t\t\tthis._resizeObserver?.disconnect();\n\t\t\tthis._resizeObserver = new ResizeObserver((entries) => {\n\t\t\t\tif (this._resizeTimeout) {\n\t\t\t\t\tclearTimeout(this._resizeTimeout);\n\t\t\t\t}\n\n\t\t\t\t//debounce resize event to prevent multiple calls\n\t\t\t\tthis._resizeTimeout = window.setTimeout(() => {\n\t\t\t\t\tif (this.getVisible()) {\n\t\t\t\t\t\tthis._setDeviceType(entries);\n\t\t\t\t\t\tthis.adjustLayout();\n\t\t\t\t\t}\n\t\t\t\t}, 10) as unknown as number;\n\t\t\t});\n\t\t\tthis._resizeObserver?.observe(this.getDomRef() as Element);\n\t\t}\n\t}\n\n\t/**\n\t * Detaches the resize handler from the container.\n\t *\n\t * @private\n\t */\n\tpublic _detachResizeHandler() {\n\t\tthis._resizeObserver?.disconnect();\n\t}\n\n\t/**\n\t * Adds intersection observer for lazy loading of container\n\t *\n\t * @private\n\t */\n\tprivate _observeContainer(): void {\n\t\tconst target = this.getDomRef();\n\t\tif (!this._containerObserver) {\n\t\t\tthis._containerObserver = new IntersectionObserver(\n\t\t\t\t(entries) =>\n\t\t\t\t\tentries.forEach((entry) => {\n\t\t\t\t\t\tif (!this.getProperty(\"loaded\") && this.getVisible() && entry.isIntersecting) {\n\t\t\t\t\t\t\tthis._loadContent();\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t{ rootMargin: \"0px\", threshold: 0.1 }\n\t\t\t);\n\t\t}\n\t\tthis._containerObserver?.disconnect();\n\t\t//observe container\n\t\tif (target) {\n\t\t\tthis._containerObserver.observe(target);\n\t\t}\n\t}\n\n\t/**\n\t * Create inner control for storing content from panel\n\t *\n\t * @private\n\t */\n\tprivate _createInnerControl(): void {\n\t\tconst layout = this.getProperty(\"orientation\") as OrientationType;\n\n\t\tif (layout === OrientationType.Horizontal || layout === OrientationType.Vertical) {\n\t\t\tif (!this._wrapper) {\n\t\t\t\tthis._wrapper = new FlexBox(`${this.getId()}-wrapper`, {\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\trenderType: \"Bare\"\n\t\t\t\t}).addStyleClass(\"sapCuxBaseWrapper\");\n\t\t\t\tthis.addDependent(this._wrapper);\n\t\t\t}\n\t\t\tthis._wrapper.setDirection(layout === OrientationType.Horizontal ? \"Row\" : \"Column\");\n\t\t} else if (!this._iconTabBar) {\n\t\t\tthis._iconTabBar = new IconTabBar(`${this.getId()}-iconTabBar`, {\n\t\t\t\texpandable: true,\n\t\t\t\tbackgroundDesign: BackgroundDesign.Transparent,\n\t\t\t\theaderMode: \"Inline\",\n\t\t\t\theaderBackgroundDesign: BackgroundDesign.Transparent,\n\t\t\t\tselect: (event: Event) => this._onPanelSelect(event)\n\t\t\t});\n\t\t\tthis.addDependent(this._iconTabBar);\n\t\t}\n\t}\n\n\t/**\n\t * Update container header information\n\t *\n\t * @private\n\t */\n\tpublic _updateContainerHeader(control: BaseContainer | BasePanel): void {\n\t\tconst isSideBySideLayout = this.getProperty(\"orientation\") === OrientationType.SideBySide;\n\t\tconst isContainer = control.isA(\"sap.cux.home.BaseContainer\");\n\t\tconst targetControl = !isContainer && isSideBySideLayout ? this : control;\n\n\t\t//clear container header elements\n\t\t(this._controlMap.get(targetControl.getId() + \"-header-contentLeft\") as HBox)?.removeAllItems();\n\t\t(this._controlMap.get(targetControl.getId() + \"-header-contentRight\") as HBox)?.removeAllItems();\n\n\t\t//update container header elements\n\t\tthis._updateHeader(control);\n\t}\n\n\t/**\n\t * Updates header information of a specified container or a panel\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} control - can be container or panel\n\t */\n\tprivate _updateHeader(control: BaseContainer | BasePanel): void {\n\t\tconst isSideBySideLayout = this.getProperty(\"orientation\") === OrientationType.SideBySide;\n\t\tconst isContainer = control.isA(\"sap.cux.home.BaseContainer\");\n\n\t\t//Update Title\n\t\tconst headerTitle = this._controlMap.get(control.getId() + \"-header-title\") as Title;\n\t\theaderTitle?.setText(control.getProperty(\"title\") as string);\n\t\theaderTitle?.setVisible((control.getProperty(\"title\") as string)?.trim().length > 0);\n\n\t\t//Add common header elements\n\t\tif (this._getLayout()) {\n\t\t\tthis._addLayoutHeaderElements();\n\t\t}\n\n\t\tconst currentControl = isContainer && isSideBySideLayout ? this._getSelectedPanel() : control;\n\t\tconst targetControl = !isContainer && isSideBySideLayout ? this : control;\n\n\t\t//Update Menu Items\n\t\tconst menuItems = this._filterVisibleHeaderElements(currentControl?.getMenuItems());\n\t\tif (menuItems.length > 0) {\n\t\t\tthis._addMenuItems(targetControl, menuItems);\n\t\t}\n\n\t\t//Update Action Buttons\n\t\t(currentControl?.getAggregation(\"actionButtons\") as Button[])?.forEach((actionButton: Button) => {\n\t\t\t(this._controlMap.get(targetControl.getId() + \"-header-contentRight\") as HBox)?.addItem(this._getHeaderButton(actionButton));\n\t\t});\n\t}\n\n\t/**\n\t * Attaches layout header elements like settings menu and full screen action to each\n\t * panel in the container, if enabled.\n\t *\n\t * @private\n\t */\n\tprivate _addLayoutHeaderElements(): void {\n\t\tconst attachHeaderElements = (control: BaseContainer | BasePanel) => {\n\t\t\tconst elements = [\n\t\t\t\t{ property: \"enableFullScreen\", aggregation: \"menuItems\", headerElement: this._getFullScreenMenuItem(control) },\n\t\t\t\t{ property: \"enableSettings\", aggregation: \"menuItems\", headerElement: this._getHomeSettingsMenuItem(control) },\n\t\t\t\t{ property: \"enableFullScreen\", aggregation: \"actionButtons\", headerElement: this._getFullScreenButton(control) }\n\t\t\t];\n\n\t\t\telements.forEach(({ property, aggregation, headerElement }) => {\n\t\t\t\tconst currentPropertyValue = control.getProperty(property) as boolean;\n\t\t\t\tconst previousPropertyValue = this._commonHeaderElementStates.get(`${headerElement.getId()}-${property}`);\n\n\t\t\t\t//update common header elements only if there's a change in property value\n\t\t\t\tif (currentPropertyValue !== previousPropertyValue) {\n\t\t\t\t\tthis._commonHeaderElementStates.set(`${headerElement.getId()}-${property}`, currentPropertyValue);\n\n\t\t\t\t\tif (currentPropertyValue) {\n\t\t\t\t\t\tcontrol.addAggregation(aggregation, headerElement);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontrol.removeAggregation(aggregation, headerElement);\n\t\t\t\t\t}\n\n\t\t\t\t\t// set full screen element relations\n\t\t\t\t\tif (property === \"enableFullScreen\") {\n\t\t\t\t\t\tthis.setFullScreenElementRelations({\n\t\t\t\t\t\t\tisFullScreenEnabled: currentPropertyValue,\n\t\t\t\t\t\t\tcontrol,\n\t\t\t\t\t\t\taggregation,\n\t\t\t\t\t\t\theaderElement\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// Add common header elements for container\n\t\tattachHeaderElements(this);\n\n\t\t// Add common header elements for inner panels\n\t\tconst panels = this.getContent() || [];\n\t\tpanels.forEach(attachHeaderElements);\n\n\t\t// setup full screen elements if required\n\t\tthis._setupFullScreenElements();\n\t}\n\n\t/**\n\t * Register/Degister elements for full screen, if enabled.\n\t *\n\t * @private\n\t */\n\tprivate _setupFullScreenElements() {\n\t\tconst layout = this._getLayout();\n\t\tconst setupFullScreenElement = (control: BaseContainer | BasePanel) => {\n\t\t\tconst currentPropertyValue = control.getProperty(\"enableFullScreen\") as boolean;\n\t\t\tconst previousPropertyValue = this._commonHeaderElementStates.get(`${control.getId()}-enableFullScreen`);\n\n\t\t\tif (currentPropertyValue !== previousPropertyValue) {\n\t\t\t\tthis._commonHeaderElementStates.set(`${control.getId()}-enableFullScreen`, currentPropertyValue);\n\n\t\t\t\tif (currentPropertyValue) {\n\t\t\t\t\tlayout?.registerFullScreenElement(control);\n\t\t\t\t} else {\n\t\t\t\t\tlayout?.deregisterFullScreenElement(control);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// update index of full screen element\n\t\t\tif (currentPropertyValue) {\n\t\t\t\tlayout?.updateFullScreenElement(control, {\n\t\t\t\t\tindex: layout?.indexOfItem(this)\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t// Register full screen elements for container\n\t\tsetupFullScreenElement(this);\n\n\t\t// Register full screen elements for inner panels\n\t\tconst panels = this.getContent() || [];\n\t\tpanels.forEach(setupFullScreenElement);\n\t}\n\n\t/**\n\t * Sets or removes the full screen element relations based on the provided configuration.\n\t *\n\t * @private\n\t * @param {FullScreenElementRelation} relation - The configuration object containing the full screen element relation details.\n\t * @param {boolean} relation.isFullScreenEnabled - Indicates whether full screen is enabled.\n\t * @param {Control} relation.control - The control to set or remove the association.\n\t * @param {string} relation.aggregation - The aggregation type (e.g., \"actionButtons\").\n\t * @param {Element} relation.headerElement - The header element to associate or disassociate.\n\t *\n\t * @returns {void}\n\t */\n\tprivate setFullScreenElementRelations(relation: FullScreenElementRelation): void {\n\t\tconst { isFullScreenEnabled, control, aggregation, headerElement } = relation;\n\t\tconst targetAggregation = aggregation === \"actionButtons\" ? \"fullScreenButton\" : \"fullScreenMenuItem\";\n\n\t\tif (isFullScreenEnabled) {\n\t\t\tcontrol.setAssociation(targetAggregation, headerElement, true);\n\t\t} else {\n\t\t\tcontrol.removeAssociation(targetAggregation, headerElement, true);\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the my home settings menu item for a given panel.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} panel - The panel for which to retrieve the home settings menu item.\n\t * @returns {MenuItem} The settings menu item for the given panel.\n\t */\n\tprivate _getHomeSettingsMenuItem(panel: BaseContainer | BasePanel): MenuItem {\n\t\tconst id = `${panel.getId()}-settings`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tconst menuItem = new MenuItem(id, {\n\t\t\t\ttitle: this._i18nBundle.getText(\"myHomeSettings\"),\n\t\t\t\ticon: \"sap-icon://user-settings\",\n\t\t\t\tpress: () => {\n\t\t\t\t\t//open settings dialog\n\t\t\t\t\tconst layout = this._getLayout();\n\t\t\t\t\tlayout?.openSettingsDialog();\n\t\t\t\t}\n\t\t\t});\n\t\t\taddFESRId(menuItem, \"myHomeSettings\");\n\t\t\tthis._controlMap.set(id, menuItem);\n\t\t}\n\n\t\treturn this._controlMap.get(id) as MenuItem;\n\t}\n\n\t/**\n\t * Retrieves the full screen menu item for a given panel.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} panel - The panel for which to retrieve the home settings menu item.\n\t * @returns {MenuItem} The settings menu item for the given panel.\n\t */\n\tprivate _getFullScreenMenuItem(panel: BaseContainer | BasePanel): MenuItem {\n\t\tconst id = `${panel.getId()}-showMore`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tconst fullScreenMenuItem = new MenuItem(id, {\n\t\t\t\ttitle: this._i18nBundle.getText(\"expand\"),\n\t\t\t\ticon: \"sap-icon://display-more\",\n\t\t\t\tpress: () => {\n\t\t\t\t\tconst layout = this._getLayout();\n\t\t\t\t\tlayout?.toggleFullScreen(panel);\n\t\t\t\t}\n\t\t\t});\n\t\t\taddFESRId(fullScreenMenuItem, \"toggleFullScreen\");\n\t\t\tthis._controlMap.set(id, fullScreenMenuItem);\n\t\t}\n\t\treturn this._controlMap.get(id) as MenuItem;\n\t}\n\n\t/**\n\t * Generates a full screen action button for a given control, which can be a panel or a container.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} control - The control for which the full screen button is generated.\n\t * @returns {Button} A Button instance configured to toggle full screen mode for the specified control.\n\t */\n\tprivate _getFullScreenButton(control: BaseContainer | BasePanel): Button {\n\t\tconst id = `${control.getId()}-fullScreen`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tconst fullScreenButton = new Button(id, {\n\t\t\t\ttext: this._i18nBundle.getText(\"expand\"),\n\t\t\t\ttype: ButtonType.Transparent,\n\t\t\t\tpress: () => {\n\t\t\t\t\tconst layout = this._getLayout();\n\t\t\t\t\tlayout?.toggleFullScreen(control);\n\t\t\t\t}\n\t\t\t});\n\t\t\taddFESRId(fullScreenButton, \"toggleFullScreen\");\n\t\t\tthis._controlMap.set(id, fullScreenButton);\n\t\t\tthis._exemptedActions.push(id);\n\t\t}\n\n\t\treturn this._controlMap.get(id) as Button;\n\t}\n\n\t/**\n\t * Returns the selected panel in the IconTabBar inner control in\n\t * case of SideBySide layout\n\t *\n\t * @private\n\t * @returns {BasePanel} selected panel\n\t */\n\tpublic _getSelectedPanel(): BasePanel {\n\t\tconst panel =\n\t\t\tthis.getContent()?.find((panel) => panel.getProperty(\"key\") === this.getProperty(\"selectedKey\")) || this.getContent()?.[0];\n\t\tthis.setProperty(\"selectedKey\", panel?.getProperty(\"key\"), true);\n\n\t\treturn panel;\n\t}\n\n\t/**\n\t * Add content from all panels to the layout-specific inner control\n\t *\n\t * @private\n\t */\n\tprivate _addAllPanelContent(): void {\n\t\tconst panels = this.getContent() || [];\n\n\t\tif (this.getProperty(\"orientation\") === OrientationType.SideBySide) {\n\t\t\tthis._iconTabBar.removeAllItems();\n\t\t\tpanels.forEach((panel) => this._iconTabBar.addItem(this._getIconTabFilter(panel)));\n\t\t\tthis._iconTabBar.setSelectedKey(this.getProperty(\"selectedKey\") as string);\n\t\t} else {\n\t\t\tthis._wrapper.removeAllItems();\n\t\t\tpanels.forEach((panel) => this._wrapper.addItem(this._getPanelContentWrapper(panel)));\n\t\t}\n\t}\n\n\t/**\n\t * Creates and returns a wrapper for containing the specified panel\n\t * content in case of Horizontal and Vertical layout\n\t *\n\t * @private\n\t * @param {BasePanel} panel - panel for which wrapper has to created\n\t * @returns {FlexBox} wrapper container for the given panel\n\t */\n\tprotected _getPanelContentWrapper(panel: BasePanel): FlexBox {\n\t\tconst id = `${panel.getId()}-contentWrapper`;\n\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew FlexBox(id, {\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\tdirection: \"Column\",\n\t\t\t\t\trenderType: \"Bare\"\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\t//Add header as the first item in case of Horizontal and Vertical layout\n\t\t(this._controlMap.get(id) as FlexBox).addItem(this._updatePanelHeader(panel));\n\t\tpanel._getContent()?.forEach((content) => (this._controlMap.get(id) as FlexBox).addItem(content));\n\n\t\treturn this._controlMap.get(id) as FlexBox;\n\t}\n\n\t/**\n\t * Returns header of the specified panel after updating it\n\t *\n\t * @private\n\t * @param {BasePanel} panel - panel to be updated\n\t * @returns {HBox} header associated with the panel\n\t */\n\tprivate _updatePanelHeader(panel: BasePanel): HBox {\n\t\tconst header = this._createHeader(panel);\n\t\tconst isTitleVisible = (panel.getProperty(\"title\") as string)?.trim().length > 0;\n\t\tconst hasContainerTitle = (this.getProperty(\"title\") as string)?.trim().length > 0;\n\n\t\t//update panel header elements\n\t\tthis._updateContainerHeader(panel);\n\n\t\t//add header styling only if any of the header elements are visible\n\t\theader.toggleStyleClass(\n\t\t\t\"sapCuxPanelHeader\",\n\t\t\thasContainerTitle &&\n\t\t\t\t(isTitleVisible ||\n\t\t\t\t\tthis._filterVisibleHeaderElements(panel.getMenuItems()).length > 0 ||\n\t\t\t\t\tthis._filterVisibleHeaderElements(panel.getActionButtons()).length > 0)\n\t\t);\n\n\t\treturn header;\n\t}\n\n\t/**\n\t * Filters the provided array of header elements to include only those that are visible.\n\t *\n\t * @private\n\t * @template T - The type of elements in the array, which can be either MenuItem or Button.\n\t * @param {T[]} [elements=[]] - The array of elements to filter. Defaults to an empty array if not provided.\n\t *\n\t * @returns {T[]} An array of elements that are visible.\n\t */\n\tprivate _filterVisibleHeaderElements<T extends MenuItem | Button>(elements: T[] = []): T[] {\n\t\treturn elements.filter((element) => element.getVisible());\n\t}\n\n\t/**\n\t * Setter for container title\n\t *\n\t * @private\n\t * @param {string} title - updated title\n\t * @returns {BaseContainer} BaseContainer instance for chaining\n\t */\n\tpublic _setTitle(title: string): BaseContainer {\n\t\t//suppress invalidate to prevent container re-rendering. re-render only the concerned element\n\t\tthis.setProperty(\"title\", title, true);\n\t\t(this._controlMap.get(`${this.getId()}-header-title`) as Title).setText(title);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds menu items to a control and sets up a menu button to display them.\n\t * If the menu for the control doesn't exist, it creates a new one.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} control - The control to which the menu items will be added.\n\t * @param {MenuItem[]} menuItems - An array of menu items to be added to the menu.\n\t */\n\tprivate _addMenuItems(control: BaseContainer | BasePanel, menuItems: MenuItem[]): void {\n\t\tif (!this._controlMap.get(`${control.getId()}-menu`)) {\n\t\t\t//create menu list\n\t\t\tconst list = new List(`${control.getId()}-list`, {\n\t\t\t\titemPress: (event) => (event.getSource<List>().getParent() as Popover).close()\n\t\t\t});\n\t\t\tthis._controlMap.set(`${control.getId()}-menu`, list);\n\t\t\tconst invisiblePopoverText = getInvisibleText(`${control.getId()}-popoverTitle`, this._i18nBundle.getText(\"actions\"));\n\t\t\t//create menu popover\n\t\t\tconst menuPopover = new Popover(`${control.getId()}-popover`, {\n\t\t\t\tplacement: PlacementType.VerticalPreferredBottom,\n\t\t\t\tshowHeader: false,\n\t\t\t\tariaLabelledBy: [invisiblePopoverText ? invisiblePopoverText?.getId() : \"\"],\n\t\t\t\tcontent: [list, invisiblePopoverText]\n\t\t\t});\n\n\t\t\t//create menu button\n\t\t\tconst menuButton = new Button(`${control.getId()}-menu-btn`, {\n\t\t\t\ticon: \"sap-icon://slim-arrow-down\",\n\t\t\t\ttype: ButtonType.Transparent,\n\t\t\t\ttooltip: this._i18nBundle.getText(\"more\"),\n\t\t\t\tpress: (event) => menuPopover.openBy(event.getSource<Button>())\n\t\t\t});\n\t\t\tthis._controlMap.set(`${control.getId()}-menu-btn`, menuButton);\n\t\t}\n\n\t\t//add menu button to header\n\t\t(this._controlMap.get(control.getId() + \"-header-contentLeft\") as HBox)?.addItem(\n\t\t\tthis._controlMap.get(`${control.getId()}-menu-btn`) as Button\n\t\t);\n\n\t\t//Clear existing menu items and add new ones\n\t\t(this._controlMap.get(`${control.getId()}-menu`) as List).removeAllItems();\n\t\tmenuItems.forEach((item) => (this._controlMap.get(`${control.getId()}-menu`) as List).addItem(this._getMenuListItem(item)));\n\t}\n\n\t/**\n\t * Creates and returns a button for the corresponding header ActionButton\n\t *\n\t * @private\n\t * @param {Button} headerButton - ActionButton element\n\t * @returns {Button} Button instance created for the header element\n\t */\n\tprivate _getHeaderButton(headerButton: Button): Button {\n\t\tconst id = `${headerButton.getId()}-btn`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew Button(id, {\n\t\t\t\t\ttype: ButtonType.Transparent,\n\t\t\t\t\tpress: () => headerButton.firePress()\n\t\t\t\t})\n\t\t\t);\n\t\t\taddFESRSemanticStepName(this._controlMap.get(id) as Button, FESR_EVENTS.PRESS, getFESRId(headerButton));\n\t\t}\n\n\t\t//Update button details\n\t\tconst button = this._controlMap.get(id) as Button;\n\t\tbutton.setText(headerButton.getText());\n\t\tbutton.setTooltip(headerButton.getTooltip() as string);\n\t\tbutton.setIcon(headerButton.getIcon());\n\t\tbutton.setVisible(headerButton.getVisible());\n\t\tbutton.setEnabled(headerButton.getEnabled());\n\n\t\treturn button;\n\t}\n\n\t/**\n\t * Retrieves the layout associated with the container, if available.\n\t *\n\t * @private\n\t * @returns {BaseLayout} The layout associated with the BaseContainer.\n\t */\n\tpublic _getLayout(): BaseLayout {\n\t\treturn UI5Element.getElementById(this.getAssociation(\"layout\", null) as string) as BaseLayout;\n\t}\n\n\t/**\n\t * Retrieves or creates a menu list item for a given menu item.\n\t *\n\t * @private\n\t * @param {MenuItem} menuItem - The menu item for which to retrieve or create a list item.\n\t * @returns {StandardListItem} The menu list item associated with the provided menu item.\n\t */\n\tprivate _getMenuListItem(menuItem: MenuItem): StandardListItem {\n\t\tif (!this._controlMap.get(`${menuItem.getId()}-listItem`)) {\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${menuItem.getId()}-listItem`,\n\t\t\t\tnew StandardListItem(`${menuItem.getId()}-listItem`, {\n\t\t\t\t\ttype: \"Active\",\n\t\t\t\t\ticon: menuItem.getIcon(),\n\t\t\t\t\ttitle: menuItem.getTitle(),\n\t\t\t\t\tpress: (event) => menuItem.firePress({ button: event.getSource<Button>() })\n\t\t\t\t})\n\t\t\t);\n\t\t\taddFESRSemanticStepName(\n\t\t\t\tthis._controlMap.get(`${menuItem.getId()}-listItem`) as StandardListItem,\n\t\t\t\tFESR_EVENTS.PRESS,\n\t\t\t\tgetFESRId(menuItem)\n\t\t\t);\n\t\t}\n\t\t//Update list item details\n\t\tconst menuListItem = this._controlMap.get(`${menuItem.getId()}-listItem`) as StandardListItem;\n\t\tmenuListItem.setIcon(menuItem.getIcon());\n\t\tmenuListItem.setTitle(menuItem.getTitle());\n\t\tmenuListItem.setVisible(menuItem.getVisible());\n\t\treturn menuListItem;\n\t}\n\n\t/**\n\t * Toggles the visibility of menu Item.\n\t *\n\t * @private\n\t * @param {boolean} show - Indicates whether to show or hide the menu item.\n\t * @returns {void}\n\t */\n\tpublic toggleMenuListItem(menuItem: MenuItem, show: boolean): void {\n\t\tif (menuItem) {\n\t\t\tconst menuListItem = this._getMenuListItem(menuItem);\n\t\t\tmenuListItem?.setVisible(show);\n\t\t\tmenuItem.setProperty(\"visible\", show, true);\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the visibility of action button.\n\t *\n\t * @private\n\t * @param {boolean} show - Indicates whether to show or hide the action button.\n\t * @returns {void}\n\t */\n\tpublic toggleActionButton(actionButton: Button, show: boolean): void {\n\t\tif (actionButton) {\n\t\t\tconst actionButtonControl = this._getHeaderButton(actionButton);\n\t\t\tactionButtonControl?.setVisible(show);\n\t\t\tactionButton.setProperty(\"visible\", show, true);\n\t\t}\n\t}\n\n\tpublic removeContent(panel: BasePanel) {\n\t\tif (this.getProperty(\"selectedKey\") && this.getProperty(\"selectedKey\") === panel.getProperty(\"key\")) {\n\t\t\tthis.setProperty(\"selectedKey\", undefined, true);\n\t\t}\n\t\tthis.removeAggregation(\"content\", panel);\n\t}\n\n\t/**\n\t * Gets current value of property \"width\".\n\t *\n\t * Default value is: \"100%\"\n\t * @returns {CSSSize} Value of property \"width\"\n\t */\n\tpublic getWidth(): CSSSize {\n\t\treturn this.getProperty(\"width\") as CSSSize;\n\t}\n\n\t/**\n\t * Toggles the visibility of action buttons within the container and/or its inner panels.\n\t *\n\t * @private\n\t * @param {boolean} show - Indicates whether to show or hide the action buttons.\n\t * @returns {void}\n\t */\n\tpublic toggleActionButtons(show: boolean): void {\n\t\tconst isSideBySideLayout = this.getProperty(\"orientation\") === OrientationType.SideBySide;\n\t\tlet visibilityChanged = false;\n\t\tconst toggleActionButtons = (control: BaseContainer | BasePanel) => {\n\t\t\tcontrol.getActionButtons()?.forEach((actionButton) => {\n\t\t\t\tconst currentVisibility = actionButton.getVisible();\n\t\t\t\tif (currentVisibility !== show && !this._exemptedActions.includes(actionButton.getId())) {\n\t\t\t\t\tactionButton.setProperty(\"visible\", show, true);\n\t\t\t\t\tvisibilityChanged = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!isSideBySideLayout && visibilityChanged) {\n\t\t\t\tthis._updateContainerHeader(control);\n\t\t\t}\n\t\t};\n\n\t\t// Toggle action buttons for container\n\t\ttoggleActionButtons(this);\n\n\t\t// Toggle action buttons for inner panels\n\t\tconst panels = this.getContent() || [];\n\t\tpanels.forEach(toggleActionButtons);\n\n\t\t// Update Header Container if required\n\t\tif (isSideBySideLayout && visibilityChanged) {\n\t\t\tthis._updateContainerHeader(this);\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the visibility of the full screen button for the specified element.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} element - The element for which to toggle the full screen button.\n\t * @param {boolean} show - Indicates whether to show or hide the full screen button.\n\t */\n\tpublic toggleFullScreenElements(element: BaseContainer | BasePanel, show: boolean): void {\n\t\tconst fullScreenButton = UI5Element.getElementById(element.getAssociation(\"fullScreenButton\", null) as string) as Button;\n\t\tconst fullScreenMenuButton = UI5Element.getElementById(element.getAssociation(\"fullScreenMenuItem\", null) as string) as MenuItem;\n\t\tconst isSideBySideLayout = this.getProperty(\"orientation\") === OrientationType.SideBySide;\n\t\tconst isPhone = this.getDeviceType() === DeviceType.Mobile;\n\t\tconst parent = element.getParent() as BaseContainer;\n\t\tlet elementVisibilityChanged = false;\n\t\tshow = !isPhone ? show : false;\n\t\t[fullScreenButton, fullScreenMenuButton].forEach((fullScreenElement: Button | MenuItem) => {\n\t\t\tif (fullScreenElement && show !== fullScreenElement.getVisible()) {\n\t\t\t\telementVisibilityChanged = true;\n\t\t\t\tfullScreenElement.setProperty(\"visible\", show, true);\n\t\t\t}\n\t\t});\n\t\tconst elementKey = element instanceof BasePanel && element.getKey();\n\t\tif (elementVisibilityChanged && (!isSideBySideLayout || (isSideBySideLayout && this.getProperty(\"selectedKey\") === elementKey))) {\n\t\t\tthis._updateContainerHeader(\n\t\t\t\tparent.getContent().length === 1 && !isSideBySideLayout ? (element.getParent() as BaseContainer) : element\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the device type based on the width of the container element.\n\t *\n\t * @private\n\t * @param {ResizeObserverEntry[]} entries - The entries returned by the ResizeObserver.\n\t * @returns {void}\n\t */\n\tprivate _setDeviceType(entries: ResizeObserverEntry[]): void {\n\t\tconst [entry] = entries;\n\t\tconst parentLayout = entry.target.parentNode as Element;\n\t\tconst width = parentLayout.clientWidth;\n\t\tconst deviceType = calculateDeviceType(width);\n\n\t\t//when width is zero, dom is not rendered hence setting device type can cause wrong calculation\n\t\tif (this._deviceType !== deviceType && width > 0) {\n\t\t\tthis._deviceType = deviceType;\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the device type for the current instance.\n\t *\n\t * @private\n\t * @returns {DeviceType} - The device type. If the device type is not set, it calculates\n\t * and returns the device type based on the current device width.\n\t */\n\tpublic getDeviceType(): DeviceType {\n\t\treturn this._deviceType || calculateDeviceType();\n\t}\n\n\t/**\n\t * Records the performance metrics for the container.\n\t * This is applicable only if the container is part of a layout.\n\t *\n\t * @private\n\t */\n\tprivate _markPerformanceMetrics() {\n\t\tconst elementName = this.getMetadata().getName() as keyof typeof UIElements;\n\t\trecordElementLoadStart(elementName);\n\n\t\tthis.getContent()?.forEach((panel) => {\n\t\t\tpanel.attachEventOnce(\"loaded\", () => {\n\t\t\t\trecordElementLoadEnd(elementName);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Returns a UI5 `HTML` control that contains the generic placeholder content.\n\t *\n\t * @returns {Control} A `sap.ui.core.HTML` control displaying the placeholder content.\n\t */\n\tpublic getGenericPlaceholder(): Control | undefined {\n\t\tconst content = this.getGenericPlaceholderContent();\n\t\tif (!content) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn new HTML({ content });\n\t}\n\n\t/**\n\t * Default implementation: returns undefined.\n\t */\n\tprotected getGenericPlaceholderContent(): string | undefined {\n\t\treturn undefined;\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":46,"column":0},"map":{"version":3,"names":["sap","ui","define","___library","OrientationType","__exports","apiVersion","render","rm","control","openStart","class","getProperty","SideBySide","Horizontal","style","getWidth","getHeight","openEnd","isLazyLoadEnabled","this","renderContent","renderCustomPlaceholder","close","getContent","length","getId","renderControl","_getHeader","_getInnerControl","placeholder","getGenericPlaceholder","Array","isArray","forEach","ctrl","e"],"sources":["BaseContainerRenderer.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Control from \"sap/ui/core/Control\";\nimport RenderManager from \"sap/ui/core/RenderManager\";\nimport BaseContainer from \"./BaseContainer\";\nimport { OrientationType } from \"./library\";\n\nexport default {\n\tapiVersion: 2,\n\n\t/**\n\t * Renders the control.\n\t *\n\t * @public\n\t * @override\n\t * @param {RenderManager} rm - The RenderManager object.\n\t * @param {BaseContainer} control - The BaseContainer control to be rendered.\n\t */\n\trender: function (rm: RenderManager, control: BaseContainer) {\n\t\trm.openStart(\"div\", control).class(\"sapCuxBaseContainer\");\n\n\t\t//Apply Layout based style classes\n\t\tif (control.getProperty(\"orientation\") === OrientationType.SideBySide) {\n\t\t\trm.class(\"sapCuxSideBySide\");\n\t\t} else if (control.getProperty(\"orientation\") === OrientationType.Horizontal) {\n\t\t\trm.class(\"sapCuxHorizontal\");\n\t\t} else {\n\t\t\trm.class(\"sapCuxVertical\");\n\t\t}\n\n\t\t//update width and height\n\t\trm.style(\"width\", control.getWidth());\n\t\trm.style(\"height\", control.getHeight());\n\t\trm.openEnd();\n\n\t\t//render content only if it is loaded, render placeholder otherwise\n\t\tconst isLazyLoadEnabled = control.getProperty(\"enableLazyLoad\") as boolean;\n\t\tif (!isLazyLoadEnabled || control.getProperty(\"loaded\")) {\n\t\t\tthis.renderContent(rm, control);\n\t\t} else {\n\t\t\tthis.renderCustomPlaceholder(rm, control);\n\t\t}\n\n\t\trm.close(\"div\");\n\t},\n\n\t/**\n\t * Renders the content of the control.\n\t *\n\t * @private\n\t * @param {RenderManager} rm - The RenderManager object.\n\t * @param {BaseContainer} control - The BaseContainer control.\n\t */\n\trenderContent: function (rm: RenderManager, control: BaseContainer) {\n\t\tif (control.getContent()?.length > 0) {\n\t\t\t//render header\n\t\t\trm.openStart(\"div\", control.getId() + \"-header\")\n\t\t\t\t.class(\"sapUiBaseContainerHeader\")\n\t\t\t\t.openEnd();\n\t\t\trm.renderControl(control._getHeader());\n\t\t\trm.close(\"div\");\n\n\t\t\t//render content\n\t\t\trm.openStart(\"div\", control.getId() + \"-content\")\n\t\t\t\t.class(\"sapUiBaseContainerContent\")\n\t\t\t\t.openEnd();\n\t\t\trm.renderControl(control._getInnerControl());\n\t\t\trm.close(\"div\");\n\t\t}\n\t},\n\n\t/**\n\t * Renders custom loader based on container type.\n\t */\n\trenderCustomPlaceholder: function (rm: RenderManager, control: BaseContainer) {\n\t\ttry {\n\t\t\tconst placeholder = control.getGenericPlaceholder();\n\t\t\tif (!placeholder) {\n\t\t\t\trm.openStart(\"div\", control.getId() + \"-placeholder\")\n\t\t\t\t\t.class(\"sapUiBaseContainerPlaceholder\")\n\t\t\t\t\t.openEnd()\n\t\t\t\t\t.close(\"div\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (Array.isArray(placeholder)) {\n\t\t\t\tplaceholder.forEach((ctrl: Control) => rm.renderControl(ctrl));\n\t\t\t} else {\n\t\t\t\trm.renderControl(placeholder);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to render generic placeholder:\", e);\n\t\t}\n\t}\n};\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,gDAAA,uBAAAC,GAAA,mBAQSC,EAAeD,EAAA,uBAAAE,EAET,CACdC,WAAY,EAUZC,OAAQ,SAAUC,EAAmBC,GACpCD,EAAGE,UAAU,MAAOD,GAASE,MAAM,uBAGnC,GAAIF,EAAQG,YAAY,iBAAmBR,EAAgBS,WAAY,CACtEL,EAAGG,MAAM,mBACV,MAAO,GAAIF,EAAQG,YAAY,iBAAmBR,EAAgBU,WAAY,CAC7EN,EAAGG,MAAM,mBACV,KAAO,CACNH,EAAGG,MAAM,iBACV,CAGAH,EAAGO,MAAM,QAASN,EAAQO,YAC1BR,EAAGO,MAAM,SAAUN,EAAQQ,aAC3BT,EAAGU,UAGH,MAAMC,EAAoBV,EAAQG,YAAY,kBAC9C,IAAKO,GAAqBV,EAAQG,YAAY,UAAW,CACxDQ,KAAKC,cAAcb,EAAIC,EACxB,KAAO,CACNW,KAAKE,wBAAwBd,EAAIC,EAClC,CAEAD,EAAGe,MAAM,MACV,EASAF,cAAe,SAAUb,EAAmBC,GAC3C,GAAIA,EAAQe,cAAcC,OAAS,EAAG,CAErCjB,EAAGE,UAAU,MAAOD,EAAQiB,QAAU,WACpCf,MAAM,4BACNO,UACFV,EAAGmB,cAAclB,EAAQmB,cACzBpB,EAAGe,MAAM,OAGTf,EAAGE,UAAU,MAAOD,EAAQiB,QAAU,YACpCf,MAAM,6BACNO,UACFV,EAAGmB,cAAclB,EAAQoB,oBACzBrB,EAAGe,MAAM,MACV,CACD,EAKAD,wBAAyB,SAAUd,EAAmBC,GACrD,IACC,MAAMqB,EAAcrB,EAAQsB,wBAC5B,IAAKD,EAAa,CACjBtB,EAAGE,UAAU,MAAOD,EAAQiB,QAAU,gBACpCf,MAAM,iCACNO,UACAK,MAAM,OACR,MACD,CACA,GAAIS,MAAMC,QAAQH,GAAc,CAC/BA,EAAYI,QAASC,GAAkB3B,EAAGmB,cAAcQ,GACzD,KAAO,CACN3B,EAAGmB,cAAcG,EAClB,CACD,CAAE,MAAOM,GAET,CACD,GACA,OAAA/B,CAAA","ignoreList":[],"sourceRoot":""}},{"offset":{"line":51,"column":0},"map":{"version":3,"names":["sap","ui","define","Log","deepEqual","sap_m_library","Page","UI5Element","Lib","HashChanger","__BaseLayoutRenderer","__BasePanel","___library","___utils_Device","_interopRequireDefault","obj","__esModule","default","PageBackgroundDesign","BaseLayoutRenderer","BasePanel","OrientationType","DeviceType","calculateDeviceType","BaseLayout","extend","renderer","metadata","library","properties","enableSettings","type","group","visibility","enableFullScreen","expanded","defaultValue","settingsDialogPersisted","showHeader","showFooter","busy","backgroundDesign","Transparent","persContainerId","defaultAggregation","aggregations","items","singularName","multiple","settingsDialog","keyUserSettingsDialog","contentAdditionDialog","fullScreenContainer","events","onCollapse","constructor","_constructor","id","settings","Page.prototype.constructor.call","this","init","_init","Page.prototype.init.call","_settingsPanels","_elementConfigs","Map","_i18nBundle","getResourceBundleFor","_slideDurationInSeconds","_fullScreenContainer","getId","setAggregation","onBeforeRendering","_onBeforeRendering","event","Page.prototype.onBeforeRendering.call","_toggleHeaderVisibility","getProperty","selectedKey","getAggregation","openSettingsDialog","setProperty","document","body","style","getCustomHeader","getHeaderContent","length","onAfterRendering","_onAfterRendering","_layoutLoaded","setTimeout","_hashChanger","_loadFullScreenFromHash","getHash","appIntent","split","window","addEventListener","currentHash","location","hash","substring","includes","getContent","_getContent","getItems","_getURLParams","queryString","indexOf","URLSearchParams","hashChanged","arguments","undefined","URLParams","expandedElementName","get","expandedElement","isTargetContainerVisible","targetContainer","getVisible","isPhone","Mobile","_currentExpandedElement","fullScreenName","_toggleFullScreenForElement","has","getElementById","classList","add","updatedHash","_removeURLParam","replaceHash","toggleFullScreen","sourceElements","values","next","value","_openSettingsDialog","context","open","openContentAdditionDialog","_openContentAdditionDialog","setSettingsDialog","_setSettingsDialog","settingsPanels","getPanels","forEach","settingsPanel","_addSettingsPanel","override","push","_getSettingsPanels","_extractElementConfig","element","sourceElement","isPanelElement","getParent","isPanelInSideBySideLayout","SideBySide","Set","index","indexOfItem","key","getKey","registerFullScreenElement","_registerFullScreenElement","elementConfig","set","deregisterFullScreenElement","_deregisterFullScreenElement","delete","updateFullScreenElement","_updateFullScreenElement","updatedConfig","newConfiguration","_addURLParam","toString","_toggleFullScreen","allowToggle","_checkToggleRequirements","panelIndex","indexOfAggregation","isContainerInSideBySideLayout","_detachResizeHandler","_placeClonedElement","toggle","_toggleFullScreenButtonText","_previousExpandedElement","isTargetContainerDifferent","_adjustPreviousExpandedElementIfRequired","_modifyContainer","setHash","_focusFullScreenButton","fireEvent","_domSnapshot","remove","insertItem","_toggleInnerPanelVisibility","_resetScrollPosition","_attachResizeHandler","warning","_getFullScreenContainer","removeAllContent","_sourceElementClone","addContent","currentFullScreenName","firstSourceElement","_scrollPosition","getAssociation","focus","sectionRef","_getSectionRef","scrollTop","indexOfVisiblePanel","_getInnerControl","panel","toggleStyleClass","control","isPanel","isA","parentContainer","updateText","fullScreenButton","_getFullScreenButton","getText","fullScreenMenuItem","_getFullScreenMenuItem","_updateContainerHeader","sectionIndex","getDomRef","childNodes","targetElement","cloneNode","isSideBySideLayout","sourceElementDomRef","targetDomRef","innerHTML","append","_getCurrentExpandedElementName","_getCurrentExpandedElement","isExpandInHash"],"sources":["BaseLayout.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport { Event } from \"jquery\";\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport Log from \"sap/base/Log\";\nimport deepEqual from \"sap/base/util/deepEqual\";\nimport Button from \"sap/m/Button\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport { PageBackgroundDesign } from \"sap/m/library\";\nimport Page from \"sap/m/Page\";\nimport Control from \"sap/ui/core/Control\";\nimport UI5Element, { MetadataOptions } from \"sap/ui/core/Element\";\nimport Lib from \"sap/ui/core/Lib\";\nimport HashChanger from \"sap/ui/core/routing/HashChanger\";\nimport BaseContainer from \"./BaseContainer\";\nimport { $BaseLayoutSettings } from \"./BaseLayout\";\nimport BaseLayoutRenderer from \"./BaseLayoutRenderer\";\nimport BasePanel from \"./BasePanel\";\nimport BaseSettingsDialog from \"./BaseSettingsDialog\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\nimport ContentAdditionDialog from \"./ContentAdditionDialog\";\nimport { OrientationType } from \"./library\";\nimport MenuItem from \"./MenuItem\";\nimport { DeviceType, calculateDeviceType } from \"./utils/Device\";\n\ninterface FullScreenElementConfig {\n\tkey?: string;\n\tindex: number;\n\tfullScreenName?: string;\n\tsourceElements: Set<BaseContainer | BasePanel>;\n\ttargetContainer: BaseContainer;\n}\n\n/**\n *\n * Abstract base class for My Home layout.\n *\n * @extends Page\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @abstract\n * @public\n *\n * @alias sap.cux.home.BaseLayout\n */\nexport default abstract class BaseLayout extends Page {\n\tprotected _i18nBundle!: ResourceBundle;\n\tprivate _settingsPanels!: BaseSettingsPanel[];\n\tprivate _domSnapshot!: Node;\n\tprivate _sourceElementClone!: Node | Element;\n\tprivate _scrollPosition!: number;\n\tprivate _fullScreenContainer!: Page;\n\tprivate _slideDurationInSeconds!: number;\n\tprivate _layoutLoaded!: boolean;\n\tprivate _hashChanger!: HashChanger;\n\tprivate _currentExpandedElement!: FullScreenElementConfig | undefined;\n\tprivate _previousExpandedElement!: FullScreenElementConfig | undefined;\n\tprivate _elementConfigs!: Map<string, FullScreenElementConfig>;\n\n\tconstructor(id?: string | $BaseLayoutSettings);\n\tconstructor(id?: string, settings?: $BaseLayoutSettings);\n\t/**\n\t * Constructor for a new Base Layout.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $BaseLayoutSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * Indicates whether home settings are enabled for this control.\n\t\t\t */\n\t\t\tenableSettings: { type: \"boolean\", group: \"Misc\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Indicates whether full screen is enabled for this control.\n\t\t\t */\n\t\t\tenableFullScreen: { type: \"boolean\", group: \"Misc\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Indicates whether the layout is expanded.\n\t\t\t */\n\t\t\texpanded: { type: \"boolean\", group: \"Misc\", defaultValue: false, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Indicates whether the settings dialog state is persisted for this control.\n\t\t\t */\n\t\t\tsettingsDialogPersisted: { type: \"boolean\", group: \"Misc\", defaultValue: false, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Whether the layout shall have a header.\n\t\t\t */\n\t\t\tshowHeader: { type: \"boolean\", group: \"Appearance\", defaultValue: true, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Whether this layout shall have a footer.\n\t\t\t */\n\t\t\tshowFooter: { type: \"boolean\", group: \"Appearance\", defaultValue: false, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Whether the layout is currently in busy state.\n\t\t\t */\n\t\t\tbusy: { type: \"boolean\", defaultValue: false, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * This property is used to set the background color of a page.\n\t\t\t */\n\t\t\tbackgroundDesign: {\n\t\t\t\ttype: \"sap.m.PageBackgroundDesign\",\n\t\t\t\tgroup: \"Appearance\",\n\t\t\t\tdefaultValue: PageBackgroundDesign.Transparent,\n\t\t\t\tvisibility: \"hidden\"\n\t\t\t},\n\t\t\t/**\n\t\t\t * Container ID for Ushell Personalisation.\n\t\t\t * This property holds the ID of the personalization container.\n\t\t\t * It is used to store and retrieve personalized settings for the control.\n\t\t\t *\n\t\t\t * @type {string}\n\t\t\t * @public\n\t\t\t */\n\t\t\tpersContainerId: { type: \"string\", defaultValue: \"\", visibility: \"public\" }\n\t\t},\n\t\tdefaultAggregation: \"items\",\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * The items aggregation which should be of type BaseContainer\n\t\t\t */\n\t\t\titems: { type: \"sap.cux.home.BaseContainer\", singularName: \"item\", multiple: true },\n\t\t\t/**\n\t\t\t * The settings dialog aggregation which controls settings for my home controls.\n\t\t\t * It should be of type BaseSettingsDialog.\n\t\t\t * If Not provided, a default settings dialog will be created from sap.cux.home.SettingsDialog.\n\t\t\t * In case of only custom settings panels, the settings dialog should be created and set manually from sap.cux.home.SettingsDialog.\n\t\t\t */\n\t\t\tsettingsDialog: {\n\t\t\t\ttype: \"sap.cux.home.BaseSettingsDialog\",\n\t\t\t\tsingularName: \"settingsDialog\",\n\t\t\t\tmultiple: false\n\t\t\t},\n\t\t\t/**\n\t\t\t * The Key User Settings dialog aggregation which controls key user settings for my home.\n\t\t\t * It should be of type BaseSettingsDialog.\n\t\t\t * If Not provided, a default settings dialog will be created from sap.cux.home.KeyUserSettingsDialog.\n\t\t\t * In case of only custom settings panels, the settings dialog should be created and set manually from sap.cux.home.KeyUserSettingsDialog.\n\t\t\t */\n\t\t\tkeyUserSettingsDialog: {\n\t\t\t\ttype: \"sap.cux.home.BaseSettingsDialog\",\n\t\t\t\tsingularName: \"keyUserSettingsDialog\",\n\t\t\t\tmultiple: false\n\t\t\t},\n\t\t\t/**\n\t\t\t * The content addition dialog aggregation which controls content addition for MyHome.\n\t\t\t */\n\t\t\tcontentAdditionDialog: {\n\t\t\t\ttype: \"sap.cux.home.BaseSettingsDialog\",\n\t\t\t\tsingularName: \"contentAdditionDialog\",\n\t\t\t\tmultiple: false,\n\t\t\t\tvisibility: \"hidden\"\n\t\t\t},\n\t\t\t/**\n\t\t\t * The full screen container to display registered full-screen elements\n\t\t\t */\n\t\t\tfullScreenContainer: { type: \"sap.m.Page\", singularName: \"fullScreenContainer\", multiple: false, visibility: \"hidden\" }\n\t\t},\n\t\tevents: {\n\t\t\t/**\n\t\t\t * Event is fired after the layout is collapsed.\n\t\t\t */\n\t\t\tonCollapse: {}\n\t\t}\n\t};\n\n\tstatic renderer: typeof BaseLayoutRenderer = BaseLayoutRenderer;\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\t\tthis._settingsPanels = [];\n\t\tthis._elementConfigs = new Map();\n\t\tthis._i18nBundle = Lib.getResourceBundleFor(\"sap.cux.home.i18n\") as ResourceBundle;\n\n\t\t//setup full-screen container\n\t\tthis._slideDurationInSeconds = 1;\n\t\tthis._fullScreenContainer = new Page(`${this.getId()}-fullScreen-container`, {\n\t\t\tbackgroundDesign: \"Transparent\",\n\t\t\tshowHeader: false\n\t\t});\n\t\tthis.setAggregation(\"fullScreenContainer\", this._fullScreenContainer);\n\t}\n\n\t/**\n\t * onBeforeRendering lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic onBeforeRendering(event: Event): void {\n\t\tsuper.onBeforeRendering(event);\n\n\t\tthis._toggleHeaderVisibility();\n\n\t\t//open settings dialog if persisted\n\t\tif (this.getProperty(\"settingsDialogPersisted\")) {\n\t\t\tconst selectedKey = (this.getAggregation(\"settingsDialog\") as BaseSettingsDialog)?.getProperty(\"selectedKey\") as string;\n\t\t\tthis.openSettingsDialog(selectedKey);\n\n\t\t\t//reset property\n\t\t\tthis.setProperty(\"settingsDialogPersisted\", false, true);\n\t\t}\n\n\t\t//update full-screen slide animation duration, if enabled\n\t\tif (this.getProperty(\"enableFullScreen\")) {\n\t\t\tdocument.body.style.setProperty(\"--sapUiSlideDuration\", `${this._slideDurationInSeconds}s`);\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the visibility of the header based on the presence of a custom header or header content.\n\t * @private\n\t */\n\tprivate _toggleHeaderVisibility(): void {\n\t\tconst showHeader = this.getCustomHeader() != null || this.getHeaderContent().length > 0;\n\t\tthis.setProperty(\"showHeader\", showHeader, true);\n\t}\n\n\t/**\n\t * onAfterRendering lifecycle method.\n\t *\n\t * @private\n\t */\n\tpublic onAfterRendering(): void {\n\t\t//expand element on load if expanded through URL param\n\t\tif (this.getProperty(\"enableFullScreen\")) {\n\t\t\tif (!this._layoutLoaded) {\n\t\t\t\tthis._layoutLoaded = true;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis._hashChanger = new HashChanger();\n\t\t\t\t\tthis._loadFullScreenFromHash(this._hashChanger.getHash() || \"\");\n\t\t\t\t\tconst [appIntent] = this._hashChanger.getHash().split(\"?\");\n\n\t\t\t\t\t//attach hash change event for toggling full screen\n\t\t\t\t\twindow.addEventListener?.(\"hashchange\", () => {\n\t\t\t\t\t\tconst currentHash = window.location.hash.substring(1);\n\t\t\t\t\t\t//toggle full screen only if hash is changed from within the app\n\t\t\t\t\t\tif (currentHash.includes?.(appIntent)) {\n\t\t\t\t\t\t\tthis._loadFullScreenFromHash(currentHash, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the content of the BaseLayout.\n\t * Overridden to return the items aggregation during inner page rendering.\n\t *\n\t * @private\n\t * @override\n\t * @returns An array of Control objects representing the content.\n\t */\n\tpublic getContent(): Control[] {\n\t\treturn this.getItems();\n\t}\n\n\t/**\n\t * Extracts URL search parameters from a given hash string.\n\t *\n\t * @private\n\t * @param {string} hash - The hash string containing the URL parameters.\n\t * @returns {URLSearchParams} An instance of URLSearchParams containing the parsed parameters.\n\t */\n\tprivate _getURLParams(hash: string): URLSearchParams {\n\t\tconst queryString = hash?.includes(\"?\") ? hash.substring(hash.indexOf(\"?\") + 1) : \"\";\n\t\treturn new URLSearchParams(queryString);\n\t}\n\n\t/**\n\t * Loads full screen mode from URL hash if enabled.\n\t *\n\t * @private\n\t * @param {string} hash - The URL hash string.\n\t * @param {boolean} [hashChanged=false] - Indicates if the hash has changed.\n\t */\n\tprivate _loadFullScreenFromHash(hash: string, hashChanged: boolean = false): void {\n\t\tconst enableFullScreen = this.getProperty(\"enableFullScreen\") as boolean;\n\t\tconst URLParams = this._getURLParams(hash);\n\t\tconst expandedElementName = URLParams.get(\"expanded\") || \"\";\n\t\tconst expandedElement = this._elementConfigs.get(expandedElementName);\n\t\tconst isTargetContainerVisible = expandedElement?.targetContainer.getVisible() || false;\n\t\tconst isPhone = calculateDeviceType() === DeviceType.Mobile;\n\n\t\tif (enableFullScreen && expandedElement && !isPhone && isTargetContainerVisible) {\n\t\t\tif (this._currentExpandedElement && this._currentExpandedElement.fullScreenName !== expandedElementName) {\n\t\t\t\t//expand element and prevent slide if hash element is found and another element is currently expanded\n\t\t\t\tthis._toggleFullScreenForElement(expandedElement, hashChanged);\n\t\t\t} else if (!this._currentExpandedElement) {\n\t\t\t\t//expand element if hash element is found and no element is currently expanded\n\t\t\t\tthis._toggleFullScreenForElement(expandedElement);\n\t\t\t} else if (URLParams.has(\"expanded\")) {\n\t\t\t\t//retain the slide transition in case of hash switch\n\t\t\t\tdocument.getElementById(`${this.getId()}-layout-container`)?.classList.add(\"slide\");\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._currentExpandedElement) {\n\t\t\t\t//collapse expanded element if hash element not found\n\t\t\t\tthis._toggleFullScreenForElement(this._currentExpandedElement);\n\t\t\t} else {\n\t\t\t\t//reset hash if no expanded element found\n\t\t\t\tif (URLParams.has(\"expanded\")) {\n\t\t\t\t\tconst updatedHash = this._removeURLParam(hash, \"expanded\");\n\t\t\t\t\tthis._hashChanger?.replaceHash(updatedHash, \"Backwards\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Toggles full screen mode for the specified element.\n\t *\n\t * @private\n\t * @param {FullScreenElementConfig} expandedElement - The configuration of the element to be expanded.\n\t * @param {boolean} [hashChanged=false] - Indicates if the hash has changed, affecting the toggle behavior.\n\t */\n\tprivate _toggleFullScreenForElement(expandedElement: FullScreenElementConfig, hashChanged: boolean = false): void {\n\t\tsetTimeout(() => this.toggleFullScreen(expandedElement.sourceElements.values().next().value!, hashChanged));\n\t}\n\n\t/**\n\t * Opens the settings dialog and navigate to the panel\n\t * specified by the selected key.\n\t *\n\t * @private\n\t * @param {string} selectedKey The key of the panel to navigate to\n\t */\n\tpublic openSettingsDialog(selectedKey: string = \"\", context: object = {}): void {\n\t\tconst settingsDialog = this.getAggregation(\"settingsDialog\") as BaseSettingsDialog;\n\t\tsettingsDialog?.setProperty(\"selectedKey\", selectedKey);\n\t\tsettingsDialog?.setProperty(\"context\", context);\n\t\tsettingsDialog?.open();\n\t}\n\n\t/**\n\t * Opens the content addition dialog and opens the selected panel.\n\t *\n\t * @param {string} [selectedKey=\"\"] - The key to be set for the content addition dialog. Defaults to an empty string.\n\t */\n\tpublic openContentAdditionDialog(selectedKey: string = \"\"): void {\n\t\tconst contentAdditionDialog = this.getAggregation(\"contentAdditionDialog\") as ContentAdditionDialog;\n\t\tcontentAdditionDialog?.setProperty(\"selectedKey\", selectedKey);\n\t\tcontentAdditionDialog?.open();\n\t}\n\n\t/**\n\t * Sets SettingsDialog aggregation.\n\t * Overridden to update cached settings panels.\n\t *\n\t * @public\n\t * @override\n\t * @returns {BaseSettingsDialog} the dialog for chaining\n\t */\n\tpublic setSettingsDialog(settingsDialog: BaseSettingsDialog): this {\n\t\tconst enableSettings = this.getProperty(\"enableSettings\") as boolean;\n\t\tif (enableSettings) {\n\t\t\tconst settingsPanels = settingsDialog?.getPanels();\n\t\t\tsettingsPanels?.forEach((settingsPanel: BaseSettingsPanel) => {\n\t\t\t\tthis._addSettingsPanel(settingsPanel);\n\t\t\t});\n\t\t}\n\t\tthis.setAggregation(\"settingsDialog\", settingsDialog);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a settings panel to the list of settings panels associated\n\t * with the layout's settings dialog.\n\t *\n\t * @param {BaseSettingsPanel} settingsPanel - The settings panel to be added.\n\t * @private\n\t */\n\tpublic _addSettingsPanel(settingsPanel: BaseSettingsPanel | BaseSettingsPanel[] | undefined, override?: boolean): void {\n\t\tif (settingsPanel) {\n\t\t\tif (override) {\n\t\t\t\tthis._settingsPanels = settingsPanel as BaseSettingsPanel[];\n\t\t\t} else {\n\t\t\t\tthis._settingsPanels.push(settingsPanel as BaseSettingsPanel);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Adds a settings panel to the list of settings panels associated\n\t * with the layout's settings dialog.\n\t *\n\t * @param {BaseSettingsPanel} settingsPanel - The settings panel to be added.\n\t * @private\n\t */\n\tpublic _getSettingsPanels(): BaseSettingsPanel[] {\n\t\treturn this._settingsPanels;\n\t}\n\n\t/**\n\t * Extracts the configuration necessary for handling full-screen functionality of an element.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} element - The element for which to extract the full-screen configuration.\n\t * @returns {FullScreenElementConfig} Full screen element configuration.\n\t */\n\tprivate _extractElementConfig(element: BaseContainer | BasePanel): FullScreenElementConfig {\n\t\tconst sourceElement = element;\n\t\tconst isPanelElement = sourceElement instanceof BasePanel;\n\t\tconst targetContainer = isPanelElement ? (sourceElement.getParent() as BaseContainer) : sourceElement;\n\t\tconst isPanelInSideBySideLayout = isPanelElement && targetContainer.getProperty(\"orientation\") === OrientationType.SideBySide;\n\t\tconst fullScreenName = (isPanelInSideBySideLayout ? targetContainer : sourceElement).getProperty(\"fullScreenName\") as string;\n\t\tconst sourceElements = new Set<BaseContainer | BasePanel>().add(sourceElement);\n\n\t\treturn {\n\t\t\tfullScreenName,\n\t\t\tsourceElements,\n\t\t\ttargetContainer,\n\t\t\tindex: this.indexOfItem(targetContainer),\n\t\t\tkey: isPanelElement ? sourceElement.getKey() : \"\"\n\t\t};\n\t}\n\n\t/**\n\t * Configures an element for full-screen functionality by extracting and storing its configuration.\n\t * Only stores the configuration if a full-screen name is provided and layout is not currently expanded.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} element - The element to configure for full-screen.\n\t */\n\tpublic registerFullScreenElement(element: BaseContainer | BasePanel): void {\n\t\tconst elementConfig = this._extractElementConfig(element);\n\t\tconst { fullScreenName } = elementConfig;\n\n\t\tif (fullScreenName && !this.getProperty(\"expanded\")) {\n\t\t\tif (this._elementConfigs.get(fullScreenName)) {\n\t\t\t\tconst sourceElements = (\n\t\t\t\t\tthis._elementConfigs.get(fullScreenName)?.sourceElements || new Set<BaseContainer | BasePanel>()\n\t\t\t\t).add(element);\n\t\t\t\tthis._elementConfigs.set(fullScreenName, { ...elementConfig, sourceElements } as FullScreenElementConfig);\n\t\t\t} else {\n\t\t\t\tthis._elementConfigs.set(fullScreenName, elementConfig);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes an element's full-screen configuration based on its full-screen name.\n\t * Only removes the configuration if a full-screen name is provided and layout is not currently expanded.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} element - The element to remove from full-screen configuration.\n\t */\n\tpublic deregisterFullScreenElement(element: BaseContainer | BasePanel): void {\n\t\tconst { fullScreenName } = this._extractElementConfig(element);\n\t\tif (fullScreenName && !this.getProperty(\"expanded\")) {\n\t\t\tthis._elementConfigs.delete(fullScreenName);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the full screen configuration for the specified element.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} element - The element for which the full screen configuration is to be updated.\n\t * @param {Partial<FullScreenElementConfig>} [updatedConfig] - An optional partial configuration to update the element's full screen configuration.\n\t *\n\t * @returns {void}\n\t */\n\tpublic updateFullScreenElement(element: BaseContainer | BasePanel, updatedConfig?: Partial<FullScreenElementConfig>): void {\n\t\tconst elementConfig = this._extractElementConfig(element);\n\t\tconst { fullScreenName } = elementConfig;\n\n\t\tif (fullScreenName && !this.getProperty(\"expanded\")) {\n\t\t\tconst newConfiguration = { ...this._elementConfigs.get(fullScreenName), ...updatedConfig } as FullScreenElementConfig;\n\t\t\tthis._elementConfigs.set(fullScreenName, newConfiguration);\n\t\t}\n\t}\n\n\t/**\n\t * Adds or updates a URL parameter in the given hash string.\n\t *\n\t * @private\n\t * @param {string} hash - The original hash string.\n\t * @param {string} key - The parameter key to add or update.\n\t * @param {string} value - The value for the parameter.\n\t * @returns {string} The updated hash string with the new or updated parameter.\n\t */\n\tprivate _addURLParam(hash: string, key: string, value: string): string {\n\t\tconst URLParams = this._getURLParams(hash);\n\t\tURLParams.set(key, value);\n\t\treturn `${hash.split(\"?\")[0]}?${URLParams.toString()}`;\n\t}\n\n\t/**\n\t * Removes a specified parameter from the URL hash string.\n\t *\n\t * @private\n\t * @param {string} hash - The original hash string.\n\t * @param {string} key - The parameter key to remove.\n\t * @returns {string} The updated hash string without the specified parameter.\n\t */\n\tprivate _removeURLParam(hash: string, key: string): string {\n\t\tconst URLParams = this._getURLParams(hash);\n\t\tURLParams.delete(key);\n\t\treturn URLParams.toString() ? `${hash.split(\"?\")[0]}?${URLParams.toString()}` : hash.split(\"?\")[0];\n\t}\n\n\t/**\n\t * Toggles the full-screen state of a given element, handling layout adjustments, visibility, and scroll position.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} element - The element to toggle full-screen state for.\n\t * @param {boolean} [hashChanged=false] - Indicates if the hash has changed.\n\t */\n\tpublic toggleFullScreen(element: BaseContainer | BasePanel, hashChanged: boolean = false): void {\n\t\tconst isPanelInSideBySideLayout =\n\t\t\telement instanceof BasePanel && element.getParent()?.getProperty(\"orientation\") === OrientationType.SideBySide;\n\t\tconst fullScreenName = (isPanelInSideBySideLayout ? element.getParent() : element)?.getProperty(\"fullScreenName\") as string;\n\t\tconst elementConfig = this._elementConfigs.get(fullScreenName);\n\t\tconst allowToggle = hashChanged || this._checkToggleRequirements(elementConfig as FullScreenElementConfig);\n\n\t\tif (elementConfig && allowToggle) {\n\t\t\tconst { targetContainer } = elementConfig;\n\t\t\tconst currentHash = this._hashChanger?.getHash() || \"\";\n\t\t\tconst panelIndex = targetContainer.indexOfAggregation(\"content\", element);\n\t\t\tconst isContainerInSideBySideLayout = targetContainer.getProperty(\"orientation\") === OrientationType.SideBySide;\n\t\t\tlet expanded = this.getProperty(\"expanded\") as boolean;\n\t\t\t// detach resize handler\n\t\t\ttargetContainer._detachResizeHandler();\n\t\t\tif (!hashChanged) {\n\t\t\t\t//update expanded state\n\t\t\t\tthis.setProperty(\"expanded\", !this.getProperty(\"expanded\"), true);\n\t\t\t\texpanded = this.getProperty(\"expanded\") as boolean;\n\n\t\t\t\t//place cloned element in full screen container\n\t\t\t\tthis._placeClonedElement(targetContainer, expanded, panelIndex);\n\n\t\t\t\t//perform slide transition\n\t\t\t\tdocument.getElementById(`${this.getId()}-layout-container`)?.classList.toggle(\"slide\", expanded);\n\t\t\t}\n\n\t\t\t//toggle full-screen button text for the element\n\t\t\tthis._toggleFullScreenButtonText(element, expanded);\n\n\t\t\t// store the current and previous expanded element\n\t\t\tif (expanded) {\n\t\t\t\tthis._previousExpandedElement = this._currentExpandedElement;\n\t\t\t\tthis._currentExpandedElement = elementConfig;\n\t\t\t} else {\n\t\t\t\tdelete this._currentExpandedElement;\n\t\t\t}\n\n\t\t\t//add or remove actual element at the end of slide transition\n\t\t\tsetTimeout(\n\t\t\t\t() => {\n\t\t\t\t\tif (expanded) {\n\t\t\t\t\t\t// in case of horizontal or vertical layout, set expanded element's key as selected key\n\t\t\t\t\t\tif (!isContainerInSideBySideLayout) {\n\t\t\t\t\t\t\ttargetContainer.setProperty(\"selectedKey\", element.getProperty(\"key\"));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//adjust currently expanded element if present\n\t\t\t\t\t\tconst isTargetContainerDifferent = !deepEqual(this._previousExpandedElement?.targetContainer, targetContainer);\n\t\t\t\t\t\tthis._adjustPreviousExpandedElementIfRequired(isTargetContainerDifferent);\n\n\t\t\t\t\t\tthis._modifyContainer(targetContainer, panelIndex);\n\n\t\t\t\t\t\t//adjust hash\n\t\t\t\t\t\tthis._currentExpandedElement = elementConfig;\n\t\t\t\t\t\tconst updatedHash = this._addURLParam(currentHash, \"expanded\", fullScreenName);\n\t\t\t\t\t\tthis._hashChanger?.setHash(updatedHash);\n\n\t\t\t\t\t\tthis._focusFullScreenButton(element);\n\t\t\t\t\t\t//fire onExpand event\n\t\t\t\t\t\telement.fireEvent(\"onExpand\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//delete stored dom snapshot\n\t\t\t\t\t\t(this._domSnapshot as Element)?.remove();\n\n\t\t\t\t\t\tthis.insertItem(targetContainer, elementConfig.index);\n\n\t\t\t\t\t\t//show all other panels in the container, if not in side-by-side layout\n\t\t\t\t\t\tif (!isContainerInSideBySideLayout) {\n\t\t\t\t\t\t\tthis._toggleInnerPanelVisibility(targetContainer, true);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//adjust hash\n\t\t\t\t\t\tdelete this._currentExpandedElement;\n\t\t\t\t\t\tconst updatedHash = this._removeURLParam(currentHash, \"expanded\");\n\t\t\t\t\t\tthis._hashChanger?.setHash(updatedHash);\n\n\t\t\t\t\t\t//reset scroll position on collapse\n\t\t\t\t\t\tthis._resetScrollPosition(element);\n\n\t\t\t\t\t\t//fire onCollapse event\n\t\t\t\t\t\tthis.fireEvent(\"onCollapse\");\n\t\t\t\t\t}\n\t\t\t\t\t// attach resize handler\n\t\t\t\t\ttargetContainer._attachResizeHandler();\n\t\t\t\t},\n\t\t\t\thashChanged ? 0 : this._slideDurationInSeconds * 1000\n\t\t\t);\n\t\t} else {\n\t\t\tLog.warning(`Element with ID: ${element?.getId()} not registered for full screen`);\n\t\t}\n\t}\n\n\t/**\n\t * Place actual element in the full screen container and hide all other panels in the container, if not in side-by-side layout\n\t *\n\t * @private\n\t * @param {BaseContainer} targetContainer - Container that is to be displayed in full-screen mode\n\t * @param {number} panelIndex - Index of the panel to remain visible if not in side-by-side layout.\n\t */\n\tprivate _modifyContainer(targetContainer: BaseContainer, panelIndex: number) {\n\t\t//adjust currently expanded element if present\n\t\tconst isContainerInSideBySideLayout = targetContainer.getProperty(\"orientation\") === OrientationType.SideBySide;\n\t\tconst isTargetContainerDifferent = !deepEqual(this._previousExpandedElement?.targetContainer, targetContainer);\n\t\tif (!this._previousExpandedElement || isTargetContainerDifferent) {\n\t\t\tthis._getFullScreenContainer().removeAllContent();\n\t\t\t(this._sourceElementClone as Element)?.remove();\n\t\t\tthis._getFullScreenContainer().addContent(targetContainer as Control);\n\t\t}\n\n\t\t//hide all other panels in the container, if not in side-by-side layout\n\t\tif (!isContainerInSideBySideLayout) {\n\t\t\tthis._toggleInnerPanelVisibility(targetContainer, false, panelIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the toggle requirements are met for the given element configuration.\n\t *\n\t * @private\n\t * @param {FullScreenElementConfig} elementConfig - The configuration of the element to check.\n\t * @returns {boolean} `true` if toggling is allowed, otherwise `false`.\n\t */\n\tprivate _checkToggleRequirements(elementConfig: FullScreenElementConfig): boolean {\n\t\tconst expanded = this.getProperty(\"expanded\") as boolean;\n\t\tlet allowToggle = true;\n\n\t\tif (expanded) {\n\t\t\t// if expanded, allow toggling only if the provided element and expanded element are the same\n\t\t\tconst currentFullScreenName = elementConfig?.fullScreenName;\n\t\t\tallowToggle = this._currentExpandedElement?.fullScreenName === currentFullScreenName;\n\t\t}\n\n\t\treturn allowToggle;\n\t}\n\n\t/**\n\t * Adjusts the current expanded element if required based on the new target container.\n\t *\n\t * @private\n\t * @param {boolean} isTargetContainerDifferent - Indicates whether the target container is different from the current expanded element's container.\n\t */\n\tprivate _adjustPreviousExpandedElementIfRequired(isTargetContainerDifferent: boolean) {\n\t\tif (this._previousExpandedElement) {\n\t\t\tconst firstSourceElement = this._previousExpandedElement.sourceElements.values().next().value!;\n\n\t\t\t//update full-screen button text for the current expanded element to collapsed state\n\t\t\tthis._toggleFullScreenButtonText(firstSourceElement, false);\n\n\t\t\tif (isTargetContainerDifferent) {\n\t\t\t\t//if expanded through hash change, place the current expanded element back in the layout\n\t\t\t\tthis.insertItem(this._previousExpandedElement.targetContainer, this._previousExpandedElement.index);\n\n\t\t\t\t//reset scroll position on expansion throuh hash change\n\t\t\t\tthis._scrollPosition = 0;\n\n\t\t\t\t//show all other panels in the container, if not in side-by-side layout\n\t\t\t\tif (this._previousExpandedElement.targetContainer.getProperty(\"orientation\") !== OrientationType.SideBySide) {\n\t\t\t\t\tthis._toggleInnerPanelVisibility(this._previousExpandedElement.targetContainer, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Resets the scroll position to that of the collapsed element in the original container.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} element - The element for which to reset the scroll position.\n\t */\n\tprivate _resetScrollPosition(element: BaseContainer | BasePanel) {\n\t\t//reset scroll position\n\t\tsetTimeout(() => {\n\t\t\tUI5Element.getElementById(`${element.getAssociation(\"fullScreenButton\", null) as string}-btn`)?.focus();\n\t\t\tconst sectionRef = this._getSectionRef(this);\n\t\t\tif (sectionRef !== undefined) {\n\t\t\t\tsectionRef.scrollTop = this._scrollPosition;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Toggles visibility of inner panels, except one specified by index.\n\t * Applicable only for panels not in SideSide layout.\n\t *\n\t * @private\n\t * @param {BaseContainer} element - Container with inner panels.\n\t * @param {boolean} visibility - Desired visibility state for panels.\n\t * @param {number} [indexOfVisiblePanel] - Index of panel to exclude from toggle.\n\t */\n\tprivate _toggleInnerPanelVisibility(element: BaseContainer, visibility: boolean, indexOfVisiblePanel?: number): void {\n\t\t(element._getInnerControl() as FlexBox).getItems().forEach((panel, index) => {\n\t\t\tpanel.toggleStyleClass(\"sapCuxHidden\", index === indexOfVisiblePanel ? visibility : !visibility);\n\t\t});\n\t}\n\n\t/**\n\t * Updates the full-screen button text for a control (or all controls in a side-by-side layout) based on expanded state.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} control - The control to update or the parent of controls to update.\n\t * @param {boolean} expanded - Indicates if the text should reflect an expanded or collapsed state.\n\t */\n\tprivate _toggleFullScreenButtonText(control: BaseContainer | BasePanel, expanded: boolean): void {\n\t\tconst isPanel = control.isA(\"sap.cux.home.BasePanel\");\n\t\tconst parentContainer = (isPanel ? control.getParent() : control) as BaseContainer;\n\t\tconst isPanelInSideBySideLayout = isPanel && parentContainer.getProperty(\"orientation\") === OrientationType.SideBySide;\n\n\t\t//update full-screen button text\n\t\tconst updateText = (control: BaseContainer | BasePanel) => {\n\t\t\tconst fullScreenButton = this._getFullScreenButton(control);\n\t\t\tfullScreenButton.setProperty(\"text\", this._i18nBundle.getText(expanded ? \"collapse\" : \"expand\"), true);\n\t\t\tconst fullScreenMenuItem = this._getFullScreenMenuItem(control);\n\t\t\tfullScreenMenuItem.setProperty(\"title\", this._i18nBundle.getText(expanded ? \"collapse\" : \"expand\"), true);\n\t\t};\n\n\t\tif (isPanelInSideBySideLayout) {\n\t\t\tparentContainer.getContent()?.forEach(updateText);\n\t\t} else {\n\t\t\tupdateText(control);\n\t\t}\n\n\t\t//update container header elements\n\t\tparentContainer._updateContainerHeader(isPanelInSideBySideLayout ? parentContainer : control);\n\t}\n\n\t/**\n\t * Sets focus on the full-screen button associated with an element.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} element - The element whose full-screen button should be focused.\n\t */\n\tprivate _focusFullScreenButton(element: BaseContainer | BasePanel): void {\n\t\tsetTimeout(() => {\n\t\t\tUI5Element.getElementById(`${element.getAssociation(\"fullScreenButton\", null) as string}-btn`)?.focus();\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves the full-screen button associated with a control.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} control - The control to find the full-screen button for.\n\t * @returns {Button} The full-screen button associated with the control.\n\t */\n\tprivate _getFullScreenButton(control: BaseContainer | BasePanel): Button {\n\t\treturn UI5Element.getElementById(control.getAssociation(\"fullScreenButton\", null) as string) as Button;\n\t}\n\n\t/**\n\t * Retrieves the Full screen menu item associated with a control.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} control - The control to find the full-screen button for.\n\t * @returns {MenuItem} The \"Show More\" menu item associated with the control.\n\t */\n\tprivate _getFullScreenMenuItem(control: BaseContainer | BasePanel): MenuItem {\n\t\treturn UI5Element.getElementById(control.getAssociation(\"fullScreenMenuItem\", null) as string) as MenuItem;\n\t}\n\n\t/**\n\t * Retrieves the full-screen container from the current aggregation.\n\t *\n\t * @private\n\t * @returns {Page} The Page instance used as the full-screen container.\n\t */\n\tpublic _getFullScreenContainer(): Page {\n\t\treturn this.getAggregation(\"fullScreenContainer\") as Page;\n\t}\n\n\t/**\n\t * Gets the first child node of a control's DOM reference.\n\t *\n\t * @private\n\t * @param {Control} element - The control to get the child node for.\n\t * @returns {Node | Element} The first child node of the control's DOM reference.\n\t */\n\tprivate _getSectionRef<T extends Node | Element = Element>(element: Control): T | undefined {\n\t\tconst sectionIndex = this.getProperty(\"showHeader\") && element !== this._getFullScreenContainer() ? 1 : 0;\n\t\treturn element.getDomRef()?.childNodes[sectionIndex] as T;\n\t}\n\n\t/**\n\t * Clones and places an element into a target container for full-screen transitions.\n\t *\n\t * @private\n\t * @param {BaseContainer} targetElement - Element to clone or containing the element to clone.\n\t * @param {boolean} expanded - True to expand (clone and place), false to collapse (restore from snapshot).\n\t * @param {number} panelIndex - Index of the panel to clone if not in side-by-side layout.\n\t */\n\tprivate _placeClonedElement(targetElement: BaseContainer, expanded: boolean, panelIndex: number) {\n\t\t//store scroll position and DOM snapshot\n\t\tthis._scrollPosition = (expanded ? this._getSectionRef(this)?.scrollTop : this._scrollPosition) as number;\n\n\t\t//create a snapshot of the homepage in collapsed mode for use in transition back from full screen.\n\t\t//the dom ref had to be cloned twice following rendering issues in the Insights Tiles section.\n\t\tthis._domSnapshot = (expanded ? this.getDomRef()?.cloneNode(true).cloneNode(true) : this._domSnapshot) as Node;\n\n\t\tconst isSideBySideLayout = targetElement.getProperty(\"orientation\") === OrientationType.SideBySide;\n\t\tconst sourceElement = isSideBySideLayout\n\t\t\t? targetElement\n\t\t\t: (targetElement._getInnerControl() as FlexBox)?.getItems()[panelIndex] || targetElement;\n\t\tconst sourceElementDomRef = sourceElement.getDomRef() || targetElement.getDomRef();\n\t\tthis._sourceElementClone = expanded ? (sourceElementDomRef?.cloneNode(true) as Node) : this._sourceElementClone;\n\t\tconst targetDomRef = expanded ? this._getSectionRef(this._getFullScreenContainer()) : this.getDomRef();\n\t\tif (targetDomRef) {\n\t\t\tsetTimeout(() => {\n\t\t\t\ttargetDomRef.innerHTML = \"\";\n\t\t\t\ttargetDomRef.append(expanded ? this._sourceElementClone : this._domSnapshot);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the name of the currently expanded element, if any.\n\t *\n\t * @private\n\t * @returns {string | undefined} - The full screen name of the currently expanded element, if any.\n\t */\n\tpublic _getCurrentExpandedElementName(): string | undefined {\n\t\treturn this._getCurrentExpandedElement()?.fullScreenName;\n\t}\n\n\t/**\n\t * Retrieves the currently expanded element config, if any\n\t *\n\t * @private\n\t * @returns {FullScreenElementConfig | undefined} - The full screen name of the currently expanded element, if any.\n\t */\n\tpublic _getCurrentExpandedElement(): FullScreenElementConfig | undefined {\n\t\tconst isExpandInHash = this._getURLParams(this._hashChanger?.getHash() || \"\").has(\"expanded\");\n\t\tif (isExpandInHash) {\n\t\t\treturn this._currentExpandedElement;\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":56,"column":0},"map":{"version":3,"names":["sap","ui","define","PageRenderer","__exports","apiVersion","render","rm","control","containerId","getId","isContainerRenderedOnce","document","getElementById","openStart","class","openEnd","renderControl","getAggregation","close"],"sources":["BaseLayoutRenderer.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Page from \"sap/m/Page\";\nimport PageRenderer from \"sap/m/PageRenderer\";\nimport RenderManager from \"sap/ui/core/RenderManager\";\nimport BaseLayout from \"./BaseLayout\";\n\nexport default {\n\tapiVersion: 2,\n\n\t/**\n\t * Renders the control.\n\t *\n\t * @public\n\t * @override\n\t * @param {RenderManager} rm - The RenderManager object.\n\t * @param {BaseLayout} control - The BaseLayout control to be rendered.\n\t */\n\trender: function (rm: RenderManager, control: BaseLayout) {\n\t\t/*\n\t\t * Existing controls like NavContainer will not allow for control\n\t\t * over the duration of the transition. To overcome this limitation,\n\t\t * we render a simple div container and manage the transition from\n\t\t * one page to another using CSS.\n\t\t */\n\t\tconst containerId = `${control.getId()}-layout-container`;\n\t\tconst isContainerRenderedOnce = document.getElementById(containerId);\n\n\t\tif (!isContainerRenderedOnce) {\n\t\t\trm.openStart(\"div\", containerId).class(\"sapCuxBaseLayout\").openEnd();\n\t\t}\n\n\t\t//render main container\n\t\tPageRenderer.render(rm, control);\n\n\t\t//render full-screen container\n\t\trm.renderControl(control.getAggregation(\"fullScreenContainer\") as Page);\n\n\t\tif (!isContainerRenderedOnce) {\n\t\t\trm.close(\"div\");\n\t\t}\n\t}\n};\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,6CAAA,gCAAAC,GAAA,iBAAAC,EAUe,CACdC,WAAY,EAUZC,OAAQ,SAAUC,EAAmBC,GAOpC,MAAMC,EAAc,GAAGD,EAAQE,2BAC/B,MAAMC,EAA0BC,SAASC,eAAeJ,GAExD,IAAKE,EAAyB,CAC7BJ,EAAGO,UAAU,MAAOL,GAAaM,MAAM,oBAAoBC,SAC5D,CAGAb,EAAaG,OAAOC,EAAIC,GAGxBD,EAAGU,cAAcT,EAAQU,eAAe,wBAExC,IAAKP,EAAyB,CAC7BJ,EAAGY,MAAM,MACV,CACD,GACA,OAAAf,CAAA","ignoreList":[],"sourceRoot":""}},{"offset":{"line":61,"column":0},"map":{"version":3,"names":["sap","ui","define","GenericTile","NewsContent","TileContent","Element","Lib","BaseNewsItem","extend","metadata","library","properties","imageUrl","type","group","title","subTitle","footer","constructor","_constructor","id","settings","Element.prototype.constructor.call","this","init","_init","Element.prototype.init.call","_i18nBundle","getResourceBundleFor","_oTile","createTile","setImageUrl","_setImageUrl","sUrl","setBackgroundImage","setProperty","setSubTitle","_setSubTitle","sText","getTileContent","getContent","setSubheader","setTitle","_setTitle","setContentText","setFooter","_setFooter","getTile","_getTile","_createTile","getId","mode","frameType","backgroundImage","getImageUrl","tileContent","getFooter","content","contentText","getTitle","subheader","getSubTitle"],"sources":["BaseNewsItem.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport GenericTile from \"sap/m/GenericTile\";\nimport NewsContent from \"sap/m/NewsContent\";\nimport TileContent from \"sap/m/TileContent\";\nimport { FrameType } from \"sap/m/library\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport Element from \"sap/ui/core/Element\";\nimport Lib from \"sap/ui/core/Lib\";\nimport { $BaseNewsItemSettings } from \"./BaseNewsItem\";\n\nexport interface INews {\n\turl?: string;\n\ttitle: string;\n\tdescription: string;\n\tpubDate: string;\n\timageUrl: string;\n\texpandFields?: string;\n}\n\n/**\n *\n * Base class for managing and storing News items.\n *\n * @extends sap.ui.core.Element\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.BaseNewsItem\n */\nexport default abstract class BaseNewsItem extends Element {\n\tconstructor(idOrSettings?: string | $BaseNewsItemSettings);\n\tconstructor(id?: string, settings?: $BaseNewsItemSettings);\n\tconstructor(id?: string, settings?: $BaseNewsItemSettings) {\n\t\tsuper(id, settings);\n\t}\n\tprotected _oTile!: GenericTile;\n\tprotected _i18nBundle!: ResourceBundle;\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * The image URL of the news.\n\t\t\t */\n\t\t\timageUrl: { type: \"string\", group: \"Misc\" },\n\t\t\t/**\n\t\t\t * Title of the news\n\t\t\t */\n\t\t\ttitle: { type: \"string\", group: \"Misc\" },\n\t\t\t/**\n\t\t\t * Subtitle of the app\n\t\t\t */\n\t\t\tsubTitle: { type: \"string\", group: \"Misc\" },\n\t\t\t/**\n\t\t\t * Footer of the app\n\t\t\t */\n\t\t\tfooter: { type: \"string\", group: \"Misc\" }\n\t\t}\n\t};\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\t\tthis._i18nBundle = Lib.getResourceBundleFor(\"sap.cux.home.i18n\") as ResourceBundle;\n\t\tif (!this._oTile) {\n\t\t\tthis.createTile();\n\t\t}\n\t}\n\n\t/**\n\t * Sets the image URL for the news item.\n\t * @param {string} sUrl - The URL of the image.\n\t */\n\tpublic setImageUrl(sUrl: string): BaseNewsItem {\n\t\tconst imageUrl = sUrl;\n\t\tthis._oTile.setBackgroundImage(imageUrl);\n\t\treturn this.setProperty(\"imageUrl\", imageUrl, true);\n\t}\n\n\t/**\n\t * Sets the subTitle of the news item.\n\t * @param {string} sText - The subTitle of the news item.\n\t */\n\tpublic setSubTitle(sText: string): BaseNewsItem {\n\t\t(this._oTile.getTileContent()[0].getContent() as NewsContent).setSubheader(sText);\n\t\treturn this.setProperty(\"subTitle\", sText, true);\n\t}\n\n\t/**\n\t * Sets the title of the news item.\n\t * @param {string} sText - The Title of the news item.\n\t */\n\tpublic setTitle(sText: string): BaseNewsItem {\n\t\t(this._oTile.getTileContent()[0].getContent() as NewsContent).setContentText(sText);\n\t\treturn this.setProperty(\"title\", sText, true);\n\t}\n\n\t/**\n\t * Sets the footer of the news item.\n\t * @param {string} sText - The footer of the news item.\n\t */\n\tpublic setFooter(sText: string): BaseNewsItem {\n\t\tthis._oTile.getTileContent()[0].setFooter(sText);\n\t\treturn this.setProperty(\"footer\", sText, true);\n\t}\n\n\t/**\n\t * Retrieves the tile control associated with the news item.\n\t * If the tile control does not exist, it is created.\n\t * @returns {sap.m.Tile} The tile control.\n\t */\n\tpublic getTile(): GenericTile {\n\t\tif (!this._oTile) {\n\t\t\tthis.createTile();\n\t\t}\n\t\treturn this._oTile;\n\t}\n\n\t/**\n\t * Creates the tile control associated with the news item.\n\t * @private\n\t */\n\tpublic createTile(): void {\n\t\tthis._oTile = new GenericTile(`${this.getId()}-news-tile`, {\n\t\t\tmode: \"ArticleMode\",\n\t\t\tframeType: \"Stretch\" as FrameType,\n\t\t\tbackgroundImage: this.getImageUrl(),\n\t\t\ttileContent: [\n\t\t\t\tnew TileContent(`${this.getId()}-news-tile-content`, {\n\t\t\t\t\tfooter: this.getFooter(),\n\t\t\t\t\tcontent: new NewsContent(`${this.getId()}-news-content`, {\n\t\t\t\t\t\tcontentText: this.getTitle(),\n\t\t\t\t\t\tsubheader: this.getSubTitle()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t]\n\t\t});\n\t}\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,uCAAA,+GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,aAwBA,MAgB8BC,EAAqBF,EAAOG,OAAA,6BASzCC,SAA4B,CAC3CC,QAAS,eACTC,WAAY,CAIXC,SAAU,CAAEC,KAAM,SAAUC,MAAO,QAInCC,MAAO,CAAEF,KAAM,SAAUC,MAAO,QAIhCE,SAAU,CAAEH,KAAM,SAAUC,MAAO,QAInCG,OAAQ,CAAEJ,KAAM,SAAUC,MAAO,UAxBnCI,YAAW,SAAAC,EAACC,EAAaC,GACxBC,6BAAAC,KAAMH,EAAIC,EACX,EAgCOG,KAAI,SAAAC,IACVC,sBAAAH,MACAA,KAAKI,YAAcrB,EAAIsB,qBAAqB,qBAC5C,IAAKL,KAAKM,OAAQ,CACjBN,KAAKO,YACN,CACD,EAMOC,YAAW,SAAAC,EAACC,GAClB,MAAMrB,EAAWqB,EACjBV,KAAKM,OAAOK,mBAAmBtB,GAC/B,OAAOW,KAAKY,YAAY,WAAYvB,EAAU,KAC/C,EAMOwB,YAAW,SAAAC,EAACC,GACjBf,KAAKM,OAAOU,iBAAiB,GAAGC,aAA6BC,aAAaH,GAC3E,OAAOf,KAAKY,YAAY,WAAYG,EAAO,KAC5C,EAMOI,SAAQ,SAAAC,EAACL,GACdf,KAAKM,OAAOU,iBAAiB,GAAGC,aAA6BI,eAAeN,GAC7E,OAAOf,KAAKY,YAAY,QAASG,EAAO,KACzC,EAMOO,UAAS,SAAAC,EAACR,GAChBf,KAAKM,OAAOU,iBAAiB,GAAGM,UAAUP,GAC1C,OAAOf,KAAKY,YAAY,SAAUG,EAAO,KAC1C,EAOOS,QAAO,SAAAC,IACb,IAAKzB,KAAKM,OAAQ,CACjBN,KAAKO,YACN,CACA,OAAOP,KAAKM,MACb,EAMOC,WAAU,SAAAmB,IAChB1B,KAAKM,OAAS,IAAI3B,EAAY,GAAGqB,KAAK2B,oBAAqB,CAC1DC,KAAM,cACNC,UAAW,UACXC,gBAAiB9B,KAAK+B,cACtBC,YAAa,CACZ,IAAInD,EAAY,GAAGmB,KAAK2B,4BAA6B,CACpDjC,OAAQM,KAAKiC,YACbC,QAAS,IAAItD,EAAY,GAAGoB,KAAK2B,uBAAwB,CACxDQ,YAAanC,KAAKoC,WAClBC,UAAWrC,KAAKsC,oBAKrB,IAAC,OAjH4BtD,CAAY","ignoreList":[],"sourceRoot":""}},{"offset":{"line":66,"column":0},"map":{"version":3,"names":["sap","ui","define","Button","FlexItemData","IllustratedMessage","IllustratedMessageSize","IllustratedMessageType","VBox","VerticalLayout","__BasePanel","___utils_Constants","_interopRequireDefault","obj","__esModule","default","BasePanel","SETTINGS_PANELS_KEYS","BaseNewsPanel","extend","metadata","library","aggregations","newsItems","type","singularName","multiple","constructor","_constructor","id","settings","BasePanel.prototype.constructor.call","this","init","_init","BasePanel.prototype.init.call","newsVerticalLayout","getId","content","generateErrorMessage","layoutData","order","growFactor","_addContent","getNewsWrapper","_getNewsWrapper","_generateErrorMessage","errorCard","oErrorMessage","illustrationSize","Small","illustrationType","NoNotifications","title","_i18nBundle","getText","description","additionalContent","text","tooltip","press","handleEditNews","bind","wrap","backgroundDesign","items","visible","height","width","addStyleClass","_handleEditNews","parentContainer","getParent","_getLayout","openSettingsDialog","NEWS"],"sources":["BaseNewsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Button from \"sap/m/Button\";\nimport FlexItemData from \"sap/m/FlexItemData\";\nimport IllustratedMessage from \"sap/m/IllustratedMessage\";\nimport IllustratedMessageSize from \"sap/m/IllustratedMessageSize\";\nimport IllustratedMessageType from \"sap/m/IllustratedMessageType\";\nimport VBox from \"sap/m/VBox\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport VerticalLayout from \"sap/ui/layout/VerticalLayout\";\nimport { $BaseNewsPanelSettings } from \"./BaseNewsPanel\";\nimport BasePanel from \"./BasePanel\";\nimport NewsAndPagesContainer from \"./NewsAndPagesContainer\";\nimport { SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\n\n/**\n *\n * Base Panel class for managing and storing News.\n *\n * @extends sap.cux.home.BasePanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @abstract\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.BaseNewsPanel\n */\nexport default abstract class BaseNewsPanel extends BasePanel {\n\tconstructor(idOrSettings?: string | $BaseNewsPanelSettings);\n\tconstructor(id?: string, settings?: $BaseNewsPanelSettings);\n\tconstructor(id?: string, settings?: $BaseNewsPanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tprivate errorCard!: VBox;\n\tprivate newsVerticalLayout!: VerticalLayout;\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * Holds the news aggregation\n\t\t\t */\n\t\t\tnewsItems: { type: \"sap.cux.home.BaseNewsItem\", singularName: \"newsItem\", multiple: true }\n\t\t}\n\t};\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\tthis.newsVerticalLayout = new VerticalLayout(`${this.getId()}-newsContent`, {\n\t\t\tcontent: [this.generateErrorMessage()],\n\t\t\tlayoutData: new FlexItemData({\n\t\t\t\tid: `${this.getId()}-flexItemdata`,\n\t\t\t\torder: 0,\n\t\t\t\tgrowFactor: 1\n\t\t\t})\n\t\t});\n\t\tthis._addContent(this.newsVerticalLayout);\n\t}\n\n\t/**\n\t * Generates app wrapper for displaying apps.\n\t * @private\n\t * @returns The generated apps wrapper.\n\t */\n\tprotected getNewsWrapper(): VerticalLayout {\n\t\treturn this.newsVerticalLayout;\n\t}\n\n\t/**\n\t * Generates the error message wrapper with illustrated message.\n\t * @private\n\t * @returns Wrapper with illustrated message.\n\t */\n\tprotected generateErrorMessage(): VBox {\n\t\tif (!this.errorCard) {\n\t\t\tconst oErrorMessage = new IllustratedMessage(`${this.getId()}-errorMessage`, {\n\t\t\t\tillustrationSize: IllustratedMessageSize.Small,\n\t\t\t\tillustrationType: IllustratedMessageType.NoNotifications,\n\t\t\t\ttitle: this._i18nBundle.getText(\"noNewsTitle\"),\n\t\t\t\tdescription: this._i18nBundle.getText(\"noNewsDescription\"),\n\t\t\t\tadditionalContent: [\n\t\t\t\t\tnew Button(`${this.getId()}-idManageNewsBtn`, {\n\t\t\t\t\t\ttext: this._i18nBundle.getText(\"editLinkNews\"),\n\t\t\t\t\t\ttooltip: this._i18nBundle.getText(\"editLinkNews\"),\n\t\t\t\t\t\ttype: \"Emphasized\",\n\t\t\t\t\t\tpress: this.handleEditNews.bind(this)\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t});\n\t\t\tthis.errorCard = new VBox(`${this.getId()}-errorCard`, {\n\t\t\t\twrap: \"Wrap\",\n\t\t\t\tbackgroundDesign: \"Solid\",\n\t\t\t\titems: [oErrorMessage],\n\t\t\t\tvisible: false,\n\t\t\t\theight: \"17rem\",\n\t\t\t\twidth: \"100%\"\n\t\t\t}).addStyleClass(\"sapUiRoundedBorder noCardsBorder sapUiSmallMarginTopBottom\");\n\t\t}\n\t\treturn this.errorCard;\n\t}\n\n\t/**\n\t * Handles the edit news event.\n\t * Opens the news dialog for managing news data.\n\t * @private\n\t */\n\tprotected handleEditNews() {\n\t\tconst parentContainer = this.getParent() as NewsAndPagesContainer;\n\t\tparentContainer?._getLayout().openSettingsDialog(SETTINGS_PANELS_KEYS.NEWS);\n\t}\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,wCAAA,sNAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,sBAAAC,EAAAC,GAAA,OAAAA,KAAAC,mBAAAD,EAAAE,UAAA,YAAAF,EAAAE,QAAAF,CAAA,OAcOG,EAASJ,EAAAF,GAAA,MAEPO,EAAoBN,EAAA,wBAE7B,MAiB8BO,EAAsBF,EAASG,OAAA,8BAU5CC,SAA4B,CAC3CC,QAAS,eACTC,aAAc,CAIbC,UAAW,CAAEC,KAAM,4BAA6BC,aAAc,WAAYC,SAAU,QAbtFC,YAAW,SAAAC,EAACC,EAAaC,GACxBC,6BAAAC,KAAMH,EAAIC,EACX,EAqBOG,KAAI,SAAAC,IACVC,sBAAAH,MAEAA,KAAKI,mBAAqB,IAAI3B,EAAe,GAAGuB,KAAKK,sBAAuB,CAC3EC,QAAS,CAACN,KAAKO,wBACfC,WAAY,IAAIpC,EAAa,CAC5ByB,GAAI,GAAGG,KAAKK,uBACZI,MAAO,EACPC,WAAY,MAGdV,KAAKW,YAAYX,KAAKI,mBACvB,EAOUQ,eAAc,SAAAC,IACvB,OAAOb,KAAKI,kBACb,EAOUG,qBAAoB,SAAAO,IAC7B,IAAKd,KAAKe,UAAW,CACpB,MAAMC,EAAgB,IAAI3C,EAAmB,GAAG2B,KAAKK,uBAAwB,CAC5EY,iBAAkB3C,EAAuB4C,MACzCC,iBAAkB5C,EAAuB6C,gBACzCC,MAAOrB,KAAKsB,YAAYC,QAAQ,eAChCC,YAAaxB,KAAKsB,YAAYC,QAAQ,qBACtCE,kBAAmB,CAClB,IAAItD,EAAO,GAAG6B,KAAKK,0BAA2B,CAC7CqB,KAAM1B,KAAKsB,YAAYC,QAAQ,gBAC/BI,QAAS3B,KAAKsB,YAAYC,QAAQ,gBAClC/B,KAAM,aACNoC,MAAO5B,KAAK6B,eAAeC,KAAK9B,WAInCA,KAAKe,UAAY,IAAIvC,EAAK,GAAGwB,KAAKK,oBAAqB,CACtD0B,KAAM,OACNC,iBAAkB,QAClBC,MAAO,CAACjB,GACRkB,QAAS,MACTC,OAAQ,QACRC,MAAO,SACLC,cAAc,6DAClB,CACA,OAAOrC,KAAKe,SACb,EAOUc,eAAc,SAAAS,IACvB,MAAMC,EAAkBvC,KAAKwC,YAC7BD,GAAiBE,aAAaC,mBAAmBzD,EAAqB0D,KACvE,IAAC,OA1F4BzD,CAAa","ignoreList":[],"sourceRoot":""}},{"offset":{"line":71,"column":0},"map":{"version":3,"names":["sap","ui","define","__BasePanel","_interopRequireDefault","obj","__esModule","default","BasePanel","BasePagePanel","extend","metadata","library","properties","title","type","group","key","aggregations","pages","singularName","multiple","constructor","_constructor","id","settings","BasePanel.prototype.constructor.call","this"],"sources":["BasePagePanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport { $BasePagePanelSettings } from \"./BasePagePanel\";\nimport BasePanel from \"./BasePanel\";\n\n/**\n *\n * Base Panel class for managing and storing Pages.\n *\n * @extends sap.cux.home.BasePanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @abstract\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.BasePagePanel\n */\nexport default abstract class BasePagePanel extends BasePanel {\n\tconstructor(idOrSettings?: string | $BasePagePanelSettings);\n\tconstructor(id?: string, settings?: $BasePagePanelSettings);\n\tconstructor(id?: string, settings?: $BasePagePanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\ttitle: { type: \"string\", group: \"Misc\" },\n\t\t\tkey: { type: \"string\", group: \"Misc\" }\n\t\t},\n\t\taggregations: {\n\t\t\tpages: { type: \"sap.cux.home.Page\", singularName: \"page\", multiple: true }\n\t\t}\n\t};\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,wCAAA,yBAAAC,GAAA,sBAAAC,EAAAC,GAAA,OAAAA,KAAAC,mBAAAD,EAAAE,UAAA,YAAAF,EAAAE,QAAAF,CAAA,OAMOG,EAASJ,EAAAD,GAEhB,MAiB8BM,EAAsBD,EAASE,OAAA,8BAO5CC,SAA4B,CAC3CC,QAAS,eACTC,WAAY,CACXC,MAAO,CAAEC,KAAM,SAAUC,MAAO,QAChCC,IAAK,CAAEF,KAAM,SAAUC,MAAO,SAE/BE,aAAc,CACbC,MAAO,CAAEJ,KAAM,oBAAqBK,aAAc,OAAQC,SAAU,QAXtEC,YAAW,SAAAC,EAACC,EAAaC,GACxBC,6BAAAC,KAAMH,EAAIC,EACX,IAAC,OAL4BhB,CAAa","ignoreList":[],"sourceRoot":""}},{"offset":{"line":76,"column":0},"map":{"version":3,"names":["sap","ui","define","DragDropInfo","Element","Lib","sap_ui_core_library","___utils_Device","___utils_DragDropUtils","dnd","calculateDeviceType","attachKeyboardHandler","BasePanel","extend","metadata","library","properties","title","type","group","defaultValue","key","tooltip","visibility","enableSettings","enableKeyUserSettings","enableFullScreen","fullScreenName","defaultAggregation","aggregations","content","multiple","singularName","actionButtons","menuItems","events","onExpand","loaded","associations","fullScreenButton","constructor","_constructor","id","settings","Element.prototype.constructor.call","this","init","_init","_content","_i18nBundle","getResourceBundleFor","_getContent","getAggregation","_addContent","control","push","insertAggregation","getParent","_addToPanel","_setCount","count","_setPanelCount","getDeviceType","_getDeviceType","container","addDragDropConfigTo","_addDragDropConfigTo","dropHandler","keyboardHandler","dropPositionType","arguments","length","undefined","DropPosition","Between","addDragDropConfig","getId","sourceAggregation","targetAggregation","dropPosition","dropLayout","DropLayout","Horizontal","drop","attachBrowserEvent","event","disableNavigation","metaKey","ctrlKey","dragDropEvent"],"sources":["BasePanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport GridContainer from \"sap/f/GridContainer\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport HeaderContainer from \"sap/m/HeaderContainer\";\nimport Control from \"sap/ui/core/Control\";\nimport DragDropInfo from \"sap/ui/core/dnd/DragDropInfo\";\nimport { DropInfo$DropEvent } from \"sap/ui/core/dnd/DropInfo\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport Element from \"sap/ui/core/Element\";\nimport Lib from \"sap/ui/core/Lib\";\nimport { dnd } from \"sap/ui/core/library\";\nimport BaseContainer from \"./BaseContainer\";\nimport { $BasePanelSettings } from \"./BasePanel\";\nimport { DeviceType, calculateDeviceType } from \"./utils/Device\";\nimport { attachKeyboardHandler } from \"./utils/DragDropUtils\";\n\n/**\n *\n * Abstract base class for all panels placed in {@link sap.cux.home.BaseContainer}.\n *\n * @extends sap.ui.core.Element\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @abstract\n * @internal\n * @experimental Since 1.121\n * @public\n *\n * @alias sap.cux.home.BasePanel\n */\nexport default abstract class BasePanel extends Element {\n\tprotected _i18nBundle!: ResourceBundle;\n\tprivate _content!: Control[];\n\n\tconstructor(id?: string | $BasePanelSettings);\n\tconstructor(id?: string, settings?: $BasePanelSettings);\n\t/**\n\t * Constructor for a new Base Panel.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $BasePanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * Title for the panel.\n\t\t\t */\n\t\t\ttitle: { type: \"string\", group: \"Misc\", defaultValue: \"\" },\n\t\t\t/**\n\t\t\t * Key for the panel.\n\t\t\t */\n\t\t\tkey: { type: \"string\", group: \"Misc\", defaultValue: \"\" },\n\t\t\t/**\n\t\t\t * Tooltip for the panel.\n\t\t\t */\n\t\t\ttooltip: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Specifies whether settings should be enabled for the panel.\n\t\t\t */\n\t\t\tenableSettings: { type: \"boolean\", group: \"Misc\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Specifies whether key user settings should be enabled for the panel.\n\t\t\t */\n\t\t\tenableKeyUserSettings: { type: \"boolean\", group: \"Misc\", visibility: \"hidden\", defaultValue: true },\n\t\t\t/**\n\t\t\t * Indicates whether full screen is enabled for this control.\n\t\t\t */\n\t\t\tenableFullScreen: { type: \"boolean\", group: \"Misc\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * The name of the URL parameter used to expand the container into full-screen mode.\n\t\t\t * This property specifies the parameter key expected in the URL query string\n\t\t\t * to identify the container to be expanded.\n\t\t\t */\n\t\t\tfullScreenName: { type: \"string\", group: \"Misc\", visibility: \"hidden\" }\n\t\t},\n\t\tdefaultAggregation: \"content\",\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * Specifies the content aggregation of the panel.\n\t\t\t */\n\t\t\tcontent: { multiple: true, singularName: \"content\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Specifies the actions to be shown within the panel.\n\t\t\t */\n\t\t\tactionButtons: { type: \"sap.m.Button\", multiple: true, singularName: \"actionButton\" },\n\t\t\t/**\n\t\t\t * Specifies the items that are shown within the dropdown menu of the panel.\n\t\t\t */\n\t\t\tmenuItems: { type: \"sap.cux.home.MenuItem\", multiple: true, singularName: \"menuItem\" }\n\t\t},\n\t\tevents: {\n\t\t\t/**\n\t\t\t * Event is fired before the container is expanded.\n\t\t\t */\n\t\t\tonExpand: {},\n\t\t\t/**\n\t\t\t * Event is fired after the panel is loaded.\n\t\t\t */\n\t\t\tloaded: {}\n\t\t},\n\t\tassociations: {\n\t\t\tfullScreenButton: { type: \"sap.m.Button\", multiple: false, singularName: \"fullScreenButton\", visibility: \"hidden\" }\n\t\t}\n\t};\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tthis._content = [];\n\t\tthis._i18nBundle = Lib.getResourceBundleFor(\"sap.cux.home.i18n\") as ResourceBundle;\n\t}\n\n\t/**\n\t * Cache and return panel content since the content would\n\t * have a different inner control as parent after rendering\n\t *\n\t * @private\n\t * @returns {Control[]} - array of panel content\n\t */\n\tpublic _getContent(): Control[] {\n\t\tthis._content = this._content || this.getAggregation(\"content\");\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Overridden method for adding content to a panel so that\n\t * it's added to the corresponding layout-specific inner\n\t * control as well\n\t *\n\t * @private\n\t * @param {Control} control - control to be added to the content\n\t */\n\tpublic _addContent(control: Control): void {\n\t\tthis._content = this._content || this.getAggregation(\"content\");\n\t\tthis._content.push(control);\n\t\tthis.insertAggregation(\"content\", control, 0);\n\n\t\t//Insert into parent's layout control\n\t\t(this.getParent() as BaseContainer)?._addToPanel(this, control);\n\t}\n\n\t/**\n\t * Updates the count information of IconTabFilter of IconTabBar inner control\n\t * in case of SideBySide layout\n\t *\n\t * @private\n\t * @param {string} count - updated count information\n\t */\n\tpublic _setCount(count?: string): void {\n\t\t(this.getParent() as BaseContainer)?._setPanelCount(this, count);\n\t}\n\n\t/**\n\t * Retrieves the device type for the current panel.\n\t *\n\t * @private\n\t * @returns {DeviceType} - The device type of the parent container if it exists,\n\t * otherwise calculates and returns the device type based on the current device width.\n\t */\n\tprotected getDeviceType(): DeviceType {\n\t\tconst container = this.getParent() as BaseContainer;\n\t\treturn container ? container.getDeviceType() : calculateDeviceType();\n\t}\n\n\tprotected addDragDropConfigTo(\n\t\tcontainer: GridContainer | FlexBox | HeaderContainer,\n\t\tdropHandler: (event: DropInfo$DropEvent) => void,\n\t\tkeyboardHandler?: (event: KeyboardEvent) => void,\n\t\tdropPositionType: dnd.DropPosition = dnd.DropPosition.Between\n\t): void {\n\t\tcontainer\n\t\t\t.addDragDropConfig(\n\t\t\t\tnew DragDropInfo(`${container.getId()}--addDragDropConfig`, {\n\t\t\t\t\tsourceAggregation: \"items\",\n\t\t\t\t\ttargetAggregation: \"items\",\n\t\t\t\t\tdropPosition: dropPositionType,\n\t\t\t\t\tdropLayout: dnd.DropLayout.Horizontal,\n\t\t\t\t\tdrop: dropHandler\n\t\t\t\t})\n\t\t\t)\n\t\t\t.attachBrowserEvent(\"keydown\", (event: KeyboardEvent) => {\n\t\t\t\tconst disableNavigation = event.metaKey || event.ctrlKey;\n\t\t\t\tvoid attachKeyboardHandler(event, disableNavigation, (dragDropEvent: DropInfo$DropEvent) => {\n\t\t\t\t\tdropHandler(dragDropEvent);\n\t\t\t\t});\n\t\t\t});\n\t\tif (keyboardHandler) {\n\t\t\tcontainer.attachBrowserEvent(\"keydown\", keyboardHandler);\n\t\t}\n\t}\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,oCAAA,iJAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,mBAeSC,EAAGH,EAAA,aAGSI,EAAmBH,EAAA,6BAC/BI,EAAqBH,EAAA,yBAE9B,MAiB8BI,EAAkBR,EAAOS,OAAA,0BAgBtCC,SAA4B,CAC3CC,QAAS,eACTC,WAAY,CAIXC,MAAO,CAAEC,KAAM,SAAUC,MAAO,OAAQC,aAAc,IAItDC,IAAK,CAAEH,KAAM,SAAUC,MAAO,OAAQC,aAAc,IAIpDE,QAAS,CAAEJ,KAAM,SAAUC,MAAO,OAAQC,aAAc,GAAIG,WAAY,UAIxEC,eAAgB,CAAEN,KAAM,UAAWC,MAAO,OAAQI,WAAY,UAI9DE,sBAAuB,CAAEP,KAAM,UAAWC,MAAO,OAAQI,WAAY,SAAUH,aAAc,MAI7FM,iBAAkB,CAAER,KAAM,UAAWC,MAAO,OAAQI,WAAY,UAMhEI,eAAgB,CAAET,KAAM,SAAUC,MAAO,OAAQI,WAAY,WAE9DK,mBAAoB,UACpBC,aAAc,CAIbC,QAAS,CAAEC,SAAU,KAAMC,aAAc,UAAWT,WAAY,UAIhEU,cAAe,CAAEf,KAAM,eAAgBa,SAAU,KAAMC,aAAc,gBAIrEE,UAAW,CAAEhB,KAAM,wBAAyBa,SAAU,KAAMC,aAAc,aAE3EG,OAAQ,CAIPC,SAAU,CAAC,EAIXC,OAAQ,CAAC,GAEVC,aAAc,CACbC,iBAAkB,CAAErB,KAAM,eAAgBa,SAAU,MAAOC,aAAc,mBAAoBT,WAAY,YAhEpGiB,YAAW,SAAAC,EAACC,EAAaC,GAC/BC,6BAAAC,KAAMH,EAAIC,EACX,EAwEOG,KAAI,SAAAC,IACVF,KAAKG,SAAW,GAChBH,KAAKI,YAAc5C,EAAI6C,qBAAqB,oBAC7C,EASOC,YAAW,SAAAA,IACjBN,KAAKG,SAAWH,KAAKG,UAAYH,KAAKO,eAAe,WACrD,OAAOP,KAAKG,QACb,EAUOK,YAAW,SAAAA,EAACC,GAClBT,KAAKG,SAAWH,KAAKG,UAAYH,KAAKO,eAAe,WACrDP,KAAKG,SAASO,KAAKD,GACnBT,KAAKW,kBAAkB,UAAWF,EAAS,GAG1CT,KAAKY,aAA+BC,YAAYb,KAAMS,EACxD,EASOK,UAAS,SAAAA,EAACC,GACff,KAAKY,aAA+BI,eAAehB,KAAMe,EAC3D,EASUE,cAAa,SAAAC,IACtB,MAAMC,EAAYnB,KAAKY,YACvB,OAAOO,EAAYA,EAAUF,gBAAkBpD,GAChD,EAEUuD,oBAAmB,SAAAC,EAC5BF,EACAG,EACAC,GAEO,IADPC,EAAkCC,UAAAC,OAAA,GAAAD,UAAA,KAAAE,UAAAF,UAAA,GAAG7D,EAAIgE,aAAaC,QAEtDV,EACEW,kBACA,IAAIxE,EAAa,GAAG6D,EAAUY,6BAA8B,CAC3DC,kBAAmB,QACnBC,kBAAmB,QACnBC,aAAcV,EACdW,WAAYvE,EAAIwE,WAAWC,WAC3BC,KAAMhB,KAGPiB,mBAAmB,UAAYC,IAC/B,MAAMC,EAAoBD,EAAME,SAAWF,EAAMG,aAC5C7E,EAAsB0E,EAAOC,EAAoBG,IACrDtB,EAAYsB,EAAc,EACzB,GAEJ,GAAIrB,EAAiB,CACpBJ,EAAUoB,mBAAmB,UAAWhB,EACzC,CACD,IAAC,OAxK4BxD,CAAS","ignoreList":[],"sourceRoot":""}},{"offset":{"line":81,"column":0},"map":{"version":3,"names":["sap","ui","define","Dialog","Lib","BaseSettingsDialog","extend","renderer","apiVersion","metadata","library","properties","selectedKey","type","group","defaultValue","visibility","context","defaultAggregation","aggregations","panels","singularName","multiple","constructor","_constructor","id","settings","Dialog.prototype.constructor.call","this","init","_init","Dialog.prototype.init.call","_i18nBundle","getResourceBundleFor","_panelCache","addStyleClass","getPanels","_getPanels","slice","addPanel","_addPanel","panel","push","addAggregation","insertPanel","_insertPanel","index","splice","insertAggregation","removePanel","_removePanel","indexOf","removeAggregation","removeAllPanels","_removeAllPanels","removeAllAggregation"],"sources":["BaseSettingsDialog.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport Dialog from \"sap/m/Dialog\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport Lib from \"sap/ui/core/Lib\";\nimport { $BaseSettingsDialogSettings } from \"./BaseSettingsDialog\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\n\n/**\n *\n * Abstract base class for custom settings dialog for {@link sap.cux.home.BaseLayout}.\n *\n * @extends Dialog\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @abstract\n * @public\n *\n * @alias sap.cux.home.BaseSettingsDialog\n */\nexport default abstract class BaseSettingsDialog extends Dialog {\n\tprotected _i18nBundle!: ResourceBundle;\n\tprivate _panelCache!: BaseSettingsPanel[];\n\n\tconstructor(id?: string | $BaseSettingsDialogSettings);\n\tconstructor(id?: string, settings?: $BaseSettingsDialogSettings);\n\t/**\n\t * Constructor for a new Base Settings Dialog.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $BaseSettingsDialogSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * The selectedkey of the settings dialog\n\t\t\t */\n\t\t\tselectedKey: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Additional context of the settings dialog\n\t\t\t */\n\t\t\tcontext: { type: \"object\", group: \"Misc\", defaultValue: {}, visibility: \"hidden\" }\n\t\t},\n\t\tdefaultAggregation: \"panels\",\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * Contains the panels aggregation and should be of type BaseSettingsPanel.\n\t\t\t */\n\t\t\tpanels: { type: \"sap.cux.home.BaseSettingsPanel\", singularName: \"panel\", multiple: true }\n\t\t}\n\t};\n\n\tstatic renderer = {\n\t\tapiVersion: 2\n\t};\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\t\tthis._i18nBundle = Lib.getResourceBundleFor(\"sap.cux.home.i18n\") as ResourceBundle;\n\n\t\t//setup page\n\t\tthis._panelCache = [];\n\t\tthis.addStyleClass(\"sapContrastPlus\");\n\t}\n\n\t/**\n\t * Returns all the panels in the dialog.\n\t * Overridden to return cached panels.\n\t *\n\t * @public\n\t * @override\n\t * @returns {BaseSettingsPanel[]} panel array\n\t */\n\tpublic getPanels(): BaseSettingsPanel[] {\n\t\treturn this._panelCache.slice();\n\t}\n\n\t/**\n\t * Adds a new panel at the end of the available panels.\n\t * Overridden to update cached panels.\n\t *\n\t * @public\n\t * @override\n\t * @returns {BaseSettingsDialog} the dialog for chaining\n\t */\n\taddPanel(panel: BaseSettingsPanel): BaseSettingsDialog {\n\t\tthis._panelCache.push(panel);\n\t\tthis.addAggregation(\"panels\", panel);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a new panel to the 'panels' aggregation at the index.\n\t * Overridden to update cached panels.\n\t *\n\t * @public\n\t * @override\n\t * @param {BaseSettingsPanel} panel The panel to insert.\n\t * @param {number} index The index at which to insert the panel.\n\t * @returns {BaseSettingsDialog} Returns 'this' to allow method chaining.\n\t */\n\tinsertPanel(panel: BaseSettingsPanel, index: number): BaseSettingsDialog {\n\t\tthis._panelCache.splice(index, 0, panel);\n\t\tthis.insertAggregation(\"panels\", panel, index);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Removes a panel from the dialog and updates the cache.\n\t *\n\t * @public\n\t * @param {BaseSettingsPanel} panel - The panel to remove.\n\t * @returns {BaseSettingsPanel} The removed panel.\n\t */\n\tremovePanel(panel: BaseSettingsPanel): BaseSettingsPanel {\n\t\tthis._panelCache.splice(this._panelCache.indexOf(panel), 1);\n\t\treturn this.removeAggregation(\"panels\", panel) as BaseSettingsPanel;\n\t}\n\n\t/**\n\t * Removes all panels from the dialog, clears the internal panel cache.\n\t * Overridden to update cached panels.\n\t *\n\t * @public\n\t * @override\n\t * @returns {BaseSettingsPanel[]} An empty array representing the removed panels.\n\t */\n\tremoveAllPanels(): BaseSettingsPanel[] {\n\t\tthis._panelCache = [];\n\t\tthis.removeAllAggregation(\"panels\");\n\t\treturn this.getPanels();\n\t}\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,6CAAA,4CAAAC,EAAAC,GAAA,aAYA,MAiB8BC,EAA2BF,EAAMG,OAAA,mCAqCvDC,SAAW,CACjBC,WAAY,GAtBGC,SAA4B,CAC3CC,QAAS,eACTC,WAAY,CAIXC,YAAa,CAAEC,KAAM,SAAUC,MAAO,OAAQC,aAAc,GAAIC,WAAY,UAI5EC,QAAS,CAAEJ,KAAM,SAAUC,MAAO,OAAQC,aAAc,CAAC,EAAGC,WAAY,WAEzEE,mBAAoB,SACpBC,aAAc,CAIbC,OAAQ,CAAEP,KAAM,iCAAkCQ,aAAc,QAASC,SAAU,QArB9EC,YAAW,SAAAC,EAACC,EAAaC,GAC/BC,6BAAAC,KAAMH,EAAIC,EACX,EAiCOG,KAAI,SAAAC,IACVC,sBAAAH,MACAA,KAAKI,YAAc5B,EAAI6B,qBAAqB,qBAG5CL,KAAKM,YAAc,GACnBN,KAAKO,cAAc,kBACpB,EAUOC,UAAS,SAAAC,IACf,OAAOT,KAAKM,YAAYI,OACzB,EAUAC,SAAQ,SAAAC,EAACC,GACRb,KAAKM,YAAYQ,KAAKD,GACtBb,KAAKe,eAAe,SAAUF,GAC9B,OAAOb,IACR,EAYAgB,YAAW,SAAAC,EAACJ,EAA0BK,GACrClB,KAAKM,YAAYa,OAAOD,EAAO,EAAGL,GAClCb,KAAKoB,kBAAkB,SAAUP,EAAOK,GACxC,OAAOlB,IACR,EASAqB,YAAW,SAAAC,EAACT,GACXb,KAAKM,YAAYa,OAAOnB,KAAKM,YAAYiB,QAAQV,GAAQ,GACzD,OAAOb,KAAKwB,kBAAkB,SAAUX,EACzC,EAUAY,gBAAe,SAAAC,IACd1B,KAAKM,YAAc,GACnBN,KAAK2B,qBAAqB,UAC1B,OAAO3B,KAAKQ,WACb,IAAC,OA1H4B/B,CAAkB","ignoreList":[],"sourceRoot":""}},{"offset":{"line":86,"column":0},"map":{"version":3,"names":["sap","ui","define","DragDropInfo","Element","Lib","sap_ui_core_library","___utils_DragDropUtils","dnd","attachKeyboardHandler","BaseSettingsPanel","extend","metadata","library","properties","key","type","group","defaultValue","visibility","title","icon","showHeader","defaultAggregation","aggregations","content","singularName","multiple","actionButtons","associations","panel","events","panelNavigated","parameters","context","onDialogClose","constructor","_constructor","id","settings","Element.prototype.constructor.call","this","_keyuserChanges","init","_init","_i18nBundle","getResourceBundleFor","_actionButtonsCache","_getPanel","getElementById","getAssociation","_persistDialog","container","getParent","layout","setProperty","getKeyUserChanges","_getKeyUserChanges","addKeyUserChanges","_addKeyUserChanges","change","push","clearKeyUserChanges","_clearKeyUserChanges","addDragDropConfigTo","_addDragDropConfigTo","dropHandler","addDragDropConfig","getId","sourceAggregation","targetAggregation","dropPosition","DropPosition","On","dropLayout","DropLayout","Horizontal","drop","attachBrowserEvent","event","disableNavigation","metaKey","ctrlKey","dragDropEvent","getActionButtons","_getActionButtons","slice","addActionButton","_addActionButton","button","addAggregation","insertActionButton","_insertActionButton","index","splice","insertAggregation","removeActionButton","_removeActionButton","removedButton","indexOf","removeAggregation","isSupported","_isSupported","Promise","resolve","e","reject"],"sources":["BaseSettingsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport Button from \"sap/m/Button\";\nimport Table from \"sap/m/Table\";\nimport DragDropInfo from \"sap/ui/core/dnd/DragDropInfo\";\nimport { DropInfo$DropEvent } from \"sap/ui/core/dnd/DropInfo\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport Element from \"sap/ui/core/Element\";\nimport Lib from \"sap/ui/core/Lib\";\nimport { dnd } from \"sap/ui/core/library\";\nimport BaseContainer from \"./BaseContainer\";\nimport BaseLayout from \"./BaseLayout\";\nimport BasePanel from \"./BasePanel\";\nimport { $BaseSettingsPanelSettings } from \"./BaseSettingsPanel\";\nimport { IKeyUserChange } from \"./interface/KeyUserInterface\";\nimport { attachKeyboardHandler } from \"./utils/DragDropUtils\";\n\n/**\n *\n * Abstract base class for panels inside My Home Settings Dialog.\n *\n * @extends sap.ui.core.Element\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @abstract\n * @public\n *\n * @alias sap.cux.home.BaseSettingsPanel\n */\nexport default abstract class BaseSettingsPanel extends Element {\n\tprotected _i18nBundle!: ResourceBundle;\n\tprivate _keyuserChanges: Array<IKeyUserChange> = [];\n\tprivate _actionButtonsCache!: Button[];\n\n\tconstructor(id?: string | $BaseSettingsPanelSettings);\n\tconstructor(id?: string, settings?: $BaseSettingsPanelSettings);\n\t/**\n\t * Constructor for a new Base Settings Panel.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $BaseSettingsPanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * Key of the settings panel.\n\t\t\t */\n\t\t\tkey: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Title of the settings panel.\n\t\t\t */\n\t\t\ttitle: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Icon of the settings panel.\n\t\t\t */\n\t\t\ticon: { type: \"sap.ui.core.URI\", group: \"Misc\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Specifies if header should be shown for the settings panel page.\n\t\t\t */\n\t\t\tshowHeader: { type: \"boolean\", group: \"Misc\", defaultValue: true, visibility: \"hidden\" }\n\t\t},\n\t\tdefaultAggregation: \"content\",\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * Content aggregation of the settings panel.\n\t\t\t */\n\t\t\tcontent: { type: \"sap.ui.core.Control\", singularName: \"content\", multiple: true, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Holds the actions to be shown within the settings panel.\n\t\t\t */\n\t\t\tactionButtons: { type: \"sap.m.Button\", multiple: true, singularName: \"actionButton\", visibility: \"hidden\" }\n\t\t},\n\t\tassociations: {\n\t\t\t/**\n\t\t\t * Associations of the settings panel.\n\t\t\t * Id of the panel associated with the settings panel to be provided.\n\t\t\t * In case of multiple panels with same Id, the first panel will be associated.\n\t\t\t * If no panel is found with the provided id, the settings panel will not be associated with any panel.\n\t\t\t */\n\t\t\tpanel: { type: \"string\" }\n\t\t},\n\t\tevents: {\n\t\t\t/**\n\t\t\t * Fired whenever the panel has been navigated to.\n\t\t\t */\n\t\t\tpanelNavigated: {\n\t\t\t\tparameters: {\n\t\t\t\t\tcontext: { type: \"object\" }\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Fired whenever the associated settings dialog is closed.\n\t\t\t */\n\t\t\tonDialogClose: {}\n\t\t}\n\t};\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tthis._i18nBundle = Lib.getResourceBundleFor(\"sap.cux.home.i18n\") as ResourceBundle;\n\t\tthis._actionButtonsCache = [];\n\t}\n\n\t/**\n\t * Retrieves the BasePanel or BaseLayout associated with the BaseSettingsPanel.\n\t *\n\t * @returns {BasePanel | BaseLayout} The panel or layout associated with the BaseSettingsPanel\n\t * @private\n\t */\n\tprotected _getPanel(): BasePanel | BaseLayout {\n\t\treturn Element.getElementById(this.getAssociation(\"panel\", null) as string) as BasePanel | BaseLayout;\n\t}\n\n\t/**\n\t * Persists the dialog state by setting a property on the parent layout\n\t * indicating that the settings dialog should be persisted.\n\t *\n\t * @private\n\t */\n\tprotected _persistDialog(): void {\n\t\tconst panel = this._getPanel();\n\t\tconst container = panel?.getParent() as BaseContainer;\n\t\tconst layout = container?.getParent() as BaseLayout;\n\n\t\tlayout?.setProperty(\"settingsDialogPersisted\", true, true);\n\t}\n\n\t/**\n\t * Returns the KeyUser Changes made by user.\n\t *\n\t * @public\n\t */\n\tpublic getKeyUserChanges(): Array<IKeyUserChange> {\n\t\treturn this._keyuserChanges;\n\t}\n\n\t/**\n\t * Add Changes made by user in case of KeyUser Settings Panel.\n\t *\n\t * @public\n\t */\n\tpublic addKeyUserChanges(change: IKeyUserChange): void {\n\t\tthis._keyuserChanges.push(change);\n\t}\n\n\t/**\n\t * Clear all KeyUser Changes made by user.\n\t *\n\t * @public\n\t */\n\tpublic clearKeyUserChanges(): void {\n\t\tthis._keyuserChanges = [];\n\t}\n\tprotected addDragDropConfigTo(container: Table, dropHandler: (event: DropInfo$DropEvent) => void): void {\n\t\tcontainer\n\t\t\t.addDragDropConfig(\n\t\t\t\tnew DragDropInfo(`${container.getId()}--settingsDragDropConfig`, {\n\t\t\t\t\tsourceAggregation: \"items\",\n\t\t\t\t\ttargetAggregation: \"items\",\n\t\t\t\t\tdropPosition: dnd.DropPosition.On,\n\t\t\t\t\tdropLayout: dnd.DropLayout.Horizontal,\n\t\t\t\t\tdrop: dropHandler\n\t\t\t\t})\n\t\t\t)\n\t\t\t.attachBrowserEvent(\"keydown\", (event: KeyboardEvent) => {\n\t\t\t\tconst disableNavigation = event.metaKey || event.ctrlKey;\n\t\t\t\tvoid attachKeyboardHandler(event, disableNavigation, (dragDropEvent: DropInfo$DropEvent) => {\n\t\t\t\t\tdropHandler(dragDropEvent);\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\t/**\n\t * Retrieves the action buttons from the panel.\n\t *\n\t * @public\n\t * @returns {Button[]} array of action buttons.\n\t */\n\tpublic getActionButtons(): Button[] {\n\t\treturn this._actionButtonsCache.slice();\n\t}\n\n\t/**\n\t * Adds an action button to the panel.\n\t *\n\t * @public\n\t * @param {Button} button - The button to add.\n\t * @returns {BaseSettingsPanel} The instance of the panel for chaining.\n\t */\n\tpublic addActionButton(button: Button): BaseSettingsPanel {\n\t\tthis._actionButtonsCache.push(button);\n\t\tthis.addAggregation(\"actionButtons\", button);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Inserts an action button at a specific index in the panel.\n\t *\n\t * @public\n\t * @param {Button} button - The button to insert.\n\t * @param {number} index - The index at which to insert the button.\n\t * @returns {BaseSettingsPanel} The instance of the panel for chaining.\n\t */\n\tpublic insertActionButton(button: Button, index: number): BaseSettingsPanel {\n\t\tthis._actionButtonsCache.splice(index, 0, button);\n\t\tthis.insertAggregation(\"actionButtons\", button, index);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Removes an action button from the panel.\n\t *\n\t * @public\n\t * @param {Button} button - The button to remove.\n\t * @returns {Button | null} The removed button or null if not found.\n\t */\n\tpublic removeActionButton(button: Button): Button | null {\n\t\tconst removedButton = this._actionButtonsCache.splice(this._actionButtonsCache.indexOf(button), 1);\n\t\tthis.removeAggregation(\"actionButtons\", button);\n\t\treturn removedButton[0] || null;\n\t}\n\n\t/**\n\t * Checks if the panel is supported. To be overridden by subclasses.\n\t *\n\t * @public\n\t * @async\n\t * @returns {Promise<boolean>} A promise that resolves to true if the panel is supported.\n\t */\n\tpublic async isSupported(): Promise<boolean> {\n\t\treturn Promise.resolve(true);\n\t}\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,4CAAA,gIAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,mBAaSC,EAAGF,EAAA,aAMHG,EAAqBF,EAAA,yBAE9B,MAiB8BG,EAA0BN,EAAOO,OAAA,kCAiB9CC,SAA4B,CAC3CC,QAAS,eACTC,WAAY,CAIXC,IAAK,CAAEC,KAAM,SAAUC,MAAO,OAAQC,aAAc,GAAIC,WAAY,UAIpEC,MAAO,CAAEJ,KAAM,SAAUC,MAAO,OAAQC,aAAc,GAAIC,WAAY,UAItEE,KAAM,CAAEL,KAAM,kBAAmBC,MAAO,OAAQC,aAAc,GAAIC,WAAY,UAI9EG,WAAY,CAAEN,KAAM,UAAWC,MAAO,OAAQC,aAAc,KAAMC,WAAY,WAE/EI,mBAAoB,UACpBC,aAAc,CAIbC,QAAS,CAAET,KAAM,sBAAuBU,aAAc,UAAWC,SAAU,KAAMR,WAAY,UAI7FS,cAAe,CAAEZ,KAAM,eAAgBW,SAAU,KAAMD,aAAc,eAAgBP,WAAY,WAElGU,aAAc,CAObC,MAAO,CAAEd,KAAM,WAEhBe,OAAQ,CAIPC,eAAgB,CACfC,WAAY,CACXC,QAAS,CAAElB,KAAM,YAMnBmB,cAAe,CAAC,IAxDXC,YAAW,SAAAC,EAACC,EAAaC,GAC/BC,6BAAAC,KAAMH,EAAIC,GAAUE,KAZbC,gBAAyC,EAajD,EAgEOC,KAAI,SAAAC,IACVH,KAAKI,YAAcxC,EAAIyC,qBAAqB,qBAC5CL,KAAKM,oBAAsB,EAC5B,EAQUC,UAAS,SAAAA,IAClB,OAAO5C,EAAQ6C,eAAeR,KAAKS,eAAe,QAAS,MAC5D,EAQUC,eAAc,SAAAA,IACvB,MAAMrB,EAAQW,KAAKO,YACnB,MAAMI,EAAYtB,GAAOuB,YACzB,MAAMC,EAASF,GAAWC,YAE1BC,GAAQC,YAAY,0BAA2B,KAAM,KACtD,EAOOC,kBAAiB,SAAAC,IACvB,OAAOhB,KAAKC,eACb,EAOOgB,kBAAiB,SAAAC,EAACC,GACxBnB,KAAKC,gBAAgBmB,KAAKD,EAC3B,EAOOE,oBAAmB,SAAAC,IACzBtB,KAAKC,gBAAkB,EACxB,EACUsB,oBAAmB,SAAAC,EAACb,EAAkBc,GAC/Cd,EACEe,kBACA,IAAIhE,EAAa,GAAGiD,EAAUgB,kCAAmC,CAChEC,kBAAmB,QACnBC,kBAAmB,QACnBC,aAAc/D,EAAIgE,aAAaC,GAC/BC,WAAYlE,EAAImE,WAAWC,WAC3BC,KAAMX,KAGPY,mBAAmB,UAAYC,IAC/B,MAAMC,EAAoBD,EAAME,SAAWF,EAAMG,aAC5CzE,EAAsBsE,EAAOC,EAAoBG,IACrDjB,EAAYiB,EAAc,EACzB,EAEL,EAQOC,iBAAgB,SAAAC,IACtB,OAAO5C,KAAKM,oBAAoBuC,OACjC,EASOC,gBAAe,SAAAC,EAACC,GACtBhD,KAAKM,oBAAoBc,KAAK4B,GAC9BhD,KAAKiD,eAAe,gBAAiBD,GACrC,OAAOhD,IACR,EAUOkD,mBAAkB,SAAAC,EAACH,EAAgBI,GACzCpD,KAAKM,oBAAoB+C,OAAOD,EAAO,EAAGJ,GAC1ChD,KAAKsD,kBAAkB,gBAAiBN,EAAQI,GAChD,OAAOpD,IACR,EASOuD,mBAAkB,SAAAC,EAACR,GACzB,MAAMS,EAAgBzD,KAAKM,oBAAoB+C,OAAOrD,KAAKM,oBAAoBoD,QAAQV,GAAS,GAChGhD,KAAK2D,kBAAkB,gBAAiBX,GACxC,OAAOS,EAAc,IAAM,IAC5B,EASaG,YAAW,SAAAC,IAAA,IACvB,OAAOC,QAAQC,QAAQ,KACxB,CAAC,MAAAC,GAAA,OAAAF,QAAAG,OAAAD,EAAA,YApN4B/F,CAAiB","ignoreList":[],"sourceRoot":""}},{"offset":{"line":91,"column":0},"map":{"version":3,"names":["sap","ui","define","Log","GridContainer","GridContainerSettings","SelectionVariant","CardHelper","InsightsInMemoryCachingHost","HBox","HeaderContainer","VBox","EventBus","Card","JSONModel","Container","S4MyHome","__BasePanel","__MenuItem","__TilesPanel","___utils_Accessibility","__AppManager","___utils_Constants","___utils_DataFormatUtils","___utils_Device","___utils_DragDropUtils","___utils_FESRUtil","___utils_InsightsUtils","__PersonalisationUtils","__UShellPersonalizer","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","BasePanel","_finallyRethrows","finalizer","bind","MenuItem","TilesPanel","checkPanelExists","AppManager","FEATURE_TOGGLES","SETTINGS_PANELS_KEYS","recycleId","calculateCardWidth","DeviceType","fetchElementProperties","focusDraggedItem","addFESRId","createShowMoreActionButton","createShowMoreMenuItem","getAssociatedFullScreenMenuItem","sortMenuItems","targetsAreEqual","PersonalisationUtils","UShellPersonalizer","cardsMenuItems","cardsContainerMenuItems","cardsContainerActionButtons","sortedMenuItems","REFRESH","EDIT_CARDS","AI_INSIGHT_CARD","Constants","PLACEHOLDER_CARD_COUNT","CARDS_GAP","RECOMMENDATION_PATH","runtimeHostCreated","CardsPanel","extend","metadata","library","properties","title","type","group","defaultValue","visibility","key","fullScreenName","host","defaultAggregation","aggregations","cards","multiple","singularName","events","handleHidePanel","parameters","handleUnhidePanel","visibleCardsUpdated","constructor","_constructor","id","settings","BasePanel.prototype.constructor.call","this","aVisibleCardInstances","cardsInViewport","_appSwitched","_headerVisible","init","_init","_this","BasePanel.prototype.init.call","setProperty","cardWidth","cardHeight","getDeviceType","Mobile","_oData","userVisibleCards","userAllCards","isPhone","_controlModel","appManagerInstance","getInstance","_controlMap","Map","refreshMenuItem","_createRefreshMenuItem","editCardsMenuItem","_createEditCardsMenuItem","menuItems","forEach","menuItem","addAggregation","_sortMenuItems","oEventBus","subscribe","sChannelId","sEventId","oData","Promise","resolve","_createCards","rerenderCards","_importdone","reject","_setupWrapper","_toggleCardActivity","_this2","toggleUserActions","event","show","getParameter","_temp2","_temp","attachRouteMatched","error","warning","Error","message","String","aCards","_this3","cardHelperInstance","_getManifestEntryFromCard","oCard","sEntry","cardWithManifestPromise","manifestEntry","getManifestEntry","_pManifestReady","attachManifestReady","_addRuntimeHost","_this4","_this5","_this6","_this7","_this8","getProperty","action","oEvent","sType","oParameters","_temp3","ibnTarget","preventDefault","oIntegrationCardManifest","aHeaderActions","header","actions","oCheckSemanticProperty","configuration","_semanticDateRangeSetting","value","JSON","parse","Object","keys","length","processSemanticDate","aContentActions","getContentActions","oHeaderAction","oContentAction","bOldCardExtension","indexOf","_manageOldCardExtension","getServiceAsync","navigationService","navigate","target","params","ibnParams","text","_i18nBundle","getText","icon","_refreshCardData","visible","oEntry","cacheType","cardId","getParent","_getLayout","openSettingsDialog","INSIGHTS_CARDS","oCardParams","aRelevantFilters","_relevantODataFilters","bRelevantFilters","aRelevantParams","_relevantODataParameters","bRelevantParams","oCardDataSource","dataSources","oFilterService","filterService","oDataSourceSettings","odataVersion","getParentAppDetails","descriptorContent","parentApp","semanticObject","intents","isNavigationSupported","_navigationService$is","aResponses","supported","sShellHash","semanticURL","shellHash","attachAction","oCardSV","getCombinedParameters","sParamName","sFilterName","oCardParamsFilterName","aSelectOptions","SelectOptions","aRanges","Ranges","Sign","Option","Low","massAddSelectOption","oTempParam","selectionVariant","toJSONObject","stringify","_getContentActions","manifest","content","item","row","stateData","status","publish","require","InsightsCacheData","sCardId","cacheDataInstance","clearCache","refreshData","_refreshData","_this9","_temp4","_getServiceAsync","_refreshUserCards","renderPanel","_renderPanel","_this10","_temp8","_temp6","fireEvent","_temp5","aiFlagEnabled","undefined","updateAICardCreationStatus","_temp7","_getServiceAsync2","_rerenderCards","skipRecommendation","arguments","_this11","_cardsRendered","_temp14","sDefaultAggreName","_getCardContainer","getMetadata","getDefaultAggregationName","removeAllAggregation","_showPlaceHolders","_getUserVisibleCardModel","userVisibleCardModel","listBinding","bindList","hasListeners","enableExtendedChangeDetection","attachChange","visibleCards","_showCards","getPersonalisationProperty","showRecommendation","_temp13","_temp12","_getRecommendationCards","_temp11","_temp10","checkForRecommendedCards","_temp9","_updateRecommendationStatus","fireHandleHidePanel","setNewVisibleCards","_setNewVisibleCards","_this12","visibleCardModel","aNewCards","_checkForRecommendedCards","_this13","manifestIds","oVisCard","idx","rec","push","rank","ranking","index","uniqueManifestDetails","getUniqueManifestDetails","regenerateCards","aUpdatedCards","_exit","_temp16","_result2","_temp15","_updateCards","map","newManifest","_getUniqueManifestDetails","exists","some","existingItem","_getManifests","_this14","_getCardManifest","aManifests","aRegeneratedCards","mappedResults","_removeDuplicateRegeneratedCards","_regenerateCards","allManifestIds","_this15","aMappedManifest","createUniqueKey","uniqueMap","uniqueKey","oError","aOriginalList","originalMap","originalItem","parentAppId","values","_getPersonalizationData","_this16","_temp18","oPersonalizer","read","oPersData","_temp17","_getPersonalization","_this16$_getPersonali","_getPersonalisationProperty","propertyKey","_this17","_this18","getRecommenedCards","aRecommendedCards","_handleRecommendationCards","_this19","cardManifests","_cardsFlexWrapper","getId","renderType","width","items","_createCardContainer","_createMobileCardContainer","setModel","_addContent","cardsContainerSettings","columnSize","rowSize","gap","cardsContainer","addStyleClass","setLayout","addDragDropConfigTo","_handleCardsDnd","cardsMobileContainer","scrollStep","scrollStepByItem","gridLayout","scrollTime","showDividers","cardManifest","_getAnalyticalCardManifest","placeholderArray","Array","_calculatePlaceholderCardCount","fill","aInsightsCards","_","card","height","previewMode","oPreviewHBox","justifyContent","layoutDomRef","_getInsightsContainer","getDomRef","count","sectionDomRef","childNodes","domProperties","availableWidth","cardLayoutConfig","containerWidth","totalCards","minWidth","maxWidth","Math","floor","panelName","getName","fireHandleUnhidePanel","updatePanelsItemCount","oUserCard","overlay","overlayHBoxWrapper","addItem","oPreviewVBox","direction","_handleEditCards","parent","getSource","isA","handleHideHeader","_handleHideHeader","_toggleHeaderActions","handleAddHeader","_handleAddHeader","refreshCards","_refreshCards","_this20","sInsertPosition","oDragItem","iDragItemIndex","indexOfItem","oDropItem","iDropItemIndex","setBusy","_temp21","_temp20","setTimeout","_temp19","_getUserAllCardModel","userAllCardsModel","updateCardList","_wasThrown","_result3","_updateCardList","_this21","aUserVisibleCards","aUserAllCards","sDragedPositionRank","sDropedPositionRank","iUpdatedDragItemIndex","findIndex","iUpdatedDropItemIndex","_temp22","handleDndCardsRanking","_updateMultipleCards","_sortCardsOnRank","filter","sort","a","b","persContainerId","getPersContainerId","ownerComponent","getOwnerComponent","_this22","write","_calculateVisibleCardCount","layout","pageDomRef","deviceType","isHeaderVisible","sectionNodeIndex","iAvailableWidth","max","_adjustLayout","isMobileDevice","isElementExpanded","_getCurrentExpandedElementName","cardCount","slice","getManifest","cardWrapper","shareCardsInViewport","showFullScreenButton","toggleFullScreenElements","fullScreenButton","fullScreenText","getTitle","updateMenuItem","get","SHOW_MORE","updateActionButton","setWidth","setColumnSize","getContainerMenuItems","_getContainerMenuItems","_containerMenuItems","containerRefreshMenuItem","containerEditCardsMenuItem","containerShowMoreMenuItem","set","getContainerActionButtons","_getContainerActionButtons","_containerActionButtons","actionButton","insightsContainer","fesrId","press","_createAddInsightCardMenuItem","_generateInsightCardsWithAI","_this23","showAddCardWithSearchDialog","_isDesktopDevice","Tablet","_updateAICardCreationStatus","_this24","aPromises","isFeatureEnabled","AI_GENERATED_CARD","all","aResult","oNavigationService","enabled","addInsightCardMenuItem","containerAddInsightMenuItem","CardsPanelName","InsightsContainerName","parentContainerContent","getContent","TilesPanelName","find","panel","cardPanelExist","tilePanelExist","setVisible","addCommonMenuItems","catch","bShow","getAggregation","toggleMenuListItem","toggleActionButton","panelMenuItems","_shareCardsInViewport"],"sources":["CardsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport GridContainer from \"sap/f/GridContainer\";\nimport GridContainerSettings from \"sap/f/GridContainerSettings\";\nimport SelectionVariant from \"sap/fe/navigation/SelectionVariant\";\nimport CardHelper from \"sap/insights/CardHelper\";\nimport InsightsInMemoryCachingHost from \"sap/insights/base/InMemoryCachingHost\";\nimport Button from \"sap/m/Button\";\nimport HBox from \"sap/m/HBox\";\nimport HeaderContainer from \"sap/m/HeaderContainer\";\nimport VBox from \"sap/m/VBox\";\nimport Event from \"sap/ui/base/Event\";\nimport ManagedObject, { MetadataOptions } from \"sap/ui/base/ManagedObject\";\nimport Component from \"sap/ui/core/Component\";\nimport Control from \"sap/ui/core/Control\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport { DropInfo$DropEventParameters } from \"sap/ui/core/dnd/DropInfo\";\nimport Host from \"sap/ui/integration/Host\";\nimport Card from \"sap/ui/integration/widgets/Card\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport Container from \"sap/ushell/Container\";\nimport S4MyHome from \"sap/ushell/api/S4MyHome\";\nimport { Intent } from \"sap/ushell/services/AppLifeCycle\";\nimport Navigation from \"sap/ushell/services/Navigation\";\nimport BasePanel from \"./BasePanel\";\nimport { $CardsPanelSettings } from \"./CardsPanel\";\nimport InsightsContainer from \"./InsightsContainer\";\nimport MenuItem from \"./MenuItem\";\nimport TilesPanel from \"./TilesPanel\";\nimport {\n\tICard,\n\tICardAction,\n\tICardActionParameters,\n\tICardDetails,\n\tICardHelper,\n\tICardHelperInstance,\n\tICardManifest,\n\tInsightsCacheData,\n\tIRegeneratedCard,\n\tISapApp,\n\tISapCard\n} from \"./interface/CardsInterface\";\nimport { checkPanelExists } from \"./utils/Accessibility\";\nimport AppManager from \"./utils/AppManager\";\nimport { FEATURE_TOGGLES, SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\nimport { recycleId } from \"./utils/DataFormatUtils\";\nimport { calculateCardWidth, DeviceType, fetchElementProperties } from \"./utils/Device\";\nimport { focusDraggedItem } from \"./utils/DragDropUtils\";\nimport { addFESRId } from \"./utils/FESRUtil\";\nimport {\n\tcreateShowMoreActionButton,\n\tcreateShowMoreMenuItem,\n\tgetAssociatedFullScreenMenuItem,\n\tsortMenuItems,\n\ttargetsAreEqual\n} from \"./utils/InsightsUtils\";\nimport PersonalisationUtils from \"./utils/PersonalisationUtils\";\nimport UShellPersonalizer, { IPersonalizationData } from \"./utils/UshellPersonalizer\";\n\nexport enum cardsMenuItems {\n\tREFRESH = \"cards-refresh\",\n\tEDIT_CARDS = \"cards-editCards\",\n\tAI_INSIGHT_CARD = \"cards-addAIInsightCard\"\n}\n\nexport enum cardsContainerMenuItems {\n\tREFRESH = \"container-cards-refresh\",\n\tEDIT_CARDS = \"container-cards-editCards\",\n\tSHOW_MORE = \"cardsContainerFullScreenMenuItem\",\n\tAI_INSIGHT_CARD = \"container-cards-addAIInsightCard\"\n}\n\nexport enum cardsContainerActionButtons {\n\tSHOW_MORE = \"cardsContanerFullScreenActionButton\"\n}\nconst sortedMenuItems: (cardsMenuItems | string)[] = [\n\tcardsMenuItems.REFRESH,\n\tcardsMenuItems.EDIT_CARDS,\n\tcardsMenuItems.AI_INSIGHT_CARD,\n\t\"showMore\",\n\t\"settings\"\n];\n\ninterface IcardActionEvent {\n\tgetParameter(sParam: string): unknown;\n\tpreventDefault(): void;\n}\n\nconst Constants = {\n\tPLACEHOLDER_CARD_COUNT: 10,\n\tCARDS_GAP: 16\n};\n\nexport interface TargetIntent {\n\ttarget: Partial<Intent>;\n\tparams?: {\n\t\t[key: string]: string;\n\t};\n}\nconst RECOMMENDATION_PATH = \"showRecommendation\";\nlet runtimeHostCreated = false;\n\n/**\n *\n * Panel class for managing and storing Insights Cards.\n *\n * @extends sap.cux.home.BasePanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.122.0\n *\n * @internal\n * @experimental Since 1.122\n * @public\n *\n * @alias sap.cux.home.CardsPanel\n */\n\nexport default class CardsPanel extends BasePanel {\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\ttitle: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\tkey: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\tfullScreenName: { type: \"string\", group: \"Misc\", defaultValue: \"SI2\", visibility: \"hidden\" },\n\t\t\thost: { type: \"sap.ui.integration.Host\", group: \"Misc\", defaultValue: null, visibility: \"hidden\" }\n\t\t},\n\t\tdefaultAggregation: \"cards\",\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * Aggregation of cards available within the cards panel\n\t\t\t */\n\t\t\tcards: { type: \"sap.ui.integration.widgets.Card\", multiple: true, singularName: \"card\", visibility: \"hidden\" }\n\t\t},\n\t\tevents: {\n\t\t\thandleHidePanel: {\n\t\t\t\tparameters: {}\n\t\t\t},\n\t\t\thandleUnhidePanel: {\n\t\t\t\tparameters: {}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Event is fired when cards in viewport are updated.\n\t\t\t */\n\t\t\tvisibleCardsUpdated: {\n\t\t\t\tparameters: {\n\t\t\t\t\tcards: { type: \"sap.ui.integration.widgets.Card[]\" }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tprivate cardHelperInstance!: ICardHelperInstance;\n\tprivate _cardsFlexWrapper!: VBox;\n\tprivate cardsContainer!: GridContainer;\n\tprivate cardsMobileContainer!: HeaderContainer;\n\tprivate aVisibleCardInstances: Card[] = [];\n\tprivate _oData!: Record<string, unknown>;\n\tprivate _controlModel!: JSONModel;\n\tprivate oPersonalizer!: UShellPersonalizer;\n\tprivate appManagerInstance!: AppManager;\n\tprivate cardsContainerSettings!: GridContainerSettings;\n\tprivate cardWidth!: string;\n\tprivate cardHeight!: string;\n\tprivate cardsInViewport: Card[] = [];\n\tprivate oEventBus!: EventBus;\n\tprivate _appSwitched: boolean = false;\n\tprivate _containerMenuItems!: MenuItem[];\n\tprivate _containerActionButtons!: Button[];\n\tprivate insightsContainer!: InsightsContainer;\n\tprivate _headerVisible: boolean = false;\n\tprivate _controlMap!: Map<string, UI5Element>;\n\tprivate aiFlagEnabled!: boolean;\n\tprivate _cardsRendered!: Promise<void> | undefined;\n\n\tconstructor(idOrSettings?: string | $CardsPanelSettings);\n\tconstructor(id?: string, settings?: $CardsPanelSettings);\n\t/**\n\t * Constructor for a new card panel.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $CardsPanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\t/**\n\t * Initializes the Cards Panel.\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init() {\n\t\tsuper.init();\n\t\tthis.setProperty(\"key\", \"cards\");\n\t\tthis.setProperty(\"enableFullScreen\", true);\n\t\tthis.cardWidth = \"19rem\";\n\t\tthis.cardHeight = this.getDeviceType() === DeviceType.Mobile ? \"25.5rem\" : \"33rem\";\n\n\t\t//Initialize Tiles Model\n\t\tthis._oData = {\n\t\t\tuserVisibleCards: [] as ICard[],\n\t\t\tuserAllCards: [] as ICard[],\n\t\t\tisPhone: this.getDeviceType() === DeviceType.Mobile\n\t\t};\n\t\tthis._controlModel = new JSONModel(this._oData);\n\t\tthis.appManagerInstance = AppManager.getInstance();\n\t\tthis._controlMap = new Map();\n\t\t// Setup Menu Items\n\t\tconst refreshMenuItem = this._createRefreshMenuItem(cardsMenuItems.REFRESH, \"cardsRefresh\");\n\t\tconst editCardsMenuItem = this._createEditCardsMenuItem(cardsMenuItems.EDIT_CARDS, \"manageCards\");\n\n\t\tconst menuItems = [refreshMenuItem, editCardsMenuItem];\n\t\tmenuItems.forEach((menuItem) => this.addAggregation(\"menuItems\", menuItem));\n\t\tthis._sortMenuItems(sortedMenuItems);\n\n\t\tthis.oEventBus = EventBus.getInstance();\n\t\t// Subscribe to the event\n\t\tthis.oEventBus.subscribe(\n\t\t\t\"importChannel\",\n\t\t\t\"cardsImport\",\n\t\t\tasync (sChannelId?: string, sEventId?: string, oData?) => {\n\t\t\t\tawait this._createCards(oData as ICardManifest[]);\n\t\t\t\tawait this.rerenderCards();\n\t\t\t\tthis._importdone();\n\t\t\t},\n\t\t\tthis\n\t\t);\n\n\t\t// Setup Wrapper for Cards\n\t\tthis._setupWrapper();\n\n\t\t// Toggles the activity of cards\n\t\tthis._toggleCardActivity();\n\t}\n\n\t/**\n\t * Toggles the activity of cards on route change.\n\t *\n\t * @private\n\t * @returns {void}\n\t */\n\tprivate _toggleCardActivity(): void {\n\t\tconst toggleUserActions = async (event: Event<{ isMyHomeRoute: boolean }>) => {\n\t\t\tconst show = event.getParameter(\"isMyHomeRoute\");\n\t\t\tif (show) {\n\t\t\t\tif (this._appSwitched) {\n\t\t\t\t\tawait this.rerenderCards();\n\t\t\t\t\tthis._appSwitched = false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._appSwitched = true;\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\tS4MyHome.attachRouteMatched({}, toggleUserActions, this);\n\t\t} catch (error) {\n\t\t\tLog.warning(error instanceof Error ? error.message : String(error));\n\t\t}\n\t}\n\n\t/**\n\t * Create imported cards\n\t * @param {ICardManifest[]} aCards - array of card manifests\n\t * @returns {any}\n\t */\n\tprivate async _createCards(aCards: ICardManifest[]) {\n\t\tawait this.cardHelperInstance?._createCards(aCards);\n\t\treturn this.rerenderCards();\n\t}\n\n\t/**\n\t * Retrieves a manifest entry from a card.\n\t * If the manifest entry is not immediately available, it waits for the manifest to be ready.\n\t *\n\t * @param {object} oCard - The card object from which to retrieve the manifest entry.\n\t * @param {string} sEntry - The manifest entry key to retrieve.\n\t * @returns {Promise<ICardManifest | undefined>} A promise that resolves with the manifest entry value.\n\t */\n\tprivate _getManifestEntryFromCard(oCard: Card, sEntry: string): Promise<ICardManifest | undefined> {\n\t\tconst cardWithManifestPromise = oCard as Card & { _pManifestReady?: Promise<ICardManifest | undefined> };\n\t\tconst manifestEntry = oCard.getManifestEntry(sEntry) as ICardManifest | undefined;\n\t\tif (manifestEntry) {\n\t\t\treturn Promise.resolve(manifestEntry);\n\t\t} else {\n\t\t\tif (!cardWithManifestPromise._pManifestReady) {\n\t\t\t\tcardWithManifestPromise._pManifestReady = new Promise<ICardManifest | undefined>((resolve) => {\n\t\t\t\t\toCard.attachManifestReady(() => {\n\t\t\t\t\t\tresolve(oCard.getManifestEntry(sEntry) as ICardManifest | undefined);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn cardWithManifestPromise._pManifestReady;\n\t\t}\n\t}\n\n\t/**\n\t * Adds a runtime host for the cards panel.\n\t *\n\t * @private\n\t */\n\tprivate _addRuntimeHost() {\n\t\tconst host = (this.getProperty(\"host\") || new InsightsInMemoryCachingHost(\"runtimeHost\")) as Host;\n\t\tconst action = async (oEvent: IcardActionEvent) => {\n\t\t\tconst sType = oEvent.getParameter(\"type\") as string;\n\t\t\tlet oParameters = (oEvent.getParameter(\"parameters\") as ICardActionParameters) || {};\n\n\t\t\tif (sType === \"Navigation\" && oParameters.ibnTarget) {\n\t\t\t\toEvent.preventDefault();\n\t\t\t\tconst oCard = (oEvent.getParameter(\"card\") as Card) || {},\n\t\t\t\t\toIntegrationCardManifest = (oCard?.getManifestEntry(\"sap.card\") || {}) as ISapCard,\n\t\t\t\t\taHeaderActions = oIntegrationCardManifest?.header?.actions || [];\n\n\t\t\t\t//processing semantic date as param for navigation\n\t\t\t\t//check to verify if _semanticDateRangeSetting property is present in manifest\n\t\t\t\tlet oCheckSemanticProperty;\n\t\t\t\tif (oIntegrationCardManifest?.configuration?.parameters?._semanticDateRangeSetting?.value) {\n\t\t\t\t\toCheckSemanticProperty = JSON.parse(\n\t\t\t\t\t\toIntegrationCardManifest.configuration.parameters._semanticDateRangeSetting.value\n\t\t\t\t\t) as object;\n\t\t\t\t}\n\t\t\t\tif (oCheckSemanticProperty && Object.keys(oCheckSemanticProperty).length) {\n\t\t\t\t\toParameters = this.cardHelperInstance.processSemanticDate(\n\t\t\t\t\t\toParameters,\n\t\t\t\t\t\toIntegrationCardManifest\n\t\t\t\t\t) as ICardActionParameters;\n\t\t\t\t}\n\n\t\t\t\tlet aContentActions = this.getContentActions(oIntegrationCardManifest);\n\n\t\t\t\tconst oHeaderAction = aHeaderActions[0] || {},\n\t\t\t\t\toContentAction = aContentActions[0] || {};\n\n\t\t\t\tconst bOldCardExtension = !!(\n\t\t\t\t\t(oHeaderAction?.parameters &&\n\t\t\t\t\t\ttypeof oHeaderAction.parameters === \"string\" &&\n\t\t\t\t\t\toHeaderAction.parameters.indexOf(\"{= extension.formatters.addPropertyValueToAppState\") > -1) ||\n\t\t\t\t\t(oContentAction?.parameters &&\n\t\t\t\t\t\ttypeof oContentAction.parameters === \"string\" &&\n\t\t\t\t\t\toContentAction.parameters.indexOf(\"{= extension.formatters.addPropertyValueToAppState\") > -1)\n\t\t\t\t);\n\n\t\t\t\tthis._manageOldCardExtension(bOldCardExtension, oEvent, oParameters);\n\n\t\t\t\tconst navigationService = await Container.getServiceAsync<Navigation>(\"Navigation\");\n\t\t\t\tawait navigationService.navigate({\n\t\t\t\t\ttarget: oParameters.ibnTarget,\n\t\t\t\t\tparams: oParameters.ibnParams\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\tconst actions = [\n\t\t\t{\n\t\t\t\ttype: \"Custom\",\n\t\t\t\ttext: this._i18nBundle?.getText(\"refresh\") as string,\n\t\t\t\ticon: \"sap-icon://refresh\",\n\t\t\t\taction: (oCard: Card) => {\n\t\t\t\t\tthis._refreshCardData(oCard);\n\t\t\t\t},\n\t\t\t\tvisible: async (oCard: Card) => {\n\t\t\t\t\tconst oEntry = await this._getManifestEntryFromCard(oCard, \"sap.insights\");\n\t\t\t\t\treturn oEntry && !oEntry.cacheType;\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"Custom\",\n\t\t\t\ttext: this._i18nBundle?.getText(\"viewFilteredBy\") as string,\n\t\t\t\ticon: \"sap-icon://filter\",\n\t\t\t\taction: (oCard: Card) => {\n\t\t\t\t\tconst cardId = (oCard.getManifestEntry(\"sap.app\") as ISapApp).id;\n\t\t\t\t\t(this.getParent() as InsightsContainer)\n\t\t\t\t\t\t?._getLayout()\n\t\t\t\t\t\t.openSettingsDialog(SETTINGS_PANELS_KEYS.INSIGHTS_CARDS, { cardId });\n\t\t\t\t},\n\t\t\t\tvisible: async (oCard: Card) => {\n\t\t\t\t\tconst oEntry = await this._getManifestEntryFromCard(oCard, \"sap.insights\");\n\t\t\t\t\tif (oEntry) {\n\t\t\t\t\t\tconst oCardParams = (oCard.getManifestEntry(\"sap.card\") as ISapCard)?.configuration?.parameters;\n\t\t\t\t\t\tconst aRelevantFilters = oCardParams?._relevantODataFilters?.value || [];\n\t\t\t\t\t\tconst bRelevantFilters = aRelevantFilters?.length;\n\t\t\t\t\t\tconst aRelevantParams = oCardParams?._relevantODataParameters?.value || [];\n\t\t\t\t\t\tconst bRelevantParams = aRelevantParams?.length;\n\t\t\t\t\t\tconst oCardDataSource = (oCard.getManifestEntry(\"sap.app\") as ISapApp).dataSources;\n\t\t\t\t\t\tconst oFilterService = oCardDataSource?.filterService;\n\t\t\t\t\t\tconst oDataSourceSettings = oFilterService?.settings;\n\t\t\t\t\t\t// show ViewFilteredBy Option only if relevantFilters or relevantParameters are there and is OdataV2 version\n\t\t\t\t\t\treturn !!(\n\t\t\t\t\t\t\t(bRelevantFilters || bRelevantParams) &&\n\t\t\t\t\t\t\toDataSourceSettings &&\n\t\t\t\t\t\t\toDataSourceSettings.odataVersion === \"2.0\"\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"Custom\",\n\t\t\t\ttext: this._i18nBundle?.getText(\"navigateToParent\") as string,\n\t\t\t\ticon: \"sap-icon://display-more\",\n\t\t\t\tvisible: async (oCard: Card) => {\n\t\t\t\t\treturn this._getManifestEntryFromCard(oCard, \"sap.insights\").then(async (oEntry: ICardManifest | undefined) => {\n\t\t\t\t\t\tif (oEntry) {\n\t\t\t\t\t\t\tconst parentApp = await this.cardHelperInstance.getParentAppDetails({\n\t\t\t\t\t\t\t\tdescriptorContent: oCard.getManifestEntry(\"/\") as ICardManifest\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (parentApp.semanticObject && parentApp.action) {\n\t\t\t\t\t\t\t\tconst navigationService = await Container.getServiceAsync<Navigation>(\"Navigation\");\n\t\t\t\t\t\t\t\tconst intents: TargetIntent[] = [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\t\t\t\tsemanticObject: parentApp.semanticObject,\n\t\t\t\t\t\t\t\t\t\t\taction: parentApp.action\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\tconst aResponses = (await navigationService.isNavigationSupported(intents)) as { supported: boolean }[];\n\t\t\t\t\t\t\t\treturn aResponses[0].supported || false;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\taction: async (oCard: Card) => {\n\t\t\t\t\tconst parentApp = await this.cardHelperInstance.getParentAppDetails({\n\t\t\t\t\t\tdescriptorContent: oCard.getManifestEntry(\"/\") as ICardManifest\n\t\t\t\t\t});\n\t\t\t\t\tconst sShellHash = parentApp.semanticURL || parentApp.semanticObject;\n\t\t\t\t\tconst navigationService = await Container.getServiceAsync<Navigation>(\"Navigation\");\n\t\t\t\t\tawait navigationService.navigate({\n\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\tshellHash: sShellHash\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\t\thost.attachAction(action);\n\t\thost.setProperty(\"actions\", actions);\n\t\tthis.setProperty(\"host\", host);\n\t}\n\n\t/**\n\t * Updates parameters for an old card extension\n\t * @private\n\t * @param {boolean} bOldCardExtension - Determines whether the card is using an old card extension.\n\t * @param {IcardActionEvent} oEvent - An event object\n\t * @param {ICardActionParameters} oParameters - Parameter object\n\t */\n\n\tprivate _manageOldCardExtension(bOldCardExtension: boolean, oEvent: IcardActionEvent, oParameters: ICardActionParameters) {\n\t\tif (bOldCardExtension) {\n\t\t\tconst oCardSV = new SelectionVariant();\n\t\t\tconst oCardParams = (oEvent.getParameter(\"card\") as Card).getCombinedParameters();\n\t\t\t(oCardParams?._relevantODataParameters as string[]).forEach((sParamName: string) => {\n\t\t\t\tif (oParameters.ibnParams) {\n\t\t\t\t\toParameters.ibnParams[sParamName] = oCardParams[sParamName];\n\t\t\t\t}\n\t\t\t});\n\t\t\t(oCardParams?._relevantODataFilters as string[]).forEach((sFilterName: string) => {\n\t\t\t\tconst oCardParamsFilterName = JSON.parse(oCardParams[sFilterName] as string) as {\n\t\t\t\t\tParameters: unknown;\n\t\t\t\t\tSelectOptions: { PropertyName: string; Ranges: { Sign: string; Option: string; Low: string }[] }[];\n\t\t\t\t};\n\t\t\t\tconst aSelectOptions = oCardParamsFilterName.SelectOptions[0];\n\t\t\t\tconst aRanges = aSelectOptions.Ranges;\n\t\t\t\tif (aRanges?.length === 1 && aRanges[0].Sign === \"I\" && aRanges[0].Option === \"EQ\") {\n\t\t\t\t\tif (oParameters.ibnParams) {\n\t\t\t\t\t\toParameters.ibnParams[sFilterName] = aRanges[0].Low;\n\t\t\t\t\t}\n\t\t\t\t} else if (aRanges?.length > 0) {\n\t\t\t\t\toCardSV.massAddSelectOption(sFilterName, aRanges);\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst oTempParam = JSON.parse(oParameters?.ibnParams?.[\"sap-xapp-state-data\"] as string) as Record<string, unknown>;\n\t\t\toTempParam.selectionVariant = oCardSV.toJSONObject();\n\t\t\tif (oParameters.ibnParams) {\n\t\t\t\toParameters.ibnParams[\"sap-xapp-state-data\"] = JSON.stringify(oTempParam);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves actions for a card based on its content type.\n\t *\n\t * @private\n\t * @param {ISapCard} manifest - The manifest object.\n\t * @returns {Array} The content actions.\n\t */\n\tprivate getContentActions(manifest: ISapCard): ICardAction[] {\n\t\tlet actions;\n\t\tif (manifest.type === \"List\") {\n\t\t\tactions = manifest?.content?.item?.actions;\n\t\t} else if (manifest.type === \"Table\") {\n\t\t\tactions = manifest?.content?.row?.actions;\n\t\t} else {\n\t\t\tactions = manifest?.content?.actions;\n\t\t}\n\t\treturn actions || [];\n\t}\n\n\t/**\n\t * Handles the completion of the import process.\n\t *\n\t * @private\n\t */\n\tprivate _importdone() {\n\t\tconst stateData = { status: true };\n\t\tthis.oEventBus.publish(\"importChannel\", \"cardsImported\", stateData);\n\t}\n\n\t/**\n\t * Refreshes the data for a given card.\n\t *\n\t * @private\n\t * @param {Card} oCard - The card to refresh.\n\t */\n\tprivate _refreshCardData(oCard: Card) {\n\t\tsap.ui.require([\"sap/insights/base/CacheData\"], (InsightsCacheData: InsightsCacheData) => {\n\t\t\tconst sCardId = (oCard.getManifestEntry(\"sap.app\") as ISapApp).id;\n\t\t\tconst cacheDataInstance = InsightsCacheData.getInstance();\n\t\t\tcacheDataInstance.clearCache(sCardId);\n\t\t\toCard.refreshData();\n\t\t});\n\t}\n\n\t/**\n\t * Triggers a full refresh of the Insights Cards's data and UI.\n\t *\n\t * Reloads all the user cards within the Insights Cards section by reinitializing relevant services\n\t * and re-rendering the panel.\n\t *\n\t * @public\n\t * @returns {Promise<void>} A promise that resolves once the Insights Cards section has been refreshed.\n\t */\n\tpublic async refreshData(): Promise<void> {\n\t\ttry {\n\t\t\tthis.cardHelperInstance = await (CardHelper as ICardHelper).getServiceAsync();\n\t\t\tawait this.cardHelperInstance._refreshUserCards(false);\n\t\t\tawait this.renderPanel();\n\t\t} catch (error) {\n\t\t\tLog.error(\"Failed to refresh cards: \", error instanceof Error ? error.message : (error as string));\n\t\t}\n\t}\n\n\t/**\n\t * Renders the panel.\n\t *\n\t * @private\n\t * @returns {Promise<void>} A promise that resolves when the panel is rendered.\n\t */\n\tpublic async renderPanel(): Promise<void> {\n\t\tif (!this.cardHelperInstance) {\n\t\t\tthis.cardHelperInstance = await (CardHelper as ICardHelper).getServiceAsync();\n\t\t}\n\t\tif (this.aiFlagEnabled === undefined) {\n\t\t\tawait this.updateAICardCreationStatus();\n\t\t}\n\t\tawait this.rerenderCards();\n\t\tthis.fireEvent(\"loaded\");\n\t}\n\n\t/**\n\t * Rerenders the cards.\n\t *\n\t * @private\n\t * @returns {Promise<void>} A promise that resolves when the cards are rerendered.\n\t */\n\tprivate async rerenderCards(skipRecommendation: boolean = false) {\n\t\tif (!this._cardsRendered) {\n\t\t\tthis._cardsRendered = new Promise((resolve, reject) => {\n\t\t\t\tvoid (async () => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Enable placeholders after updating/rerendering cards\n\t\t\t\t\t\tconst sDefaultAggreName = this._getCardContainer().getMetadata().getDefaultAggregationName();\n\n\t\t\t\t\t\tthis._getCardContainer().removeAllAggregation(sDefaultAggreName);\n\t\t\t\t\t\tthis._showPlaceHolders();\n\t\t\t\t\t\t// Fetch Cards from insights service\n\t\t\t\t\t\tconst userVisibleCardModel = await this.cardHelperInstance?._getUserVisibleCardModel();\n\t\t\t\t\t\tconst aCards = userVisibleCardModel.getProperty(\"/cards\") as ICard[];\n\t\t\t\t\t\tconst listBinding = userVisibleCardModel?.bindList(\"/cards\");\n\t\t\t\t\t\tif (!listBinding.hasListeners(\"change\")) {\n\t\t\t\t\t\t\tlistBinding?.enableExtendedChangeDetection(true, \"/cards\", {});\n\t\t\t\t\t\t\tlistBinding?.attachChange(async () => {\n\t\t\t\t\t\t\t\tawait (this._cardsRendered ?? Promise.resolve());\n\t\t\t\t\t\t\t\tconst visibleCards = userVisibleCardModel.getProperty(\"/cards\") as ICard[];\n\t\t\t\t\t\t\t\tif (visibleCards.length !== this.aVisibleCardInstances.length) {\n\t\t\t\t\t\t\t\t\tthis._showCards(visibleCards);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._controlModel.setProperty(\"/userVisibleCards\", aCards);\n\t\t\t\t\t\tlet showRecommendation = await this.getPersonalisationProperty(RECOMMENDATION_PATH);\n\t\t\t\t\t\tif (aCards.length === 0 && showRecommendation === undefined && !skipRecommendation) {\n\t\t\t\t\t\t\tawait this._getRecommendationCards();\n\t\t\t\t\t\t} else if (aCards.length) {\n\t\t\t\t\t\t\tif (showRecommendation === undefined) {\n\t\t\t\t\t\t\t\tawait this._updateRecommendationStatus();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// from available cards, check for old recommended cards and update it if present,\n\t\t\t\t\t\t\t// else show available visible cards\n\t\t\t\t\t\t\tawait this.checkForRecommendedCards(aCards);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.fireHandleHidePanel();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._cardsRendered = undefined;\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.fireHandleHidePanel();\n\t\t\t\t\t\tthis._cardsRendered = undefined;\n\t\t\t\t\t\tif (error instanceof Error) {\n\t\t\t\t\t\t\tLog.error(error.message);\n\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t});\n\t\t}\n\t\treturn this._cardsRendered;\n\t}\n\t/**\n\t * Sets the new visible cards in the model and updates the UI.\n\t * @private\n\t */\n\tprivate async setNewVisibleCards() {\n\t\tconst visibleCardModel = await this.cardHelperInstance._getUserVisibleCardModel();\n\t\tconst aNewCards = visibleCardModel.getProperty(\"/cards\") as ICard[];\n\t\tthis._controlModel.setProperty(\"/userVisibleCards\", aNewCards);\n\t\tthis._showCards(aNewCards);\n\t}\n\n\t/**\n\t * Checks for recommended cards and updates their manifests if necessary.\n\t *\n\t * This method iterates through the provided cards to identify recommended cards that need to be updated.\n\t * It regenerates the manifests for these cards, updates the model with the regenerated cards, and displays\n\t * the updated cards. If no recommended cards are found, it displays the original cards.\n\t *\n\t * @param {ICard[]} aCards - An array of card objects to check for recommendations.\n\t * Each card contains a `descriptorContent` property with metadata about the card.\n\t * @returns {Promise<void>} A promise that resolves when the check and updates are complete.\n\t * @private\n\t */\n\tprivate async checkForRecommendedCards(aCards: ICard[]): Promise<void> {\n\t\tlet manifestIds: ICardDetails[] = [];\n\t\taCards.forEach((oVisCard, idx) => {\n\t\t\tlet oCard = oVisCard.descriptorContent;\n\t\t\tif (\n\t\t\t\toCard[\"sap.card\"]?.rec === true &&\n\t\t\t\t(!oCard[\"sap.card\"][\"configuration\"] || !oCard[\"sap.card\"][\"configuration\"][\"csrfTokens\"])\n\t\t\t) {\n\t\t\t\tmanifestIds.push({\n\t\t\t\t\tcardId: oCard?.[\"sap.app\"]?.id as string,\n\t\t\t\t\trank: oCard?.[\"sap.insights\"]?.ranking || oVisCard?.rank,\n\t\t\t\t\tid: oCard?.[\"sap.insights\"]?.[\"parentAppId\"] || \"\",\n\t\t\t\t\ttarget: oCard?.[\"sap.card\"]?.[\"header\"]?.[\"actions\"]?.length\n\t\t\t\t\t\t? (oCard[\"sap.card\"][\"header\"][\"actions\"][0]?.[\"parameters\"] as ICardActionParameters)?.ibnTarget\n\t\t\t\t\t\t: undefined,\n\t\t\t\t\tindex: idx\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tif (manifestIds.length) {\n\t\t\tconst uniqueManifestDetails: ICardDetails[] = this.getUniqueManifestDetails(manifestIds);\n\t\t\tconst aUpdatedCards = await this.regenerateCards(uniqueManifestDetails, manifestIds);\n\t\t\tif (aUpdatedCards?.length) {\n\t\t\t\t// Update the model with updated cards\n\t\t\t\tawait this.cardHelperInstance._updateCards(\n\t\t\t\t\taUpdatedCards.map((oCard: ICardDetails) => oCard?.newManifest?.descriptorContent) as ICardManifest[]\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tawait this.setNewVisibleCards();\n\t\t} else {\n\t\t\tthis._showCards(aCards);\n\t\t}\n\t}\n\n\t/**\n\t * Filters and returns a list of unique manifest IDs.\n\t *\n\t * This method iterates through the provided list of manifest IDs and ensures that only unique entries\n\t * are included in the returned list. Uniqueness is determined based on the `id` and `target` properties.\n\t *\n\t * @param {ICardDetails[]} manifestIds - An array of manifest ID objects to filter for uniqueness.\n\t * Each object contains properties such as `id` and `target`.\n\t * @returns {ICardDetails[]} An array of unique manifest ID objects.\n\t * @private\n\t */\n\tprivate getUniqueManifestDetails(manifestIds: ICardDetails[]): ICardDetails[] {\n\t\tconst uniqueManifestDetails: ICardDetails[] = [];\n\t\tmanifestIds.forEach((item) => {\n\t\t\tconst exists = uniqueManifestDetails.some(\n\t\t\t\t(existingItem) => existingItem.id === item.id && targetsAreEqual(existingItem.target, item.target)\n\t\t\t);\n\t\t\tif (!exists) {\n\t\t\t\tuniqueManifestDetails.push(JSON.parse(JSON.stringify(item)) as ICardDetails);\n\t\t\t}\n\t\t});\n\t\treturn uniqueManifestDetails;\n\t}\n\n\t/**\n\t * Retrieves and processes card manifests based on the provided manifest IDs.\n\t *\n\t * This method fetches card manifests using the `AppManager` instance,\n\t * and removes duplicate regenerated cards to ensure uniqueness.\n\t *\n\t * @param {ICardDetails[]} manifestIds - An array of manifest ID objects to fetch and process.\n\t * Each object contains details such as `id`, `target`, and other card-specific properties.\n\t * @returns {Promise<ICardDetails[]>} A promise that resolves to an array of processed and unique card manifest details.\n\t * @private\n\t */\n\tprivate async _getManifests(manifestIds: ICardDetails[]): Promise<ICardDetails[]> {\n\t\t// from the provided manifestIds which are unique generate new recommended card manifests\n\t\tlet aManifests = await this.appManagerInstance._getCardManifest(undefined, manifestIds);\n\t\tif (aManifests?.length) {\n\t\t\tlet aRegeneratedCards = aManifests.map(function (oCard) {\n\t\t\t\tif (oCard?.[\"sap.card\"]) {\n\t\t\t\t\toCard[\"sap.card\"].rec = true;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tid: oCard[\"sap.app\"]?.id,\n\t\t\t\t\tdescriptorContent: oCard\n\t\t\t\t} as IRegeneratedCard;\n\t\t\t});\n\t\t\t// sometimes same card is recommended more than once, hence remove such duplicates\n\t\t\tlet mappedResults = this._removeDuplicateRegeneratedCards(aRegeneratedCards, manifestIds);\n\t\t\treturn mappedResults;\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Regenerates card manifests and updates the original manifest list with the regenerated data.\n\t *\n\t * This method fetches updated card manifests, maps them to their corresponding original cards,\n\t * and updates the `newManifest` property of the original cards. It ensures that the regenerated\n\t * cards are correctly associated with their original counterparts based on a unique key.\n\t *\n\t * @param {ICardDetails[]} manifestIds - An array of manifest ID objects to regenerate.\n\t * Each object contains details such as `id`, `target`, and other card-specific properties.\n\t * @param {ICardDetails[]} allManifestIds - An array of all manifest ID objects, including those\n\t * that need to be updated with regenerated manifests.\n\t * @returns {Promise<ICardDetails[] | undefined>} A promise that resolves to an array of updated card details,\n\t * or `undefined` if an error occurs.\n\t * @private\n\t */\n\tprivate async regenerateCards(manifestIds: ICardDetails[], allManifestIds: ICardDetails[]): Promise<ICardDetails[] | undefined> {\n\t\ttry {\n\t\t\tlet aMappedManifest = await this._getManifests(manifestIds);\n\n\t\t\t// create unique identifier for each card based on its id and target properties.\n\t\t\tconst createUniqueKey = (item: ICardDetails): string => {\n\t\t\t\tif (item?.target?.semanticObject && item?.target?.action) {\n\t\t\t\t\treturn item.id + \"|\" + item.target.semanticObject + \"|\" + item.target.action;\n\t\t\t\t}\n\t\t\t\treturn item.id; // Return just the id if the target is invalid\n\t\t\t};\n\n\t\t\tlet uniqueMap: Record<string, IRegeneratedCard> = {};\n\t\t\t// Create a map of unique keys to newManifest data\n\t\t\t// Iterate through the aMappedManifest array and populate the uniqueMap with unique keys and their corresponding newManifest data\n\t\t\t// This ensures that each unique key maps to its respective newManifest data, allowing for easy retrieval later.\n\t\t\t// This is done to avoid duplicates and ensure that each card is only represented once in the final output.\n\t\t\taMappedManifest.forEach(function (item) {\n\t\t\t\tlet uniqueKey = createUniqueKey(item);\n\t\t\t\tif (item.newManifest) {\n\t\t\t\t\tuniqueMap[uniqueKey] = item.newManifest;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tlet aUpdatedCards: ICardDetails[] = [];\n\t\t\tif (aMappedManifest.length) {\n\t\t\t\t// Map newManifest data back into allManifestIds based on the uniquekey\n\t\t\t\tallManifestIds.forEach(function (oCard) {\n\t\t\t\t\tlet uniqueKey = createUniqueKey(oCard);\n\t\t\t\t\t// Check if the uniqueKey exists in the uniqueMap, if present, assign the corresponding newManifest data to the oCard object\n\t\t\t\t\t// This effectively updates the oCard object with the newManifest data, allowing for further processing or rendering.\n\t\t\t\t\t// This is done to ensure that the original card objects are updated with the newManifest data, allowing for further processing or rendering.\n\t\t\t\t\tif (uniqueMap[uniqueKey]) {\n\t\t\t\t\t\toCard.newManifest = uniqueMap[uniqueKey];\n\t\t\t\t\t}\n\n\t\t\t\t\tconst newManifest = oCard[\"newManifest\"];\n\t\t\t\t\tconst descriptorContent = newManifest?.descriptorContent;\n\t\t\t\t\tif (descriptorContent) {\n\t\t\t\t\t\tdescriptorContent[\"sap.insights\"] = {\n\t\t\t\t\t\t\t...descriptorContent[\"sap.insights\"],\n\t\t\t\t\t\t\tranking: oCard.rank\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (descriptorContent[\"sap.app\"]) {\n\t\t\t\t\t\t\tdescriptorContent[\"sap.app\"].id = oCard.cardId;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewManifest.id = oCard.cardId;\n\t\t\t\t\t\taUpdatedCards.push(JSON.parse(JSON.stringify(oCard)) as ICardDetails);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn aUpdatedCards;\n\t\t} catch (oError) {\n\t\t\tLog.error(oError instanceof Error ? oError.message : String(oError));\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Removes duplicate regenerated cards and maps them to their corresponding original cards.\n\t *\n\t * This method processes a list of regenerated cards and maps them to their corresponding original cards\n\t * based on their `id`. If a regenerated card matches an original card, it is added as the `newManifest`\n\t * property of the original card. The method ensures that each original card is updated with its corresponding\n\t * regenerated card, if available.\n\t *\n\t * @param {IRegeneratedCard[]} aCards - An array of regenerated cards. Each card contains a `descriptorContent` property\n\t * that includes metadata about the card.\n\t * @param {ICardDetails[]} aOriginalList - An array of original card details. Each card contains an `id` property\n\t * that is used to match it with regenerated cards.\n\t * @returns {ICardDetails[]} An array of original card details, with the `newManifest` property updated for cards\n\t * that have matching regenerated cards.\n\t * @private\n\t */\n\tprivate _removeDuplicateRegeneratedCards(aCards: IRegeneratedCard[], aOriginalList: ICardDetails[]): ICardDetails[] {\n\t\t// Create a mapping from aOriginalList for easy access (grouping by id)\n\t\tconst originalMap = {} as Record<string, ICardDetails>;\n\t\taOriginalList.forEach((originalItem) => {\n\t\t\tif (originalItem.id) {\n\t\t\t\toriginalMap[originalItem.id] = JSON.parse(JSON.stringify(originalItem)) as ICardDetails;\n\t\t\t}\n\t\t});\n\n\t\t// Process each card in aCards\n\t\taCards.forEach(function (oCard) {\n\t\t\tconst sCardId = oCard?.descriptorContent?.[\"sap.insights\"]?.parentAppId as string;\n\t\t\t// Check if we have a matching original list item\n\t\t\tif (sCardId && originalMap[sCardId]) {\n\t\t\t\tconst originalItem = originalMap[sCardId];\n\t\t\t\t// Check if updatedManifest already added\n\t\t\t\tif (!originalItem[\"newManifest\"]) {\n\t\t\t\t\t// Map newManifest to the original item\n\t\t\t\t\toriginalItem[\"newManifest\"] = oCard;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn Object.values(originalMap);\n\t}\n\n\t/**\n\t * Retrieves personalization data from the personalization service.\n\t *\n\t * This method ensures that the personalization service (`oPersonalizer`) is initialized\n\t * and fetches the latest personalization data. If no data is found, it returns an empty object.\n\t *\n\t * @private\n\t * @returns {Promise<IPersonalizationData>} A promise that resolves to the personalization data.\n\t * If no data is available, an empty object is returned.\n\t */\n\tprivate async _getPersonalizationData(): Promise<IPersonalizationData> {\n\t\tif (!this.oPersonalizer) {\n\t\t\tthis.oPersonalizer = await this._getPersonalization();\n\t\t}\n\t\tconst oPersData = await this.oPersonalizer.read();\n\t\treturn oPersData || {};\n\t}\n\n\t// Fetch personalization data property value\n\tprivate async getPersonalisationProperty(propertyKey: string) {\n\t\tconst oPersData = await this._getPersonalizationData();\n\t\treturn oPersData?.[propertyKey as keyof IPersonalizationData];\n\t}\n\n\t/**\n\t * Checks for recommendation cards.\n\t *\n\t * @private\n\t * @returns {Promise<void>} A promise that resolves when the check is complete.\n\t */\n\tprivate async _getRecommendationCards() {\n\t\tconst aRecommendedCards = await this.appManagerInstance.getRecommenedCards();\n\t\tif (aRecommendedCards?.length) {\n\t\t\treturn this._handleRecommendationCards(aRecommendedCards);\n\t\t}\n\t\tthis.fireHandleHidePanel();\n\t}\n\n\t/**\n\t * Handle Recommendation Cards\n\t * @param aRecommendedCards\n\t * @private\n\t */\n\tprivate async _handleRecommendationCards(aRecommendedCards: ICard[]) {\n\t\tconst cardManifests = aRecommendedCards.map((oCard) => oCard.descriptorContent);\n\t\tawait this.cardHelperInstance?._createCards(cardManifests);\n\t\tawait this._updateRecommendationStatus();\n\t\treturn this.setNewVisibleCards();\n\t}\n\n\t/**\n\t * Sets up the wrapper for the cards.\n\t *\n\t * @private\n\t */\n\tprivate _setupWrapper() {\n\t\tif (!this._cardsFlexWrapper) {\n\t\t\tthis._cardsFlexWrapper = new VBox(`${this.getId()}-cardsFlexWrapper`, {\n\t\t\t\trenderType: \"Bare\",\n\t\t\t\twidth: \"100%\",\n\t\t\t\titems: [this._createCardContainer(), this._createMobileCardContainer()]\n\t\t\t});\n\t\t\tthis._cardsFlexWrapper.setModel(this._controlModel);\n\t\t\tthis._addContent(this._cardsFlexWrapper);\n\t\t}\n\t}\n\n\t/**\n\t * Creates the card container.\n\t *\n\t * @private\n\t * @returns {GridContainer} The card container.\n\t */\n\tprivate _createCardContainer() {\n\t\tthis.cardsContainerSettings = new GridContainerSettings(`${this.getId()}-insightsCardsContainerSettings`, {\n\t\t\tcolumnSize: this.cardWidth,\n\t\t\trowSize: this.cardHeight,\n\t\t\tgap: \"1rem\"\n\t\t});\n\t\tthis.cardsContainer = new GridContainer(`${this.getId()}-insightsCardsFlexBox`, {\n\t\t\tvisible: \"{= !${/isPhone}}\"\n\t\t})\n\t\t\t.addStyleClass(\"sapUiSmallMarginTop\")\n\t\t\t.setLayout(this.cardsContainerSettings);\n\t\tthis.cardsContainer.setModel(this._controlModel);\n\t\tthis.addDragDropConfigTo(this.cardsContainer, (oEvent) => this._handleCardsDnd(oEvent));\n\n\t\treturn this.cardsContainer;\n\t}\n\n\t/**\n\t * Creates the mobile card container.\n\t *\n\t * @private\n\t * @returns {HeaderContainer} The mobile card container.\n\t */\n\tprivate _createMobileCardContainer() {\n\t\tthis.cardsMobileContainer = new HeaderContainer(`${this.getId()}-insightsCardsMobileFlexBox`, {\n\t\t\tscrollStep: 0,\n\t\t\tscrollStepByItem: 1,\n\t\t\tgridLayout: true,\n\t\t\tscrollTime: 1000,\n\t\t\tshowDividers: false,\n\t\t\tvisible: \"{/isPhone}\"\n\t\t});\n\t\tthis.cardsMobileContainer.setModel(this._controlModel);\n\t\tthis.addDragDropConfigTo(this.cardsMobileContainer, (oEvent) => this._handleCardsDnd(oEvent));\n\n\t\treturn this.cardsMobileContainer;\n\t}\n\n\t/**\n\t * Displays placeholder cards while loading.\n\t *\n\t * @private\n\t * @returns {void}\n\t */\n\tprivate _showPlaceHolders() {\n\t\tconst cardManifest = this.appManagerInstance._getAnalyticalCardManifest();\n\t\tconst placeholderArray = new Array(this._calculatePlaceholderCardCount()).fill(null);\n\t\tconst aInsightsCards = placeholderArray.map((_, index: number) => {\n\t\t\tconst card = new Card(recycleId(`${this.getId()}--placeHolderCard--${index}`), {\n\t\t\t\twidth: this.cardWidth,\n\t\t\t\theight: this.cardHeight,\n\t\t\t\tpreviewMode: \"Abstract\",\n\t\t\t\tmanifest: cardManifest,\n\t\t\t\thost: this.getProperty(\"host\") as Control\n\t\t\t}).addStyleClass(\"sapUiSmallMarginEnd\");\n\t\t\treturn card;\n\t\t});\n\t\t// Create Wrapper HBox for Card\n\t\tconst oPreviewHBox = new HBox(recycleId(`${this.getId()}--wrapperBox`), {\n\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\titems: aInsightsCards\n\t\t});\n\n\t\t// add HBox as item to GridList\n\t\tconst sDefaultAggreName = this._getCardContainer().getMetadata().getDefaultAggregationName();\n\t\tif (sDefaultAggreName) {\n\t\t\tthis._getCardContainer().addAggregation(sDefaultAggreName, oPreviewHBox);\n\t\t}\n\t}\n\n\t/**\n\t * Calculates the number of placeholder cards that can fit within the available container width.\n\t *\n\t * @private\n\t * @returns {number} The number of placeholder cards that should be displayed. Defaults to 1 if no valid count is determined.\n\t */\n\tprivate _calculatePlaceholderCardCount(): number {\n\t\tconst layoutDomRef = this._getInsightsContainer()?._getLayout()?.getDomRef();\n\t\tlet count = 0;\n\t\tif (layoutDomRef) {\n\t\t\tconst sectionDomRef = layoutDomRef.childNodes[0] as Element;\n\t\t\tconst domProperties = fetchElementProperties(sectionDomRef, [\"width\", \"padding-left\", \"padding-right\"]);\n\t\t\tlet availableWidth = domProperties.width - domProperties[\"padding-left\"] - domProperties[\"padding-right\"];\n\t\t\tconst cardLayoutConfig = {\n\t\t\t\tcontainerWidth: availableWidth,\n\t\t\t\ttotalCards: Constants.PLACEHOLDER_CARD_COUNT,\n\t\t\t\tminWidth: 304,\n\t\t\t\tmaxWidth: 583\n\t\t\t};\n\t\t\tconst cardWidth = this.getDeviceType() === DeviceType.Mobile ? 19 : calculateCardWidth(cardLayoutConfig);\n\n\t\t\t// Calculate and log the number of cards that can fit\n\t\t\tcount =\n\t\t\t\tthis.getDeviceType() === DeviceType.Mobile\n\t\t\t\t\t? this.aVisibleCardInstances.length\n\t\t\t\t\t: Math.floor(availableWidth / (cardWidth + Constants.CARDS_GAP));\n\t\t\tthis.cardWidth = `${cardWidth / 16}rem`;\n\t\t}\n\n\t\treturn count || 1;\n\t}\n\n\t/**\n\t * Displays the cards.\n\t *\n\t * @private\n\t * @param {ICard[]} aCards - The cards to display.\n\t */\n\tprivate _showCards(aCards: ICard[]) {\n\t\tconst panelName = this.getMetadata().getName();\n\t\tthis.fireHandleUnhidePanel();\n\t\tthis._getInsightsContainer()?.updatePanelsItemCount(aCards.length, panelName);\n\t\tif (this._headerVisible) {\n\t\t\tthis.setProperty(\n\t\t\t\t\"title\",\n\t\t\t\t`${this._i18nBundle?.getText(\"insights\")} ${this._i18nBundle.getText(\"insightsCardsTitle\")} (${aCards.length})`\n\t\t\t);\n\t\t}\n\t\tconst sDefaultAggreName = this._getCardContainer().getMetadata().getDefaultAggregationName();\n\t\tthis._getCardContainer().removeAllAggregation(sDefaultAggreName);\n\t\tthis.aVisibleCardInstances = [];\n\t\tthis.cardsInViewport = [];\n\n\t\t// Setup Host For Cards\n\t\tif (!runtimeHostCreated) {\n\t\t\tthis._addRuntimeHost();\n\t\t\truntimeHostCreated = true;\n\t\t}\n\n\t\taCards.forEach((oCard, index) => {\n\t\t\tconst manifest = oCard.descriptorContent;\n\t\t\t// Create Card Instance\n\t\t\tconst oUserCard = new Card(recycleId(`${this.getId()}--userCard--${index}`), {\n\t\t\t\twidth: this.cardWidth,\n\t\t\t\theight: this.cardHeight,\n\t\t\t\tmanifest,\n\t\t\t\thost: this.getProperty(\"host\") as Control\n\t\t\t});\n\n\t\t\tthis.aVisibleCardInstances.push(oUserCard);\n\n\t\t\tthis.addAggregation(\"cards\", oUserCard, true);\n\n\t\t\tconst items: Control[] = [oUserCard];\n\n\t\t\t// Add overlay in case of List and Table Card\n\t\t\tconst sType = manifest[\"sap.card\"]?.type;\n\t\t\tif (sType === \"Table\" || sType === \"List\") {\n\t\t\t\tconst overlay = new HBox(recycleId(`${this.getId()}--overlay--${index}`), {\n\t\t\t\t\twidth: this.cardWidth,\n\t\t\t\t\theight: \"2rem\"\n\t\t\t\t}).addStyleClass(\"insightsCardOverflowTop\");\n\t\t\t\tconst overlayHBoxWrapper = new HBox(recycleId(`${this.getId()}--overlayHBoxId--${index}`), {\n\t\t\t\t\theight: \"0\"\n\t\t\t\t}).addStyleClass(\"sapMFlexBoxJustifyCenter\");\n\t\t\t\toverlayHBoxWrapper.addItem(overlay);\n\t\t\t\titems.push(overlayHBoxWrapper);\n\t\t\t}\n\n\t\t\t// Create Wrapper VBox for Card\n\t\t\tconst oPreviewVBox = new VBox(recycleId(`${this.getId()}--previewBoxId--${index}`), {\n\t\t\t\tdirection: \"Column\",\n\t\t\t\tjustifyContent: \"Center\",\n\t\t\t\titems: items\n\t\t\t});\n\n\t\t\t// add VBox as item to GridList\n\t\t\tconst sDefaultAggreName = this._getCardContainer().getMetadata().getDefaultAggregationName();\n\t\t\tthis._getCardContainer().addAggregation(sDefaultAggreName, oPreviewVBox);\n\t\t});\n\t}\n\n\t/**\n\t * Handles the edit cards event.\n\t *\n\t * @private\n\t * @param {Event} event - The event object.\n\t */\n\tprivate _handleEditCards(event: Event) {\n\t\t/* If called from Panel Header event.source() will return TilesPanel, if called from Insights Container event.source() will return InsightsContainer.\n\t\t_getLayout is available at Container Level*/\n\t\tlet parent: ManagedObject = event.getSource<CardsPanel>().getParent() || this;\n\t\tif (parent?.isA(\"sap.cux.home.CardsPanel\")) {\n\t\t\tparent = parent.getParent() as ManagedObject;\n\t\t}\n\t\t(parent as InsightsContainer)?._getLayout().openSettingsDialog(SETTINGS_PANELS_KEYS.INSIGHTS_CARDS);\n\t}\n\n\t/**\n\t * Hides the header of the cards panel.\n\t *\n\t * @private\n\t */\n\tpublic handleHideHeader() {\n\t\tthis._headerVisible = false;\n\t\tthis.setProperty(\"title\", \"\");\n\t\tthis._toggleHeaderActions(false);\n\t}\n\n\t/**\n\t * Adds the header to the cards panel.\n\t *\n\t * @private\n\t */\n\tpublic handleAddHeader() {\n\t\tthis._headerVisible = true;\n\t\tthis.setProperty(\n\t\t\t\"title\",\n\t\t\t`${this._i18nBundle?.getText(\"insights\")} ${this._i18nBundle.getText(\"insightsCardsTitle\")} (${(this._controlModel.getProperty(\"/userVisibleCards\") as ICard[])?.length})`\n\t\t);\n\t\tthis._toggleHeaderActions(true);\n\t}\n\n\t/**\n\t * Refreshes the cards.\n\t *\n\t * @private\n\t */\n\tprivate refreshCards() {\n\t\t// This should be done via Host once implemented\n\t\tthis.aVisibleCardInstances.forEach((card) => this._refreshCardData(card));\n\t}\n\n\t/**\n\t * Handles the drag and drop of cards.\n\t *\n\t * @private\n\t * @param {Event<DropInfo$DropEventParameters>} oEvent - The drop event parameters.\n\t */\n\tprivate async _handleCardsDnd(oEvent: Event<DropInfo$DropEventParameters>) {\n\t\tconst sInsertPosition = oEvent.getParameter(\"dropPosition\") as string,\n\t\t\toDragItem = oEvent.getParameter(\"draggedControl\") as Control,\n\t\t\tiDragItemIndex = (oDragItem.getParent() as GridContainer)?.indexOfItem(oDragItem),\n\t\t\toDropItem = oEvent.getParameter(\"droppedControl\") as Control,\n\t\t\tiDropItemIndex = (oDragItem.getParent() as GridContainer).indexOfItem(oDropItem);\n\n\t\tthis._cardsFlexWrapper?.setBusy(true);\n\t\t// take the moved item from dragIndex and add to dropindex\n\t\ttry {\n\t\t\tif (!(this._controlModel.getProperty(\"/userAllCards\") as ICard[]).length) {\n\t\t\t\tconst userAllCardsModel = await this.cardHelperInstance._getUserAllCardModel();\n\t\t\t\tthis._controlModel.setProperty(\"/userAllCards\", userAllCardsModel.getProperty(\"/cards\"));\n\t\t\t\tawait this.updateCardList(sInsertPosition, iDropItemIndex, iDragItemIndex);\n\t\t\t} else {\n\t\t\t\tawait this.updateCardList(sInsertPosition, iDropItemIndex, iDragItemIndex);\n\t\t\t}\n\t\t\tsetTimeout(() => {\n\t\t\t\tfocusDraggedItem(this._getCardContainer(), iDropItemIndex);\n\t\t\t}, 0);\n\t\t} catch (error) {\n\t\t\tif (error instanceof Error) {\n\t\t\t\tLog.error(error.message);\n\t\t\t}\n\t\t} finally {\n\t\t\tthis._cardsFlexWrapper?.setBusy(false);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the card list based on the drag and drop operation.\n\t *\n\t * @private\n\t * @param {string} sInsertPosition - The position to insert the item.\n\t * @param {number} iDropItemIndex - The index of the dropped item.\n\t * @param {number} iDragItemIndex - The index of the dragged item.\n\t * @returns {Promise<void>} A promise that resolves when the card list is updated.\n\t */\n\tprivate async updateCardList(sInsertPosition: string, iDropItemIndex: number, iDragItemIndex: number) {\n\t\tconst aUserVisibleCards = this._controlModel.getProperty(\"/userVisibleCards\") as ICard[],\n\t\t\taUserAllCards = this._controlModel.getProperty(\"/userAllCards\") as ICard[],\n\t\t\tsDragedPositionRank = aUserVisibleCards[iDragItemIndex]?.rank,\n\t\t\tsDropedPositionRank = aUserVisibleCards[iDropItemIndex]?.rank;\n\t\tlet iUpdatedDragItemIndex = aUserAllCards.findIndex((oCard: ICard) => oCard.rank === sDragedPositionRank),\n\t\t\tiUpdatedDropItemIndex = aUserAllCards.findIndex((oCard: ICard) => oCard.rank === sDropedPositionRank);\n\n\t\tif (\n\t\t\t(sInsertPosition === \"Before\" && iDragItemIndex === iDropItemIndex - 1) ||\n\t\t\t(sInsertPosition === \"After\" && iDragItemIndex === iDropItemIndex + 1) ||\n\t\t\tiDragItemIndex === iDropItemIndex\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tif (sInsertPosition === \"Before\" && iUpdatedDragItemIndex < iUpdatedDropItemIndex) {\n\t\t\tiUpdatedDropItemIndex--;\n\t\t} else if (sInsertPosition === \"After\" && iUpdatedDragItemIndex > iUpdatedDropItemIndex) {\n\t\t\tiUpdatedDropItemIndex++;\n\t\t}\n\t\tif (iUpdatedDragItemIndex !== iUpdatedDropItemIndex) {\n\t\t\tconst aUpdatedCards = this.cardHelperInstance.handleDndCardsRanking(\n\t\t\t\tiUpdatedDragItemIndex,\n\t\t\t\tiUpdatedDropItemIndex,\n\t\t\t\taUserAllCards\n\t\t\t);\n\t\t\tawait this.cardHelperInstance._updateMultipleCards(aUpdatedCards, \"PUT\");\n\t\t\tthis._sortCardsOnRank(aUserAllCards);\n\t\t\tthis._controlModel.setProperty(\"/userAllCards\", aUserAllCards);\n\t\t\tthis._controlModel.setProperty(\n\t\t\t\t\"/userVisibleCards\",\n\t\t\t\taUserAllCards.filter((oCard: ICard) => oCard.visibility)\n\t\t\t);\n\t\t\tawait this.rerenderCards();\n\t\t}\n\t}\n\n\t/**\n\t * Sorts the cards based on their rank property.\n\t *\n\t * @private\n\t * @param {ICard[]} aCards - The array of cards to sort.\n\t */\n\tprivate _sortCardsOnRank(aCards: ICard[]) {\n\t\t// Sort Cards based on it rank property where rank is a alphanumeric string\n\t\taCards.sort((a, b) => {\n\t\t\tif (a.rank && b.rank) {\n\t\t\t\tif (a.rank < b.rank) {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else if (a.rank > b.rank) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves the personalization instance.\n\t *\n\t * @private\n\t * @returns {UShellPersonalizer} The personalization instance.\n\t */\n\tpublic _getPersonalization() {\n\t\tconst persContainerId = PersonalisationUtils.getPersContainerId(this);\n\t\tconst ownerComponent = PersonalisationUtils.getOwnerComponent(this) as Component;\n\t\treturn UShellPersonalizer.getInstance(persContainerId, ownerComponent);\n\t}\n\n\t/**\n\t * Updates the recommendation status based on the feature toggle.\n\t * @returns {Promise} A promise that resolves when the recommendation status is updated.\n\t */\n\tprivate async _updateRecommendationStatus() {\n\t\tconst oPersData = await this._getPersonalizationData();\n\t\toPersData[RECOMMENDATION_PATH] = true;\n\t\treturn this.oPersonalizer.write(oPersData);\n\t}\n\n\t/**\n\t * Calculates the number of visible cards that can fit within the available width of the parent container.\n\t *\n\t * @private\n\t * @returns {number} - The number of visible cards.\n\t */\n\tprivate _calculateVisibleCardCount() {\n\t\tconst layout = this._getInsightsContainer()._getLayout();\n\t\tconst pageDomRef = layout.getDomRef();\n\t\tconst deviceType = this.getDeviceType();\n\t\tlet count = 1;\n\n\t\tif (pageDomRef) {\n\t\t\tconst isHeaderVisible = layout.getProperty(\"showHeader\") as boolean;\n\t\t\tconst sectionNodeIndex = isHeaderVisible ? 1 : 0;\n\t\t\tconst sectionDomRef = pageDomRef.childNodes[sectionNodeIndex] as Element;\n\t\t\tconst domProperties = fetchElementProperties(sectionDomRef, [\"width\", \"padding-left\", \"padding-right\"]);\n\t\t\tconst iAvailableWidth = domProperties.width - domProperties[\"padding-left\"] - domProperties[\"padding-right\"];\n\t\t\tconst totalCards = this.aVisibleCardInstances.length;\n\n\t\t\tconst cardLayoutConfig = { containerWidth: iAvailableWidth, totalCards: totalCards, minWidth: 304, maxWidth: 583 };\n\t\t\tconst cardWidth = calculateCardWidth(cardLayoutConfig);\n\t\t\tthis.cardWidth = `${cardWidth / 16}rem`;\n\t\t\tif (deviceType === DeviceType.Mobile) {\n\t\t\t\tcount = totalCards;\n\t\t\t} else {\n\t\t\t\t// Multiply by 16 because `cardWidth` is in rems\n\t\t\t\tcount = Math.max(Math.floor(iAvailableWidth / cardWidth), 1);\n\t\t\t}\n\t\t}\n\n\t\treturn count;\n\t}\n\n\t/**\n\t * Adjusts the layout of the cards panel based on the current layout and device type.\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic _adjustLayout() {\n\t\tconst layout = this._getInsightsContainer()?._getLayout();\n\t\tlet cardWidth = this.cardWidth;\n\t\tconst isMobileDevice = this.getDeviceType() === DeviceType.Mobile;\n\n\t\tif (layout && this.aVisibleCardInstances?.length > 0) {\n\t\t\tconst isElementExpanded = layout._getCurrentExpandedElementName() === this.getProperty(\"fullScreenName\");\n\n\t\t\t//_calculateVisibleCardCount needs to be called in all scenarios to get the correct card width according to device width.\n\t\t\t//if expanded, again the card count is reset to available cards count\n\t\t\tlet cardCount = this._calculateVisibleCardCount();\n\t\t\tif (isElementExpanded) {\n\t\t\t\tcardCount = this.aVisibleCardInstances.length;\n\t\t\t}\n\t\t\tthis._controlModel.setProperty(\"/isPhone\", isMobileDevice);\n\n\t\t\t// update cards in viewport\n\t\t\tif (cardCount !== this.cardsInViewport.length) {\n\t\t\t\tthis.cardsInViewport = this.aVisibleCardInstances.slice(0, cardCount);\n\n\t\t\t\tconst sDefaultAggreName = this._getCardContainer().getMetadata().getDefaultAggregationName();\n\t\t\t\tthis._getCardContainer().removeAllAggregation(sDefaultAggreName);\n\t\t\t\tthis.cardsInViewport.forEach((card) => {\n\t\t\t\t\tconst manifest = card.getManifest() as ICardManifest;\n\t\t\t\t\tconst sType = manifest[\"sap.card\"]?.type;\n\t\t\t\t\tlet overlayHBoxWrapper!: HBox;\n\t\t\t\t\tif (sType === \"Table\" || sType === \"List\") {\n\t\t\t\t\t\tconst overlay = new HBox({\n\t\t\t\t\t\t\twidth: this.cardWidth,\n\t\t\t\t\t\t\theight: \"2rem\"\n\t\t\t\t\t\t}).addStyleClass(\"insightsCardOverflowLayer insightsCardOverflowTop\");\n\t\t\t\t\t\toverlayHBoxWrapper = new HBox({\n\t\t\t\t\t\t\theight: \"0\"\n\t\t\t\t\t\t}).addStyleClass(\"sapMFlexBoxJustifyCenter\");\n\t\t\t\t\t\toverlayHBoxWrapper.addItem(overlay);\n\t\t\t\t\t}\n\t\t\t\t\tconst cardWrapper = new VBox({\n\t\t\t\t\t\tdirection: \"Column\",\n\t\t\t\t\t\tjustifyContent: \"Center\",\n\t\t\t\t\t\titems: [card]\n\t\t\t\t\t});\n\t\t\t\t\tif (overlayHBoxWrapper) {\n\t\t\t\t\t\tcardWrapper.addItem(overlayHBoxWrapper);\n\t\t\t\t\t}\n\t\t\t\t\tconst sDefaultAggreName = this._getCardContainer().getMetadata().getDefaultAggregationName();\n\t\t\t\t\tthis._getCardContainer().addAggregation(sDefaultAggreName, cardWrapper);\n\t\t\t\t});\n\n\t\t\t\tthis.shareCardsInViewport();\n\t\t\t}\n\n\t\t\t// show/hide Full Screen Button if available\n\t\t\tconst showFullScreenButton = isElementExpanded || this.aVisibleCardInstances.length > cardCount;\n\t\t\tif (this._headerVisible) {\n\t\t\t\tthis._getInsightsContainer()?.toggleFullScreenElements(this, showFullScreenButton);\n\t\t\t} else {\n\t\t\t\tconst fullScreenButton = getAssociatedFullScreenMenuItem(this);\n\t\t\t\tconst fullScreenText = fullScreenButton.getTitle();\n\t\t\t\tthis._getInsightsContainer()?.updateMenuItem(\n\t\t\t\t\tthis._controlMap.get(`${this.getId()}-${cardsContainerMenuItems.SHOW_MORE}`) as MenuItem,\n\t\t\t\t\tshowFullScreenButton,\n\t\t\t\t\tfullScreenText\n\t\t\t\t);\n\t\t\t\tthis._getInsightsContainer()?.updateActionButton(\n\t\t\t\t\tthis._controlMap.get(`${this.getId()}-${cardsContainerActionButtons.SHOW_MORE}`) as Button,\n\t\t\t\t\tshowFullScreenButton,\n\t\t\t\t\tfullScreenText\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.cardWidth = this.getDeviceType() === DeviceType.Mobile ? \"19rem\" : \"22rem\";\n\t\t}\n\n\t\t// update width of cards on resize\n\t\tif (cardWidth !== this.cardWidth) {\n\t\t\tthis.aVisibleCardInstances.forEach((card) => card.setWidth(this.cardWidth));\n\t\t\tthis.cardsContainerSettings?.setColumnSize(this.cardWidth);\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the menu items for the container.\n\t *\n\t * @private\n\t * @returns {MenuItem[]} An array of MenuItem instances.\n\t */\n\tpublic getContainerMenuItems(): MenuItem[] {\n\t\tif (!this._containerMenuItems) {\n\t\t\tconst containerRefreshMenuItem = this._createRefreshMenuItem(cardsContainerMenuItems.REFRESH, \"containerCardsRefresh\");\n\t\t\tconst containerEditCardsMenuItem = this._createEditCardsMenuItem(cardsContainerMenuItems.EDIT_CARDS, \"containerManageCards\");\n\t\t\tconst containerShowMoreMenuItem = createShowMoreMenuItem(this, cardsContainerMenuItems.SHOW_MORE, \"containerCardsShowMore\");\n\t\t\tthis._controlMap.set(`${this.getId()}-${cardsContainerMenuItems.SHOW_MORE}`, containerShowMoreMenuItem);\n\t\t\tthis._containerMenuItems = [containerRefreshMenuItem, containerEditCardsMenuItem, containerShowMoreMenuItem];\n\t\t}\n\t\treturn this._containerMenuItems;\n\t}\n\n\t/**\n\t * Retrieves the action buttons for the container.\n\t *\n\t * @private\n\t * @returns {Button[]} An array of Button instances.\n\t */\n\tpublic getContainerActionButtons(): Button[] {\n\t\tif (!this._containerActionButtons) {\n\t\t\tthis._containerActionButtons = [];\n\t\t\tconst actionButton = createShowMoreActionButton(this, cardsContainerActionButtons.SHOW_MORE, \"containerCardsShowMore\");\n\t\t\tif (actionButton) {\n\t\t\t\tthis._controlMap.set(`${this.getId()}-${cardsContainerActionButtons.SHOW_MORE}`, actionButton);\n\t\t\t\tthis._containerActionButtons.push(actionButton);\n\t\t\t}\n\t\t}\n\n\t\treturn this._containerActionButtons;\n\t}\n\n\t/**\n\t * Retrieves the insights container.\n\t *\n\t * @private\n\t * @returns {InsightsContainer} - The insights container.\n\t */\n\tprivate _getInsightsContainer(): InsightsContainer {\n\t\tif (!this.insightsContainer) {\n\t\t\tthis.insightsContainer = this.getParent() as InsightsContainer;\n\t\t}\n\t\treturn this.insightsContainer;\n\t}\n\n\t/**\n\t * Creates the refresh menu item.\n\t *\n\t * @param {string} id - The ID of the menu item.\n\t * @param {string} fesrId - The FESR ID of the menu item.\n\t * @returns {MenuItem} - The created menu item.\n\t * @private\n\t */\n\tprivate _createRefreshMenuItem(id: string, fesrId?: string): MenuItem {\n\t\tconst menuItem = new MenuItem(`${this.getId()}-${id}`, {\n\t\t\ttitle: this._i18nBundle.getText(\"refresh\"),\n\t\t\ticon: \"sap-icon://refresh\",\n\t\t\tvisible: false,\n\t\t\tpress: () => this.refreshCards()\n\t\t});\n\t\tthis._controlMap.set(`${this.getId()}-${id}`, menuItem);\n\t\tif (fesrId) {\n\t\t\taddFESRId(menuItem, fesrId);\n\t\t}\n\n\t\treturn menuItem;\n\t}\n\n\t/**\n\t * Creates the edit cards menu item.\n\t *\n\t * @param {string} id - The ID of the menu item.\n\t * @param {string} fesrId - The FESR ID of the menu item.\n\t * @returns {MenuItem} - The created menu item.\n\t * @private\n\t */\n\tprivate _createEditCardsMenuItem(id: string, fesrId?: string): MenuItem {\n\t\tconst menuItem = new MenuItem(`${this.getId()}-${id}`, {\n\t\t\ttitle: this._i18nBundle.getText(\"manageCards\"),\n\t\t\ticon: \"sap-icon://edit\",\n\t\t\tvisible: false,\n\t\t\tpress: (event: Event) => this._handleEditCards(event)\n\t\t});\n\t\tthis._controlMap.set(`${this.getId()}-${id}`, menuItem);\n\t\tif (fesrId) {\n\t\t\taddFESRId(menuItem, fesrId);\n\t\t}\n\t\treturn menuItem;\n\t}\n\n\t/**\n\t * Creates the Add Insight cards menu item.\n\t *\n\t * @param {string} id - The ID of the menu item.\n\t * @param {string} fesrId - The FESR ID of the menu item.\n\t * @returns {MenuItem} - The created menu item.\n\t * @private\n\t */\n\tprivate _createAddInsightCardMenuItem(id: string, fesrId?: string): MenuItem {\n\t\tconst menuItem = new MenuItem(`${this.getId()}-${id}`, {\n\t\t\ttitle: this._i18nBundle.getText(\"addInsightsCard\"),\n\t\t\ticon: \"sap-icon://duplicate\",\n\t\t\tvisible: false,\n\t\t\tpress: () => this._generateInsightCardsWithAI()\n\t\t});\n\t\tthis._controlMap.set(`${this.getId()}-${id}`, menuItem);\n\t\tif (fesrId) {\n\t\t\taddFESRId(menuItem, fesrId);\n\t\t}\n\t\treturn menuItem;\n\t}\n\n\t/**\n\t * Generates insight cards using AI. The showAddCardWithSearchDialog method of the card helper service instance\n\t * is called with  a callback which updates the control model with the visible cards\n\t * @private\n\t */\n\tprivate _generateInsightCardsWithAI() {\n\t\tthis.cardHelperInstance.showAddCardWithSearchDialog(async () => {\n\t\t\tawait this.rerenderCards(true);\n\t\t});\n\t}\n\n\t/**\n\t * Checks if the current device type is a desktop.\n\t *\n\t * @returns {boolean} True if the device is not a mobile or tablet, otherwise false.\n\t */\n\tprivate _isDesktopDevice(): boolean {\n\t\tconst deviceType = this.getDeviceType();\n\t\treturn deviceType !== DeviceType.Mobile && deviceType !== DeviceType.Tablet;\n\t}\n\n\t/**\n\t * Returns AI_GENERATED_CARD feature toggle status and set the value to addAICardFlagEnabled\n\t * @private\n\t */\n\tpublic async updateAICardCreationStatus(): Promise<void> {\n\t\tlet aPromises = [\n\t\t\tContainer.getServiceAsync<Navigation>(\"Navigation\"),\n\t\t\tthis.appManagerInstance.isFeatureEnabled(FEATURE_TOGGLES.AI_GENERATED_CARD)\n\t\t];\n\t\treturn await Promise.all(aPromises).then((aResult) => {\n\t\t\tlet oNavigationService = aResult[0] as Navigation;\n\t\t\tlet enabled: boolean = aResult[1] as boolean;\n\t\t\t// if smart toggle enabled check if navigation supported\n\t\t\tif (enabled) {\n\t\t\t\toNavigationService\n\t\t\t\t\t.isNavigationSupported([\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\tsemanticObject: \"IntelligentPrompt\",\n\t\t\t\t\t\t\t\taction: \"personalize\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t])\n\t\t\t\t\t.then((aResponses) => {\n\t\t\t\t\t\tthis.aiFlagEnabled = aResponses[0].supported || false;\n\t\t\t\t\t\tif (this.aiFlagEnabled && this._isDesktopDevice()) {\n\t\t\t\t\t\t\tconst addInsightCardMenuItem = this._createAddInsightCardMenuItem(\n\t\t\t\t\t\t\t\tcardsMenuItems.AI_INSIGHT_CARD,\n\t\t\t\t\t\t\t\t\"AddAIInsightCard\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis.addAggregation(\"menuItems\", addInsightCardMenuItem);\n\t\t\t\t\t\t\tthis._sortMenuItems(sortedMenuItems);\n\t\t\t\t\t\t\tconst containerAddInsightMenuItem = this._createAddInsightCardMenuItem(\n\t\t\t\t\t\t\t\tcardsContainerMenuItems.AI_INSIGHT_CARD,\n\t\t\t\t\t\t\t\t\"AddAIInsightCard\"\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tconst CardsPanelName = this.getMetadata().getName();\n\t\t\t\t\t\t\tconst InsightsContainerName = this._getInsightsContainer().getMetadata().getName();\n\t\t\t\t\t\t\tconst parentContainerContent = this._getInsightsContainer().getContent();\n\t\t\t\t\t\t\tconst TilesPanelName =\n\t\t\t\t\t\t\t\tparentContainerContent\n\t\t\t\t\t\t\t\t\t.find((panel) => panel instanceof TilesPanel)\n\t\t\t\t\t\t\t\t\t?.getMetadata()\n\t\t\t\t\t\t\t\t\t?.getName() || \"\";\n\n\t\t\t\t\t\t\t// Check if the specific panels exist within the insights container\n\t\t\t\t\t\t\tconst cardPanelExist = checkPanelExists(this.insightsContainer, InsightsContainerName, CardsPanelName);\n\t\t\t\t\t\t\tconst tilePanelExist = checkPanelExists(this.insightsContainer, InsightsContainerName, TilesPanelName);\n\n\t\t\t\t\t\t\t// Apply visibility settings to the respective menu items\n\t\t\t\t\t\t\tcontainerAddInsightMenuItem.setVisible(!cardPanelExist || !tilePanelExist);\n\t\t\t\t\t\t\taddInsightCardMenuItem.setVisible(cardPanelExist && tilePanelExist);\n\n\t\t\t\t\t\t\t// call addcommonmenuitems so that the new menuitem is added to the container\n\t\t\t\t\t\t\tthis.insightsContainer?.addCommonMenuItems([containerAddInsightMenuItem]);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tLog.warning(error instanceof Error ? error.message : String(error));\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Toggles the visibility of the header actions.\n\t *\n\t * @param {boolean} bShow - Whether to show or hide the header actions.\n\t * @private\n\t */\n\tprivate _toggleHeaderActions(bShow: boolean) {\n\t\t(this.getAggregation(\"menuItems\") as MenuItem[])?.forEach((menuItem) => {\n\t\t\tthis._getInsightsContainer()?.toggleMenuListItem(menuItem, bShow);\n\t\t});\n\t\t(this.getAggregation(\"actionButtons\") as Button[])?.forEach((actionButton) =>\n\t\t\tthis._getInsightsContainer()?.toggleActionButton(actionButton, bShow)\n\t\t);\n\t}\n\n\t/**\n\t * Retrieves the card container based on the device type.\n\t *\n\t * @private\n\t * @returns {GridContainer | HeaderContainer} - The card container.\n\t *\n\t */\n\tprivate _getCardContainer() {\n\t\tif (this.getDeviceType() === DeviceType.Mobile) {\n\t\t\treturn this.cardsMobileContainer;\n\t\t}\n\t\treturn this.cardsContainer;\n\t}\n\n\t/**\n\t * Sorts the menu items based on the provided order.\n\t *\n\t * @private\n\t * @param {string[]} menuItems - The order of the menu items.\n\t */\n\tprivate _sortMenuItems(menuItems: string[]) {\n\t\tconst panelMenuItems = this.getAggregation(\"menuItems\") as MenuItem[];\n\t\tlet sortedMenuItems = sortMenuItems(menuItems, panelMenuItems);\n\t\tthis.removeAllAggregation(\"menuItems\");\n\t\tsortedMenuItems?.forEach((menuItem) => this.addAggregation(\"menuItems\", menuItem));\n\t}\n\n\t/**\n\t * Shares the cards that are currently in the viewport by firing the \"visibleCardsUpdated\" event.\n\t *\n\t * @private\n\t */\n\tprivate shareCardsInViewport() {\n\t\tconst cardCount = this._calculateVisibleCardCount();\n\t\tconst visibleCards = this._controlModel.getProperty(\"/userVisibleCards\") as ICard[];\n\t\tconst cardsInViewport = visibleCards?.slice(0, cardCount);\n\t\tif (cardsInViewport?.length) {\n\t\t\tthis.fireEvent(\"visibleCardsUpdated\", { cards: cardsInViewport });\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":96,"column":0},"map":{"version":3,"names":["sap","ui","define","Button","FlexBox","IconTabBar","IconTabFilter","IllustratedMessage","IllustratedMessageSize","IllustratedMessageType","sap_m_library","__AppsAdditionPanel","__BaseSettingsDialog","__InsightsAdditionPanel","_interopRequireDefault","obj","__esModule","default","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","_forTo","array","body","check","i","reject","_cycle","length","BackgroundDesign","_forOf","target","step","next","done","return","_fixup","TypeError","values","push","ButtonType","IconTabHeaderMode","AppsAdditionPanel","BaseSettingsDialog","InsightsAdditionPanel","ContentAdditionDialog","extend","renderer","apiVersion","init","_init","BaseSettingsDialog.prototype.init.call","setStretch","setContentWidth","setContentHeight","setVerticalScrolling","setTitle","_i18nBundle","getText","addStyleClass","setEscapeHandler","onDialogClose","addPanel","getId","_setupDialogContent","iconTabBar","headerMode","Inline","backgroundDesign","Transparent","select","setProperty","getSelectedKey","updateActionButtons","errorMessageContainer","direction","renderType","height","justifyContent","items","illustrationSize","Auto","illustrationType","NoData","wrapper","addContent","onBeforeRendering","_onBeforeRendering","event","BaseSettingsDialog.prototype.onBeforeRendering.call","_addPanelsToIconTabBar","selectedKey","getProperty","setSelectedKey","_temp3","panelsAdded","_temp2","hasItems","getItems","setVisible","panels","getPanels","_temp","panel","Promise","resolve","isSupported","key","iconTabFilter","text","content","getAggregation","forEach","control","addItem","_getPanel","find","_updateActionButtons","cancelButton","type","press","removeAllButtons","getActionButtons","button","addButton","_onDialogClose","fireEvent","close"],"sources":["ContentAdditionDialog.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport { Event as JQueryEvent } from \"jquery\";\nimport Button from \"sap/m/Button\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport IconTabBar from \"sap/m/IconTabBar\";\nimport IconTabFilter from \"sap/m/IconTabFilter\";\nimport IllustratedMessage from \"sap/m/IllustratedMessage\";\nimport IllustratedMessageSize from \"sap/m/IllustratedMessageSize\";\nimport IllustratedMessageType from \"sap/m/IllustratedMessageType\";\nimport { BackgroundDesign, ButtonType, IconTabHeaderMode } from \"sap/m/library\";\nimport Control from \"sap/ui/core/Control\";\nimport AppsAdditionPanel from \"./AppsAdditionPanel\";\nimport BaseSettingsDialog from \"./BaseSettingsDialog\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\nimport InsightsAdditionPanel from \"./InsightsAdditionPanel\";\n\n/**\n *\n * Dialog class for My Home Content Addition.\n *\n * @extends BaseSettingsDialog\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.136\n *\n * @internal\n * @experimental Since 1.136\n * @private\n *\n * @alias sap.cux.home.ContentAdditionDialog\n */\nexport default class ContentAdditionDialog extends BaseSettingsDialog {\n\tprivate iconTabBar!: IconTabBar;\n\tprivate cancelButton!: Button;\n\tprivate panelsAdded!: boolean;\n\tprivate errorMessageContainer!: FlexBox;\n\n\tstatic renderer = {\n\t\tapiVersion: 2\n\t};\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\t//setup dialog\n\t\tthis.setStretch(false);\n\t\tthis.setContentWidth(\"59.375rem\");\n\t\tthis.setContentHeight(\"43.75rem\");\n\t\tthis.setVerticalScrolling(false);\n\t\tthis.setTitle(this._i18nBundle.getText(\"addContent\"));\n\t\tthis.addStyleClass(\"sapCuxContentAdditionDialog\");\n\t\tthis.setEscapeHandler(this.onDialogClose.bind(this));\n\n\t\t//setup panels\n\t\tthis.addPanel(new AppsAdditionPanel(`${this.getId()}-appsAdditionPanel`));\n\t\tthis.addPanel(new InsightsAdditionPanel(`${this.getId()}-cardsAdditionPanel`));\n\n\t\t//setup content\n\t\tthis._setupDialogContent();\n\t}\n\n\t/**\n\t * Sets up the dialog content with an icon tab bar and error message container.\n\t *\n\t * @private\n\t */\n\tprivate _setupDialogContent(): void {\n\t\tthis.iconTabBar = new IconTabBar(`${this.getId()}-iconTabBar`, {\n\t\t\theaderMode: IconTabHeaderMode.Inline,\n\t\t\tbackgroundDesign: BackgroundDesign.Transparent,\n\t\t\tselect: () => {\n\t\t\t\tthis.setProperty(\"selectedKey\", this.iconTabBar.getSelectedKey());\n\t\t\t\tthis.updateActionButtons();\n\t\t\t}\n\t\t});\n\t\tthis.errorMessageContainer = new FlexBox(`${this.getId()}-errorMessageContainer`, {\n\t\t\tdirection: \"Column\",\n\t\t\trenderType: \"Bare\",\n\t\t\theight: \"100%\",\n\t\t\tjustifyContent: \"Center\",\n\t\t\titems: [\n\t\t\t\tnew IllustratedMessage(`${this.getId()}-errorMessage`, {\n\t\t\t\t\tillustrationSize: IllustratedMessageSize.Auto,\n\t\t\t\t\tillustrationType: IllustratedMessageType.NoData\n\t\t\t\t})\n\t\t\t]\n\t\t});\n\n\t\tconst wrapper = new FlexBox(`${this.getId()}-wrapper`, {\n\t\t\tdirection: \"Column\",\n\t\t\trenderType: \"Bare\",\n\t\t\theight: \"100%\",\n\t\t\titems: [this.iconTabBar, this.errorMessageContainer]\n\t\t});\n\n\t\tthis.addContent(wrapper);\n\t}\n\n\t/**\n\t * onBeforeRendering lifecycle method.\n\t * Prepares the SettingsDialog content and navigate to the selected settings panel.\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic onBeforeRendering(event: JQueryEvent): void {\n\t\tsuper.onBeforeRendering(event);\n\n\t\t//add panels to icon tab bar\n\t\tvoid this._addPanelsToIconTabBar();\n\n\t\t//set selected key\n\t\tconst selectedKey = this.getProperty(\"selectedKey\") as string;\n\t\tthis.iconTabBar.setSelectedKey(selectedKey);\n\n\t\t//update action buttons to be displayed\n\t\tthis.updateActionButtons();\n\t}\n\n\t/**\n\t * Adds supported panels to the icon tab bar.\n\t *\n\t * @private\n\t * @async\n\t */\n\tprivate async _addPanelsToIconTabBar(): Promise<void> {\n\t\tif (!this.panelsAdded) {\n\t\t\tconst panels = this.getPanels();\n\n\t\t\tfor (const panel of panels) {\n\t\t\t\tconst isSupported = await panel.isSupported();\n\t\t\t\tif (!isSupported) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst key = panel.getProperty(\"key\") as string;\n\t\t\t\tconst iconTabFilter = new IconTabFilter(`${this.getId()}-${key}`, {\n\t\t\t\t\tkey,\n\t\t\t\t\ttext: panel.getProperty(\"title\") as string\n\t\t\t\t});\n\n\t\t\t\tconst content = panel.getAggregation(\"content\") as Control[] | undefined;\n\t\t\t\tcontent?.forEach((control) => iconTabFilter.addContent(control));\n\n\t\t\t\tthis.iconTabBar.addItem(iconTabFilter);\n\t\t\t}\n\n\t\t\tthis.panelsAdded = true;\n\t\t\tconst hasItems = this.iconTabBar.getItems().length > 0;\n\t\t\tthis.iconTabBar.setVisible(hasItems);\n\t\t\tthis.errorMessageContainer.setVisible(!hasItems);\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves a panel by its key from the dialog.\n\t *\n\t * @private\n\t * @param {string} key - The key of the panel to retrieve.\n\t * @returns {BaseSettingsPanel} The panel matching the provided key.\n\t */\n\tprivate _getPanel(key: string): BaseSettingsPanel {\n\t\treturn this.getPanels().find((panel) => panel.getProperty(\"key\") === key) as BaseSettingsPanel;\n\t}\n\n\t/**\n\t * Updates the action buttons based on the selected panel.\n\t *\n\t * @private\n\t */\n\tpublic updateActionButtons(): void {\n\t\tthis.cancelButton =\n\t\t\tthis.cancelButton ||\n\t\t\tnew Button(`${this.getId()}-close-btn`, {\n\t\t\t\ttext: this._i18nBundle.getText(\"closeSettings\"),\n\t\t\t\ttype: ButtonType.Transparent,\n\t\t\t\tpress: this.onDialogClose.bind(this)\n\t\t\t});\n\n\t\tconst selectedKey = this.iconTabBar.getSelectedKey() || (this.getPanels()[0]?.getProperty(\"key\") as string);\n\t\tthis.removeAllButtons();\n\n\t\t// add action buttons from the selected panel\n\t\tthis._getPanel(selectedKey)\n\t\t\t.getActionButtons()\n\t\t\t.forEach((button) => {\n\t\t\t\tthis.addButton(button);\n\t\t\t});\n\n\t\t// add cancel button as common action button\n\t\tthis.addButton(this.cancelButton);\n\t}\n\n\t/**\n\t * Handles the dialog close event and triggers panel cleanup.\n\t *\n\t * @private\n\t */\n\tprivate onDialogClose(): void {\n\t\tthis.getPanels().forEach((panel) => panel.fireEvent(\"onDialogClose\"));\n\t\tthis.close();\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":101,"column":0},"map":{"version":3,"names":["sap","ui","define","Button","IllustratedMessage","IllustratedMessageSize","IllustratedMessageType","VBox","__BasePanel","___utils_Constants","_interopRequireDefault","obj","__esModule","default","BasePanel","SETTINGS_PANELS_KEYS","ErrorPanel","extend","metadata","library","properties","messageTitle","type","group","defaultValue","messageDescription","actionButton","constructor","_constructor","id","settings","BasePanel.prototype.constructor.call","this","getData","_getData","setProperty","_oWrapperNoCardsVBox","oIllustratedMessage","getId","illustrationSize","Small","illustrationType","AddDimensions","title","getProperty","description","additionalContent","text","_i18nBundle","getText","press","handleAddInsights","bind","backgroundDesign","addStyleClass","oActionButton","insertAdditionalContent","addItem","_addContent","_handleAddInsights","parentContainer","getParent","_getLayout","openSettingsDialog","INSIGHTS_CARDS"],"sources":["ErrorPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Button from \"sap/m/Button\";\nimport IllustratedMessage from \"sap/m/IllustratedMessage\";\nimport IllustratedMessageSize from \"sap/m/IllustratedMessageSize\";\nimport IllustratedMessageType from \"sap/m/IllustratedMessageType\";\nimport VBox from \"sap/m/VBox\";\nimport { MetadataOptions } from \"sap/ui/core/Component\";\nimport BasePanel from \"./BasePanel\";\nimport { $ErrorPanelSettings } from \"./ErrorPanel\";\nimport InsightsContainer from \"./InsightsContainer\";\nimport { SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\n\n/**\n *\n * Panel class for displaying Error Message.\n *\n * @extends sap.cux.home.BasePanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.122.0\n *\n * @internal\n * @experimental Since 1.122\n * @private\n *\n * @alias sap.cux.home.ErrorPanel\n */\n\nexport default class ErrorPanel extends BasePanel {\n\tconstructor(idOrSettings?: string | $ErrorPanelSettings);\n\tconstructor(id?: string, settings?: $ErrorPanelSettings);\n\tconstructor(id?: string, settings?: $ErrorPanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\tmessageTitle: { type: \"string\", group: \"Misc\", defaultValue: \"\" },\n\t\t\tmessageDescription: { type: \"string\", group: \"Misc\", defaultValue: \"\" },\n\t\t\tactionButton: { type: \"sap.m.Button\", group: \"Misc\" }\n\t\t}\n\t};\n\tprivate _oWrapperNoCardsVBox!: VBox;\n\n\tgetData() {\n\t\tthis.setProperty(\"enableSettings\", false);\n\t\tif (!this._oWrapperNoCardsVBox) {\n\t\t\tconst oIllustratedMessage = new IllustratedMessage(`${this.getId()}-errorPanelIllustratedMessage`, {\n\t\t\t\tillustrationSize: IllustratedMessageSize.Small,\n\t\t\t\tillustrationType: IllustratedMessageType.AddDimensions,\n\t\t\t\ttitle: this.getProperty(\"messageTitle\") as string,\n\t\t\t\tdescription: this.getProperty(\"messageDescription\") as string,\n\t\t\t\tadditionalContent: [\n\t\t\t\t\tnew Button(`${this.getId()}-addInsightsBtn`, {\n\t\t\t\t\t\ttext: this._i18nBundle.getText(\"manageInsightBtn\"),\n\t\t\t\t\t\ttype: \"Emphasized\",\n\t\t\t\t\t\tpress: this.handleAddInsights.bind(this)\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t});\n\n\t\t\tthis._oWrapperNoCardsVBox = new VBox(`${this.getId()}-wrapperNoCardsVBox`, {\n\t\t\t\tbackgroundDesign: \"Solid\"\n\t\t\t}).addStyleClass(\"sapUiSmallMarginTop\");\n\t\t\tconst oActionButton = this.getProperty(\"actionButton\") as Button;\n\t\t\tif (oActionButton) {\n\t\t\t\toIllustratedMessage.insertAdditionalContent(oActionButton, 0);\n\t\t\t}\n\t\t\tthis._oWrapperNoCardsVBox.addItem(oIllustratedMessage);\n\t\t\tthis._addContent(this._oWrapperNoCardsVBox);\n\t\t}\n\t}\n\n\t/**\n\t * Opens the Insights Cards dialog.\n\t * @private\n\t */\n\tprivate handleAddInsights() {\n\t\tconst parentContainer = this.getParent() as InsightsContainer;\n\t\tparentContainer?._getLayout().openSettingsDialog(SETTINGS_PANELS_KEYS.INSIGHTS_CARDS);\n\t}\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,qCAAA,kKAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,sBAAAC,EAAAC,GAAA,OAAAA,KAAAC,mBAAAD,EAAAE,UAAA,YAAAF,EAAAE,QAAAF,CAAA,OAWOG,EAASJ,EAAAF,GAAA,MAGPO,EAAoBN,EAAA,wBAE7B,MAiBqBO,EAAmBF,EAASG,OAAA,2BAOhCC,SAA4B,CAC3CC,QAAS,eACTC,WAAY,CACXC,aAAc,CAAEC,KAAM,SAAUC,MAAO,OAAQC,aAAc,IAC7DC,mBAAoB,CAAEH,KAAM,SAAUC,MAAO,OAAQC,aAAc,IACnEE,aAAc,CAAEJ,KAAM,eAAgBC,MAAO,UAT/CI,YAAW,SAAAC,EAACC,EAAaC,GACxBC,6BAAAC,KAAMH,EAAIC,EACX,EAYAG,QAAO,SAAAC,IACNF,KAAKG,YAAY,iBAAkB,OACnC,IAAKH,KAAKI,qBAAsB,CAC/B,MAAMC,EAAsB,IAAIjC,EAAmB,GAAG4B,KAAKM,uCAAwC,CAClGC,iBAAkBlC,EAAuBmC,MACzCC,iBAAkBnC,EAAuBoC,cACzCC,MAAOX,KAAKY,YAAY,gBACxBC,YAAab,KAAKY,YAAY,sBAC9BE,kBAAmB,CAClB,IAAI3C,EAAO,GAAG6B,KAAKM,yBAA0B,CAC5CS,KAAMf,KAAKgB,YAAYC,QAAQ,oBAC/B3B,KAAM,aACN4B,MAAOlB,KAAKmB,kBAAkBC,KAAKpB,WAKtCA,KAAKI,qBAAuB,IAAI7B,EAAK,GAAGyB,KAAKM,6BAA8B,CAC1Ee,iBAAkB,UAChBC,cAAc,uBACjB,MAAMC,EAAgBvB,KAAKY,YAAY,gBACvC,GAAIW,EAAe,CAClBlB,EAAoBmB,wBAAwBD,EAAe,EAC5D,CACAvB,KAAKI,qBAAqBqB,QAAQpB,GAClCL,KAAK0B,YAAY1B,KAAKI,qBACvB,CACD,EAMQe,kBAAiB,SAAAQ,IACxB,MAAMC,EAAkB5B,KAAK6B,YAC7BD,GAAiBE,aAAaC,mBAAmBhD,EAAqBiD,eACvE,IAAC,OArDmBhD,CAAU","ignoreList":[],"sourceRoot":""}},{"offset":{"line":106,"column":0},"map":{"version":3,"names":["sap","ui","define","Log","GridContainer","GridContainerSettings","Button","ColorPalette","ColorPalettePopover","CustomListItem","Dialog","HBox","IllustratedMessage","IllustratedMessageSize","IllustratedMessageType","Input","Label","List","MessageBox","MessageStrip","MessageToast","NavContainer","ObjectIdentifier","Page","Popover","ScrollContainer","SearchField","StandardListItem","Text","Title","Toolbar","ToolbarSpacer","VBox","sap_m_library","Event","Element","EventBus","Icon","sap_ui_core_library","MessageType","Parameters","SimpleForm","sap_ui_layout_library","Config","Container","MyHomeImport","PageRuntime","___BaseApp","__BaseAppPersPanel","__Group","__MenuItem","___utils_Accessibility","___utils_Constants","___utils_DataFormatUtils","___utils_FESRUtil","___utils_InsightsUtils","_interopRequireDefault","obj","__esModule","default","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","_forTo","array","body","check","i","reject","_cycle","length","ButtonType","_forOf","target","step","next","done","return","_fixup","TypeError","values","push","ListType","_catch","recover","PlacementType","_finallyRethrows","finalizer","dnd","form","ActionsPopover","BaseAppPersPanel","Group","MenuItem","checkPanelExists","DEFAULT_BG_COLOR","END_USER_COLORS","MYAPPS_SECTION_ID","MYHOME_PAGE_ID","getLeanURL","recycleId","addFESRId","addFESRSemanticStepName","sortMenuItems","_showAddApps","last","favouritesMenuItems","tilesPanelName","insightsConatinerlName","sortedMenuItems","CREATE_GROUP","ADD_APPS","ADD_FROM_INSIGHTS","FavAppPanel","extend","metadata","library","defaultAggregation","aggregations","apps","type","singularName","multiple","visibility","groups","constructor","_constructor","id","settings","BaseAppPersPanel.prototype.constructor.call","_selectedApps","_isInitialLoad","_updateAppColorPersonalization","personalizations","updateConfig","visualization","color","appId","oldAppId","persConfig","sourceGroupId","sectionId","isSourceGroupDefault","isDefaultSection","personalizationIndex","_getPersonalizationIndex","isRecentlyAddedApp","BGColor","isSection","init","_init","_this2","BaseAppPersPanel.prototype.init.call","setProperty","_i18nBundle","getText","_createActionButtons","_createHeaderMenuItems","appsWrapper","_generateAppsWrapper","addDragDropConfigTo","event","_onFavItemDrop","_handleKeyboardMoveApp","DropPosition","OnOrBetween","oEventBus","getInstance","subscribe","sChannelId","sEventId","oData","aSections","groupsPersInfo","groupInfo","Promise","resolve","addAppsAndSections","_importdone","getParent","_refreshAllPanels","setImportButtonVisibility","attachPersistDialog","_selectedGroupId","_showGroupDetailDialog","document","addEventListener","_resetCutElement","stateData","status","publish","_addAppsAndSections","sections","importedPersonalizations","_this3","aPromise","_getAppPersonalization","aPersonalization","getServiceAsync","pagesService","_temp4","setFavAppsPersonalization","reduce","chain","current","updateDefaultSectionPersonalization","_temp3","section","sectionViz","visualizations","_temp2","_temp","filteredPersonalizations","filterPersonalizations","concat","addSectionViz","appManagerInstance","_getSections","sNewSectionId","_generateId","addSection","sectionIndex","sectionProperties","title","visible","map","oViz","_filterPersonalizations","newSectionId","aAuthPers","oPers","aSectionViz","find","oSectionViz","targetURL","_updateDefaultSectionPersonalization","_this4","defaultSection","oSection","forEach","_addSectionViz","sectionsViz","sSectionId","_this5","promiseChain","_addVisualization","loadApps","_loadApps","_this6","fetchFavVizs","favoriteVisualizations","destroyAggregation","groupVisualizations","filter","groupVisualization","menuItems","_getGroupActions","_generateGroups","_setGroups","appVisualizations","appVisualization","index","_getAppActions","undefined","generateApps","setApps","_setGroupDetailDialogApps","container","toggleMenuListItem","_createGroupMenuItem","getApps","_switchToRecommendedIfNoFavApps","_createAddFromInsTilesMenuItem","_updateContainerHeader","_this7","_temp6","_temp5","load","menuItemId","getId","_controlMap","get","addInsightsMenuItem","icon","press","_handleAddFromInsights","_menuItems","addAggregation","_sortMenuItems","set","panelMenuItems","getAggregation","removeAllAggregation","menuItem","bgColor","key","group","number","badge","groupId","_handleGroupPress","oMenuItem","getGroupId","isUngroupedApp","appActions","selectColorMenuItem","getKey","Navigation","_openColorPopover","_getAllowedMoveGroups","moveToMenuItem","_openMoveToGroupPopover","createGroupMenuItem","source","getSource","app","_openCreateGroupDialog","removeFromMyHomeMenuItem","_handleRemove","removeFromGroupMenuItem","_handleMoveToGroup","renameGroupMenuItem","_onRenameGroup","removeAllAppsMenuItem","_handleUngroupApps","groupActions","isPresetSection","deleteGroupMenuItem","_onDeleteGroup","_this8","_actionButtons","addAppsBtn","tooltip","text","navigateToAppFinder","actionButton","_validateAppsMigration","isImportEnabled","_createImportButton","_importButton","_openImportAppsDialog","insertAggregation","_setImportButtonVisibility","bVisible","_this9","setImportEnabled","setVisible","addAppsMenuItem","item","_getDragDropInfo","appGroupId","_this10","dragTile","getParameter","dropTile","dropPosition","dropControl","dragItemIndex","indexOfItem","dropItemIndex","dragItem","_getTileItem","dropItem","dragDropInfo","_temp9","_temp8","isA","_adjustAppDragDropInfo","_temp7","_adjustGroupDragDropInfo","_this11","isUpdated","dragApp","dropApp","all","getVisualization","getUrl","_ref","dragVisualization","dropVisualization","RelativeDropPosition","Before","After","tile","getItems","tileGroupId","data","_getGroup","_this12","dropGroupIndex","findIndex","lastGroupIndex","_this13","_temp12","removeStyleClass","_temp11","On","_handleOnItemDrop","refresh","_temp10","_setBusy","_handleItemsReorder","_this14","_temp13","targetGroupId","_this15","isDragItemGroup","isDropItemGroup","_temp15","drapApp","_ref2","moveVisualization","sourceSectionIndex","sourceVisualizationIndex","visualizationIndex","targetSectionIndex","targetVisualizationIndex","_temp14","moveSection","_navigateToAppFinder","navigationService","navigationObject","pageID","sectionID","navigate","shellHash","JSON","stringify","error","warning","Error","message","pageRuntime","onImportDialogPress","skipAppsSelection","arguments","createGroupDialog","_generateCreateGroupDialog","destroyItems","tiles","appCopy","clone","_onPress","_highlightApp","_getAppTile","_setAggregation","fireEvent","_updateSelectedAppCount","open","_closeCreateGroupDialog","close","_resetCreateGroupDialog","navContainer","_generateCreateGroupNavContainer","groupNameInput","searchField","setValue","to","getInitialPage","_setNoAppsSelectedError","_selectedGroupColor","_toggleNavButton","nextBtn","backBtn","createBtn","currentPageIndex","indexOfPage","getCurrentPage","getPages","_validateGroupName","_generateCreateGroupAppsPage","_highlightSelectedApps","back","_onPressGroupCreate","content","escapeHandler","contentHeight","contentWidth","buttons","addStyleClass","selectedApp","oTile","bIsSelected","hasStyleClass","oScrollContainer","_generateAppsScrollContainer","splice","oApp","toggleStyleClass","setHeight","layout","columnSize","gap","vertical","height","oAppsCountContol","setText","initialPage","pages","_generateCreateGroupMainPage","width","required","liveChange","showHeader","enableScrolling","backgroundDesign","items","SimpleFormLayout","ResponsiveGridLayout","labelSpanS","labelSpanM","colors","oColor","colorSelect","_onColorSelect","_onCreateAppSearch","showIcon","_generateCreateGroupErrorMsg","illustrationSize","Base","description","_getLegendColor","messageStrip","groupName","getValue","trim","setValueState","setValueStateText","selectedApps","tilesContainer","some","searchQuery","searchExpression","RegExp","test","getHeader","filteredTiles","getVisible","hasFilteredApps","_this16","_temp18","_temp17","_temp16","_createGroup","groupColor","_getGroupColor","show","of","offset","err","_wasThrown","_result","params","_this17","getSectionVisualizations","sectionVisualizations","selectedVisualizations","sectionVisualization","url","viz","visualizationsToBeDeleted","duplicateVisualizationIds","duplicateApps","removeVisualizations","vizIds","_updateAppPersonalization","_updateGroupPersonalization","defaultColor","firstApp","setDefaultColor","getBgColor","colorPopoverId","_currentItem","colorPopover","showDefaultColorButton","showMoreColorsButton","showRecentColorsSection","_closeActionsPopover","selectedColor","_handleColorSelect","_oPopover","setPlacement","HorizontalPreferredRight","openBy","_this18","_temp20","isGroupedApp","_refreshGroupDetailDialog","_applyUngroupedTileColor","_temp19","groupIconControl","setColor","allowedMoveGroups","allowedMoveGroup","busy","_generateGroupDetailDialog","_generateAddFromInsightsDialog","oControl","setBusy","BaseAppPersPanel.prototype.setBusy.call","sourceGroup","popoverId","list","moveToGroupPopover","itemPress","placement","removeAllItems","targetGroup","addItem","getTitle","_this19","lastAppInGroup","actionText","messageIcon","QUESTION","WARNING","actions","Action","CANCEL","emphasizedAction","onClose","action","_temp22","_temp21","_removeApp","_closeGroupDetailDialog","_wasThrown2","_result2","_this20","_temp24","_deleteGroup","_temp23","_deletePersonalization","_this21","isLastAppInGroup","_temp25","confirmationMessage","confirmationTitle","_moveAppAndHandleGroupChanges","_this22","sTargetGroupTile","_temp28","_moveAppToGroup","_temp27","sMsg","_temp26","_wasThrown3","_result3","updatedApp","isRemove","groupApps","updatedAppIndex","groupApp","destroy","setBackgroundColor","_this23","_ref3","sourceVisualization","isTargetGroupDefault","_temp33","_temp32","_temp31","_moveAppToDefaultGroup","_temp30","_temp29","_removeDuplicateVisualizations","_this24","_temp34","_this25","vizIdsToBeDeleted","_temp35","_ungroupApps","_this26","deleteAction","moveAppAction","_temp36","_this27","_temp39","updatedSections","_temp38","_temp37","preset","_wasThrown4","_result4","editMode","_this28","dialog","name","_setGroupNameControl","_this29","_temp40","_applyGroupedAppsPersonalization","_dispatchAppsLoadedEvent","_applyTilesPersonalization","src","size","oGroupNameInput","onsapfocusleave","_onGroupEditName","endButton","customHeader","oPopover","groupDetailDialog","destroyApps","updatedTitle","_this30","_temp42","oldTitle","_temp41","_renameGroup","pageIndex","getPageIndex","getModel","getProperty","groupIndex","_temp43","renameSection","groupTitle","groupTitleControl","groupInputControl","setInitialFocus","setAddBtnEnabled","selectedItems","_getSelectedInsights","setEnabled","getAppFinderBtn","btnType","appsAppFinder","_closeAddFromInsightsDialog","Default","mode","selectionChange","_addFromInsights","enabled","addStaticTiles","wrapping","justifyContent","alignItems","Transparent","_this31","_getInsightTilesToAdd","appsToAdd","_generateInsightListItems","listItems","backgroundColor","subtitle","vizId","_this32","fetchInsightApps","_ref4","insightsApps","favoriteApps","insightsApp","isCount","isSmartBusinessTile","iAppIndex","favoriteApp","_filterDuplicateVizs","removeSelections","getSelectedItems","_this33","_temp45","_temp44","selectedItem","addVisualization","updateConfigs","_this34","_updateMoveAppPersonalization","sourcePersonalizationIndex","newPersonalization","iTargetPersonalizationIndex","_this35","updatedPersonalization","appPersonalization","personalization","isBookmark","addBookMark","_this36","_temp46","deleteSection","personalizationConfig","_this37","_this38","currentItem","closestTo","firstElementChild","_temp48","metaKey","ctrlKey","_cutApp","$","css","_oMoreIcon","_temp47","dragDropEvent","draggedControl","droppedControl","appsWrapperId","includes","generateIllustratedMessage","_generateIllustratedMessage","illustratedMessage","BaseAppPersPanel.prototype.generateIllustratedMessage.call","setDescription","setIllustrationSize","Small","setIllustrationType","AddingColumns","addAdditionalContent"],"sources":["FavAppPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport GridContainer from \"sap/f/GridContainer\";\nimport GridContainerSettings from \"sap/f/GridContainerSettings\";\nimport Button from \"sap/m/Button\";\nimport ColorPalette, { ColorPalette$ColorSelectEvent } from \"sap/m/ColorPalette\";\nimport ColorPalettePopover from \"sap/m/ColorPalettePopover\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport Dialog from \"sap/m/Dialog\";\nimport GenericTile from \"sap/m/GenericTile\";\nimport HBox from \"sap/m/HBox\";\nimport IllustratedMessage from \"sap/m/IllustratedMessage\";\nimport IllustratedMessageSize from \"sap/m/IllustratedMessageSize\";\nimport IllustratedMessageType from \"sap/m/IllustratedMessageType\";\nimport Input from \"sap/m/Input\";\nimport Label from \"sap/m/Label\";\nimport List from \"sap/m/List\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport MessageStrip from \"sap/m/MessageStrip\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport NavContainer from \"sap/m/NavContainer\";\nimport ObjectIdentifier from \"sap/m/ObjectIdentifier\";\nimport Page from \"sap/m/Page\";\nimport Popover from \"sap/m/Popover\";\nimport ScrollContainer from \"sap/m/ScrollContainer\";\nimport SearchField from \"sap/m/SearchField\";\nimport StandardListItem from \"sap/m/StandardListItem\";\nimport Text from \"sap/m/Text\";\nimport Title from \"sap/m/Title\";\nimport Toolbar from \"sap/m/Toolbar\";\nimport ToolbarSpacer from \"sap/m/ToolbarSpacer\";\nimport VBox from \"sap/m/VBox\";\nimport { ButtonType, ListType, PlacementType } from \"sap/m/library\";\nimport Event from \"sap/ui/base/Event\";\nimport { MetadataOptions } from \"sap/ui/base/ManagedObject\";\nimport Control from \"sap/ui/core/Control\";\nimport Element from \"sap/ui/core/Element\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport Icon from \"sap/ui/core/Icon\";\nimport { DropInfo$DropEventParameters } from \"sap/ui/core/dnd/DropInfo\";\nimport { dnd } from \"sap/ui/core/library\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport Parameters from \"sap/ui/core/theming/Parameters\";\nimport SimpleForm from \"sap/ui/layout/form/SimpleForm\";\nimport { form } from \"sap/ui/layout/library\";\nimport Config from \"sap/ushell/Config\";\nimport Container from \"sap/ushell/Container\";\nimport MyHomeImport from \"sap/ushell/components/pages/MyHomeImport\";\nimport PageRuntime from \"sap/ushell/components/pages/controller/PageRuntime.controller\";\nimport Navigation from \"sap/ushell/services/Navigation\";\nimport Pages from \"sap/ushell/services/Pages\";\nimport { IExportData } from \"./AdvancedSettingsPanel\";\nimport App from \"./App\";\nimport AppsContainer from \"./AppsContainer\";\nimport { ActionsPopover } from \"./BaseApp\";\nimport BaseAppPersPanel from \"./BaseAppPersPanel\";\nimport BaseContainer from \"./BaseContainer\";\nimport type { $BasePanelSettings } from \"./BasePanel\";\nimport Group, { Group$PressEvent } from \"./Group\";\nimport MenuItem from \"./MenuItem\";\nimport {\n\tIAppPersonalization,\n\tIAppPersonalizationConfig,\n\tICustomVisualization,\n\tIDragDropInfo,\n\tISection,\n\tISectionAndVisualization,\n\tIUpdatePersonalizationConfig,\n\tIVisualization\n} from \"./interface/AppsInterface\";\nimport { checkPanelExists } from \"./utils/Accessibility\";\nimport { DEFAULT_BG_COLOR, END_USER_COLORS, MYAPPS_SECTION_ID, MYHOME_PAGE_ID } from \"./utils/Constants\";\nimport { getLeanURL, recycleId } from \"./utils/DataFormatUtils\";\nimport { addFESRId, addFESRSemanticStepName } from \"./utils/FESRUtil\";\nimport { sortMenuItems } from \"./utils/InsightsUtils\";\nconst _showAddApps = () => {\n\treturn (Config.last(\"/core/shell/enablePersonalization\") || Config.last(\"/core/catalog/enabled\")) as boolean;\n};\n\nexport enum favouritesMenuItems {\n\tCREATE_GROUP = \"createGrpMenuBtn\",\n\tADD_APPS = \"addAppsMenuBtn\",\n\tADD_FROM_INSIGHTS = \"addInsightsMenuBtn\"\n}\n\nconst tilesPanelName: string = \"sap.cux.home.TilesPanel\";\nconst insightsConatinerlName: string = \"sap.cux.home.InsightsContainer\";\nconst sortedMenuItems: (favouritesMenuItems | string)[] = [\n\tfavouritesMenuItems.CREATE_GROUP,\n\tfavouritesMenuItems.ADD_APPS,\n\tfavouritesMenuItems.ADD_FROM_INSIGHTS,\n\t\"settings\"\n];\n\n/**\n *\n * Provides the FavAppPanel Class.\n *\n * @extends sap.cux.home.BaseAppPersPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121.0\n *\n * @internal\n * @experimental Since 1.121\n * @public\n *\n * @alias sap.cux.home.FavAppPanel\n */\nexport default class FavAppPanel extends BaseAppPersPanel {\n\tprivate _selectedApps: App[] = [];\n\tprivate _selectedGroupColor: string | undefined;\n\tprivate _selectedGroupId: string | undefined;\n\tprivate _currentItem!: App | Group;\n\tprivate _cutApp: GenericTile | undefined;\n\tprivate oEventBus!: EventBus;\n\tprivate _importButton!: Button;\n\tprivate _createGroupMenuItem!: MenuItem;\n\tprivate _isInitialLoad = true;\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tdefaultAggregation: \"apps\",\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * Apps aggregation for Favorite apps\n\t\t\t */\n\t\t\tapps: { type: \"sap.cux.home.App\", singularName: \"app\", multiple: true, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Group aggregation for Favorite apps\n\t\t\t */\n\t\t\tgroups: { type: \"sap.cux.home.Group\", singularName: \"group\", multiple: true, visibility: \"hidden\" }\n\t\t}\n\t};\n\n\t/**\n\t * Constructor for a new favorite app panel.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $BasePanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tpublic init() {\n\t\tsuper.init();\n\t\t//Configure Header\n\t\tthis.setProperty(\"key\", \"favApps\");\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"favoritesTab\"));\n\t\tthis.setProperty(\"tooltip\", this._i18nBundle.getText(\"favAppsInfo\"));\n\t\t//Setup Action Buttons\n\t\tvoid this._createActionButtons();\n\t\t//Setup Menu Items\n\t\tthis._createHeaderMenuItems();\n\t\t//add drag and drop config\n\t\tconst appsWrapper = this._generateAppsWrapper();\n\t\tif (appsWrapper) {\n\t\t\tthis.addDragDropConfigTo(\n\t\t\t\tappsWrapper,\n\t\t\t\t(event) => this._onFavItemDrop(event),\n\t\t\t\t(event: KeyboardEvent) => this._handleKeyboardMoveApp(event),\n\t\t\t\tdnd.DropPosition.OnOrBetween\n\t\t\t);\n\t\t}\n\n\t\tthis.oEventBus = EventBus.getInstance();\n\t\t// Subscribe to the event\n\t\tthis.oEventBus.subscribe(\n\t\t\t\"importChannel\",\n\t\t\t\"appsImport\",\n\t\t\tasync (sChannelId?: string, sEventId?: string, oData?) => {\n\t\t\t\tconst aSections = ((oData as IExportData)?.apps as ISectionAndVisualization[]) || [];\n\t\t\t\tconst groupsPersInfo = (oData as IExportData)?.groupInfo || [];\n\n\t\t\t\tawait this.addAppsAndSections(aSections, groupsPersInfo);\n\t\t\t\tthis._importdone();\n\t\t\t\tawait (this.getParent() as AppsContainer)._refreshAllPanels();\n\t\t\t},\n\t\t\tthis\n\t\t);\n\t\tthis.oEventBus.subscribe(\n\t\t\t\"importChannel\",\n\t\t\t\"resetImported\",\n\t\t\tasync () => {\n\t\t\t\tawait this.setImportButtonVisibility(true);\n\t\t\t},\n\t\t\tthis\n\t\t);\n\t\tthis.attachPersistDialog(() => {\n\t\t\t// if while navigating to different page, a group detail dialog was open, then while navigating back group detail dialog should be in open state.\n\t\t\tif (this._selectedGroupId) {\n\t\t\t\tvoid this._showGroupDetailDialog(this._selectedGroupId);\n\t\t\t}\n\t\t});\n\n\t\tdocument.addEventListener(\"click\", (event) => this._resetCutElement(event));\n\t\tdocument.addEventListener(\"keydown\", (event) => this._resetCutElement(event));\n\t}\n\n\tprivate _importdone() {\n\t\tconst stateData = { status: true };\n\t\tthis.oEventBus.publish(\"importChannel\", \"appsImported\", stateData);\n\t}\n\n\t/**\n\t * Checks and import apps and groups\n\t * @private\n\t */\n\tprivate async addAppsAndSections(sections: ISectionAndVisualization[], importedPersonalizations: IAppPersonalization[]) {\n\t\tlet aPromise: (() => Promise<void>)[] = [];\n\t\tlet aPersonalization = await this._getAppPersonalization();\n\n\t\tconst pagesService = await Container.getServiceAsync<Pages>(\"Pages\");\n\t\tfor (const section of sections) {\n\t\t\tconst sectionViz = section.visualizations as IVisualization[];\n\t\t\tif (sectionViz?.length) {\n\t\t\t\tif (section.default || section.id === MYAPPS_SECTION_ID) {\n\t\t\t\t\tconst filteredPersonalizations = this.filterPersonalizations(importedPersonalizations, section);\n\t\t\t\t\taPersonalization = aPersonalization.concat(filteredPersonalizations);\n\t\t\t\t\taPromise.push(() => {\n\t\t\t\t\t\treturn section.default ? this.addSectionViz(sectionViz) : this.addSectionViz(sectionViz, MYAPPS_SECTION_ID);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst sections = await this.appManagerInstance._getSections(true);\n\t\t\t\t\t//check if this generate id can be replaced with any exposed method\n\t\t\t\t\tconst sNewSectionId = pagesService._generateId(MYHOME_PAGE_ID);\n\t\t\t\t\tconst filteredPersonalizations = this.filterPersonalizations(importedPersonalizations, section, sNewSectionId);\n\t\t\t\t\t//update section id in personalization data\n\t\t\t\t\taPersonalization = aPersonalization.concat(filteredPersonalizations);\n\n\t\t\t\t\taPromise.push(() => {\n\t\t\t\t\t\treturn this.appManagerInstance.addSection({\n\t\t\t\t\t\t\tsectionIndex: sections.length,\n\t\t\t\t\t\t\tsectionProperties: {\n\t\t\t\t\t\t\t\tid: sNewSectionId,\n\t\t\t\t\t\t\t\ttitle: section.title,\n\t\t\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\t\t\tvisualizations: sectionViz?.map((oViz) => {\n\t\t\t\t\t\t\t\t\t//check if this generate id can be replaced with any exposed method\n\t\t\t\t\t\t\t\t\toViz.id = pagesService._generateId(MYHOME_PAGE_ID);\n\t\t\t\t\t\t\t\t\treturn oViz;\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//update personalization\n\t\tawait this.setFavAppsPersonalization(aPersonalization);\n\t\treturn aPromise\n\t\t\t.reduce((chain, current) => {\n\t\t\t\treturn chain.then(() => current());\n\t\t\t}, Promise.resolve())\n\t\t\t.then(() => {\n\t\t\t\treturn this.updateDefaultSectionPersonalization(aPersonalization);\n\t\t\t});\n\t}\n\n\t/**\n\t * Filters personalization data for specific section\n\t *\n\t * @private\n\t * @param {IAppPersonalization[]} personalizations - array of user personalizations\n\t * @param {ISectionAndVisualization} section - section for which personalization data needs to be filtered\n\t * @param {String} newSectionId - new section id\n\t * @returns {IAppPersonalization[]} resolves to an array of authorized personalization for a given section\n\t */\n\tprivate filterPersonalizations(personalizations: IAppPersonalization[], section: ISectionAndVisualization, newSectionId?: string) {\n\t\t//filter personalization data based on section visualizations\n\t\tconst filteredPersonalizations = personalizations.reduce(function (aAuthPers: IAppPersonalization[], oPers: IAppPersonalization) {\n\t\t\tif (oPers.sectionId === section.id) {\n\t\t\t\tconst aSectionViz = section.visualizations;\n\t\t\t\tconst oViz = aSectionViz?.find((oSectionViz) => {\n\t\t\t\t\treturn oSectionViz.targetURL === oPers.appId;\n\t\t\t\t});\n\t\t\t\tif (oViz || oPers.isSection) {\n\t\t\t\t\toPers.sectionId = newSectionId || section.id;\n\t\t\t\t\taAuthPers.push(oPers);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn aAuthPers;\n\t\t}, []);\n\t\treturn filteredPersonalizations;\n\t}\n\n\t/**\n\t * Updates section id of recently added apps to default section in the persionalization array\n\t *\n\t * @private\n\t * @param {IAppPersonalization} aPersonalization - array of personlizations\n\t * @returns {IAppPersonalization[]} returns an array of personlizations\n\t */\n\tprivate async updateDefaultSectionPersonalization(aPersonalization: IAppPersonalization[]) {\n\t\t//update recently added app section id in personalization\n\t\tconst sections = await this.appManagerInstance._getSections(true);\n\t\tlet defaultSection = sections.find((oSection) => {\n\t\t\treturn oSection.default;\n\t\t});\n\t\tif (defaultSection) {\n\t\t\taPersonalization.forEach((oPers) => {\n\t\t\t\tif (oPers.isRecentlyAddedApp) {\n\t\t\t\t\toPers.sectionId = defaultSection.id;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn aPersonalization;\n\t}\n\n\t/**\n\t * Add section visualizations\n\t *\n\t * @param {Array} sectionsViz - array of section visualizations\n\t * @param {String} sSectionId - section id for which visualizations needs to be added\n\t * @returns {String} resolves to visualizations being added to given section\n\t */\n\tpublic async addSectionViz(sectionsViz: IVisualization[], sSectionId?: string) {\n\t\treturn sectionsViz.reduce((promiseChain, oViz: IVisualization) => {\n\t\t\treturn promiseChain.then(() => {\n\t\t\t\treturn this._addVisualization({ visualization: oViz } as ICustomVisualization, sSectionId);\n\t\t\t});\n\t\t}, Promise.resolve());\n\t}\n\n\t/**\n\t * Fetch fav apps and set apps aggregation\n\t * @private\n\t */\n\tpublic async loadApps() {\n\t\tconst favoriteVisualizations = await this.appManagerInstance.fetchFavVizs(true, false);\n\t\t//Create groups\n\t\tthis.destroyAggregation(\"groups\", true);\n\t\tconst groupVisualizations = favoriteVisualizations\n\t\t\t.filter((visualization) => visualization.isSection)\n\t\t\t.map((groupVisualization) => {\n\t\t\t\treturn {\n\t\t\t\t\t...groupVisualization,\n\t\t\t\t\tmenuItems: this._getGroupActions(groupVisualization)\n\t\t\t\t};\n\t\t\t});\n\t\tconst groups = this._generateGroups(groupVisualizations);\n\t\tthis._setGroups(groups);\n\n\t\t//Create apps\n\t\tthis.destroyAggregation(\"apps\", true);\n\t\tconst appVisualizations = favoriteVisualizations\n\t\t\t.filter((visualization) => !visualization.isSection)\n\t\t\t.map((appVisualization, index) => {\n\t\t\t\treturn {\n\t\t\t\t\t...appVisualization,\n\t\t\t\t\tmenuItems: this._getAppActions(undefined, index, appVisualization)\n\t\t\t\t};\n\t\t\t});\n\t\tconst apps = this.generateApps(appVisualizations);\n\t\tthis.setApps(apps);\n\t\tif (this._selectedGroupId) {\n\t\t\tvoid this._setGroupDetailDialogApps(this._selectedGroupId);\n\t\t}\n\t\tconst container = this.getParent() as BaseContainer;\n\t\tcontainer.toggleMenuListItem(this._createGroupMenuItem, this.getApps().length > 0);\n\t\tawait this._switchToRecommendedIfNoFavApps(apps, groups);\n\t\tif (checkPanelExists(container, insightsConatinerlName, tilesPanelName)) {\n\t\t\tthis._createAddFromInsTilesMenuItem(favouritesMenuItems.ADD_FROM_INSIGHTS);\n\t\t}\n\t\t//updating header once the visibility for createGrp menu item is set according to the no. of apps\n\t\tcontainer._updateContainerHeader(container);\n\t}\n\n\t/**\n\t * Switches to the \"recommendedApps\" tab if no favorite apps or groups exist during the initial load.\n\t * Ensures this logic runs only once.\n\t *\n\t * @private\n\t * @param {App[]} apps - The list of favorite apps.\n\t * @param {Group[]} groups - The list of favorite app groups.\n\t */\n\tprivate async _switchToRecommendedIfNoFavApps(apps: App[], groups: Group[]): Promise<void> {\n\t\tconst container = this.getParent() as BaseContainer;\n\t\tif (this._isInitialLoad && [...apps, ...groups].length === 0) {\n\t\t\tcontainer.setProperty?.(\"selectedKey\", \"recommendedApps\");\n\t\t\tawait (container as AppsContainer).load();\n\t\t}\n\t\tthis._isInitialLoad = false;\n\t}\n\n\t/**\n\t * Creates an \"Add from Insights Tiles\" menu item.\n\t *\n\t * @private\n\t * @param {string} id - The ID of the menu item.\n\t * @returns {MenuItem} The created MenuItem instance.\n\t */\n\tprivate _createAddFromInsTilesMenuItem(id: string) {\n\t\tconst menuItemId = `${this.getId()}-${id}`;\n\t\tif (!this._controlMap.get(menuItemId)) {\n\t\t\tconst addInsightsMenuItem = new MenuItem(menuItemId, {\n\t\t\t\ttitle: this._i18nBundle.getText(\"addFromInsights\"),\n\t\t\t\ticon: \"sap-icon://duplicate\",\n\t\t\t\tpress: () => void this._handleAddFromInsights()\n\t\t\t});\n\t\t\taddFESRId(addInsightsMenuItem, \"staticTilesDialog\");\n\t\t\tthis._menuItems.push(addInsightsMenuItem);\n\t\t\tthis.addAggregation(\"menuItems\", addInsightsMenuItem);\n\t\t\tthis._sortMenuItems(sortedMenuItems);\n\t\t\tthis._controlMap.set(menuItemId, addInsightsMenuItem as unknown as Control);\n\t\t}\n\t\treturn this._controlMap.get(menuItemId);\n\t}\n\n\t/**\n\t * Sorts the menu items based on the provided order.\n\t *\n\t * @private\n\t * @param {string[]} menuItems - The order of the menu items.\n\t */\n\tprivate _sortMenuItems(menuItems: string[]) {\n\t\tconst panelMenuItems = this.getAggregation(\"menuItems\") as MenuItem[];\n\t\tlet sortedMenuItems = sortMenuItems(menuItems, panelMenuItems);\n\t\tthis.removeAllAggregation(\"menuItems\");\n\t\tsortedMenuItems?.forEach((menuItem) => this.addAggregation(\"menuItems\", menuItem));\n\t}\n\n\t/**\n\t * Creates and returns group instances for given group objects\n\t * @private\n\t * @param {object[]} aGroupObject - Array of group object.\n\t * @returns {sap.cux.home.Group[]} - Array of group instances\n\t */\n\tprivate _generateGroups(groupVisualizations: ISectionAndVisualization[]): Group[] {\n\t\treturn groupVisualizations.map((groupVisualization, index) => {\n\t\t\tconst bgColor =\n\t\t\t\ttypeof groupVisualization.BGColor === \"object\" && \"key\" in groupVisualization.BGColor\n\t\t\t\t\t? groupVisualization.BGColor.key\n\t\t\t\t\t: groupVisualization.BGColor;\n\t\t\tconst group = new Group(`${this.getId()}-group-${index}`, {\n\t\t\t\ttitle: groupVisualization.title,\n\t\t\t\tbgColor: bgColor,\n\t\t\t\tstatus: groupVisualization.status,\n\t\t\t\ticon: groupVisualization.icon,\n\t\t\t\tnumber: groupVisualization.badge,\n\t\t\t\tgroupId: groupVisualization.id,\n\t\t\t\tpress: this._handleGroupPress.bind(this)\n\t\t\t});\n\t\t\tgroupVisualization.menuItems?.forEach((oMenuItem) => {\n\t\t\t\tgroup.addAggregation(\"menuItems\", oMenuItem);\n\t\t\t});\n\t\t\treturn group;\n\t\t});\n\t}\n\n\t/**\n\t * Add multiple groups in the groups aggregation.\n\t * @private\n\t * @param {sap.cux.home.Group[]} groups - Array of groups.\n\t */\n\tprivate _setGroups(groups: Group[]) {\n\t\tgroups.forEach((group) => {\n\t\t\tthis.addAggregation(\"groups\", group, true);\n\t\t});\n\t}\n\n\t/**\n\t * Returns list of actions available for app\n\t * @param {ssap.cux.home.Group} group - The group containing the app.\n\t * @private\n\t * @returns {sap.cux.home.MenuItem[]} - An array of menu items representing available actions for the app.\n\t */\n\tprivate _getAppActions(group?: Group, index?: number, appVisualization?: ICustomVisualization) {\n\t\tconst groupId = group?.getGroupId();\n\t\tconst defaultSection = appVisualization?.persConfig?.isDefaultSection;\n\t\tconst isUngroupedApp = !groupId;\n\t\tconst appActions = [];\n\t\tconst selectColorMenuItem = new MenuItem({\n\t\t\tid:\n\t\t\t\tgroupId && !defaultSection\n\t\t\t\t\t? `${groupId}--selectColorGroupAppMenuItem--${index}`\n\t\t\t\t\t: `${this.getKey()}--selectColorAppMenuItem--${index}`,\n\t\t\ttitle: this._i18nBundle.getText(\"selectColor\"),\n\t\t\ttype: ListType.Navigation,\n\t\t\tpress: this._openColorPopover.bind(this)\n\t\t});\n\t\tappActions.push(selectColorMenuItem);\n\n\t\taddFESRId(selectColorMenuItem, \"changeColor\");\n\n\t\tif (this._getAllowedMoveGroups(groupId)?.length >= 1) {\n\t\t\tconst moveToMenuItem = new MenuItem({\n\t\t\t\tid:\n\t\t\t\t\tgroupId && !defaultSection\n\t\t\t\t\t\t? `${groupId}--moveToGroupAppMenuItem--${index}`\n\t\t\t\t\t\t: `${this.getKey()}--moveToMenuItem--${index}`,\n\t\t\t\ttitle: this._i18nBundle.getText(\"moveTo\"),\n\t\t\t\ttype: ListType.Navigation,\n\t\t\t\tpress: (event) => this._openMoveToGroupPopover(event, group)\n\t\t\t});\n\t\t\tappActions.push(moveToMenuItem);\n\t\t\taddFESRId(moveToMenuItem, \"moveToGroup\");\n\t\t}\n\t\tif (isUngroupedApp) {\n\t\t\tconst createGroupMenuItem = new MenuItem(`${this.getKey()}--createGroupMenuItem--${index}`, {\n\t\t\t\ttitle: this._i18nBundle.getText(\"createGroup\"),\n\t\t\t\tpress: (event: Event) => {\n\t\t\t\t\tconst source = event.getSource<MenuItem>();\n\t\t\t\t\tconst app = source.getParent() as App;\n\t\t\t\t\tthis._selectedApps = [app];\n\t\t\t\t\tthis._openCreateGroupDialog();\n\t\t\t\t}\n\t\t\t});\n\t\t\tappActions.push(createGroupMenuItem);\n\t\t\taddFESRId(createGroupMenuItem, \"createGroupDialog\");\n\t\t}\n\t\tconst removeFromMyHomeMenuItem = new MenuItem({\n\t\t\tid:\n\t\t\t\tgroupId && !defaultSection\n\t\t\t\t\t? `${groupId}--removeFromMyHomeGroupAppMenuItem--${index}`\n\t\t\t\t\t: `${this.getKey()}--removeFromMyHomeMenuItem--${index}`,\n\t\t\ttitle: this._i18nBundle.getText(\"removeFromMyHome\"),\n\t\t\tpress: (event: Event) => {\n\t\t\t\tconst source = event.getSource<MenuItem>();\n\t\t\t\tconst app = source.getParent() as App;\n\t\t\t\tthis._handleRemove(app, group);\n\t\t\t}\n\t\t});\n\t\tappActions.push(removeFromMyHomeMenuItem);\n\t\taddFESRId(removeFromMyHomeMenuItem, \"removeFromMyHome\");\n\n\t\tif (!isUngroupedApp) {\n\t\t\tconst removeFromGroupMenuItem = new MenuItem(`${this.getKey()}--removeFromGroupMenuItem--${index}`, {\n\t\t\t\ttitle: this._i18nBundle.getText(\"removeFromGroup\"),\n\t\t\t\tpress: (event: Event) => {\n\t\t\t\t\tconst source = event.getSource<MenuItem>();\n\t\t\t\t\tconst app = source.getParent() as App;\n\t\t\t\t\tvoid this._handleMoveToGroup(app, groupId);\n\t\t\t\t}\n\t\t\t});\n\t\t\tappActions.push(removeFromGroupMenuItem);\n\t\t\taddFESRId(removeFromGroupMenuItem, \"ungroupApp\");\n\t\t}\n\n\t\treturn appActions;\n\t}\n\n\t/**\n\t * Returns list of actions available for selected group\n\t * @private\n\t * @param {sap.cux.home.Group} group - Group\n\t * @returns {sap.cux.home.MenuItem[]} - An array of menu items representing available actions for the group.\n\t */\n\tprivate _getGroupActions(group: ISectionAndVisualization) {\n\t\tconst renameGroupMenuItem = new MenuItem(`id-${group.id}-renameGroup`, {\n\t\t\ttitle: this._i18nBundle.getText(\"renameGroup\"),\n\t\t\tpress: this._onRenameGroup.bind(this)\n\t\t});\n\t\taddFESRId(renameGroupMenuItem, \"renameGroup\");\n\t\tconst selectColorMenuItem = new MenuItem(`id-${group.id}-selectColor`, {\n\t\t\ttitle: this._i18nBundle.getText(\"selectColor\"),\n\t\t\ttype: ListType.Navigation,\n\t\t\tpress: this._openColorPopover.bind(this)\n\t\t});\n\t\taddFESRId(selectColorMenuItem, \"changeColor\");\n\t\tconst removeAllAppsMenuItem = new MenuItem(`id-${group.id}-removeAllApps`, {\n\t\t\ttitle: this._i18nBundle.getText(\"removeAllApps\"),\n\t\t\tpress: this._handleUngroupApps.bind(this, group)\n\t\t});\n\t\taddFESRId(removeAllAppsMenuItem, \"removeAllApps\");\n\t\tconst groupActions = [renameGroupMenuItem, selectColorMenuItem, removeAllAppsMenuItem];\n\t\tif (!group.isPresetSection) {\n\t\t\tconst deleteGroupMenuItem = new MenuItem(`id-${group.id}-delete`, {\n\t\t\t\ttitle: this._i18nBundle.getText(\"delete\"),\n\t\t\t\tpress: this._onDeleteGroup.bind(this)\n\t\t\t});\n\t\t\taddFESRId(deleteGroupMenuItem, \"deleteGroup\");\n\t\t\tgroupActions.push(deleteGroupMenuItem);\n\t\t}\n\t\treturn groupActions;\n\t}\n\n\t/**\n\t * Creates actions buttons for panel.\n\t * @private\n\t */\n\tprivate async _createActionButtons() {\n\t\tif (!this._actionButtons) {\n\t\t\tthis._actionButtons = [];\n\t\t\tif (_showAddApps()) {\n\t\t\t\tconst addAppsBtn = new Button(`${this.getId()}-addAppsBtn`, {\n\t\t\t\t\ticon: \"sap-icon://action\",\n\t\t\t\t\ttooltip: this._i18nBundle.getText(\"addAppsTooltip\"),\n\t\t\t\t\ttext: this._i18nBundle.getText(\"addApps\"),\n\t\t\t\t\tpress: () => {\n\t\t\t\t\t\tvoid this.navigateToAppFinder();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\taddFESRId(addAppsBtn, \"addAppsBtn\");\n\t\t\t\tthis._actionButtons.push(addAppsBtn);\n\t\t\t}\n\t\t}\n\t\tthis._actionButtons.forEach((actionButton) => {\n\t\t\tthis.addAggregation(\"actionButtons\", actionButton);\n\t\t});\n\t\tconst isImportEnabled = await this._validateAppsMigration();\n\t\tif (isImportEnabled) {\n\t\t\tthis._createImportButton();\n\t\t}\n\t}\n\n\tprivate _createImportButton(): Button {\n\t\tif (!this._importButton) {\n\t\t\tthis._importButton = new Button(`${this.getId()}-importAppsBtn`, {\n\t\t\t\ttooltip: this._i18nBundle.getText(\"importAppsNow\"),\n\t\t\t\ttext: this._i18nBundle.getText(\"importAppsNow\"),\n\t\t\t\tpress: this._openImportAppsDialog.bind(this)\n\t\t\t});\n\t\t\taddFESRId(this._importButton, \"importAppsDialog\");\n\t\t\tthis._actionButtons.push(this._importButton);\n\t\t\tthis.insertAggregation(\"actionButtons\", this._importButton, 0);\n\t\t}\n\t\treturn this._importButton;\n\t}\n\n\tprivate async setImportButtonVisibility(bVisible: boolean): Promise<void> {\n\t\tawait MyHomeImport.setImportEnabled(bVisible);\n\t\tthis._createImportButton().setVisible(bVisible);\n\t}\n\n\t/**\n\t * Creates menu items for panel header.\n\t * @private\n\t */\n\tprivate _createHeaderMenuItems() {\n\t\tif (!this._menuItems) {\n\t\t\tthis._createGroupMenuItem = new MenuItem(`${this.getId()}-${favouritesMenuItems.CREATE_GROUP}`, {\n\t\t\t\ttitle: this._i18nBundle.getText(\"createGroup\"),\n\t\t\t\ticon: \"sap-icon://add\",\n\t\t\t\tpress: () => this._openCreateGroupDialog()\n\t\t\t});\n\t\t\tthis._menuItems = [this._createGroupMenuItem];\n\t\t\tif (_showAddApps()) {\n\t\t\t\tthis._menuItems.push(\n\t\t\t\t\tnew MenuItem(`${this.getId()}-${favouritesMenuItems.ADD_APPS}`, {\n\t\t\t\t\t\ttitle: this._i18nBundle.getText(\"addApps\"),\n\t\t\t\t\t\ticon: \"sap-icon://action\",\n\t\t\t\t\t\tpress: () => {\n\t\t\t\t\t\t\tvoid this.navigateToAppFinder();\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t\t// Assign FESR IDs based on menu items\n\t\t\taddFESRId(this._createGroupMenuItem, \"createGroupDialog\");\n\t\t\tconst addAppsMenuItem = this._menuItems.find((item) => item.getId() === `${this.getId()}-${favouritesMenuItems.ADD_APPS}`);\n\t\t\tif (addAppsMenuItem) {\n\t\t\t\taddFESRId(addAppsMenuItem, \"appsAppFinder\");\n\t\t\t}\n\t\t\tthis._menuItems.forEach((oMenuItem) => {\n\t\t\t\tthis.addAggregation(\"menuItems\", oMenuItem, true);\n\t\t\t});\n\t\t\tthis._sortMenuItems(sortedMenuItems);\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves drag and drop information from the given event.\n\t * @private\n\t * @param {Event<DropInfo$DropEventParameters>} event - The event containing drag and drop information.\n\t * @returns {Promise<IDragDropInfo>} The drag and drop information.\n\t */\n\tprivate async _getDragDropInfo(event: Event<DropInfo$DropEventParameters>, appGroupId?: string) {\n\t\tconst dragTile = event.getParameter?.(\"draggedControl\") as GenericTile,\n\t\t\tdropTile = event.getParameter?.(\"droppedControl\") as GenericTile,\n\t\t\tdropPosition = event.getParameter?.(\"dropPosition\"),\n\t\t\tdropControl = dragTile.getParent() as GridContainer,\n\t\t\tdragItemIndex = dropControl.indexOfItem(dragTile),\n\t\t\tdropItemIndex = dropControl.indexOfItem(dropTile),\n\t\t\tdragItem = this._getTileItem(dragTile, appGroupId),\n\t\t\tdropItem = this._getTileItem(dropTile, appGroupId);\n\n\t\tconst dragDropInfo: IDragDropInfo = {\n\t\t\tdragItem: dragItem!,\n\t\t\tdropItem: dropItem!,\n\t\t\tdropPosition: dropPosition as dnd.RelativeDropPosition,\n\t\t\tdropControl,\n\t\t\tdragItemIndex,\n\t\t\tdropItemIndex\n\t\t};\n\t\t//adjust drap drop info\n\t\tif (dragItemIndex !== dropItemIndex) {\n\t\t\tif (!dragItem?.isA(\"sap.cux.home.Group\") && !dropItem?.isA(\"sap.cux.home.Group\")) {\n\t\t\t\tawait this._adjustAppDragDropInfo(dragDropInfo, appGroupId);\n\t\t\t} else if (dragItem?.isA(\"sap.cux.home.Group\")) {\n\t\t\t\tawait this._adjustGroupDragDropInfo(dragDropInfo);\n\t\t\t}\n\t\t}\n\t\treturn dragDropInfo;\n\t}\n\n\t/**\n\t * Adjusts apps drag and drop information.\n\t * @private\n\t * @param {IDragDropInfo} dragDropInfo - The drag and drop information to adjust.\n\t * @returns {Promise<void>} A Promise that resolves when the adjustment is completed.\n\t */\n\tprivate async _adjustAppDragDropInfo(dragDropInfo: IDragDropInfo, appGroupId?: string) {\n\t\tlet isUpdated = false;\n\t\tconst dragApp = dragDropInfo.dragItem as App;\n\t\tconst dropApp = dragDropInfo.dropItem as App;\n\t\tconst [dragVisualization, dropVisualization] = await Promise.all([\n\t\t\tthis.appManagerInstance.getVisualization(dragApp.getUrl(), appGroupId),\n\t\t\tthis.appManagerInstance.getVisualization(dropApp.getUrl(), appGroupId)\n\t\t]);\n\t\tif (dragDropInfo.dropPosition === dnd.RelativeDropPosition.Before) {\n\t\t\t//let's say there are two apps a1, a2, if a1 is moved before a2, that essentailly means the drop item index is same as current item index, adjust the dropItemIndex accordingly\n\t\t\tif (dragDropInfo.dragItemIndex === dragDropInfo.dropItemIndex - 1) {\n\t\t\t\tdragDropInfo.dropItemIndex--;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tdragDropInfo.dragItemIndex < dragDropInfo.dropItemIndex &&\n\t\t\t\tdragVisualization?.persConfig?.sectionIndex === dropVisualization?.persConfig?.sectionIndex\n\t\t\t) {\n\t\t\t\tdragDropInfo.dropItemIndex--;\n\t\t\t\tisUpdated = true;\n\t\t\t}\n\t\t} else if (dragDropInfo.dropPosition === dnd.RelativeDropPosition.After) {\n\t\t\tif (dragDropInfo.dragItemIndex === dragDropInfo.dropItemIndex + 1) {\n\t\t\t\tdragDropInfo.dropItemIndex++;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tdragDropInfo.dragItemIndex > dragDropInfo.dropItemIndex &&\n\t\t\t\tdragVisualization?.persConfig?.sectionIndex === dropVisualization?.persConfig?.sectionIndex\n\t\t\t) {\n\t\t\t\tdragDropInfo.dropItemIndex++;\n\t\t\t\tisUpdated = true;\n\t\t\t}\n\t\t}\n\n\t\tif (isUpdated) {\n\t\t\tconst tile = (dragDropInfo.dropControl as GridContainer).getItems()[dragDropInfo.dropItemIndex] as GenericTile;\n\t\t\tconst app = this._getTileItem(tile, appGroupId);\n\t\t\tif (app) {\n\t\t\t\tdragDropInfo.dropItem = app;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _getTileItem(tile: GenericTile, appGroupId?: string) {\n\t\tconst tileGroupId = tile.data(\"groupId\") as string | undefined;\n\t\tif (tileGroupId) {\n\t\t\t//tile is a group\n\t\t\treturn this._getGroup(tileGroupId);\n\t\t} else {\n\t\t\tconst group = appGroupId ? this._getGroup(appGroupId) : null;\n\t\t\tconst apps = group ? group.getApps() : this.getApps();\n\t\t\treturn apps.find((app) => getLeanURL(app.getUrl()) === tile.getUrl());\n\t\t}\n\t}\n\n\t/**\n\t * Adjusts app/group drag and drop information.\n\t * @private\n\t * @param {IDragDropInfo} dragDropInfo - The drag and drop information to adjust.\n\t * @returns {Promise<void>} A Promise that resolves when the adjustment is completed.\n\t */\n\tprivate async _adjustGroupDragDropInfo(dragDropInfo: IDragDropInfo) {\n\t\tconst sections = await this.appManagerInstance._getSections();\n\t\tlet dropGroupIndex;\n\t\tdragDropInfo.dragItemIndex = sections.findIndex((section) => section.id === (dragDropInfo.dragItem as Group).getGroupId());\n\n\t\t//If dropped app is the first ungrouped app, put the group at the end\n\t\tif (!dragDropInfo.dropItem.isA(\"sap.cux.home.Group\")) {\n\t\t\tconst lastGroupIndex = (this.getAggregation(\"groups\") as Group[]).length;\n\t\t\tdragDropInfo.dropItemIndex =\n\t\t\t\tdragDropInfo.dropPosition === dnd.RelativeDropPosition.Before &&\n\t\t\t\tdragDropInfo.dropItemIndex === lastGroupIndex &&\n\t\t\t\tdragDropInfo.dragItemIndex !== lastGroupIndex\n\t\t\t\t\t? lastGroupIndex + 1\n\t\t\t\t\t: dragDropInfo.dragItemIndex;\n\t\t} else {\n\t\t\tdropGroupIndex = sections.findIndex((section) => section.id === (dragDropInfo.dropItem as Group).getGroupId());\n\t\t\t//update the drop item with section index\n\t\t\tdragDropInfo.dropItemIndex = dropGroupIndex;\n\t\t}\n\n\t\t//let's say there are two groups g1, g2, if g1 is moved before g2, that essentailly means the drop item index is same as current item index, adjust the dropItemIndex accordingly\n\t\tif (\n\t\t\tdragDropInfo.dropPosition === dnd.RelativeDropPosition.Before &&\n\t\t\tdragDropInfo.dragItemIndex === dragDropInfo.dropItemIndex - 1\n\t\t) {\n\t\t\tdragDropInfo.dropItemIndex--;\n\t\t} else if (\n\t\t\tdragDropInfo.dropPosition === dnd.RelativeDropPosition.After &&\n\t\t\t(dragDropInfo.dragItemIndex !== dragDropInfo.dropItemIndex || (dropGroupIndex && dragDropInfo.dropItemIndex >= dropGroupIndex))\n\t\t) {\n\t\t\tdragDropInfo.dropItemIndex++;\n\t\t}\n\t}\n\n\t/**\n\t * Handler for drop event of a favorite item.\n\t * @private\n\t * @param {Event<DropInfo$DropEventParameters>} event - The drop event containing information about the dropped item.\n\t * @returns {Promise<void>} A Promise that resolves when the drop event handling is completed.\n\t */\n\tprivate async _onFavItemDrop(event: Event<DropInfo$DropEventParameters>, appGroupId?: string) {\n\t\tconst dragTile = event.getParameter?.(\"draggedControl\") as GenericTile;\n\t\tconst dragDropInfo = await this._getDragDropInfo(event, appGroupId);\n\t\tconst { dragItemIndex, dropItemIndex, dropPosition, dragItem, dropItem } = dragDropInfo;\n\t\tif (dragItemIndex === dropItemIndex) return;\n\n\t\tif (dropPosition === dnd.RelativeDropPosition.On) {\n\t\t\tawait this._handleOnItemDrop(dragItem, dropItem);\n\t\t\tvoid this.refresh();\n\t\t} else if (dropPosition === dnd.RelativeDropPosition.After || dropPosition === dnd.RelativeDropPosition.Before) {\n\t\t\tthis._setBusy(true);\n\t\t\tawait this._handleItemsReorder(dragDropInfo, appGroupId);\n\t\t\tawait this.refresh();\n\n\t\t\tif (appGroupId) {\n\t\t\t\tvoid this._setGroupDetailDialogApps(appGroupId);\n\t\t\t}\n\t\t\tthis._setBusy(false);\n\t\t}\n\n\t\tdragTile.removeStyleClass(\"sapMGTPressActive\");\n\t}\n\n\t/**\n\t * Handles the drop of an item onto another item.\n\t * If an app in dropped over another app, create group dialog is opened.\n\t * If an app is dropped over a group, app should be moved inside that group.\n\t * @private\n\t * @param {Group | App} dragItem - The item being dragged.\n\t * @param {Group | App} dropItem - The item onto which the dragItem is dropped.\n\t * @returns {Promise<void>} A Promise that resolves when the dropping of the item is completed.\n\t */\n\tprivate async _handleOnItemDrop(dragItem: Group | App, dropItem: Group | App) {\n\t\tif (dragItem.isA(\"sap.cux.home.Group\")) return;\n\n\t\tif (!dropItem.isA(\"sap.cux.home.Group\")) {\n\t\t\t//if both dragged and dropped items are apps, create group dialog is opened.\n\t\t\tconst dragApp = dragItem as App;\n\t\t\tconst dropApp = dropItem as App;\n\t\t\tthis._selectedApps = [dragApp, dropApp];\n\t\t\tthis._openCreateGroupDialog(true);\n\t\t} else {\n\t\t\t//if dragged item is an app and dropped item is a group, app should be moved into that group.\n\t\t\tconst targetGroupId = (dropItem as Group).getGroupId();\n\t\t\tthis._setBusy(true);\n\t\t\tawait this._handleMoveToGroup(dragItem, undefined, targetGroupId);\n\t\t\tthis._setBusy(false);\n\t\t}\n\t}\n\n\t/**\n\t * Handles the reordering of items based on drag and drop information.\n\t * @private\n\t * @param {IDragDropInfo} dragDropInfo - The drag and drop information.\n\t * @returns {Promise<void>} A Promise that resolves when the reordering is completed.\n\t */\n\tprivate async _handleItemsReorder(dragDropInfo: IDragDropInfo, appGroupId?: string) {\n\t\tconst { dragItem, dropItem, dragItemIndex, dropItemIndex } = dragDropInfo;\n\t\tconst isDragItemGroup = dragItem.isA(\"sap.cux.home.Group\");\n\t\tconst isDropItemGroup = dropItem.isA(\"sap.cux.home.Group\");\n\t\tif (!isDragItemGroup && !isDropItemGroup) {\n\t\t\tconst drapApp = dragItem as App;\n\t\t\tconst dropApp = dropItem as App;\n\t\t\tconst [dragVisualization, dropVisualization] = await Promise.all([\n\t\t\t\tthis.appManagerInstance.getVisualization(drapApp.getUrl(), appGroupId),\n\t\t\t\tthis.appManagerInstance.getVisualization(dropApp.getUrl(), appGroupId)\n\t\t\t]);\n\t\t\tawait this.appManagerInstance.moveVisualization({\n\t\t\t\tsourceSectionIndex: dragVisualization?.persConfig?.sectionIndex as number,\n\t\t\t\tsourceVisualizationIndex: dragVisualization?.persConfig?.visualizationIndex as number,\n\t\t\t\ttargetSectionIndex: dropVisualization?.persConfig?.sectionIndex as number,\n\t\t\t\ttargetVisualizationIndex: dropVisualization?.persConfig?.visualizationIndex as number\n\t\t\t});\n\t\t} else if (isDragItemGroup && isDropItemGroup) {\n\t\t\tawait this.appManagerInstance.moveSection(dragItemIndex, dropItemIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Navigates to the App Finder with optional group Id.\n\t * @async\n\t * @private\n\t * @param {string} [groupId] - Optional group Id\n\t */\n\tprivate async navigateToAppFinder(groupId?: string) {\n\t\tconst navigationService = await Container.getServiceAsync<Navigation>(\"Navigation\");\n\t\tconst navigationObject: { pageID: string; sectionID?: string } = {\n\t\t\tpageID: MYHOME_PAGE_ID\n\t\t};\n\t\tif (groupId) {\n\t\t\tnavigationObject.sectionID = groupId;\n\t\t}\n\t\tawait navigationService.navigate({\n\t\t\ttarget: {\n\t\t\t\tshellHash: `Shell-appfinder?&/catalog/${JSON.stringify(navigationObject)}`\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Validates if import apps is enabled\n\t *\n\t *@returns {Promise} - resolves to boolean value (import is enabled/disabled)\n\t */\n\tprivate async _validateAppsMigration() {\n\t\ttry {\n\t\t\treturn await MyHomeImport.isImportEnabled();\n\t\t} catch (error: unknown) {\n\t\t\tLog.warning(error instanceof Error ? error.message : \"Error while checking if import apps is enabled\");\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate _openImportAppsDialog() {\n\t\tconst pageRuntime = new PageRuntime();\n\t\tpageRuntime.onImportDialogPress();\n\t}\n\n\t/**\n\t * Opens the create group dialog.\n\t * @private\n\t * @param {boolean} [skipAppsSelection=false] - Whether to skip the apps selection page.\n\t */\n\tprivate _openCreateGroupDialog(skipAppsSelection = false) {\n\t\tconst createGroupDialog = this._generateCreateGroupDialog(skipAppsSelection);\n\t\tconst appsWrapper = this._controlMap.get(`${this.getId()}-createGroupDialog-appsPage-scrollContainer-apps`) as GridContainer;\n\t\tappsWrapper.destroyItems();\n\t\tconst tiles = [...this.getApps()].map((app) => {\n\t\t\tconst appCopy = app.clone();\n\t\t\tappCopy._onPress = (e) => this._highlightApp(e, appCopy); // override app press behaviour to highlight app\n\t\t\treturn (this.getParent() as AppsContainer)._getAppTile(appCopy);\n\t\t});\n\t\tthis._setAggregation(appsWrapper, tiles);\n\t\tlet apps = this.getApps();\n\t\t(this.getParent() as AppsContainer).fireEvent(\"appsLoaded\", { apps, tiles });\n\t\tthis._updateSelectedAppCount();\n\t\tcreateGroupDialog.open();\n\t}\n\n\t/**\n\t * Closes the create group dialog.\n\t * @private\n\t */\n\tprivate _closeCreateGroupDialog() {\n\t\tconst createGroupDialog = this._generateCreateGroupDialog();\n\t\tcreateGroupDialog?.close();\n\t\t//reset create group dialog on close\n\t\tthis._resetCreateGroupDialog();\n\t}\n\n\t/**\n\t * Resets the state of the create group dialog.\n\t * @private\n\t */\n\tprivate _resetCreateGroupDialog() {\n\t\tconst navContainer = this._generateCreateGroupNavContainer();\n\t\tconst groupNameInput = this._controlMap.get(`${this.getId()}-createGroupDialog-mainPage-form-groupName-input`) as Input;\n\t\tconst searchField = this._controlMap.get(`${this.getId()}-createGroupDialog-appsPage-search`) as SearchField;\n\t\tgroupNameInput.setValue(\"\");\n\t\tnavContainer.to(navContainer.getInitialPage() as string);\n\t\tthis._selectedApps = [];\n\t\tsearchField.setValue(\"\");\n\t\tthis._setNoAppsSelectedError(false);\n\t\tthis._selectedGroupColor = undefined;\n\t}\n\n\t/**\n\t * Generates or retrieves the dialog for creating a group.\n\t * @private\n\t * @param {boolean} bSkipAppsSelection - Whether to skip the apps selection page.\n\t * @returns {sap.m.Dialog} The generated dialog for creating a group.\n\t */\n\tprivate _generateCreateGroupDialog(skipAppsSelection: boolean = true) {\n\t\tconst id = `${this.getId()}-createGroupDialog`;\n\t\tconst navContainer = this._generateCreateGroupNavContainer();\n\t\tconst _toggleNavButton = (skipAppsSelection: boolean) => {\n\t\t\tconst nextBtn = this._controlMap.get(`${id}-nextBtn`) as Button;\n\t\t\tconst backBtn = this._controlMap.get(`${id}-backBtn`) as Button;\n\t\t\tconst createBtn = this._controlMap.get(`${id}-createBtn`) as Button;\n\t\t\tconst currentPageIndex = navContainer.indexOfPage(navContainer.getCurrentPage());\n\t\t\tnextBtn.setVisible(currentPageIndex !== navContainer.getPages().length - 1 && !skipAppsSelection);\n\t\t\tbackBtn.setVisible(currentPageIndex !== 0 && !skipAppsSelection);\n\t\t\tcreateBtn.setVisible(currentPageIndex === navContainer.getPages().length - 1 || skipAppsSelection);\n\t\t};\n\t\tif (!this._controlMap.get(id)) {\n\t\t\t//set up navigation buttons\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${id}-nextBtn`,\n\t\t\t\tnew Button({\n\t\t\t\t\tid: `${id}-nextBtn`,\n\t\t\t\t\ttext: this._i18nBundle.getText(\"nextButton\"),\n\t\t\t\t\tpress: () => {\n\t\t\t\t\t\tif (this._validateGroupName()) {\n\t\t\t\t\t\t\tnavContainer.to(this._generateCreateGroupAppsPage());\n\t\t\t\t\t\t\t_toggleNavButton(skipAppsSelection);\n\t\t\t\t\t\t\tthis._highlightSelectedApps();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\ttype: \"Emphasized\"\n\t\t\t\t})\n\t\t\t);\n\t\t\t// Add FESR for next button\n\t\t\tconst nextBtn = this._controlMap.get(`${id}-nextBtn`) as Button;\n\t\t\taddFESRSemanticStepName(nextBtn, \"press\", \"createGroupNextBtn\");\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${id}-backBtn`,\n\t\t\t\tnew Button({\n\t\t\t\t\tid: `${id}-backBtn`,\n\t\t\t\t\ttext: this._i18nBundle.getText(\"backButton\"),\n\t\t\t\t\tpress: () => {\n\t\t\t\t\t\tnavContainer.back();\n\t\t\t\t\t\t_toggleNavButton(skipAppsSelection);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t\t// Add FESR for back button\n\t\t\tconst backBtn = this._controlMap.get(`${id}-backBtn`) as Button;\n\t\t\taddFESRSemanticStepName(backBtn, \"press\", \"createGroupBackBtn\");\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${id}-createBtn`,\n\t\t\t\tnew Button({\n\t\t\t\t\tid: `${id}-createBtn`,\n\t\t\t\t\ttext: this._i18nBundle.getText(\"createButton\"),\n\t\t\t\t\tpress: () => {\n\t\t\t\t\t\tvoid this._onPressGroupCreate();\n\t\t\t\t\t},\n\t\t\t\t\ttype: \"Emphasized\"\n\t\t\t\t})\n\t\t\t);\n\t\t\t// Add FESR for create button\n\t\t\tconst createBtn = this._controlMap.get(`${id}-createBtn`) as Button;\n\t\t\taddFESRSemanticStepName(createBtn, \"press\", \"addCreateGroup\");\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew Dialog(id, {\n\t\t\t\t\ttitle: this._i18nBundle.getText(\"createGroup\"),\n\t\t\t\t\tcontent: navContainer,\n\t\t\t\t\tescapeHandler: this._closeCreateGroupDialog.bind(this),\n\t\t\t\t\tcontentHeight: \"25rem\",\n\t\t\t\t\tcontentWidth: \"41.75rem\",\n\t\t\t\t\tbuttons: [\n\t\t\t\t\t\tnextBtn,\n\t\t\t\t\t\tbackBtn,\n\t\t\t\t\t\tcreateBtn,\n\t\t\t\t\t\tnew Button({\n\t\t\t\t\t\t\tid: `${id}-cancelBtn`,\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"cancelBtn\"),\n\t\t\t\t\t\t\tpress: this._closeCreateGroupDialog.bind(this)\n\t\t\t\t\t\t})\n\t\t\t\t\t]\n\t\t\t\t}).addStyleClass(\"sapCuxCreateGroupDialog sapContrastPlus\")\n\t\t\t);\n\t\t}\n\t\t_toggleNavButton(skipAppsSelection);\n\t\treturn this._controlMap.get(id) as Dialog;\n\t}\n\n\t/**\n\t * Handles the highlighting of an app when selected.\n\t * @private\n\t * @param {sap.ui.base.Event} event - The event object.\n\t * @param {Object} selectedApp - The selected app object.\n\t */\n\tprivate _highlightApp(event: Event, selectedApp: App) {\n\t\tconst oTile = event.getSource<GenericTile>(),\n\t\t\tbIsSelected = !oTile.hasStyleClass(\"sapCuxHighlightApp\"),\n\t\t\toScrollContainer = this._generateAppsScrollContainer();\n\t\tthis._selectedApps = this._selectedApps || [];\n\t\tif (bIsSelected) {\n\t\t\tthis._selectedApps.push(selectedApp);\n\t\t} else {\n\t\t\tthis._selectedApps.splice(\n\t\t\t\tthis._selectedApps.findIndex((oApp) => selectedApp.getUrl() === oApp.getUrl()),\n\t\t\t\t1\n\t\t\t);\n\t\t}\n\t\tthis._updateSelectedAppCount();\n\t\toTile.toggleStyleClass(\"sapCuxHighlightApp\", bIsSelected);\n\t\tthis._setNoAppsSelectedError(this._selectedApps.length < 1);\n\t\t//adjust scroll container height\n\t\toScrollContainer.setHeight(this._selectedApps.length < 1 ? \"15.3rem\" : \"17.5rem\");\n\t}\n\n\t/**\n\t * Generates the scroll container for displaying apps in the create group dialog.\n\t * @private\n\t * @returns {sap.m.ScrollContainer} The scroll container for displaying apps.\n\t */\n\tprivate _generateAppsScrollContainer() {\n\t\tconst id = `${this.getId()}-createGroupDialog-appsPage-scrollContainer`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${id}-apps`,\n\t\t\t\tnew GridContainer({\n\t\t\t\t\tid: `${id}-apps`,\n\t\t\t\t\tlayout: new GridContainerSettings(`${id}--appsContainerSettings`, {\n\t\t\t\t\t\tcolumnSize: \"19rem\",\n\t\t\t\t\t\tgap: \"0.5rem\"\n\t\t\t\t\t})\n\t\t\t\t}).addStyleClass(\"sapCuxAppsGridContainerPadding\")\n\t\t\t);\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew ScrollContainer(id, {\n\t\t\t\t\tid,\n\t\t\t\t\tvertical: true,\n\t\t\t\t\tvisible: true,\n\t\t\t\t\theight: \"17.5rem\",\n\t\t\t\t\tcontent: [this._controlMap.get(`${id}-apps`) as GridContainer]\n\t\t\t\t}).addStyleClass(\"sapUiSmallMarginBeginEnd\")\n\t\t\t);\n\t\t}\n\t\treturn this._controlMap.get(id) as ScrollContainer;\n\t}\n\n\t/**\n\t * Method for updating selected apps count in create group dialog\n\t * @private\n\t */\n\tprivate _updateSelectedAppCount() {\n\t\tconst oAppsCountContol = this._controlMap.get(`${this.getId()}-createGroupDialog-appsPage-headerContainer-count`) as Text;\n\t\toAppsCountContol.setText(\n\t\t\tthis._i18nBundle.getText(\"selectedAppsCount\", [this._selectedApps?.length || this._i18nBundle.getText(\"noAppSelected\")])\n\t\t);\n\t}\n\n\t/**\n\t * Creates or returns the navigation container for the create group dialog.\n\t * @private\n\t * @returns {sap.m.NavContainer} The navigation container for the create group dialog.\n\t */\n\tprivate _generateCreateGroupNavContainer() {\n\t\tconst id = `${this.getId()}-createGroupDialog-wrapper`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew NavContainer(id, {\n\t\t\t\t\tinitialPage: `${this.getId()}-createGroupDialog-mainPage`,\n\t\t\t\t\tpages: [this._generateCreateGroupMainPage(), this._generateCreateGroupAppsPage()]\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\treturn this._controlMap.get(id) as NavContainer;\n\t}\n\n\t/**\n\t * Generates or retrieve the main page of the create group dialog.\n\t * @private\n\t * @returns {sap.m.Page} The main page of the create group dialog.\n\t */\n\tprivate _generateCreateGroupMainPage() {\n\t\tconst id = `${this.getId()}-createGroupDialog-mainPage`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${id}-form-groupName-input`,\n\t\t\t\tnew Input({\n\t\t\t\t\tid: `${id}-form-groupName-input`,\n\t\t\t\t\twidth: \"13.75rem\",\n\t\t\t\t\trequired: true,\n\t\t\t\t\tliveChange: this._validateGroupName.bind(this)\n\t\t\t\t})\n\t\t\t);\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew Page({\n\t\t\t\t\tid,\n\t\t\t\t\tshowHeader: false,\n\t\t\t\t\tenableScrolling: false,\n\t\t\t\t\tbackgroundDesign: \"List\",\n\t\t\t\t\tcontent: [\n\t\t\t\t\t\tnew VBox({\n\t\t\t\t\t\t\tid: `${id}-headerContainer`,\n\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\tnew Title({\n\t\t\t\t\t\t\t\t\tid: `${id}-title`,\n\t\t\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"settings\")\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tnew Text({\n\t\t\t\t\t\t\t\t\tid: `${id}-description`,\n\t\t\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"settingsDescription\")\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}).addStyleClass(\"sapUiSmallMarginTop sapUiSmallMarginBeginEnd sapUiTinyMarginBottom\"),\n\t\t\t\t\t\tnew SimpleForm(`${id}-form`, {\n\t\t\t\t\t\t\tlayout: form.SimpleFormLayout.ResponsiveGridLayout,\n\t\t\t\t\t\t\tlabelSpanS: 4,\n\t\t\t\t\t\t\tlabelSpanM: 4,\n\t\t\t\t\t\t\tcontent: [\n\t\t\t\t\t\t\t\tnew Label({\n\t\t\t\t\t\t\t\t\tid: `${id}-form-groupName-label`,\n\t\t\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"groupNameLbl\")\n\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginTop\"),\n\t\t\t\t\t\t\t\tthis._controlMap.get(`${id}-form-groupName-input`) as Input,\n\t\t\t\t\t\t\t\tnew Label({\n\t\t\t\t\t\t\t\t\tid: `${id}-form-groupColor-label`,\n\t\t\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"groupColorLbl\")\n\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginTop\"),\n\t\t\t\t\t\t\t\tnew ColorPalette(`${id}-form-groupColor-pallet`, {\n\t\t\t\t\t\t\t\t\tcolors: END_USER_COLORS().map((oColor) => oColor.value) as string[],\n\t\t\t\t\t\t\t\t\tcolorSelect: this._onColorSelect.bind(this)\n\t\t\t\t\t\t\t\t}).addStyleClass(\"adjustSelectedColorPalette\")\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}).addStyleClass(\"sapUiMediumMarginTop\")\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\treturn this._controlMap.get(id) as Page;\n\t}\n\n\t/**\n\t * Generates or retrieve the app selection page of the create group dialog.\n\t * @private\n\t * @returns {sap.m.Page} The app selection page of the create group dialog.\n\t */\n\tprivate _generateCreateGroupAppsPage() {\n\t\tconst id = `${this.getId()}-createGroupDialog-appsPage`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${id}-search`,\n\t\t\t\tnew SearchField({\n\t\t\t\t\tid: `${id}-search`,\n\t\t\t\t\tliveChange: this._onCreateAppSearch.bind(this)\n\t\t\t\t}).addStyleClass(\"sapUiTinyMarginTopBottom\")\n\t\t\t);\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${id}-errorMessageStrip`,\n\t\t\t\tnew MessageStrip(`${id}-errorMessageStrip`, {\n\t\t\t\t\tid: `${id}-errorMessageStrip`,\n\t\t\t\t\ttype: MessageType.Error,\n\t\t\t\t\tshowIcon: true,\n\t\t\t\t\ttext: this._i18nBundle.getText(\"selectionErrorMessage\"),\n\t\t\t\t\tvisible: false\n\t\t\t\t})\n\t\t\t);\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${id}-headerContainer-count`,\n\t\t\t\tnew Text({\n\t\t\t\t\tid: `${id}-headerContainer-count`\n\t\t\t\t})\n\t\t\t);\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew Page(id, {\n\t\t\t\t\tshowHeader: false,\n\t\t\t\t\tbackgroundDesign: \"List\",\n\t\t\t\t\tenableScrolling: false,\n\t\t\t\t\tcontent: [\n\t\t\t\t\t\tnew VBox(`${id}-headerContainer`, {\n\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\tnew HBox(`${id}-headerContainer-titleCount`, {\n\t\t\t\t\t\t\t\t\tid: `${id}-headerContainer-titleCount`,\n\t\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\t\tnew Title({\n\t\t\t\t\t\t\t\t\t\t\tid: `${id}-headerContainer-title`,\n\t\t\t\t\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"selectedAppsTitle\")\n\t\t\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginEnd\"),\n\t\t\t\t\t\t\t\t\t\tthis._controlMap.get(`${id}-headerContainer-count`) as Text\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tnew Text({\n\t\t\t\t\t\t\t\t\tid: `${id}-description`,\n\t\t\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"appsSelectionDescription\")\n\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginBottom\"),\n\t\t\t\t\t\t\t\tthis._controlMap.get(`${id}-search`) as SearchField,\n\t\t\t\t\t\t\t\tthis._controlMap.get(`${id}-errorMessageStrip`) as MessageStrip\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}).addStyleClass(\"sapUiSmallMarginTop sapUiSmallMarginBeginEnd sapUiTinyMarginBottom\"),\n\t\t\t\t\t\tthis._generateAppsScrollContainer(),\n\t\t\t\t\t\tthis._generateCreateGroupErrorMsg()\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\treturn this._controlMap.get(id) as Page;\n\t}\n\n\t/**\n\t * Generates the error message for create group dialog, when no apps are found for searched text.\n\t * @private\n\t * @returns {sap.m.IllustratedMessage} The error message for no filtered apps.\n\t */\n\tprivate _generateCreateGroupErrorMsg() {\n\t\tconst id = `${this.getId()}-createGroupDialog-appsPage-noFilterApps`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew IllustratedMessage({\n\t\t\t\t\tid,\n\t\t\t\t\tillustrationSize: IllustratedMessageSize.Base,\n\t\t\t\t\ttitle: this._i18nBundle.getText(\"noSearchedAppTitle\"),\n\t\t\t\t\tdescription: this._i18nBundle.getText(\"noSearchedAppDes\"),\n\t\t\t\t\tvisible: false\n\t\t\t\t}).addStyleClass(\"sapUiLargeMarginTop\")\n\t\t\t);\n\t\t}\n\t\treturn this._controlMap.get(id) as IllustratedMessage;\n\t}\n\n\t/**\n\t * Handles the color selection event for new group.\n\t * @private\n\t * @param {sap.ui.base.Event} event - The event object.\n\t */\n\tprivate _onColorSelect(event: ColorPalette$ColorSelectEvent) {\n\t\tthis._selectedGroupColor = this._getLegendColor(event.getParameter(\"value\") as string).key;\n\t}\n\n\t/**\n\t * Retrieves the key of the legend color based on the provided color value.\n\t * @param {string} color - The color value for which to retrieve the legend color key.\n\t * @returns {string} The legend color key corresponding to the provided color value, or the default background color key if not found.\n\t * @private\n\t */\n\tprivate _getLegendColor(color: string) {\n\t\treturn END_USER_COLORS().find((oColor) => oColor.value === color) || DEFAULT_BG_COLOR();\n\t}\n\n\t/**\n\t * Sets the visibility of the error message strip indicating no apps are selected in create group dialog.\n\t * @private\n\t * @param {boolean} error - Whether to show the error message strip (true) or hide it (false).\n\t */\n\tprivate _setNoAppsSelectedError(error: boolean) {\n\t\tconst messageStrip = this._controlMap.get(`${this.getId()}-createGroupDialog-appsPage-errorMessageStrip`) as MessageStrip;\n\t\tmessageStrip.setVisible(error);\n\t}\n\n\t/**\n\t * Validates the group name entered in the create group dialog.\n\t * @private\n\t * @returns {boolean} Whether the group name is valid (true) or not (false).\n\t */\n\tprivate _validateGroupName() {\n\t\tconst groupNameInput = this._controlMap.get(`${this.getId()}-createGroupDialog-mainPage-form-groupName-input`) as Input;\n\t\tconst groupName = groupNameInput.getValue().trim();\n\t\t//update value state\n\t\tgroupNameInput.setValueState(groupName ? \"None\" : \"Error\");\n\t\tgroupNameInput.setValueStateText(groupName ? \"\" : (this._i18nBundle.getText(\"invalidGroupName\") as string));\n\t\treturn groupName ? true : false;\n\t}\n\n\t/**\n\t * Highlights selected apps by adding a CSS class to corresponding tiles.\n\t * @private\n\t */\n\tprivate _highlightSelectedApps() {\n\t\tconst selectedApps = this._selectedApps || [];\n\t\tconst tilesContainer = this._controlMap.get(`${this.getId()}-createGroupDialog-appsPage-scrollContainer-apps`) as GridContainer;\n\t\tconst tiles = (tilesContainer.getItems() || []) as GenericTile[];\n\t\ttiles.forEach((tile) => {\n\t\t\ttile.toggleStyleClass(\n\t\t\t\t\"sapCuxHighlightApp\",\n\t\t\t\tselectedApps.some((app) => getLeanURL(app.getUrl()) === tile.getUrl())\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Handles the search for apps in create group dialog.\n\t * @private\n\t * @param {sap.ui.base.Event} event - The event object.\n\t */\n\tprivate _onCreateAppSearch(event: Event) {\n\t\tconst tilesContainer = this._controlMap.get(`${this.getId()}-createGroupDialog-appsPage-scrollContainer-apps`) as GridContainer,\n\t\t\tsearchQuery = event.getSource<SearchField>().getValue(),\n\t\t\ttiles = (tilesContainer.getItems() || []) as GenericTile[],\n\t\t\tsearchExpression = new RegExp(searchQuery, \"i\");\n\t\ttiles.forEach((tile) => {\n\t\t\ttile.setVisible(searchExpression.test(tile.getHeader()));\n\t\t});\n\t\tconst filteredTiles = tiles.filter((tile) => tile.getVisible());\n\t\tconst hasFilteredApps = filteredTiles.length > 0;\n\t\tthis._generateAppsScrollContainer()?.setVisible(hasFilteredApps);\n\t\tthis._generateCreateGroupErrorMsg()?.setVisible(!hasFilteredApps);\n\t}\n\n\t/**\n\t * Handles the event when the user presses the button to create a new group.\n\t * @private\n\t */\n\tprivate async _onPressGroupCreate() {\n\t\tconst groupNameInput = this._controlMap.get(`${this.getId()}-createGroupDialog-mainPage-form-groupName-input`) as Input;\n\t\tif (this._validateGroupName()) {\n\t\t\tif (this._selectedApps?.length) {\n\t\t\t\tthis._setBusy(true);\n\t\t\t\ttry {\n\t\t\t\t\tawait this._createGroup({\n\t\t\t\t\t\tselectedApps: this._selectedApps,\n\t\t\t\t\t\tgroupName: groupNameInput.getValue(),\n\t\t\t\t\t\tgroupColor: this._getGroupColor()\n\t\t\t\t\t});\n\t\t\t\t\tawait this.refresh();\n\n\t\t\t\t\t// Show toast message after successful group creation\n\t\t\t\t\tMessageToast.show(this._i18nBundle.getText(\"newGroupCreated\") as string, {\n\t\t\t\t\t\tof: this._controlMap.get(`${this.getId()}-createGroupDialog`),\n\t\t\t\t\t\toffset: \"0 80\"\n\t\t\t\t\t});\n\t\t\t\t\tconst groups = (this.getAggregation(\"groups\") || []) as Group[];\n\t\t\t\t\tvoid this._showGroupDetailDialog(groups[0]?.getGroupId());\n\t\t\t\t} catch (err) {\n\t\t\t\t\tLog.error(err as string);\n\t\t\t\t\tMessageToast.show(this._i18nBundle.getText(\"unableToCreateGroup\") as string);\n\t\t\t\t} finally {\n\t\t\t\t\tthis._setBusy(false);\n\t\t\t\t\tthis._closeCreateGroupDialog();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._setNoAppsSelectedError(true);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new group with the given properties and adds selected apps to it.\n\t * @param {Object} params - The properties for creating the group.\n\t * @param {sap.ui.core.URI[]} params.selectedApps - Target URL unique identifier of the selected apps to be added to the group.\n\t * @param {string} [params.groupName] - The name of the group. If not provided, a default name will be used.\n\t * @param {string} [params.groupColor] - The color of the group. If not provided, the default color will be used.\n\t * @private\n\t */\n\tprivate async _createGroup(params: { selectedApps: App[]; groupName: string; groupColor: string }) {\n\t\tconst { selectedApps, groupName, groupColor } = params;\n\t\tconst sectionVisualizations = await this.appManagerInstance.getSectionVisualizations();\n\t\tconst visualizations = selectedApps.reduce((selectedVisualizations: ICustomVisualization[], oApp) => {\n\t\t\tconst sectionVisualization = sectionVisualizations.find((oSectionViz) => oSectionViz.url === oApp.getUrl());\n\t\t\tif (sectionVisualization) {\n\t\t\t\tselectedVisualizations.push(sectionVisualization);\n\t\t\t}\n\t\t\treturn selectedVisualizations;\n\t\t}, []);\n\t\tconst sectionId = visualizations[0].persConfig!.sectionId!;\n\t\tawait this.appManagerInstance.addSection({\n\t\t\tsectionIndex: 1,\n\t\t\tsectionProperties: {\n\t\t\t\ttitle: groupName || this._i18nBundle.getText(\"newGroup\"),\n\t\t\t\tvisible: true,\n\t\t\t\tvisualizations: visualizations.map((viz) => viz.visualization)\n\t\t\t}\n\t\t});\n\n\t\tconst visualizationsToBeDeleted: string[] = visualizations.reduce((visualizationsToBeDeleted: string[], oViz) => {\n\t\t\tif (oViz.visualization?.id) {\n\t\t\t\tconst duplicateVisualizationIds = (oViz.persConfig?.duplicateApps || []).map((oViz) => oViz.visualization?.id) as string[];\n\t\t\t\tvisualizationsToBeDeleted = visualizationsToBeDeleted.concat([oViz.visualization?.id], duplicateVisualizationIds);\n\t\t\t}\n\t\t\treturn visualizationsToBeDeleted;\n\t\t}, []);\n\n\t\tawait this.appManagerInstance.removeVisualizations({ sectionId, vizIds: visualizationsToBeDeleted });\n\t\tconst sections = await this.appManagerInstance._getSections(true);\n\t\tconst defaultSection = sections.find((oSection) => oSection.default);\n\t\tconst targetGroupId = sections[defaultSection ? 1 : 0]?.id;\n\t\t//update personalization\n\t\tawait this._updateAppPersonalization(\n\t\t\tvisualizations.map((oViz) => {\n\t\t\t\treturn {\n\t\t\t\t\tvisualization: oViz,\n\t\t\t\t\ttargetGroupId\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tawait this._updateGroupPersonalization(targetGroupId!, groupColor);\n\t}\n\n\t/**\n\t * Retrieves the color for the group.\n\t * @private\n\t * @returns {string} The color for the group.\n\t */\n\tprivate _getGroupColor() {\n\t\tconst defaultColor = DEFAULT_BG_COLOR().key;\n\t\tconst firstApp = this._selectedApps[0];\n\t\tconst setDefaultColor = this._selectedApps.some((app) => app.getBgColor() !== firstApp.getBgColor());\n\t\t//if group color is selected then apply that color, else if all the selected apps have same color then give the same color to group, else apply default color.\n\t\treturn this._selectedGroupColor || (setDefaultColor ? defaultColor : firstApp.getBgColor());\n\t}\n\n\t/**\n\t * Opens a color popover for selecting a background color for an item.\n\t * @param {sap.ui.base.Event} event - The event object.\n\t * @private\n\t */\n\tprivate _openColorPopover(event: Event<{ listItem?: StandardListItem }>) {\n\t\tconst colorPopoverId = `${this.getId()}-colorPopover`,\n\t\t\tcolors = END_USER_COLORS().map((oColor) => oColor.value) as string[];\n\t\tconst source = event.getSource<MenuItem>();\n\t\tthis._currentItem = source.getParent() as App | Group;\n\t\tlet colorPopover = this._controlMap.get(colorPopoverId) as ColorPalettePopover;\n\t\tif (!colorPopover) {\n\t\t\tcolorPopover = new ColorPalettePopover(colorPopoverId, {\n\t\t\t\tid: colorPopoverId,\n\t\t\t\tcolors: colors,\n\t\t\t\tshowDefaultColorButton: false,\n\t\t\t\tshowMoreColorsButton: false,\n\t\t\t\tshowRecentColorsSection: false,\n\t\t\t\tcolorSelect: (event: ColorPalette$ColorSelectEvent) => {\n\t\t\t\t\tActionsPopover._closeActionsPopover();\n\t\t\t\t\tconst selectedColor = event.getParameter(\"value\") as string;\n\t\t\t\t\tvoid this._handleColorSelect(this._currentItem, selectedColor);\n\t\t\t\t}\n\t\t\t}).addStyleClass(\"sapContrastPlus\");\n\t\t\t(colorPopover as ColorPalettePopover & { _oPopover: Popover })._oPopover.setPlacement(PlacementType.HorizontalPreferredRight);\n\t\t\tthis._controlMap.set(colorPopoverId, colorPopover);\n\t\t}\n\t\tcolorPopover.openBy(event.getParameter(\"listItem\") as Control);\n\t}\n\n\t/**\n\t * Handles the selection of a color for an app or group.\n\t * @param {sap.cux.home.App | sap.cux.home.Group} item - The item control.\n\t * @param {string} color - The selected color.\n\t * @returns {Promise<void>} - A promise that resolves when the color selection is handled.\n\t * @private\n\t */\n\tprivate async _handleColorSelect(item: App | Group, color: string) {\n\t\tconst selectedColor = this._getLegendColor(color).key;\n\t\titem.setProperty(\"bgColor\", selectedColor, true);\n\t\tconst groupId = item.isA(\"sap.cux.home.Group\") ? (item as Group).getGroupId() : null;\n\t\tconst isGroupedApp = !groupId && item.getParent()?.isA(\"sap.cux.home.Group\");\n\n\t\t//update tile color\n\t\tif (isGroupedApp) {\n\t\t\tthis._refreshGroupDetailDialog(item as App, false);\n\t\t} else {\n\t\t\t//if ungroup app or group\n\t\t\tthis._applyUngroupedTileColor(item, color);\n\t\t\tthis.oEventBus.publish(\"appsChannel\", \"favAppColorChanged\", { item, color });\n\t\t}\n\n\t\t//update personalization\n\t\tif (groupId) {\n\t\t\t//if group\n\t\t\tvoid this._updateGroupPersonalization(groupId, selectedColor);\n\t\t\tconst groupIconControl = this._controlMap.get(`${this.getId()}-detailDialog-toolbar-color`) as Icon;\n\t\t\tgroupIconControl?.setColor(color);\n\t\t} else {\n\t\t\t//if app\n\t\t\tconst app = item as App;\n\t\t\tconst groupId = isGroupedApp ? (app.getParent() as Group).getGroupId() : undefined;\n\t\t\tconst visualization = await this.appManagerInstance.getVisualization(app.getUrl(), groupId);\n\t\t\tif (visualization) {\n\t\t\t\tvoid this._updateAppPersonalization([{ visualization, color: selectedColor }]);\n\t\t\t}\n\t\t}\n\t\tthis.oEventBus.publish(\"appsChannel\", \"favAppColorChanged\", { item, color });\n\t}\n\n\t/**\n\t * Retrieves the list of groups where apps can be moved, excluding the source group if specified.\n\t * @param {string|null} sourceGroupId - The ID of the source group from which apps are being moved.\n\t * @returns {sap.cux.home.Group[]} An array of groups where apps can be moved.\n\t * @private\n\t */\n\tprivate _getAllowedMoveGroups(sourceGroupId: string | undefined) {\n\t\tlet allowedMoveGroups = (this.getAggregation(\"groups\") || []) as Group[];\n\t\tif (sourceGroupId) {\n\t\t\tallowedMoveGroups = allowedMoveGroups.filter((allowedMoveGroup) => allowedMoveGroup.getGroupId() !== sourceGroupId);\n\t\t}\n\t\treturn allowedMoveGroups;\n\t}\n\n\t/**\n\t * Sets the busy state for dialogs and the panel.\n\t * @param {boolean} busy - Indicates whether the dialogs and the panel should be set to busy state.\n\t * @private\n\t */\n\tprivate _setBusy(busy: boolean) {\n\t\t[this._generateGroupDetailDialog(), this._generateCreateGroupDialog(), this._generateAddFromInsightsDialog()].forEach(\n\t\t\t(oControl) => {\n\t\t\t\toControl.setBusy(busy);\n\t\t\t}\n\t\t);\n\t\tsuper.setBusy(busy);\n\t}\n\n\t/**\n\t * Opens a popover to move the app to another group.\n\t * @param {sap.cux.home.Group} sourceGroup - The source group from which the app is being moved.\n\t * @param {sap.ui.base.Event} event - The event triggering the popover opening.\n\t * @private\n\t */\n\tprivate _openMoveToGroupPopover(event: Event<{ listItem?: StandardListItem }>, sourceGroup?: Group) {\n\t\tconst popoverId = `${this.getId()}-moveToGroupPopover`,\n\t\t\tsource = event?.getSource<MenuItem>(),\n\t\t\tapp = source?.getParent() as App,\n\t\t\tsourceGroupId = sourceGroup?.getGroupId();\n\n\t\tlet list = this._controlMap.get(`${popoverId}-list`) as List,\n\t\t\tmoveToGroupPopover = this._controlMap.get(popoverId) as Popover;\n\n\t\tif (!moveToGroupPopover) {\n\t\t\tlist = new List({\n\t\t\t\tid: `${popoverId}-list`,\n\t\t\t\titemPress: () => ActionsPopover._closeActionsPopover()\n\t\t\t});\n\t\t\tthis._controlMap.set(`${popoverId}-list`, list);\n\t\t\tmoveToGroupPopover = new Popover({\n\t\t\t\tid: popoverId,\n\t\t\t\tshowHeader: false,\n\t\t\t\tplacement: PlacementType.HorizontalPreferredRight,\n\t\t\t\tcontent: [list]\n\t\t\t}).addStyleClass(\"sapContrastPlus\");\n\t\t\tthis._controlMap.set(popoverId, moveToGroupPopover);\n\t\t}\n\t\tlist.removeAllItems();\n\n\t\tthis._getAllowedMoveGroups(sourceGroupId).forEach((targetGroup) =>\n\t\t\tlist.addItem(\n\t\t\t\tnew StandardListItem(recycleId(`${this.getId()}-moveTo-${app.getId()}`), {\n\t\t\t\t\ttitle: targetGroup.getTitle(),\n\t\t\t\t\ttype: \"Active\",\n\t\t\t\t\tpress: () => {\n\t\t\t\t\t\tvoid this._handleMoveToGroup(app, sourceGroupId, targetGroup.getGroupId());\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t)\n\t\t);\n\n\t\tmoveToGroupPopover.openBy(event.getParameter(\"listItem\") as Control);\n\t}\n\n\t/**\n\t * Handles the removal of an app, displaying a confirmation dialog to the user.\n\t * If the app is the last one in the group, a warning dialog is displayed for confirmation.\n\t * @param {sap.cux.home.App} app - The app to be removed.\n\t * @param {sap.cux.home.Group} [group] - The group from which the app should be removed. If not provided, the app is considered to be in favorites.\n\t * @private\n\t */\n\tprivate _handleRemove(app: App, group?: Group): void {\n\t\tconst lastAppInGroup = group?.getApps()?.length === 1;\n\n\t\tlet message = this._i18nBundle.getText(\"removeAppMessage\", [app.getTitle()]),\n\t\t\ttitle = this._i18nBundle.getText(\"remove\"),\n\t\t\tactionText = this._i18nBundle.getText(\"remove\"),\n\t\t\tmessageIcon = MessageBox.Icon.QUESTION;\n\n\t\tif (lastAppInGroup) {\n\t\t\tmessage = this._i18nBundle.getText(\"removeFromMyHomeMessage\", [app.getTitle()]);\n\t\t\ttitle = this._i18nBundle.getText(\"delete\");\n\t\t\tactionText = this._i18nBundle.getText(\"delete\");\n\t\t\tmessageIcon = MessageBox.Icon.WARNING;\n\t\t}\n\n\t\tMessageBox.show(message as string, {\n\t\t\ticon: messageIcon,\n\t\t\ttitle: title,\n\t\t\tactions: [actionText as string, MessageBox.Action.CANCEL],\n\t\t\temphasizedAction: actionText,\n\t\t\tonClose: async (action: string) => {\n\t\t\t\tif (action === actionText) {\n\t\t\t\t\tthis._setBusy(true);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this._removeApp(app, group);\n\t\t\t\t\t\tif (lastAppInGroup) {\n\t\t\t\t\t\t\tthis._closeGroupDetailDialog();\n\t\t\t\t\t\t} else if (group) {\n\t\t\t\t\t\t\tthis._refreshGroupDetailDialog(app);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait (this.getParent() as AppsContainer)._refreshAllPanels();\n\t\t\t\t\t\tMessageToast.show(this._i18nBundle.getText(\"appRemoved\") as string);\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tLog.error(err as string);\n\t\t\t\t\t\tMessageToast.show(this._i18nBundle.getText(\"unableToRemoveApp\") as string);\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tthis._setBusy(false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Removes the specified app from the group or favorites.\n\t * If the app is the last one in the group, the group will be deleted as well.\n\t * If the app is an ungrouped app, its duplicate apps (if any) will also be deleted.\n\t * @param {App} app - The app to be removed.\n\t * @param {Group} [group] - The group from which the app should be removed. If not provided, the app is considered to be in favorites.\n\t * @returns {Promise<void>}\n\t * @private\n\t */\n\tprivate async _removeApp(app: App, group?: Group) {\n\t\tconst lastAppInGroup = group?.getApps()?.length === 1,\n\t\t\tgroupId = group?.getGroupId(),\n\t\t\tappId = app.getUrl(),\n\t\t\tviz = await this.appManagerInstance.getVisualization(appId, groupId);\n\t\tif (lastAppInGroup) {\n\t\t\t//if last app in group, then delete the group as well\n\t\t\tawait this._deleteGroup(groupId!);\n\t\t} else {\n\t\t\tlet visualizationsToBeDeleted = [viz?.visualization?.id];\n\t\t\tif (!groupId) {\n\t\t\t\t//for apps outside group i.e. for favorite apps delete duplicate apps as well\n\t\t\t\tvisualizationsToBeDeleted = visualizationsToBeDeleted.concat(\n\t\t\t\t\tviz?.persConfig?.duplicateApps?.map((viz) => viz.visualization?.id)\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (viz?.persConfig?.sectionId && visualizationsToBeDeleted.length > 0) {\n\t\t\t\tawait this.appManagerInstance.removeVisualizations({\n\t\t\t\t\tsectionId: viz.persConfig.sectionId,\n\t\t\t\t\tvizIds: visualizationsToBeDeleted as string[]\n\t\t\t\t});\n\t\t\t\tvoid this._deletePersonalization({\n\t\t\t\t\tappId: appId,\n\t\t\t\t\toldAppId: viz?.oldAppId,\n\t\t\t\t\tsectionId: viz?.persConfig?.sectionId,\n\t\t\t\t\tisRecentlyAddedApp: viz?.persConfig?.isDefaultSection\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Handler for moving an app from a source group to a target group.\n\t * @param {sap.cux.home.App} app - The app to be moved.\n\t * @param {string} sourceGroupId - The ID of the source group from which the app is being moved.\n\t * @param {string | null} targetGroupId - The ID of the target group to which the app will be moved.\n\t * @private\n\t */\n\tprivate async _handleMoveToGroup(app: App, sourceGroupId?: string, targetGroupId?: string) {\n\t\tconst sourceGroup = sourceGroupId ? this._getGroup(sourceGroupId) : undefined,\n\t\t\tisLastAppInGroup = sourceGroup?.getApps()?.length === 1;\n\n\t\tif (isLastAppInGroup) {\n\t\t\tconst confirmationMessage = this._i18nBundle.getText(\"moveAppMessage\", [app.getTitle()]) as string;\n\t\t\tconst confirmationTitle = this._i18nBundle.getText(\"delete\") as string;\n\t\t\tMessageBox.show(confirmationMessage, {\n\t\t\t\ticon: MessageBox.Icon.WARNING,\n\t\t\t\ttitle: confirmationTitle,\n\t\t\t\tactions: [confirmationTitle, MessageBox.Action.CANCEL],\n\t\t\t\temphasizedAction: confirmationTitle,\n\t\t\t\tonClose: (action: string) => {\n\t\t\t\t\tif (action === confirmationTitle) {\n\t\t\t\t\t\tvoid this._moveAppAndHandleGroupChanges(app, sourceGroupId, targetGroupId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tawait this._moveAppAndHandleGroupChanges(app, sourceGroupId, targetGroupId);\n\t\t}\n\t}\n\n\t/**\n\t * Moves an app to a different group and handles group changes.\n\t * @param {App} app - The app to be moved.\n\t * @param {string} [sourceGroupId] - The ID of the source group from which the app is being moved.\n\t * @param {string} [targetGroupId] - The ID of the target group to which the app is being moved.\n\t * @returns {Promise<void>} - A Promise that resolves once the app is moved and group changes are handled.\n\t * @private\n\t */\n\tprivate async _moveAppAndHandleGroupChanges(app: App, sourceGroupId?: string, targetGroupId?: string) {\n\t\tconst sourceGroup = sourceGroupId ? this._getGroup(sourceGroupId) : null,\n\t\t\ttargetGroup = targetGroupId ? this._getGroup(targetGroupId) : null,\n\t\t\tsTargetGroupTile = targetGroup?.getTitle(),\n\t\t\tisLastAppInGroup = sourceGroup?.getApps()?.length === 1;\n\t\ttry {\n\t\t\tthis._setBusy(true);\n\t\t\tawait this._moveAppToGroup(app, sourceGroupId, targetGroupId);\n\t\t\t//delete group, if it is the last app in the group\n\t\t\tif (isLastAppInGroup) {\n\t\t\t\tawait this._deleteGroup(sourceGroupId as string);\n\t\t\t\tthis._closeGroupDetailDialog();\n\t\t\t} else if (sourceGroupId) {\n\t\t\t\tthis._refreshGroupDetailDialog(app);\n\t\t\t}\n\t\t\tconst sMsg = sTargetGroupTile\n\t\t\t\t? this._i18nBundle.getText(\"appMoved\", [sTargetGroupTile])\n\t\t\t\t: this._i18nBundle.getText(\"appUngrouped\");\n\t\t\tMessageToast.show(sMsg as string);\n\t\t\tawait this.refresh();\n\t\t} catch (error) {\n\t\t\tLog.error(error as string);\n\t\t} finally {\n\t\t\tthis._setBusy(false);\n\t\t}\n\t}\n\n\t/**\n\t * Refreshes the group detail dialog.\n\t * @param {sap.cux.home.App} updatedApp - The updated app control.\n\t * @param {boolean} [isRemove=true] - A flag indicating whether to remove the app. Defaults to true.\n\t * @private\n\t */\n\tprivate _refreshGroupDetailDialog(updatedApp: App, isRemove = true) {\n\t\tconst appsWrapper = this._controlMap.get(`${this.getId()}-detailDialog-apps`) as GridContainer;\n\t\tconst tiles = appsWrapper.getItems() as GenericTile[];\n\t\tconst group = updatedApp.getParent() as Group;\n\t\tif (!group) {\n\t\t\treturn;\n\t\t}\n\t\tconst groupApps = group.getApps();\n\t\tif (isRemove) {\n\t\t\tconst updatedAppIndex = groupApps.findIndex((groupApp) => groupApp.getUrl() === updatedApp.getUrl());\n\t\t\tif (updatedAppIndex > -1) {\n\t\t\t\tgroupApps[updatedAppIndex].destroy(true);\n\t\t\t\ttiles[updatedAppIndex].destroy(true);\n\t\t\t}\n\t\t} else {\n\t\t\t//update app color, along with duplicate apps, if any\n\t\t\tgroupApps.forEach((groupApp, index) => {\n\t\t\t\tif (groupApp.getUrl() === updatedApp.getUrl()) {\n\t\t\t\t\tgroupApp.setProperty(\"bgColor\", updatedApp.getBgColor(), true);\n\t\t\t\t\ttiles[index].setBackgroundColor(updatedApp.getBgColor());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Moves an app from a source group to a target group.\n\t * @param {sap.cux.home.App} app - The app to be moved.\n\t * @param {string} sourceGroupId - The ID of the source group from which the app is being moved.\n\t * @param {string} targetGroupId - The ID of the target group to which the app will be moved. If null, the default section is considered.\n\t * @private\n\t */\n\tprivate async _moveAppToGroup(app: App, sourceGroupId?: string, targetGroupId?: string) {\n\t\tconst appId = app.getUrl();\n\t\tconst [visualizations, sections] = await Promise.all([\n\t\t\t\tthis.appManagerInstance.getSectionVisualizations(sourceGroupId),\n\t\t\t\tthis.appManagerInstance._getSections()\n\t\t\t]),\n\t\t\tsourceVisualization = visualizations.find((oViz) => oViz.url === appId),\n\t\t\tsourceVisualizationIndex = sourceVisualization?.persConfig?.visualizationIndex ?? -1,\n\t\t\tsourceSectionIndex = sourceVisualization?.persConfig?.sectionIndex as number;\n\t\tconst isTargetGroupDefault = !targetGroupId; //if group id is not passed, then we consider it as default section\n\t\tconst isSourceGroupDefault = !sourceGroupId;\n\t\tconst targetSectionIndex = sections.findIndex((section) => (!targetGroupId ? section.default : section.id === targetGroupId));\n\n\t\tif (sourceVisualization) {\n\t\t\tif (isTargetGroupDefault) {\n\t\t\t\tawait this._moveAppToDefaultGroup(sourceVisualization);\n\t\t\t} else {\n\t\t\t\tif (isSourceGroupDefault) {\n\t\t\t\t\t//remove duplicate apps\n\t\t\t\t\tawait this._removeDuplicateVisualizations(sourceVisualization);\n\t\t\t\t}\n\t\t\t\tawait this.appManagerInstance.moveVisualization({\n\t\t\t\t\tsourceSectionIndex: sourceSectionIndex,\n\t\t\t\t\tsourceVisualizationIndex: sourceVisualizationIndex,\n\t\t\t\t\ttargetSectionIndex: targetSectionIndex,\n\t\t\t\t\ttargetVisualizationIndex: -1\n\t\t\t\t});\n\t\t\t}\n\t\t\tconst sections = await this.appManagerInstance._getSections(true);\n\t\t\tconst defaultSection = sections.find((oSection) => oSection.default);\n\t\t\tawait this._updateAppPersonalization([\n\t\t\t\t{\n\t\t\t\t\tvisualization: sourceVisualization,\n\t\t\t\t\ttargetGroupId: targetGroupId ?? defaultSection?.id,\n\t\t\t\t\tisTargetGroupDefault\n\t\t\t\t}\n\t\t\t]);\n\t\t}\n\t}\n\n\t/**\n\t * Moves a visualization to the default group.\n\t * @param {ICustomVisualization} visualization - The visualization to be moved to the default group.\n\t * @returns {Promise<void>} - A promise that resolves once the visualization is moved to the default group.\n\t * @private\n\t */\n\tprivate async _moveAppToDefaultGroup(visualization: ICustomVisualization) {\n\t\tawait this._addVisualization(visualization);\n\t\tif (visualization.persConfig?.sectionId && visualization.visualization?.id) {\n\t\t\tawait this.appManagerInstance.removeVisualizations({\n\t\t\t\tsectionId: visualization.persConfig?.sectionId,\n\t\t\t\tvizIds: [visualization.visualization?.id]\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Removes duplicate visualizations associated with a specific visualization.\n\t * @param {ICustomVisualization} visualization - The visualization for which duplicate visualizations should be removed.\n\t * @returns {Promise<void>} - A promise that resolves once duplicate visualizations are removed.\n\t * @private\n\t */\n\tprivate async _removeDuplicateVisualizations(visualization: ICustomVisualization) {\n\t\tconst vizIdsToBeDeleted = (visualization?.persConfig?.duplicateApps?.map((oViz) => oViz.visualization?.id) || []) as string[];\n\t\tif (visualization.persConfig?.sectionId && vizIdsToBeDeleted.length > 0) {\n\t\t\tawait this.appManagerInstance.removeVisualizations({\n\t\t\t\tsectionId: visualization.persConfig?.sectionId,\n\t\t\t\tvizIds: vizIdsToBeDeleted\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Handles the event for renaming a group.\n\t * Opens the group detail dialog in edit mode.\n\t * @private\n\t * @param {sap.ui.base.Event} event - The event object.\n\t */\n\tprivate _onRenameGroup(event: Event) {\n\t\tconst group = event.getSource<MenuItem>()?.getParent() as Group;\n\t\tvoid this._showGroupDetailDialog(group.getGroupId(), true);\n\t}\n\n\t/**\n\t * Event Handler for ungroup apps, shows confirmation dialog, ungroups the apps on confirmation\n\t * @param {sap.cux.home.Group} group - The group from which the apps will be ungrouped.\n\t * @private\n\t */\n\tprivate _handleUngroupApps(group: ISectionAndVisualization) {\n\t\tconst message = this._i18nBundle.getText(\"ungroupAppsMessage\", [group.title]) as string,\n\t\t\ttitle = this._i18nBundle.getText(\"delete\") as string,\n\t\t\tactionText = this._i18nBundle.getText(\"delete\") as string;\n\t\tMessageBox.show(message, {\n\t\t\ticon: MessageBox.Icon.WARNING,\n\t\t\ttitle: title,\n\t\t\tactions: [actionText, MessageBox.Action.CANCEL],\n\t\t\temphasizedAction: actionText,\n\t\t\tonClose: (action: string) => {\n\t\t\t\tif (action === actionText) {\n\t\t\t\t\tvoid this._ungroupApps(group.id!);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Handles the event for deleting a group.\n\t * Shows confirmation dialog to either delete the group and apps, or move the apps in favorites.\n\t * @private\n\t * @param {sap.ui.base.Event} event - The event object.\n\t */\n\tprivate _onDeleteGroup(event: Event) {\n\t\tconst group = event.getSource<MenuItem>()?.getParent() as Group,\n\t\t\tmessage = this._i18nBundle.getText(\"deleteGroupMessage\", [group.getTitle()]) as string,\n\t\t\ttitle = this._i18nBundle.getText(\"delete\") as string,\n\t\t\tdeleteAction = this._i18nBundle.getText(\"delete\") as string,\n\t\t\tmoveAppAction = this._i18nBundle.getText(\"moveApps\") as string;\n\t\tMessageBox.show(message, {\n\t\t\ticon: MessageBox.Icon.WARNING,\n\t\t\ttitle: title,\n\t\t\tactions: [deleteAction, this._i18nBundle.getText(\"moveApps\") as string, MessageBox.Action.CANCEL],\n\t\t\temphasizedAction: deleteAction,\n\t\t\tonClose: async (action: string) => {\n\t\t\t\tif (action === deleteAction) {\n\t\t\t\t\tthis._setBusy(true);\n\t\t\t\t\tawait this._deleteGroup(group.getGroupId());\n\t\t\t\t\tMessageToast.show(this._i18nBundle.getText(\"groupDeleted\") as string);\n\t\t\t\t\tvoid this.refresh();\n\t\t\t\t\tthis._closeGroupDetailDialog();\n\t\t\t\t\tthis._setBusy(false);\n\t\t\t\t} else if (action === moveAppAction) {\n\t\t\t\t\tvoid this._ungroupApps(group.getGroupId());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Ungroups apps from the specified group Id.\n\t * @async\n\t * @private\n\t * @param {string} groupId - The Id of the group from which apps will be ungrouped.\n\t * @returns {Promise<void>} - A Promise that resolves once the ungrouping process is complete.\n\t */\n\tprivate async _ungroupApps(groupId: string) {\n\t\tthis._setBusy(true);\n\t\ttry {\n\t\t\tconst visualizations = await this.appManagerInstance.getSectionVisualizations(groupId);\n\t\t\tconst sections = await this.appManagerInstance._getSections();\n\t\t\tconst section = sections.find((oSection) => oSection.id === groupId);\n\t\t\tawait Promise.all(visualizations.map((oViz) => this._addVisualization(oViz)));\n\t\t\tconst updatedSections = await this.appManagerInstance._getSections(true);\n\t\t\tconst defaultSection = updatedSections.find((oSection) => oSection.default);\n\t\t\t//update personalization\n\t\t\tawait this._updateAppPersonalization(\n\t\t\t\tvisualizations.map((oViz) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvisualization: oViz,\n\t\t\t\t\t\ttargetGroupId: defaultSection?.id,\n\t\t\t\t\t\tisTargetGroupDefault: true\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t);\n\n\t\t\t//if preset section, then section shouldn't be deleted, instead remove visualizations inside section\n\t\t\tif (section?.preset) {\n\t\t\t\tawait this.appManagerInstance.removeVisualizations({\n\t\t\t\t\tsectionId: groupId,\n\t\t\t\t\tvizIds: visualizations.map((oViz) => oViz.visualization?.id) as string[]\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tawait this._deleteGroup(groupId);\n\t\t\t}\n\n\t\t\tMessageToast.show(this._i18nBundle.getText(\"appsUngrouped\") ?? \"\");\n\t\t\tawait this.refresh();\n\t\t} catch (error) {\n\t\t\tLog.error(error as string);\n\t\t\tMessageToast.show(this._i18nBundle.getText(\"unableToUngroupApps\") ?? \"\");\n\t\t} finally {\n\t\t\tthis._setBusy(false);\n\t\t\tthis._closeGroupDetailDialog();\n\t\t}\n\t}\n\n\t/**\n\t * Shows the detail dialog for a group.\n\t * @async\n\t * @param {string} groupId - The Id of the group.\n\t * @param {boolean} [editMode=false] - Whether to open the dialog in edit mode.\n\t * @private\n\t */\n\tprivate async _showGroupDetailDialog(groupId: string, editMode = false) {\n\t\tconst group = this._getGroup(groupId);\n\t\tif (!group) {\n\t\t\treturn;\n\t\t}\n\t\tthis._selectedGroupId = groupId;\n\t\tconst dialog = this._generateGroupDetailDialog();\n\t\t//set group icon\n\t\tconst groupIconControl = this._controlMap.get(`${this.getId()}-detailDialog-toolbar-color`) as Icon;\n\t\tgroupIconControl.setColor(Parameters.get({ name: group.getBgColor() }) as string);\n\t\t//set group apps\n\t\tawait this._setGroupDetailDialogApps(groupId);\n\t\tdialog.open();\n\t\t//set group title\n\t\tthis._setGroupNameControl(group.getTitle(), editMode);\n\t}\n\n\t/**\n\t * Sets the apps for the detail dialog for a group.\n\t * @async\n\t * @param {string} groupId - The Id of the group.\n\t * @returns {Promise<void>} - A Promise that resolves once the apps for the group detail dialog are set.\n\t * @private\n\t */\n\tprivate async _setGroupDetailDialogApps(groupId: string) {\n\t\tconst group = this._getGroup(groupId);\n\t\tif (group) {\n\t\t\tlet appVisualizations = await this.appManagerInstance.getSectionVisualizations(groupId, false);\n\t\t\tgroup.destroyAggregation(\"apps\", true);\n\t\t\tappVisualizations = appVisualizations.map((appVisualization, index) => {\n\t\t\t\treturn {\n\t\t\t\t\t...appVisualization,\n\t\t\t\t\tmenuItems: this._getAppActions(group, index, appVisualization) //add actions to show in group\n\t\t\t\t};\n\t\t\t});\n\t\t\tconst apps = this.generateApps(appVisualizations);\n\t\t\tconst appsWrapper = this._controlMap.get(`${this.getId()}-detailDialog-apps`) as GridContainer;\n\t\t\tthis._setAggregation(group, apps, \"apps\");\n\t\t\tappsWrapper.destroyItems();\n\t\t\tthis._setAggregation(\n\t\t\t\tappsWrapper,\n\t\t\t\tgroup.getApps().map((app) => (this.getParent() as AppsContainer)._getAppTile(app))\n\t\t\t);\n\t\t\tthis._applyGroupedAppsPersonalization(groupId);\n\t\t\tthis._dispatchAppsLoadedEvent(apps);\n\t\t}\n\t}\n\n\t/**\n\t * Applies personalization to the grouped apps within the specified group.\n\t * @param {string} groupId - The ID of the group to which the apps belong.\n\t * @private\n\t */\n\tprivate _applyGroupedAppsPersonalization(groupId: string) {\n\t\tconst appsWrapper = this._controlMap.get(`${this.getId()}-detailDialog-apps`) as GridContainer;\n\t\tconst tiles = (appsWrapper?.getItems() || []) as GenericTile[];\n\t\tvoid this._applyTilesPersonalization(tiles, groupId, false);\n\t}\n\n\t/**\n\t * Applies Deprecated Info for apps inside the group.\n\t * @param {App[]} apps - The ID of the group to which the apps belong.\n\t * @private\n\t */\n\tprivate _dispatchAppsLoadedEvent(apps: App[]) {\n\t\tconst appsWrapper = this._controlMap.get(`${this.getId()}-detailDialog-apps`) as GridContainer;\n\t\tconst tiles = (appsWrapper?.getItems() || []) as GenericTile[];\n\t\t(this.getParent() as AppsContainer).fireEvent(\"appsLoaded\", { apps, tiles });\n\t}\n\n\t/**\n\t * Generates the group detail dialog.\n\t * @private\n\t * @returns {sap.m.Dialog} The generated detail dialog for the group.\n\t */\n\tprivate _generateGroupDetailDialog() {\n\t\tconst id = `${this.getId()}-detailDialog`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\t//group color icon\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${id}-toolbar-color`,\n\t\t\t\tnew Icon({\n\t\t\t\t\tid: `${id}-toolbar-color`,\n\t\t\t\t\tsrc: \"sap-icon://color-fill\",\n\t\t\t\t\tsize: \"1.25rem\"\n\t\t\t\t}).addStyleClass(\"sapUiTinyMarginEnd\")\n\t\t\t);\n\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${id}-toolbar-title`,\n\t\t\t\tnew Title({\n\t\t\t\t\tid: `${id}-toolbar-title`,\n\t\t\t\t\tvisible: true\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tconst oGroupNameInput = new Input({\n\t\t\t\tid: `${id}-toolbar-title-edit`,\n\t\t\t\twidth: \"13.75rem\",\n\t\t\t\tvisible: false\n\t\t\t});\n\n\t\t\tthis._controlMap.set(`${id}-toolbar-title-edit`, oGroupNameInput);\n\n\t\t\toGroupNameInput.onsapfocusleave = () => {\n\t\t\t\tvoid this._onGroupEditName(oGroupNameInput.getValue());\n\t\t\t};\n\n\t\t\t//apps wrapper\n\t\t\tconst appsWrapper = new GridContainer({\n\t\t\t\tid: `${id}-apps`,\n\t\t\t\tlayout: new GridContainerSettings(`${id}-appsLayout`, {\n\t\t\t\t\tcolumnSize: \"19rem\",\n\t\t\t\t\tgap: \"0.5rem\"\n\t\t\t\t})\n\t\t\t}).addStyleClass(\"sapCuxAppsContainerBorder sapCuxAppsDetailContainerPadding\");\n\t\t\t// Add drag-and-drop config\n\t\t\tthis.addDragDropConfigTo(appsWrapper, (event) => this._onFavItemDrop(event, this._selectedGroupId));\n\t\t\tthis._controlMap.set(`${id}-apps`, appsWrapper);\n\t\t\t//add apps button\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${id}-addAppsBtn`,\n\t\t\t\tnew Button(`${id}-addAppsBtn`, {\n\t\t\t\t\ttext: this._i18nBundle.getText(\"addApps\"),\n\t\t\t\t\ticon: \"sap-icon://action\",\n\t\t\t\t\tvisible: _showAddApps(),\n\t\t\t\t\tpress: () => {\n\t\t\t\t\t\tconst groupId = this._selectedGroupId;\n\t\t\t\t\t\tthis._closeGroupDetailDialog();\n\t\t\t\t\t\tthis._selectedGroupId = groupId;\n\t\t\t\t\t\tvoid this.navigateToAppFinder(groupId);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew Dialog(id, {\n\t\t\t\t\tcontent: this._controlMap.get(`${id}-apps`) as HBox,\n\t\t\t\t\tcontentWidth: \"60.75rem\",\n\t\t\t\t\tendButton: new Button({\n\t\t\t\t\t\tid: `${id}-groupDetailCloseBtn`,\n\t\t\t\t\t\ttext: this._i18nBundle.getText(\"closeBtn\"),\n\t\t\t\t\t\tpress: this._closeGroupDetailDialog.bind(this)\n\t\t\t\t\t}),\n\t\t\t\t\tescapeHandler: this._closeGroupDetailDialog.bind(this),\n\t\t\t\t\tcustomHeader: new Toolbar(`${this.getId()}-toolbar`, {\n\t\t\t\t\t\tcontent: [\n\t\t\t\t\t\t\tthis._controlMap.get(`${id}-toolbar-color`) as Icon,\n\t\t\t\t\t\t\tthis._controlMap.get(`${id}-toolbar-title`) as Title,\n\t\t\t\t\t\t\tthis._controlMap.get(`${id}-toolbar-title-edit`) as Input,\n\t\t\t\t\t\t\tnew ToolbarSpacer({ id: `${this.getId()}-toolbarSpacer` }),\n\t\t\t\t\t\t\tthis._controlMap.get(`${id}-addAppsBtn`) as Button,\n\t\t\t\t\t\t\tnew Button({\n\t\t\t\t\t\t\t\tid: \"overflowBtn\",\n\t\t\t\t\t\t\t\ticon: \"sap-icon://overflow\",\n\t\t\t\t\t\t\t\ttype: \"Transparent\",\n\t\t\t\t\t\t\t\tpress: (event) => {\n\t\t\t\t\t\t\t\t\tconst source = event.getSource<Button>();\n\t\t\t\t\t\t\t\t\tconst group = this._selectedGroupId ? this._getGroup(this._selectedGroupId) : null;\n\t\t\t\t\t\t\t\t\tconst groupActions = group?.getAggregation(\"menuItems\") as MenuItem[];\n\t\t\t\t\t\t\t\t\tconst oPopover = ActionsPopover.get(groupActions);\n\t\t\t\t\t\t\t\t\toPopover.openBy(source);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t]\n\t\t\t\t\t})\n\t\t\t\t}).addStyleClass(\"sapCuxGroupDetailDialog\")\n\t\t\t);\n\t\t}\n\t\treturn this._controlMap.get(id) as Dialog;\n\t}\n\n\t/**\n\t * Closes the group detail dialog.\n\t * @private\n\t */\n\tprivate _closeGroupDetailDialog() {\n\t\tconst groupDetailDialog = this._controlMap.get(`${this.getId()}-detailDialog`) as Dialog;\n\t\tconst group = this._getGroup(this._selectedGroupId as string);\n\t\tgroup?.destroyApps();\n\t\tthis._selectedGroupId = undefined;\n\t\tgroupDetailDialog?.close();\n\t}\n\n\t/**\n\t * Updates the group name with new name.\n\t * This method is triggered on group name input focus leave.\n\t * @private\n\t * @async\n\t * @param {string} updatedTitle - The new title for the group.\n\t */\n\tprivate async _onGroupEditName(updatedTitle: string) {\n\t\tthis._setBusy(true);\n\t\tconst groupId = this._selectedGroupId,\n\t\t\tgroup = this._getGroup(groupId!),\n\t\t\toldTitle = group?.getTitle();\n\t\tif (updatedTitle && updatedTitle !== oldTitle) {\n\t\t\tawait this._renameGroup(groupId!, updatedTitle);\n\t\t\tgroup?.setProperty(\"title\", updatedTitle, true);\n\t\t\tvoid this.refresh();\n\t\t\tMessageToast.show(this._i18nBundle.getText(\"groupNameChanged\") || \"\");\n\t\t}\n\t\tthis._setGroupNameControl(updatedTitle, false);\n\t\tthis._setBusy(false);\n\t}\n\n\t/**\n\t * Renames a group.\n\t * @async\n\t * @param {string} groupId - The Id of the group to rename.\n\t * @param {string} updatedTitle - The new title for the group.\n\t * @returns {Promise<void>} A Promise that resolves once the group is renamed.\n\t */\n\tprivate async _renameGroup(groupId: string, updatedTitle: string) {\n\t\tconst pagesService = await Container.getServiceAsync<Pages>(\"Pages\");\n\t\tconst pageIndex = pagesService.getPageIndex(MYHOME_PAGE_ID),\n\t\t\tgroups = pagesService.getModel().getProperty(`/pages/${pageIndex}/sections/`) as ISection[],\n\t\t\tgroupIndex = groups.findIndex((group) => group.id === groupId);\n\t\tif (groupIndex > -1) {\n\t\t\tawait pagesService.renameSection(pageIndex, groupIndex, updatedTitle);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the group name control in the detail dialog.\n\t * Shows input control to edit the group name in edit mode, otherwise, shows group name as title control.\n\t * @private\n\t * @param {string} groupTitle - The title of the group.\n\t * @param {boolean} editMode - Whether the dialog is in edit mode.\n\t */\n\tprivate _setGroupNameControl(groupTitle: string, editMode: boolean) {\n\t\tconst groupDetailDialog = this._controlMap.get(`${this.getId()}-detailDialog`) as Dialog;\n\t\tconst groupTitleControl = this._controlMap.get(`${this.getId()}-detailDialog-toolbar-title`) as Title;\n\t\tconst groupInputControl = this._controlMap.get(`${this.getId()}-detailDialog-toolbar-title-edit`) as Input;\n\t\tgroupInputControl.setValue(groupTitle);\n\t\tgroupTitleControl.setText(groupTitle);\n\t\tgroupInputControl?.setVisible(editMode);\n\t\tgroupTitleControl?.setVisible(!editMode);\n\t\tif (editMode) {\n\t\t\t//in edit mode set the focus on input\n\t\t\tgroupDetailDialog.setInitialFocus(groupInputControl);\n\t\t}\n\t}\n\n\t/**\n\t * Generates the dialog for adding apps from insights.\n\t * @returns {sap.m.Dialog} The dialog for adding apps from insights.\n\t * @private\n\t */\n\tprivate _generateAddFromInsightsDialog() {\n\t\tconst id = `${this.getId()}-addFromInsightsDialog`;\n\n\t\tconst setAddBtnEnabled = () => {\n\t\t\tconst selectedItems = this._getSelectedInsights();\n\t\t\t(this._controlMap.get(`${id}-addBtn`) as Button).setEnabled(selectedItems.length > 0);\n\t\t};\n\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tconst getAppFinderBtn = (id: string, btnType?: ButtonType) => {\n\t\t\t\tconst appsAppFinder = new Button(id, {\n\t\t\t\t\ticon: \"sap-icon://action\",\n\t\t\t\t\ttext: this._i18nBundle.getText(\"appFinderBtn\"),\n\t\t\t\t\tpress: () => {\n\t\t\t\t\t\tthis._closeAddFromInsightsDialog();\n\t\t\t\t\t\tvoid this.navigateToAppFinder();\n\t\t\t\t\t},\n\t\t\t\t\tvisible: _showAddApps(),\n\t\t\t\t\ttype: btnType || ButtonType.Default\n\t\t\t\t});\n\t\t\t\taddFESRSemanticStepName(appsAppFinder, \"press\", \"appsAppFinder\");\n\t\t\t\treturn appsAppFinder;\n\t\t\t};\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${id}-list`,\n\t\t\t\tnew List({\n\t\t\t\t\tid: `${id}-list`,\n\t\t\t\t\tmode: \"MultiSelect\",\n\t\t\t\t\tselectionChange: setAddBtnEnabled\n\t\t\t\t})\n\t\t\t);\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${id}-addBtn`,\n\t\t\t\tnew Button({\n\t\t\t\t\tid: `${id}-addBtn`,\n\t\t\t\t\ttext: this._i18nBundle.getText(\"addFromInsightsDialogBtn\"),\n\t\t\t\t\ttype: \"Emphasized\",\n\t\t\t\t\tpress: () => {\n\t\t\t\t\t\tvoid this._addFromInsights();\n\t\t\t\t\t},\n\t\t\t\t\tenabled: false\n\t\t\t\t})\n\t\t\t);\n\t\t\tconst addStaticTiles = this._controlMap.get(`${id}-addBtn`) as Button;\n\t\t\taddFESRSemanticStepName(addStaticTiles, \"press\", \"addStaticTiles\");\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${id}-errorMessage`,\n\t\t\t\tnew IllustratedMessage({\n\t\t\t\t\tid: `${id}-errorMessage`,\n\t\t\t\t\tillustrationSize: IllustratedMessageSize.Base,\n\t\t\t\t\ttitle: this._i18nBundle.getText(\"noAppsTitle\"),\n\t\t\t\t\tdescription: this._i18nBundle.getText(\"noDataMsgInsightTiles\"),\n\t\t\t\t\tvisible: true\n\t\t\t\t}).addStyleClass(\"sapUiLargeMarginTop\")\n\t\t\t);\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew Dialog(id, {\n\t\t\t\t\ttitle: this._i18nBundle.getText(\"addFromInsights\"),\n\t\t\t\t\tcontent: [\n\t\t\t\t\t\tnew Label({\n\t\t\t\t\t\t\tid: `${id}-label`,\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"addFromInsightsDialogLabel\"),\n\t\t\t\t\t\t\twrapping: true\n\t\t\t\t\t\t}).addStyleClass(\"sapMTitleAlign sapUiTinyMarginTopBottom sapUiSmallMarginBeginEnd\"),\n\t\t\t\t\t\tnew HBox({\n\t\t\t\t\t\t\tid: `${id}-textContainer`,\n\t\t\t\t\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\tnew Title({\n\t\t\t\t\t\t\t\t\tid: `${id}-text`,\n\t\t\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"addFromInsightsDialogTitle\")\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tgetAppFinderBtn(`${id}-addAppsBtn`, ButtonType.Transparent)\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginTop dialogHeader sapUiSmallMarginBeginEnd\"),\n\t\t\t\t\t\tthis._controlMap.get(`${id}-list`) as List,\n\t\t\t\t\t\tthis._controlMap.get(`${id}-errorMessage`) as IllustratedMessage\n\t\t\t\t\t],\n\t\t\t\t\tcontentWidth: \"42.75rem\",\n\t\t\t\t\tcontentHeight: \"32.5rem\",\n\t\t\t\t\tendButton: new Button({\n\t\t\t\t\t\tid: `${id}-addFromInsightsCloseBtn`,\n\t\t\t\t\t\ttext: this._i18nBundle.getText(\"closeBtn\"),\n\t\t\t\t\t\tpress: this._closeAddFromInsightsDialog.bind(this)\n\t\t\t\t\t}),\n\t\t\t\t\tescapeHandler: this._closeAddFromInsightsDialog.bind(this),\n\t\t\t\t\tbuttons: [\n\t\t\t\t\t\tthis._controlMap.get(`${id}-addBtn`) as Button,\n\t\t\t\t\t\tnew Button({\n\t\t\t\t\t\t\tid: `${id}-cancelBtn`,\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"cancelBtn\"),\n\t\t\t\t\t\t\tpress: this._closeAddFromInsightsDialog.bind(this)\n\t\t\t\t\t\t})\n\t\t\t\t\t]\n\t\t\t\t}).addStyleClass(\"sapContrastPlus sapCuxAddFromInsightsDialog\")\n\t\t\t);\n\t\t}\n\t\tsetAddBtnEnabled();\n\t\treturn this._controlMap.get(id) as Dialog;\n\t}\n\n\t/**\n\t * Handles the addition of apps from insights.\n\t * @returns {Promise<void>} A Promise that resolves when the operation is complete.\n\t * @private\n\t */\n\tprivate async _handleAddFromInsights() {\n\t\tconst appsToAdd = await this._getInsightTilesToAdd();\n\t\tconst dialog = this._generateAddFromInsightsDialog();\n\t\t(this._controlMap.get(`${this.getId()}-addFromInsightsDialog-errorMessage`) as IllustratedMessage)?.setVisible(\n\t\t\tappsToAdd.length === 0\n\t\t);\n\t\tthis._generateInsightListItems(appsToAdd);\n\t\tdialog.open();\n\t}\n\n\t/**\n\t * Generates list items for the provided apps and populates the list in the \"Add from Insights\" dialog.\n\t * @param {ICustomVisualization[]} apps - An array of custom visualizations representing the apps to be added.\n\t * @private\n\t */\n\tprivate _generateInsightListItems(apps: ICustomVisualization[]) {\n\t\tconst list = this._controlMap.get(`${this.getId()}-addFromInsightsDialog-list`) as List;\n\t\tif (apps.length) {\n\t\t\tlist.destroyItems();\n\t\t\tconst listItems = apps.map((app, index) => {\n\t\t\t\tconst bgColor = typeof app.BGColor === \"object\" && \"key\" in app.BGColor ? app.BGColor.key : app.BGColor;\n\t\t\t\treturn new CustomListItem({\n\t\t\t\t\tid: `${this.getId()}-addFromInsightsDialog-listItem-${index}`,\n\t\t\t\t\tcontent: [\n\t\t\t\t\t\tnew HBox({\n\t\t\t\t\t\t\tid: `${this.getId()}-addFromInsightsDialog-listItem-${index}-content`,\n\t\t\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\tnew Icon({\n\t\t\t\t\t\t\t\t\tid: `${this.getId()}-addFromInsightsDialog-listItem-${index}-content-icon`,\n\t\t\t\t\t\t\t\t\tsrc: app.icon,\n\t\t\t\t\t\t\t\t\tbackgroundColor: this._getLegendColor(bgColor || \"\").value,\n\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\twidth: \"2.25rem\",\n\t\t\t\t\t\t\t\t\theight: \"2.25rem\",\n\t\t\t\t\t\t\t\t\tsize: \"1.25rem\"\n\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiRoundedBorder sapUiTinyMargin\"),\n\t\t\t\t\t\t\t\tnew ObjectIdentifier({\n\t\t\t\t\t\t\t\t\tid: `${this.getId()}-addFromInsightsDialog-listItem-${index}-content-identifier`,\n\t\t\t\t\t\t\t\t\ttitle: app.title,\n\t\t\t\t\t\t\t\t\ttext: app.subtitle,\n\t\t\t\t\t\t\t\t\ttooltip: app.title\n\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMargin\")\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t})\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t\t\t.addStyleClass(\"sapUiContentPadding\")\n\t\t\t\t\t.data(\"vizId\", app.visualization?.vizId) as CustomListItem;\n\t\t\t});\n\t\t\tthis._setAggregation(list, listItems);\n\t\t}\n\t\tlist?.setVisible(apps.length !== 0);\n\t}\n\n\t/**\n\t * Retrieves the insight tiles to add.\n\t * @returns {Promise<ICustomVisualization[]>} A Promise that resolves with an array of insight tiles to add.\n\t * @private\n\t */\n\tprivate async _getInsightTilesToAdd() {\n\t\tconst [insightsApps, favoriteApps] = await Promise.all([\n\t\t\tthis.appManagerInstance.fetchInsightApps(true, this._i18nBundle.getText(\"insights\") as string),\n\t\t\tthis.appManagerInstance.fetchFavVizs(false, true)\n\t\t]); //check force refresh true?\n\t\t//find the visualizations that are present in insight tile but not in favorite apps\n\t\tconst appsToAdd = insightsApps.reduce((appsToAdd: ICustomVisualization[], insightsApp) => {\n\t\t\tif (!insightsApp.isCount && !insightsApp.isSmartBusinessTile) {\n\t\t\t\t// Check if App is not present in Fav Apps\n\t\t\t\tconst iAppIndex = favoriteApps.findIndex(\n\t\t\t\t\t(favoriteApp) =>\n\t\t\t\t\t\tfavoriteApp.visualization?.vizId === insightsApp.visualization?.vizId || favoriteApp.appId === insightsApp.appId\n\t\t\t\t);\n\t\t\t\tif (iAppIndex === -1) {\n\t\t\t\t\tappsToAdd.push(insightsApp);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn appsToAdd;\n\t\t}, []);\n\t\treturn this.appManagerInstance._filterDuplicateVizs(appsToAdd, false);\n\t}\n\n\t/**\n\t * Closes the dialog for adding apps from insights.\n\t * @private\n\t */\n\tprivate _closeAddFromInsightsDialog() {\n\t\tconst dialog = this._generateAddFromInsightsDialog();\n\t\tconst list = this._controlMap.get(`${this.getId()}-addFromInsightsDialog-list`) as List;\n\t\tlist.removeSelections();\n\t\tdialog?.close();\n\t}\n\n\t/**\n\t * Retrieves the selected insights from the dialog.\n\t * @returns {sap.m.ListItemBase[]} An array of selected insights.\n\t * @private\n\t */\n\tprivate _getSelectedInsights() {\n\t\tconst list = this._controlMap.get(`${this.getId()}-addFromInsightsDialog-list`) as List;\n\t\treturn list.getSelectedItems() || [];\n\t}\n\n\t/**\n\t * Adds apps from insights.\n\t * @returns {void}\n\t * @private\n\t */\n\tprivate async _addFromInsights() {\n\t\tthis._setBusy(true);\n\t\tconst selectedItems = this._getSelectedInsights();\n\t\tfor (const selectedItem of selectedItems) {\n\t\t\tawait this.appManagerInstance.addVisualization(selectedItem.data(\"vizId\") as string);\n\t\t}\n\t\tthis._closeAddFromInsightsDialog();\n\t\tMessageToast.show(\n\t\t\tthis._i18nBundle.getText(selectedItems.length === 1 ? \"addFromInsightTileSuccess\" : \"addFromInsightTilesSuccess\", [\n\t\t\t\tselectedItems.length\n\t\t\t]) as string\n\t\t);\n\t\tawait (this.getParent() as AppsContainer)._refreshAllPanels();\n\t\tthis._setBusy(false);\n\t}\n\n\t/**\n\t * Updates the personalization data for apps.\n\t * @param {IUpdatePersonalizationConfig[]} updateConfigs - The array of configurations for updating personalization.\n\t * @param {IUpdatePersonalizationConfig} updateConfig - Configuration object for updating personalization.\n\t * @param {ICustomVisualization} updateConfig.visualization - Visualization.\n\t * @param {string} updateConfig.color - The color to update for the app.\n\t * @param {boolean} updateConfig.isTargetGroupDefault - A flag indicating whether the target section is the default.\n\t * @param {string} [updateConfig.targetGroupId] - The Id of the target group. Defaults to source group Id if not provided.\n\t * @returns {Promise<void>} A promise that resolves when the personalization data is updated.\n\t * @private\n\t */\n\tprivate async _updateAppPersonalization(updateConfigs: IUpdatePersonalizationConfig[]) {\n\t\tconst personalizations = await this._getAppPersonalization();\n\n\t\tfor (const updateConfig of updateConfigs) {\n\t\t\tconst { visualization } = updateConfig;\n\t\t\tconst { persConfig } = visualization;\n\t\t\tconst sourceGroupId = persConfig?.sectionId;\n\t\t\tconst targetGroupId = updateConfig.targetGroupId ?? sourceGroupId;\n\n\t\t\tif (sourceGroupId !== targetGroupId) {\n\t\t\t\t//move app scenario\n\t\t\t\tthis._updateMoveAppPersonalization(personalizations, updateConfig);\n\t\t\t} else {\n\t\t\t\t//only color is updated\n\t\t\t\tthis._updateAppColorPersonalization(personalizations, updateConfig);\n\t\t\t}\n\t\t}\n\t\tawait this.setFavAppsPersonalization(personalizations);\n\t}\n\n\t/**\n\t * Updates the color personalization for an app.\n\t * @param {IAppPersonalization[]} personalizations - The array of app personalizations.\n\t * @param {IUpdatePersonalizationConfig} updateConfig - The update configuration.\n\t * @returns {void}\n\t * @private\n\t */\n\tprivate _updateAppColorPersonalization = (personalizations: IAppPersonalization[], updateConfig: IUpdatePersonalizationConfig) => {\n\t\tconst { visualization, color } = updateConfig;\n\t\tconst { appId, oldAppId, persConfig } = visualization;\n\t\tconst sourceGroupId = persConfig?.sectionId;\n\t\tconst isSourceGroupDefault = persConfig?.isDefaultSection;\n\t\tconst personalizationIndex = this._getPersonalizationIndex(personalizations, {\n\t\t\tappId,\n\t\t\toldAppId,\n\t\t\tsectionId: sourceGroupId,\n\t\t\tisRecentlyAddedApp: isSourceGroupDefault\n\t\t});\n\t\tif (personalizationIndex > -1) {\n\t\t\tpersonalizations[personalizationIndex].BGColor = color as string;\n\t\t} else {\n\t\t\tpersonalizations.push({\n\t\t\t\tBGColor: color as string,\n\t\t\t\tsectionId: sourceGroupId,\n\t\t\t\tisRecentlyAddedApp: isSourceGroupDefault as boolean,\n\t\t\t\tappId,\n\t\t\t\tisSection: false\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * Updates the personalization when an app is moved to a different group.\n\t * @param {IAppPersonalization[]} personalizations - The array of app personalizations.\n\t * @param {IUpdatePersonalizationConfig} updateConfig - The update configuration.\n\t * @returns {void}\n\t * @private\n\t */\n\tprivate _updateMoveAppPersonalization(personalizations: IAppPersonalization[], updateConfig: IUpdatePersonalizationConfig) {\n\t\tconst { visualization, isTargetGroupDefault } = updateConfig;\n\t\tconst { appId, oldAppId, persConfig } = visualization;\n\t\tconst sourceGroupId = persConfig?.sectionId;\n\t\tconst isSourceGroupDefault = persConfig?.isDefaultSection;\n\t\tconst duplicateApps = persConfig?.duplicateApps || [];\n\t\tconst targetGroupId = updateConfig.targetGroupId ?? sourceGroupId;\n\n\t\tconst sourcePersonalizationIndex = this._getPersonalizationIndex(personalizations, {\n\t\t\tappId,\n\t\t\toldAppId,\n\t\t\tsectionId: sourceGroupId,\n\t\t\tisRecentlyAddedApp: isSourceGroupDefault\n\t\t});\n\t\t//if personalization exists for app in source group\n\t\tif (sourcePersonalizationIndex > -1) {\n\t\t\tconst newPersonalization = {\n\t\t\t\t...personalizations[sourcePersonalizationIndex],\n\t\t\t\tsectionId: targetGroupId,\n\t\t\t\tisRecentlyAddedApp: isTargetGroupDefault,\n\t\t\t\tisSection: false\n\t\t\t} as IAppPersonalization;\n\t\t\t//if no duplicate apps in source group, clean up source group personlization\n\t\t\tif (duplicateApps.length === 0) {\n\t\t\t\tpersonalizations.splice(sourcePersonalizationIndex, 1);\n\t\t\t}\n\n\t\t\t//update target personalization\n\t\t\tconst iTargetPersonalizationIndex = this._getPersonalizationIndex(personalizations, {\n\t\t\t\tappId,\n\t\t\t\toldAppId,\n\t\t\t\tsectionId: targetGroupId,\n\t\t\t\tisRecentlyAddedApp: isTargetGroupDefault\n\t\t\t});\n\t\t\tif (iTargetPersonalizationIndex > -1) {\n\t\t\t\tpersonalizations.splice(iTargetPersonalizationIndex, 1); //clean up any existing personalization\n\t\t\t}\n\t\t\t//push new personalization for target group\n\t\t\tpersonalizations.push(newPersonalization);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the personalization data for a group with the selected color.\n\t * @param {string} groupId - The ID of the group.\n\t * @param {string} selectedColor - The selected color for the group.\n\t * @returns {Promise<void>} A promise that resolves when the personalization data is updated.\n\t * @private\n\t */\n\tprivate async _updateGroupPersonalization(groupId: string, selectedColor: string) {\n\t\tconst personalizations = await this._getAppPersonalization();\n\t\tconst personalizationIndex = this._getPersonalizationIndex(personalizations, {\n\t\t\tisSection: true,\n\t\t\tsectionId: groupId\n\t\t});\n\t\tconst updatedPersonalization = {\n\t\t\tBGColor: selectedColor,\n\t\t\tisSection: true,\n\t\t\tsectionId: groupId,\n\t\t\tisRecentlyAddedApp: false\n\t\t};\n\t\tif (personalizationIndex > -1) {\n\t\t\t//if color is already present for the group, update the color\n\t\t\tpersonalizations[personalizationIndex] = updatedPersonalization;\n\t\t} else {\n\t\t\tpersonalizations.push(updatedPersonalization);\n\t\t}\n\t\tawait this.setFavAppsPersonalization(personalizations);\n\t}\n\n\t/**\n\t * Finds the index of personalization data matching the specified properties.\n\t * @param {IAppPersonalization[]} personalizations - The array of personalization data.\n\t * @param {IAppPersonalization} appPersonalization - The properties to match for finding the index.\n\t * @param {string} [appPersonalization.appId] -  id of the app.\n\t * @param {string} [appPersonalization.oldAppId] - old id of the app.\n\t * @param {string} [appPersonalization.sectionId] - id of the section.\n\t * @param {boolean} appPersonalization.isSection - A flag indicating whether the personalization is for a section.\n\t * @param {boolean} appPersonalization.isRecentlyAddedApp - A flag indicating whether the app is a recently added app.\n\t * @returns {number} The index of the matching personalization data, or -1 if not found.\n\t * @private\n\t */\n\tprivate _getPersonalizationIndex(personalizations: IAppPersonalization[], appPersonalization: IAppPersonalizationConfig) {\n\t\tconst { appId, oldAppId, sectionId, isSection, isRecentlyAddedApp } = appPersonalization;\n\t\treturn personalizations.findIndex((personalization) => {\n\t\t\tif (isSection) {\n\t\t\t\treturn personalization.sectionId === sectionId && personalization.isSection;\n\t\t\t} else {\n\t\t\t\treturn isRecentlyAddedApp\n\t\t\t\t\t? (personalization.appId === appId || personalization.appId === oldAppId) && personalization.isRecentlyAddedApp\n\t\t\t\t\t: (personalization.appId === appId || personalization.appId === oldAppId) && personalization.sectionId === sectionId;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Adds a visualization.\n\t * @param {object} oViz - The visualization to be added.\n\t * @param {object} oViz.visualization - The visualization object.\n\t * @param {boolean} [oViz.visualization.isBookmark=false] - Indicates if the visualization is a bookmark.\n\t * @param {string} [oViz.visualization.vizId] - The ID of the visualization if it's not a bookmark.\n\t * @returns {Promise<void>} A promise that resolves to void after the visualization is added.\n\t * @private\n\t */\n\tprivate _addVisualization(viz: ICustomVisualization, sSectionId?: string) {\n\t\tif (viz.visualization) {\n\t\t\treturn viz.visualization.isBookmark\n\t\t\t\t? this.appManagerInstance.addBookMark(viz.visualization)\n\t\t\t\t: this.appManagerInstance.addVisualization(viz.visualization.vizId, sSectionId);\n\t\t}\n\t\treturn Promise.reject(new Error(\"No visualization provided to add\"));\n\t}\n\n\t/**\n\t * Deletes a group.\n\t * @param {string} groupId - The Id of the group to delete.\n\t * @returns {Promise<void>} A Promise that resolves once the group is deleted.\n\t * @private\n\t */\n\tprivate async _deleteGroup(groupId: string) {\n\t\tconst pagesService = await Container.getServiceAsync<Pages>(\"Pages\");\n\t\tconst pageIndex = pagesService.getPageIndex(MYHOME_PAGE_ID),\n\t\t\tgroups = pagesService.getModel().getProperty(`/pages/${pageIndex}/sections/`) as ISection[],\n\t\t\tgroupIndex = groups.findIndex((group) => group.id === groupId);\n\t\tif (groupIndex > -1) {\n\t\t\tawait pagesService.deleteSection(pageIndex, groupIndex);\n\t\t\tvoid this._deletePersonalization({ sectionId: groupId, isSection: true });\n\t\t}\n\t}\n\n\t/**\n\t * Deletes personalization data based on the specified properties.\n\t * @param {IAppPersonalizationConfig} personalizationConfig - The properties to identify the personalization data to delete.\n\t * @param {boolean} [personalizationConfig.isSection] - A flag indicating whether the personalization is for a group.\n\t * @param {string} [appPersonalization.appId] -  id of the app.\n\t * @param {string} [appPersonalization.oldAppId] - old id of the app.\n\t * @param {string} personalizationConfig.sectionId - The ID of the group associated with the personalization.\n\t * @param {boolean} [appPersonalization.isRecentlyAddedApp] - A flag indicating whether the app is a recently added app.\n\t * @returns {Promise<void>} A promise that resolves when the personalization data is deleted.\n\t * @private\n\t */\n\tprivate async _deletePersonalization(personalizationConfig: IAppPersonalizationConfig) {\n\t\tconst { isSection, sectionId } = personalizationConfig;\n\t\tlet personalizations = await this._getAppPersonalization();\n\n\t\tif (!isSection) {\n\t\t\tconst personalizationIndex = this._getPersonalizationIndex(personalizations, personalizationConfig);\n\t\t\tif (personalizationIndex > -1) {\n\t\t\t\tpersonalizations.splice(personalizationIndex, 1);\n\t\t\t}\n\t\t} else {\n\t\t\t// Delete personalizations for all associated apps if a group is deleted\n\t\t\tpersonalizations = personalizations.filter((personalization) => personalization.sectionId !== sectionId);\n\t\t}\n\n\t\tvoid this.setFavAppsPersonalization(personalizations);\n\t}\n\n\t/**\n\t * Handles the press event of a group.\n\t * @param {Group$PressEvent} event - The press event object.\n\t * @private\n\t */\n\tprivate _handleGroupPress(event: Group$PressEvent) {\n\t\tconst groupId = event.getParameter(\"groupId\");\n\t\tif (groupId) {\n\t\t\tvoid this._showGroupDetailDialog(groupId);\n\t\t}\n\t}\n\n\t/**\n\t * Handles keyboard events for cutting and moving applications.\n\t * When the Cmd (Mac) or Ctrl (Windows) key is pressed along with 'x', the currently selected element is cut.\n\t * When the Cmd (Mac) or Ctrl (Windows) key is pressed along with 'v':\n\t * - If the operation is performed on a group, the previously cut application is moved into the group.\n\t * - If the operation is performed on an application, the create group dialog is opened.\n\t * @param {KeyboardEvent} event - The keyboard event object.\n\t * @param {string} [appGroupId] - The group Id of the app, if app belongs to a group.\n\t * @returns {Promise<void>} A Promise that resolves when app is moved to a group or create group dialog is opened.\n\t * @private\n\t */\n\tprivate async _handleKeyboardMoveApp(event: KeyboardEvent, appGroupId?: string) {\n\t\tconst currentItem = Element.closestTo((event.target as HTMLElement).firstElementChild as HTMLElement) as GenericTile & {\n\t\t\t_oMoreIcon: Button;\n\t\t};\n\t\tconst container = currentItem.getParent() as GridContainer;\n\t\tif (event.metaKey || event.ctrlKey) {\n\t\t\t// ctrl(windows)/cmd (mac) + x, sets app to be moved to a group, or to create a group\n\t\t\tif (event.key === \"x\" && !currentItem.data(\"groupId\") && !this._cutApp && !appGroupId) {\n\t\t\t\tcurrentItem.$().css(\"opacity\", 0.6);\n\t\t\t\tcurrentItem._oMoreIcon.setEnabled(false);\n\t\t\t\tthis._cutApp = currentItem;\n\t\t\t}\n\n\t\t\tif (event.key === \"v\" && this._cutApp && !appGroupId) {\n\t\t\t\tconst dragDropEvent = new Event(\"keyboardDragDropEvent\", container, {\n\t\t\t\t\tdraggedControl: this._cutApp,\n\t\t\t\t\tdroppedControl: currentItem,\n\t\t\t\t\tdropPosition: dnd.RelativeDropPosition.On\n\t\t\t\t});\n\t\t\t\tawait this._onFavItemDrop(dragDropEvent);\n\t\t\t\tthis._cutApp = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Cancels the cut operation when clicked outside apps section or when focus moves out of apps section.\n\t * @param {MouseEvent | KeyboardEvent} event - The mouse or keyboard event triggering the reset.\n\t * @private\n\t */\n\tprivate _resetCutElement(event: MouseEvent | KeyboardEvent) {\n\t\tconst appsWrapperId = this._generateAppsWrapper().getId();\n\t\tif (!(event.target as HTMLElement).id.includes(appsWrapperId)) {\n\t\t\tthis._cutApp?.$().css(\"opacity\", \"\");\n\t\t\tthis._cutApp = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Generates illustrated message for favorite apps panel.\n\t * @private\n\t * @override\n\t * @returns {sap.m.IllustratedMessage} Illustrated error message.\n\t */\n\tprotected generateIllustratedMessage() {\n\t\tconst illustratedMessage = super.generateIllustratedMessage();\n\t\t//overrride the default title and add additional content\n\t\tillustratedMessage.setDescription(this._i18nBundle.getText(\"noFavAppsDescription\"));\n\t\tillustratedMessage.setIllustrationSize(IllustratedMessageSize.Small);\n\t\tillustratedMessage.setIllustrationType(IllustratedMessageType.AddingColumns);\n\t\tillustratedMessage.addAdditionalContent(\n\t\t\tnew Button(`${this.getId()}-errorMessage-addApps`, {\n\t\t\t\ttext: this._i18nBundle.getText(\"addApps\"),\n\t\t\t\ttooltip: this._i18nBundle.getText(\"addAppsTooltip\"),\n\t\t\t\ticon: \"sap-icon://action\",\n\t\t\t\tvisible: _showAddApps(),\n\t\t\t\tpress: () => {\n\t\t\t\t\tvoid this.navigateToAppFinder();\n\t\t\t\t},\n\t\t\t\ttype: \"Emphasized\"\n\t\t\t})\n\t\t);\n\t\treturn illustratedMessage;\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":111,"column":0},"map":{"version":3,"names":["sap","ui","define","Log","EventBus","Container","EventHub","__BaseAppPersPanel","__MenuItem","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","BaseAppPersPanel","MenuItem","FrequentAppPanel","extend","metadata","library","defaultAggregation","aggregations","apps","type","singularName","multiple","visibility","constructor","_constructor","id","settings","BaseAppPersPanel.prototype.constructor.call","this","setSupported","init","_init","BaseAppPersPanel.prototype.init.call","setProperty","_i18nBundle","getText","_attachUserActivityTracking","on","do","refresh","oEventBus","getInstance","subscribe","channelId","eventId","data","item","color","_applyUngroupedTileColor","loadApps","_loadApps","_this","Promise","resolve","_getFrequentVisualizations","frequentVisualizations","destroyAggregation","map","visualization","index","menuItems","_getActions","addedInFavorites","frequentApps","generateApps","setApps","reject","_this2","getServiceAsync","UserRecentsService","getFrequentActivity","frequentActivities","convertActivitiesToVisualizations","error","isAppAddedInFavorite","arguments","length","undefined","action","push","getKey","title","icon","press","event","_addAppToFavorites","generateIllustratedMessage","_generateIllustratedMessage","illustratedMessage","BaseAppPersPanel.prototype.generateIllustratedMessage.call","setDescription"],"sources":["FrequentAppPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport Container from \"sap/ushell/Container\";\nimport EventHub from \"sap/ushell/EventHub\";\nimport UserRecents from \"sap/ushell/services/UserRecents\";\nimport App from \"./App\";\nimport BaseAppPersPanel from \"./BaseAppPersPanel\";\nimport type { $BasePanelSettings } from \"./BasePanel\";\nimport Group from \"./Group\";\nimport { IActivity } from \"./interface/AppsInterface\";\nimport MenuItem from \"./MenuItem\";\n\n/**\n *\n * Provides the class for managing frequent apps.\n *\n * @extends sap.cux.home.BaseAppPersPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121.0\n *\n * @internal\n * @experimental Since 1.121\n * @public\n *\n * @alias sap.cux.home.FrequentAppPanel\n */\n\nexport default class FrequentAppPanel extends BaseAppPersPanel {\n\tprivate oEventBus!: EventBus;\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tdefaultAggregation: \"apps\",\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * Apps aggregation for Frequent apps\n\t\t\t */\n\t\t\tapps: { type: \"sap.cux.home.App\", singularName: \"app\", multiple: true, visibility: \"hidden\" }\n\t\t}\n\t};\n\n\t/**\n\t * Constructor for a new frequent app panel.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $BasePanelSettings) {\n\t\tsuper(id, settings);\n\t\tthis.setSupported(false);\n\t}\n\n\tpublic init() {\n\t\tsuper.init();\n\t\tthis.setProperty(\"key\", \"frequentApps\");\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"frequentlyUsedTab\"));\n\t\tthis.setProperty(\"tooltip\", this._i18nBundle.getText(\"frequentlyUsedTabInfo\"));\n\t\tthis._attachUserActivityTracking();\n\t\tEventHub.on(\"userRecentsCleared\").do(() => {\n\t\t\tvoid this.refresh();\n\t\t});\n\n\t\tthis.oEventBus = EventBus.getInstance();\n\t\tthis.oEventBus.subscribe(\n\t\t\t\"appsChannel\",\n\t\t\t\"favAppColorChanged\",\n\t\t\t(channelId?: string, eventId?: string, data?) => {\n\t\t\t\tconst { item, color } = data as { item: App | Group; color: string };\n\t\t\t\t//update color of the app in most used apps\n\t\t\t\tthis._applyUngroupedTileColor(item, color);\n\t\t\t},\n\t\t\tthis\n\t\t);\n\t}\n\n\t/**\n\t * Fetch frequent apps and set apps aggregation\n\t * @private\n\t */\n\tpublic async loadApps() {\n\t\tlet frequentVisualizations = await this._getFrequentVisualizations();\n\t\tthis.destroyAggregation(\"apps\", true);\n\t\tfrequentVisualizations = frequentVisualizations.map((visualization, index) => {\n\t\t\treturn {\n\t\t\t\t...visualization,\n\t\t\t\tmenuItems: this._getActions(visualization.addedInFavorites, index)\n\t\t\t};\n\t\t});\n\t\t//convert apps objects array to apps instances\n\t\tconst frequentApps = this.generateApps(frequentVisualizations);\n\t\tthis.setApps(frequentApps);\n\t}\n\n\t/**\n\t * Returns list of frequent apps\n\t * @private\n\t * @returns {object[]} - Array of frequent apps.\n\t */\n\tprivate async _getFrequentVisualizations() {\n\t\ttry {\n\t\t\tconst UserRecentsService = await Container.getServiceAsync<UserRecents>(\"UserRecents\");\n\t\t\tconst frequentActivities: IActivity[] = (await UserRecentsService?.getFrequentActivity()) || [];\n\t\t\t//convert activity to apps\n\t\t\tconst frequentVisualizations = await this.convertActivitiesToVisualizations(frequentActivities);\n\t\t\treturn frequentVisualizations;\n\t\t} catch (error) {\n\t\t\tLog.error(error as string);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Returns list of actions available for selected app\n\t * @private\n\t * @param {boolean} isAppAddedInFavorite - true if app is already present in favorite, false otherwise.\n\t * @returns {sap.cux.home.MenuItem[]} - Array of list items.\n\t */\n\tprivate _getActions(isAppAddedInFavorite: boolean = false, index?: number) {\n\t\tconst action = [];\n\t\tif (!isAppAddedInFavorite) {\n\t\t\taction.push(\n\t\t\t\tnew MenuItem(`${this.getKey()}--addToFavorites--${index}`, {\n\t\t\t\t\ttitle: this._i18nBundle.getText(\"addToFavorites\"),\n\t\t\t\t\ticon: \"sap-icon://add-favorite\",\n\t\t\t\t\tpress: (event) => {\n\t\t\t\t\t\tvoid this._addAppToFavorites(event);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\treturn action;\n\t}\n\n\t/**\n\t * Generates illustrated message for frequent apps panel.\n\t * @private\n\t * @override\n\t * @returns {sap.m.IllustratedMessage} Illustrated error message.\n\t */\n\tprotected generateIllustratedMessage() {\n\t\tconst illustratedMessage = super.generateIllustratedMessage();\n\t\t//override the default description\n\t\tillustratedMessage.setDescription(this._i18nBundle.getText(\"noFreqAppsDescription\"));\n\t\treturn illustratedMessage;\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":116,"column":0},"map":{"version":3,"names":["sap","ui","define","__BaseApp","_interopRequireDefault","obj","__esModule","default","BaseApp","Group","extend","metadata","library","properties","number","type","group","defaultValue","groupId","aggregations","apps","multiple","singularName","events","press","parameters","constructor","_constructor","id","settings","BaseApp.prototype.constructor.call","this","_handlePress","firePress","getGroupId"],"sources":["Group.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport BaseApp from \"./BaseApp\";\nimport { $GroupSettings } from \"./Group\";\n\n/**\n *\n * Class for managing apps group.\n *\n * @extends sap.cux.home.BaseApp\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121.0\n *\n * @private\n * @experimental Since 1.121\n *\n * @alias sap.cux.home.Group\n */\nexport default class Group extends BaseApp {\n\tconstructor(idOrSettings?: string | $GroupSettings);\n\tconstructor(id?: string, settings?: $GroupSettings);\n\tconstructor(id?: string, settings?: $GroupSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * Number of apps, shown as folder badge\n\t\t\t */\n\t\t\tnumber: { type: \"string\", group: \"Misc\", defaultValue: \"\" },\n\t\t\t/**\n\t\t\t * Id of the group\n\t\t\t */\n\t\t\tgroupId: { type: \"string\", group: \"Misc\", defaultValue: \"\" }\n\t\t},\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * Apps aggregation for Groups\n\t\t\t */\n\t\t\tapps: { type: \"sap.cux.home.App\", multiple: true, singularName: \"app\" }\n\t\t},\n\t\tevents: {\n\t\t\tpress: {\n\t\t\t\tparameters: {\n\t\t\t\t\tgroupId: { type: \"string\" }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Handles the press event for a group.\n\t * Retrieves the parent of the group and shows the group detail dialog.\n\t * @private\n\t */\n\tpublic _handlePress(): void {\n\t\tthis.firePress({ groupId: this.getGroupId() });\n\t}\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,gCAAA,uBAAAC,GAAA,sBAAAC,EAAAC,GAAA,OAAAA,KAAAC,mBAAAD,EAAAE,UAAA,YAAAF,EAAAE,QAAAF,CAAA,OAMOG,EAAOJ,EAAAD,GAGd,MAeqBM,EAAcD,EAAOE,OAAA,sBAOzBC,SAA4B,CAC3CC,QAAS,eACTC,WAAY,CAIXC,OAAQ,CAAEC,KAAM,SAAUC,MAAO,OAAQC,aAAc,IAIvDC,QAAS,CAAEH,KAAM,SAAUC,MAAO,OAAQC,aAAc,KAEzDE,aAAc,CAIbC,KAAM,CAAEL,KAAM,mBAAoBM,SAAU,KAAMC,aAAc,QAEjEC,OAAQ,CACPC,MAAO,CACNC,WAAY,CACXP,QAAS,CAAEH,KAAM,cAzBrBW,YAAW,SAAAC,EAACC,EAAaC,GACxBC,6BAAAC,KAAMH,EAAIC,EACX,EAkCOG,aAAY,SAAAA,IAClBD,KAAKE,UAAU,CAAEf,QAASa,KAAKG,cAChC,IAAC,OAzCmBzB,CAAK","ignoreList":[],"sourceRoot":""}},{"offset":{"line":121,"column":0},"map":{"version":3,"names":["sap","ui","define","IToDoPanel"],"sources":["IToDoPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Control from \"sap/ui/core/Control\";\nimport Context from \"sap/ui/model/Context\";\nimport { RequestOptions } from \"./ToDoPanel\";\n\n/**\n * Common Interface for creating To-Do Panels displayed in the {@link sap.cux.home.ToDosContainer}.\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @interface\n * @internal\n * @experimental Since 1.121\n *\n * @alias sap.cux.home.IToDoPanel\n * @public\n */\nexport default interface IToDoPanel {\n\t/**\n\t * Generate a default card template for the To Do Panel.\n\t * An extended panel can have it's own template by overridding\n\t * this method and providing a custom card template.\n\t *\n\t * @public\n\t * @param {string} id The ID for the template.\n\t * @param {object} context The context required for the template.\n\t * @returns {object} The generated card template.\n\t */\n\tgenerateCardTemplate(id: string, context: Context): Control;\n\t/**\n\t * Provides custom request URLs specific to the To-Do Panel.\n\t *\n\t * @public\n\t * @param {number} cardCount - The number of cards which will be displayed in the To-Do Panel.\n\t * @returns {string[]} An array of request URLs.\n\t */\n\tgenerateRequestUrls?(cardCount: number): string[];\n\n\t/**\n\t * Handles the data received from a batch request.\n\t * This hook can be used to process the data before it is displayed.\n\t *\n\t * @public\n\t * @param {unknown[]} data - The data received from the request.\n\t * @param {RequestOptions} [options] - Optional request options.\n\t * @returns {Promise<void>} A promise that resolves when the data has been processed.\n\t */\n\tonDataReceived?(data: unknown[], options?: RequestOptions): Promise<void>;\n\n\t/**\n\t * Retrieves the text for the \"No Data\" message for the To-Do Panel.\n\t *\n\t * @public\n\t * @returns {string} The text for the \"No Data\" message.\n\t */\n\tgetNoDataText?(): string;\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,qCAAA,kCAAAC,UAAA","ignoreList":[],"sourceRoot":""}},{"offset":{"line":126,"column":0},"map":{"version":3,"names":["sap","ui","define","Button","sap_m_library","Text","__BaseSettingsPanel","___utils_Constants","_interopRequireDefault","obj","__esModule","default","ButtonType","BaseSettingsPanel","CONTENT_ADDITION_PANEL_TYPES","InsightsAdditionPanel","extend","init","_init","BaseSettingsPanel.prototype.init.call","this","setProperty","AI_INSIGHTS_CARDS","_i18nBundle","getText","addCardsButton","getId","text","type","Emphasized","press","onPressAddCards","bind","addActionButton","_setupContent","attachEvent","onDilaogClose","dummyContent","addAggregation","isSupported","_isSupported","Promise","resolve","e","reject","_onPressAddCards","_onDilaogClose"],"sources":["InsightsAdditionPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Button from \"sap/m/Button\";\nimport { ButtonType } from \"sap/m/library\";\nimport Text from \"sap/m/Text\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\nimport { CONTENT_ADDITION_PANEL_TYPES } from \"./utils/Constants\";\n\n/**\n *\n * Class for Apps Addition Panel in MyHome.\n *\n * @extends BaseSettingsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.136\n *\n * @internal\n * @experimental Since 1.136\n * @private\n *\n * @alias sap.cux.home.InsightsAdditionPanel\n */\nexport default class InsightsAdditionPanel extends BaseSettingsPanel {\n\tprivate addCardsButton!: Button;\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\t//setup panel\n\t\tthis.setProperty(\"key\", CONTENT_ADDITION_PANEL_TYPES.AI_INSIGHTS_CARDS);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"insightsCards\"));\n\n\t\t//setup actions\n\t\tthis.addCardsButton = new Button(`${this.getId()}-add-cards-btn`, {\n\t\t\ttext: this._i18nBundle.getText(\"addFromInsightsDialogBtn\"),\n\t\t\ttype: ButtonType.Emphasized,\n\t\t\tpress: this.onPressAddCards.bind(this)\n\t\t});\n\t\tthis.addActionButton(this.addCardsButton);\n\n\t\t//setup content\n\t\tthis._setupContent();\n\t\tthis.attachEvent(\"onDialogClose\", this.onDilaogClose.bind(this));\n\t}\n\n\t/**\n\t * Sets up the content for the Insights Addition Panel.\n\t *\n\t * @private\n\t */\n\tprivate _setupContent(): void {\n\t\tconst dummyContent = new Text(`${this.getId()}-dummy-text`, {\n\t\t\ttext: this._i18nBundle.getText(\"insightsCards\")\n\t\t});\n\t\tthis.addAggregation(\"content\", dummyContent);\n\t}\n\n\t/**\n\t * Checks if the Insights Addition Panel is supported.\n\t *\n\t * @public\n\t * @override\n\t * @async\n\t * @returns {Promise<boolean>} A promise that resolves to true if supported.\n\t */\n\tpublic async isSupported(): Promise<boolean> {\n\t\treturn Promise.resolve(true);\n\t}\n\n\t/**\n\t * Handles the \"Add\" button press event.\n\t *\n\t * @private\n\t */\n\tprivate onPressAddCards(): void {}\n\n\t/**\n\t * Handles the dialog close event.\n\t *\n\t * @private\n\t */\n\tprivate onDilaogClose(): void {}\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,gDAAA,iGAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,sBAAAC,EAAAC,GAAA,OAAAA,KAAAC,mBAAAD,EAAAE,UAAA,YAAAF,EAAAE,QAAAF,CAAA,OAMSG,EAAUR,EAAA,oBAEZS,EAAiBL,EAAAF,GAAA,MACfQ,EAA4BP,EAAA,gCAErC,MAgBqBQ,EAA8BF,EAAiBG,OAAA,sCAS5DC,KAAI,SAAAC,IACVC,sBAAAC,MAGAA,KAAKC,YAAY,MAAOP,EAA6BQ,mBACrDF,KAAKC,YAAY,QAASD,KAAKG,YAAYC,QAAQ,kBAGnDJ,KAAKK,eAAiB,IAAItB,EAAO,GAAGiB,KAAKM,wBAAyB,CACjEC,KAAMP,KAAKG,YAAYC,QAAQ,4BAC/BI,KAAMhB,EAAWiB,WACjBC,MAAOV,KAAKW,gBAAgBC,KAAKZ,QAElCA,KAAKa,gBAAgBb,KAAKK,gBAG1BL,KAAKc,gBACLd,KAAKe,YAAY,gBAAiBf,KAAKgB,cAAcJ,KAAKZ,MAC3D,EAOQc,cAAa,SAAAA,IACpB,MAAMG,EAAe,IAAIhC,EAAK,GAAGe,KAAKM,qBAAsB,CAC3DC,KAAMP,KAAKG,YAAYC,QAAQ,mBAEhCJ,KAAKkB,eAAe,UAAWD,EAChC,EAUaE,YAAW,SAAAC,IAAA,IACvB,OAAOC,QAAQC,QAAQ,KACxB,CAAC,MAAAC,GAAA,OAAAF,QAAAG,OAAAD,EAAA,GAOOZ,gBAAe,SAAAc,IAAU,EAOzBT,cAAa,SAAAU,IAAU,IAAC,OAjEZ/B,CAAqB","ignoreList":[],"sourceRoot":""}},{"offset":{"line":131,"column":0},"map":{"version":3,"names":["sap","ui","define","ManageCards","__BaseSettingsPanel","___utils_Constants","_interopRequireDefault","obj","__esModule","default","BaseSettingsPanel","SETTINGS_PANELS_KEYS","InsightsCardsSettingsPanel","extend","constructor","prototype","apply","this","arguments","eventAttached","init","_init","BaseSettingsPanel.prototype.init.call","setProperty","INSIGHTS_CARDS","_i18nBundle","getText","addAggregation","_getContent","attachPanelNavigated","event","cardId","getParameter","manageCardsInstance","getParent","attachAfterClose","_getPanel","renderPanel"],"sources":["InsightsCardsSettingsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport ManageCards from \"sap/insights/ManageCards\";\nimport Dialog from \"sap/m/Dialog\";\nimport Control from \"sap/ui/core/Control\";\nimport BaseSettingsPanel, { BaseSettingsPanel$PanelNavigatedEvent } from \"./BaseSettingsPanel\";\nimport CardsPanel from \"./CardsPanel\";\nimport { SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\n\ninterface IContext {\n\tcardId?: string;\n}\n\n/**\n *\n * Class for My Home Insights Cards Settings Panel.\n *\n * @extends BaseSettingsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.InsightsCardsSettingsPanel\n */\nexport default class InsightsCardsSettingsPanel extends BaseSettingsPanel {\n\tprivate eventAttached: boolean = false;\n\tprivate manageCardsInstance!: ManageCards;\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\t//setup panel\n\t\tthis.setProperty(\"key\", SETTINGS_PANELS_KEYS.INSIGHTS_CARDS);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"insightsCards\"));\n\t\tthis.setProperty(\"icon\", \"sap-icon://card\");\n\t\tthis.setProperty(\"showHeader\", false);\n\n\t\t//setup layout content\n\t\tthis.addAggregation(\"content\", this._getContent());\n\n\t\t//fired every time on panel navigation\n\t\tthis.attachPanelNavigated((event: BaseSettingsPanel$PanelNavigatedEvent) => {\n\t\t\tconst cardId = (event.getParameter(\"context\") as IContext)?.cardId;\n\t\t\tthis.manageCardsInstance?.setProperty(\"cardId\", cardId || \"\");\n\t\t\tif (!this.eventAttached) {\n\t\t\t\tthis.eventAttached = true;\n\t\t\t\t(this.getParent() as Dialog)?.attachAfterClose(() => {\n\t\t\t\t\tvoid (this._getPanel() as CardsPanel)?.renderPanel();\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Returns the content for the Insights Cards Settings Panel.\n\t *\n\t * @private\n\t * @returns {Control} The control containing the Insights Cards Settings Panel content.\n\t */\n\tprivate _getContent(): Control {\n\t\tif (!this.manageCardsInstance) {\n\t\t\tthis.manageCardsInstance = new ManageCards();\n\t\t}\n\t\treturn this.manageCardsInstance;\n\t}\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,qDAAA,gFAAAC,EAAAC,EAAAC,GAAA,sBAAAC,EAAAC,GAAA,OAAAA,KAAAC,mBAAAD,EAAAE,UAAA,YAAAF,EAAAE,QAAAF,CAAA,OAQOG,EAAiBJ,EAAAF,GAAA,MAEfO,EAAoBN,EAAA,wBAM7B,MAgBqBO,EAAmCF,EAAiBG,OAAA,2CAAAC,YAAA,SAAAA,IAAAJ,EAAAK,UAAAD,YAAAE,MAAAC,KAAAC,WAAAD,KAChEE,cAAyB,KAAK,EAQ/BC,KAAI,SAAAC,IACVC,sBAAAL,MAGAA,KAAKM,YAAY,MAAOZ,EAAqBa,gBAC7CP,KAAKM,YAAY,QAASN,KAAKQ,YAAYC,QAAQ,kBACnDT,KAAKM,YAAY,OAAQ,mBACzBN,KAAKM,YAAY,aAAc,OAG/BN,KAAKU,eAAe,UAAWV,KAAKW,eAGpCX,KAAKY,qBAAsBC,IAC1B,MAAMC,EAAUD,EAAME,aAAa,YAAyBD,OAC5Dd,KAAKgB,qBAAqBV,YAAY,SAAUQ,GAAU,IAC1D,IAAKd,KAAKE,cAAe,CACxBF,KAAKE,cAAgB,KACpBF,KAAKiB,aAAwBC,iBAAiB,UACxClB,KAAKmB,aAA4BC,aAAa,EAEtD,GAEF,EAQQT,YAAW,SAAAA,IAClB,IAAKX,KAAKgB,oBAAqB,CAC9BhB,KAAKgB,oBAAsB,IAAI9B,CAChC,CACA,OAAOc,KAAKgB,mBACb,IAAC,OA7CmBrB,CAA0B","ignoreList":[],"sourceRoot":""}},{"offset":{"line":136,"column":0},"map":{"version":3,"names":["sap","ui","define","__BaseContainer","__CardsPanel","__ErrorPanel","___InsightsContainerGenericPlaceholder","__TilesPanel","___utils_Device","___utils_InsightsUtils","_interopRequireDefault","obj","__esModule","default","BaseContainer","CardsPanel","cardsContainerActionButtons","cardsContainerMenuItems","ErrorPanel","getInsightsPlaceholder","TilesPanel","tilesContainerActionButtons","tilesContainerMenuItems","DeviceType","sortMenuItems","tilesPanelName","cardsPanelName","sortedMenuItems","REFRESH","ADD_APPS","EDIT_TILES","EDIT_CARDS","AI_INSIGHT_CARD","SHOW_MORE","InsightsContainer","extend","renderer","apiVersion","constructor","_constructor","id","settings","BaseContainer.prototype.constructor.call","this","_isInitialRender","init","_init","BaseContainer.prototype.init.call","setProperty","_i18nBundle","getText","panelLoaded","loaded","undefined","count","panelContext","setTooltip","String","addCustomSetting","load","_load","aContent","getContent","forEach","oContent","getMetadata","getName","addCommonMenuItems","getContainerMenuItems","addCommonActionButtons","getContainerActionButtons","_addContainerHeader","content","panel","handleHideHeader","attachHandleHidePanel","handleHidePanel","attachHandleUnhidePanel","unhidePanelIfHidden","renderPanel","_handleHidePanel","removeContent","panelName","handlePanelLoad","panels","_getLoadedPanelNames","visibleOrPendingPanels","getVisibleOrPendingPanels","panelCount","length","_errorPanel","getId","messageTitle","messageDescription","getData","addAggregation","hiddenMenuItems","hiddenActionButtons","_hideMenuItems","_hideActionButtons","_removeContainerHeader","getAggregation","menuItem","toggleMenuListItem","actionButton","toggleActionButton","handleAddHeader","containerMenuItems","includedInHiddenItems","some","hiddenItem","includes","containerActionButtons","updatePanelsItemCount","_updatePanelsItemCount","itemCount","_unhidePanelIfHidden","layout","_getLayout","panelExpandedName","_getCurrentExpandedElementName","processPanelVisibility","insertContentFn","panelWrapper","_getPanelContentWrapper","getProperty","hasStyleClass","removeStyleClass","listener","detachOnCollapse","attachOnCollapse","insertContent","addContent","_updateHeaderElements","adjustLayout","_adjustLayout","getDeviceType","Mobile","toggleActionButtons","ADD_TILES","_addCommonMenuItems","menuItems","_sortMenuItems","_addCommonActionButtons","actionButtons","_handlePanelLoad","oVal","updateActionButton","_updateActionButton","visibility","text","getVisible","setText","_updateContainerHeader","updateMenuItem","_updateMenuItem","getTitle","setTitle","Object","keys","filter","_getVisibleOrPendingPanels","removeAllAggregation","getGenericPlaceholderContent","_getGenericPlaceholderContent"],"sources":["InsightsContainer.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Button from \"sap/m/Button\";\nimport type { $BaseContainerSettings } from \"./BaseContainer\";\nimport BaseContainer from \"./BaseContainer\";\nimport BasePanel from \"./BasePanel\";\nimport CardsPanel, { cardsContainerActionButtons, cardsContainerMenuItems } from \"./CardsPanel\";\nimport ErrorPanel from \"./ErrorPanel\";\nimport { getInsightsPlaceholder } from \"./InsightsContainerGenericPlaceholder\";\nimport MenuItem from \"./MenuItem\";\nimport TilesPanel, { tilesContainerActionButtons, tilesContainerMenuItems } from \"./TilesPanel\";\nimport { DeviceType } from \"./utils/Device\";\nimport { sortMenuItems } from \"./utils/InsightsUtils\";\n\nconst tilesPanelName: string = \"sap.cux.home.TilesPanel\";\nconst cardsPanelName: string = \"sap.cux.home.CardsPanel\";\nconst sortedMenuItems: (tilesContainerMenuItems | cardsContainerMenuItems | string)[] = [\n\ttilesContainerMenuItems.REFRESH,\n\tcardsContainerMenuItems.REFRESH,\n\ttilesContainerMenuItems.ADD_APPS,\n\ttilesContainerMenuItems.EDIT_TILES,\n\tcardsContainerMenuItems.EDIT_CARDS,\n\tcardsContainerMenuItems.AI_INSIGHT_CARD,\n\ttilesContainerMenuItems.SHOW_MORE,\n\tcardsContainerMenuItems.SHOW_MORE,\n\t\"settings\"\n];\n\ninterface IpanelLoaded {\n\t[key: string]: { loaded: boolean | undefined; count: number };\n}\n\ninterface IpanelContext {\n\t[key: string]: TilesPanel | CardsPanel;\n}\n\n/**\n *\n * Container class for managing and storing Insights Tiles and Insights Cards.\n *\n * @extends sap.cux.home.BaseContainer\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @public\n *\n * @alias sap.cux.home.InsightsContainer\n */\n\nexport default class InsightsContainer extends BaseContainer {\n\tstatic readonly renderer = {\n\t\t...BaseContainer.renderer,\n\t\tapiVersion: 2\n\t};\n\tprivate _errorPanel!: ErrorPanel;\n\tprivate _isInitialRender: boolean = true;\n\tprivate panelLoaded!: IpanelLoaded;\n\tprivate panelContext!: IpanelContext;\n\n\tconstructor(id?: string | $BaseContainerSettings);\n\tconstructor(id?: string, settings?: $BaseContainerSettings);\n\t/**\n\t * Constructor for a new Insights container.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $BaseContainerSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\t\tthis.setProperty(\"title\", this._i18nBundle?.getText(\"insights\"));\n\t\t/* As Container Level default value for enableSettings is false,\n\t\t\tthis needs to be added from container level.\n\t\t\t(default value cannot be true as News & Page Container header should be hidden)\n\t\t*/\n\t\tthis.setProperty(\"enableSettings\", true);\n\t\tthis.setProperty(\"orientation\", \"Vertical\");\n\t\tthis.panelLoaded = {\n\t\t\t[tilesPanelName]: { loaded: undefined, count: 0 },\n\t\t\t[cardsPanelName]: { loaded: undefined, count: 0 }\n\t\t};\n\t\tthis.panelContext = {};\n\t\tthis.setTooltip(String(this._i18nBundle.getText(\"insights\")));\n\t\tthis.addCustomSetting(\"title\", this._i18nBundle.getText(\"insightLayoutSectionTitle\") as string);\n\t\tthis.setTooltip(String(this._i18nBundle.getText(\"insightLayoutSectionTitle\")));\n\t}\n\n\t/**\n\t * Loads the Insights section.\n\t * Overrides the load method of the BaseContainer.\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic load() {\n\t\tif (this._isInitialRender) {\n\t\t\tconst aContent = this.getContent();\n\t\t\taContent.forEach((oContent) => {\n\t\t\t\tthis.panelContext[oContent.getMetadata().getName()] = oContent as TilesPanel | CardsPanel;\n\t\t\t\tthis.addCommonMenuItems((oContent as TilesPanel | CardsPanel).getContainerMenuItems?.());\n\t\t\t\tthis.addCommonActionButtons((oContent as TilesPanel | CardsPanel).getContainerActionButtons?.());\n\t\t\t});\n\n\t\t\tthis._addContainerHeader();\n\n\t\t\t// Render individual panels\n\t\t\taContent.forEach((content) => {\n\t\t\t\tconst panel = content as TilesPanel | CardsPanel;\n\t\t\t\tpanel.handleHideHeader();\n\t\t\t\tpanel.attachHandleHidePanel(() => this.handleHidePanel(panel));\n\t\t\t\tpanel.attachHandleUnhidePanel(() => this.unhidePanelIfHidden(panel));\n\t\t\t\tvoid panel.renderPanel();\n\t\t\t});\n\t\t\tthis._isInitialRender = false;\n\t\t}\n\t}\n\n\t/**\n\t * Handles the hiding of a panel by removing its content, updating the panel load status,\n\t * and managing the display of the container header and error panel.\n\t *\n\t * @param {BasePanel} panel - The panel to be hidden.\n\t * @private\n\t */\n\tpublic handleHidePanel(panel: BasePanel) {\n\t\tthis.removeContent(panel);\n\t\tconst panelName = panel.getMetadata().getName();\n\t\tthis.handlePanelLoad(panelName, { loaded: false, count: 0 });\n\t\tconst panels = this._getLoadedPanelNames() || [];\n\t\tconst visibleOrPendingPanels = this.getVisibleOrPendingPanels() || [];\n\t\tconst panelCount = panels?.length;\n\t\tthis._addContainerHeader();\n\t\t// only show error panel if all panels loaded state is false\n\t\tif (visibleOrPendingPanels.length === 0) {\n\t\t\tif (!this._errorPanel) {\n\t\t\t\tthis._errorPanel = new ErrorPanel(`${this.getId()}-errorPanel`, {\n\t\t\t\t\tmessageTitle: this._i18nBundle.getText(\"noAppsTitle\"),\n\t\t\t\t\tmessageDescription: this._i18nBundle.getText(\"noInsightsMsg\")\n\t\t\t\t});\n\t\t\t\tthis._errorPanel.getData();\n\t\t\t}\n\t\t\tthis.addAggregation(\"content\", this._errorPanel);\n\t\t} else if (panelCount === 1) {\n\t\t\tconst panel = this.getContent()[0];\n\t\t\tif (panel && !(panel instanceof ErrorPanel)) {\n\t\t\t\t(panel as TilesPanel | CardsPanel)?.handleHideHeader();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Adds the container header based on the number of visible panels.\n\t *\n\t * @private\n\t */\n\tprivate _addContainerHeader() {\n\t\tconst panels: string[] = this._getLoadedPanelNames();\n\t\tlet hiddenMenuItems: string[] = [];\n\t\tlet hiddenActionButtons: string[] = [];\n\t\tthis.setProperty(\"title\", this._i18nBundle?.getText(\"insights\"));\n\t\tif (panels.length === 0 || this.getContent()[0] instanceof ErrorPanel) {\n\t\t\thiddenMenuItems = [\n\t\t\t\ttilesContainerMenuItems.REFRESH,\n\t\t\t\tcardsContainerMenuItems.REFRESH,\n\t\t\t\ttilesContainerMenuItems.SHOW_MORE,\n\t\t\t\tcardsContainerMenuItems.SHOW_MORE\n\t\t\t];\n\t\t\tthis._hideMenuItems(hiddenMenuItems);\n\t\t\thiddenActionButtons = [tilesContainerActionButtons.SHOW_MORE, cardsContainerActionButtons.SHOW_MORE];\n\t\t\tthis._hideActionButtons(hiddenActionButtons);\n\t\t} else if (panels.length === 1) {\n\t\t\tconst panelName = panels[0];\n\t\t\tthis.setProperty(\"title\", `${this._i18nBundle?.getText(\"insights\")} (${this.panelLoaded[panelName].count || 0})`);\n\t\t\tif (this.panelContext[panels[0]] instanceof TilesPanel) {\n\t\t\t\thiddenMenuItems = [cardsContainerMenuItems.REFRESH, cardsContainerMenuItems.SHOW_MORE];\n\t\t\t\thiddenActionButtons = [cardsContainerActionButtons.SHOW_MORE];\n\t\t\t}\n\t\t\tif (this.panelContext[panels[0]] instanceof CardsPanel) {\n\t\t\t\thiddenMenuItems = [tilesContainerMenuItems.REFRESH, tilesContainerMenuItems.SHOW_MORE];\n\t\t\t\thiddenActionButtons = [tilesContainerActionButtons.SHOW_MORE];\n\t\t\t}\n\t\t\tthis._hideMenuItems(hiddenMenuItems);\n\t\t\tthis._hideActionButtons(hiddenActionButtons);\n\t\t}\n\t}\n\n\t/**\n\t * Removes the container header.\n\t *\n\t * @private\n\t */\n\tprivate _removeContainerHeader() {\n\t\tthis.setProperty(\"title\", \"\");\n\t\t(this.getAggregation(\"menuItems\") as MenuItem[])?.forEach((menuItem) => this.toggleMenuListItem(menuItem, false));\n\t\t(this.getAggregation(\"actionButtons\") as Button[])?.forEach((actionButton) => this.toggleActionButton(actionButton, false));\n\t\tconst panels = this._getLoadedPanelNames();\n\t\tpanels.forEach((panelName) => {\n\t\t\tthis.panelContext[panelName]?.handleAddHeader?.();\n\t\t});\n\t}\n\n\t/**\n\t * Hides the specified menu items.\n\t *\n\t * @private\n\t * @param {string[]} hiddenMenuItems - The IDs of the menu items to hide.\n\t */\n\tprivate _hideMenuItems(hiddenMenuItems: string[]) {\n\t\tconst containerMenuItems = this.getAggregation(\"menuItems\") as MenuItem[];\n\t\tcontainerMenuItems?.forEach((menuItem) => {\n\t\t\tconst includedInHiddenItems = hiddenMenuItems.some((hiddenItem) => menuItem.getId().includes(hiddenItem));\n\t\t\tthis.toggleMenuListItem(menuItem, !includedInHiddenItems);\n\t\t});\n\t}\n\n\t/**\n\t * Hides the specified action buttons.\n\t *\n\t * @private\n\t * @param {string[]} hiddenActionButtons - The IDs of the action buttons to hide.\n\t */\n\tprivate _hideActionButtons(hiddenActionButtons: string[]) {\n\t\tconst containerActionButtons = this.getAggregation(\"actionButtons\") as Button[];\n\t\tcontainerActionButtons?.forEach((actionButton) => {\n\t\t\tconst includedInHiddenItems = hiddenActionButtons.some((hiddenItem) => actionButton.getId().includes(hiddenItem));\n\t\t\tthis.toggleActionButton(actionButton, !includedInHiddenItems);\n\t\t});\n\t}\n\n\t/**\n\t * Updates the item count for the specified panel.\n\t *\n\t * @param {number} itemCount - The new item count.\n\t * @param {string} panelName - The name of the panel.\n\t */\n\tpublic updatePanelsItemCount(itemCount: number, panelName: string) {\n\t\tthis.panelLoaded[panelName].count = itemCount;\n\t\tconst panels = this._getLoadedPanelNames();\n\t\t// Container Title Will be displayed only in case of only one panel is present\n\t\tif (panels.length === 1) {\n\t\t\tthis.setProperty(\"title\", `${this._i18nBundle?.getText(\"insights\")} (${itemCount || 0})`);\n\t\t}\n\t}\n\n\t/**\n\t * Unhides the specified panel if it is hidden.\n\t *\n\t * @param {TilesPanel | CardsPanel} panel - The panel to unhide.\n\t */\n\tpublic unhidePanelIfHidden(panel: TilesPanel | CardsPanel) {\n\t\tconst layout = this._getLayout();\n\t\tconst panelExpandedName = layout._getCurrentExpandedElementName();\n\n\t\tif (this._errorPanel) {\n\t\t\tthis.removeContent(this._errorPanel);\n\t\t}\n\n\t\t// Function to handle panel content insertion\n\t\tconst processPanelVisibility = (panelName: string, insertContentFn: () => void) => {\n\t\t\tconst panelWrapper = this._getPanelContentWrapper(panel);\n\t\t\tif (!panelExpandedName || panelExpandedName === panel.getProperty(\"fullScreenName\")) {\n\t\t\t\t/**\n                    loaded value can be false or undefined, false being hidden and undefined being loading\n                    if the panel is hidden then only unhide it\n                */\n\t\t\t\tif (this.panelLoaded[panelName].loaded === false) {\n\t\t\t\t\tinsertContentFn();\n\t\t\t\t\t// Remove hidden class if applied\n\t\t\t\t\tif (panelWrapper.hasStyleClass(\"sapCuxHidden\")) {\n\t\t\t\t\t\tpanelWrapper.removeStyleClass(\"sapCuxHidden\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.handlePanelLoad(panelName, { loaded: true, count: this.panelLoaded[panelName].count });\n\t\t\t} else {\n\t\t\t\tconst listener = () => {\n\t\t\t\t\tinsertContentFn();\n\t\t\t\t\t// Remove hidden class if applied\n\t\t\t\t\tif (panelWrapper.hasStyleClass(\"sapCuxHidden\")) {\n\t\t\t\t\t\tpanelWrapper.removeStyleClass(\"sapCuxHidden\");\n\t\t\t\t\t}\n\t\t\t\t\tlayout.detachOnCollapse(listener); // Remove the listener after execution\n\t\t\t\t};\n\t\t\t\tthis.handlePanelLoad(panelName, { loaded: true, count: this.panelLoaded[panelName].count });\n\t\t\t\tlayout.attachOnCollapse(listener);\n\t\t\t}\n\t\t};\n\n\t\t// Handling TilesPanel\n\t\tif (panel instanceof TilesPanel && !this.panelLoaded[tilesPanelName].loaded) {\n\t\t\tprocessPanelVisibility(tilesPanelName, () => this.insertContent(this.panelContext[tilesPanelName], 0));\n\t\t}\n\n\t\t// Handling CardsPanel\n\t\tif (panel instanceof CardsPanel && !this.panelLoaded[cardsPanelName].loaded) {\n\t\t\tprocessPanelVisibility(cardsPanelName, () => this.addContent(this.panelContext[cardsPanelName]));\n\t\t}\n\t}\n\n\t/**\n\t * Updates the container header based on the number of visible panels.\n\t *\n\t * @private\n\t * @param {TilesPanel | CardsPanel} panel - The panel being managed.\n\t */\n\n\tprivate _updateHeaderElements(panel: TilesPanel | CardsPanel) {\n\t\tconst panels = this._getLoadedPanelNames();\n\t\tif (panels.length > 1) {\n\t\t\tthis._removeContainerHeader();\n\t\t} else {\n\t\t\tthis._addContainerHeader();\n\t\t\tpanel.handleHideHeader();\n\t\t}\n\t}\n\n\t/**\n\t * Adjusts the layout of the container.\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic adjustLayout() {\n\t\t//hide actions if the device is a phone\n\t\tif (this.getDeviceType() === DeviceType.Mobile) {\n\t\t\tthis.toggleActionButtons(false);\n\t\t} else {\n\t\t\tconst panels = this._getLoadedPanelNames();\n\t\t\t// Unhide the Add Tiles button if the device is not a phone and header is visible\n\t\t\tif (panels.length < 2) {\n\t\t\t\t(this.getAggregation(\"actionButtons\") as Button[])?.forEach((actionButton) => {\n\t\t\t\t\tif (actionButton.getId().includes(tilesContainerActionButtons.ADD_TILES)) {\n\t\t\t\t\t\tthis.toggleActionButton(actionButton, true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t//adjust layout of all panels\n\t\t(this.getContent() as (TilesPanel | CardsPanel)[]).forEach((panel) => panel._adjustLayout?.());\n\t}\n\n\t/**\n\t * Add common Menu Items for Insights Container from Panel\n\t *\n\t * @private\n\t */\n\tpublic addCommonMenuItems(menuItems: MenuItem[]) {\n\t\tmenuItems.forEach((menuItem) => this.addAggregation(\"menuItems\", menuItem));\n\t\t// after adding menu items sort them based on the order\n\t\tthis._sortMenuItems(sortedMenuItems);\n\t}\n\n\t/**\n\t * Add common Action Buttons for Insights Container from Panel\n\t *\n\t * @private\n\t */\n\tpublic addCommonActionButtons(actionButtons: Button[]) {\n\t\tactionButtons.forEach((actionButton) => this.addAggregation(\"actionButtons\", actionButton));\n\t}\n\n\t/**\n\t * Handles the loading of a panel.\n\t *\n\t * @param {string} panelName - The name of the panel.\n\t * @param {object} oVal - The load status and count of the panel.\n\t * @param {boolean} oVal.loaded - The load status of the panel.\n\t * @param {number} oVal.count - The count of items in the panel.\n\t */\n\tpublic handlePanelLoad(panelName: string, oVal: { loaded: boolean; count: number }) {\n\t\tif (this.panelLoaded[panelName].loaded !== oVal.loaded) {\n\t\t\tthis.panelLoaded[panelName] = oVal;\n\t\t\tthis._updateHeaderElements(this.panelContext[panelName]);\n\t\t}\n\t\tthis.adjustLayout();\n\t}\n\n\t/**\n\t * Updates the visibility and text of an action button.\n\t *\n\t * @param {Button} actionButton - The action button to update.\n\t * @param {boolean} visibility - The visibility of the action button.\n\t * @param {string} text - The text of the action button.\n\t */\n\tpublic updateActionButton(actionButton: Button, visibility: boolean, text: string) {\n\t\tif (actionButton?.getVisible() !== visibility || actionButton?.getText() !== text) {\n\t\t\tthis.toggleActionButton(actionButton, visibility);\n\t\t\tactionButton?.setText(text);\n\t\t\tthis._updateContainerHeader(this);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the visibility and text of a menu item.\n\t *\n\t * @param {MenuItem} menuItem - The menu item to update.\n\t * @param {boolean} visibility - The visibility of the menu item.\n\t * @param {string} text - The text of the menu item.\n\t */\n\tpublic updateMenuItem(menuItem: MenuItem, visibility: boolean, text: string) {\n\t\tif (menuItem?.getVisible() !== visibility || menuItem?.getTitle() !== text) {\n\t\t\tthis.toggleMenuListItem(menuItem, visibility);\n\t\t\tmenuItem?.setTitle(text);\n\t\t\tthis._updateContainerHeader(this);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the names of the loaded panels.\n\t *\n\t * @private\n\t * @returns {string[]} The names of the loaded panels.\n\t */\n\tprivate _getLoadedPanelNames() {\n\t\treturn Object.keys(this.panelLoaded).filter((panelName) => this.panelLoaded[panelName].loaded);\n\t}\n\n\t/**\n\t * Returns the names of panels that are still loading or in loaded true state\n\t *\n\t * @private\n\t * @private\n\t */\n\tprivate getVisibleOrPendingPanels() {\n\t\treturn Object.keys(this.panelLoaded).filter((panelName) => this.panelLoaded[panelName].loaded !== false);\n\t}\n\t/**\n\t * Sorts the menu items based on the provided order.\n\t *\n\t * @private\n\t * @param {string[]} menuItems - The order of the menu items.\n\t */\n\tprivate _sortMenuItems(menuItems: string[]) {\n\t\tconst containerMenuItems = this.getAggregation(\"menuItems\") as MenuItem[];\n\t\tlet sortedMenuItems = sortMenuItems(menuItems, containerMenuItems);\n\t\tthis.removeAllAggregation(\"menuItems\");\n\t\tsortedMenuItems?.forEach((menuItem) => this.addAggregation(\"menuItems\", menuItem));\n\t}\n\n\t/**\n\t * Retrieves the generic placeholder content for the Insights container.\n\t *\n\t * @returns {string} The HTML string representing the Insights container's placeholder content.\n\t */\n\tprotected getGenericPlaceholderContent(): string {\n\t\treturn getInsightsPlaceholder();\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":141,"column":0},"map":{"version":3,"names":["sap","ui","define","getInsightsPlaceholder","__exports","__esModule"],"sources":["InsightsContainerGenericPlaceholder.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nexport function getInsightsPlaceholder(): string {\n\treturn `\n        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM\" style=\"width: 225px;\"></div>\n        <div class='plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plContent plResponsivePadding' style=\"background-color:transparent\">\n            <div class=\"pInsightsTilesContainer\">\n                <div class=\"plOVPCard pInsightsTiles\" style=\"background-color:white\">\n                    <div class=\"plOVPCardHeader\">\n                        <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 100px;\"></div>\n                            <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                <div class=\"plAvatar sapMGTLoadingShimmer plAvatarSizeM plAvatarShapeSquare plOVPCardHeaderAvatar\" style=\"width: 120px; height: 40px; background-size: 900px 900px;\"></div>\n                            </div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"plOVPCard pInsightsTiles\" style=\"background-color:white\">\n                    <div class=\"plOVPCardHeader\">\n                        <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 100px;\"></div>\n                            <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                <div class=\"plAvatar sapMGTLoadingShimmer plAvatarSizeM plAvatarShapeSquare plOVPCardHeaderAvatar\" style=\"width: 120px; height: 40px; background-size: 900px 900px;\"></div>\n                            </div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"plOVPCard pInsightsTiles\" style=\"background-color:white\">\n                    <div class=\"plOVPCardHeader\">\n                        <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 100px;\"></div>\n                            <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                <div class=\"plAvatar sapMGTLoadingShimmer plAvatarSizeM plAvatarShapeSquare plOVPCardHeaderAvatar\" style=\"width: 120px; height: 40px; background-size: 900px 900px;\"></div>\n                            </div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"plOVPCard pInsightsTiles\" style=\"background-color:white\">\n                    <div class=\"plOVPCardHeader\">\n                        <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 100px;\"></div>\n                            <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                <div class=\"plAvatar sapMGTLoadingShimmer plAvatarSizeM plAvatarShapeSquare plOVPCardHeaderAvatar\" style=\"width: 120px; height: 40px; background-size: 900px 900px;\"></div>\n                            </div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"plOVPCard pInsightsTiles\" style=\"background-color:white\">\n                    <div class=\"plOVPCardHeader\">\n                        <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 100px;\"></div>\n                            <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                <div class=\"plAvatar sapMGTLoadingShimmer plAvatarSizeM plAvatarShapeSquare plOVPCardHeaderAvatar\" style=\"width: 120px; height: 40px; background-size: 900px 900px;\"></div>\n                            </div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"plOVPCard pInsightsTiles\" style=\"background-color:white\">\n                    <div class=\"plOVPCardHeader\">\n                        <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 100px;\"></div>\n                            <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                <div class=\"plAvatar sapMGTLoadingShimmer plAvatarSizeM plAvatarShapeSquare plOVPCardHeaderAvatar\" style=\"width: 120px; height: 40px; background-size: 900px 900px;\"></div>\n                            </div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"plOVPCardContainer\">\n                <div class=\"plOVPCard plOVPCardVersion4 OVPContentCard5 plSmallestVisibleSizeS\" style=\"background-color:white\">\n                    <div class=\"plOVPCardHeader\">\n                        <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 100px;\"></div>\n                            <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                <div class=\"plAvatar sapMGTLoadingShimmer plAvatarSizeM plAvatarShapeSquare plOVPCardHeaderAvatar\" style=\"width: 120px; height: 40px; background-size: 900px 900px;\"></div>\n                                <div style=\"vertical-align: inherit;\">\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignEnd plVerticalAlignTop plVerticalRepeater plOVPCardHeaderText\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 50px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 30px;\"></div>\n                                    </div>\n                                </div>\n                                <div style=\"vertical-align: inherit;\">\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignEnd plVerticalAlignTop plVerticalRepeater plOVPCardHeaderText\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 50px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 30px;\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                        </div>\n                    </div>\n                    <div class=\"plOVPCardContent\">\n                        <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                            <div class=\"plBarChart\">\n                                <div style=\"vertical-align: inherit;\">\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plVerticalRepeater plOVPCardContentChart plChartHorMeasure plChartVertMeasure plHorizontalBarChart\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 160px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 120px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 90px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 90px;\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"plOVPCard plOVPCardVersion4 OVPContentCard5 plSmallestVisibleSizeM\" style=\"background-color:white\">\n                    <div class=\"plOVPCardHeader\">\n                        <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 100px;\"></div>\n                            <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                <div class=\"plAvatar sapMGTLoadingShimmer plAvatarSizeM plAvatarShapeSquare plOVPCardHeaderAvatar\" style=\"width: 120px; height: 40px; background-size: 900px 900px;\"></div>\n                                <div style=\"vertical-align: inherit;\">\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignEnd plVerticalAlignTop plVerticalRepeater plOVPCardHeaderText\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 50px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 30px;\"></div>\n                                    </div>\n                                </div>\n                                <div style=\"vertical-align: inherit;\">\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignEnd plVerticalAlignTop plVerticalRepeater plOVPCardHeaderText\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 50px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 30px;\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                        </div>\n                    </div>\n                    <div class=\"plOVPCardContent\">\n                        <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                            <div class=\"plBarChart\">\n                                <div style=\"vertical-align: inherit;\">\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plVerticalRepeater plOVPCardContentChart plChartHorMeasure plChartVertMeasure plHorizontalBarChart\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 160px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 120px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 90px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 90px;\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"plOVPCard plOVPCardVersion3 OVPContentCard6 plSmallestVisibleSizeM\" style=\"background-color:white\">\n                    <div class=\"plOVPCardHeader\">\n                        <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 100px;\"></div>\n                            <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                <div class=\"plAvatar sapMGTLoadingShimmer plAvatarSizeM plAvatarShapeSquare plOVPCardHeaderAvatar\" style=\"width: 120px; height: 40px; background-size: 900px 900px;\"></div>\n                                <div style=\"vertical-align: inherit;\">\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignEnd plVerticalAlignTop plVerticalRepeater plOVPCardHeaderText\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 50px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 30px;\"></div>\n                                    </div>\n                                </div>\n                                <div style=\"vertical-align: inherit;\">\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignEnd plVerticalAlignTop plVerticalRepeater plOVPCardHeaderText\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 50px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 30px;\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                        </div>\n                    </div>\n                    <div class=\"plOVPCardContent\">\n                        <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                            <div class=\"plBarChart\">\n                                <div style=\"vertical-align: inherit;\">\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plVerticalRepeater plOVPCardContentChart plChartHorMeasure plChartVertMeasure plHorizontalBarChart\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 160px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 120px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 90px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 90px;\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"plOVPCard plOVPCardVersion4 OVPContentCard5 plSmallestVisibleSizeM\" style=\"background-color:white\">\n                    <div class=\"plOVPCardHeader\">\n                        <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 100px;\"></div>\n                            <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                <div class=\"plAvatar sapMGTLoadingShimmer plAvatarSizeM plAvatarShapeSquare plOVPCardHeaderAvatar\" style=\"width: 120px; height: 40px; background-size: 900px 900px;\"></div>\n                                <div style=\"vertical-align: inherit;\">\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignEnd plVerticalAlignTop plVerticalRepeater plOVPCardHeaderText\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 50px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 30px;\"></div>\n                                    </div>\n                                </div>\n                                <div style=\"vertical-align: inherit;\">\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignEnd plVerticalAlignTop plVerticalRepeater plOVPCardHeaderText\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 50px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 30px;\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                        </div>\n                    </div>\n                    <div class=\"plOVPCardContent\">\n                        <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                            <div class=\"plBarChart\">\n                                <div style=\"vertical-align: inherit;\">\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plVerticalRepeater plOVPCardContentChart plChartHorMeasure plChartVertMeasure plHorizontalBarChart\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 160px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 120px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 90px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 90px;\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"plOVPCard plOVPCardVersion4 OVPContentCard5 plSmallestVisibleSizeL\" style=\"background-color:white\">\n                    <div class=\"plOVPCardHeader\">\n                        <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 100px;\"></div>\n                            <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                <div class=\"plAvatar sapMGTLoadingShimmer plAvatarSizeM plAvatarShapeSquare plOVPCardHeaderAvatar\" style=\"width: 120px; height: 40px; background-size: 900px 900px;\"></div>\n                                <div style=\"vertical-align: inherit;\">\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignEnd plVerticalAlignTop plVerticalRepeater plOVPCardHeaderText\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 50px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 30px;\"></div>\n                                    </div>\n                                </div>\n                                <div style=\"vertical-align: inherit;\">\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignEnd plVerticalAlignTop plVerticalRepeater plOVPCardHeaderText\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 50px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 30px;\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                        </div>\n                    </div>\n                    <div class=\"plOVPCardContent\">\n                        <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                            <div class=\"plBarChart\">\n                                <div style=\"vertical-align: inherit;\">\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plVerticalRepeater plOVPCardContentChart plChartHorMeasure plChartVertMeasure plHorizontalBarChart\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 160px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 120px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 90px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 90px;\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"plOVPCard plOVPCardVersion4 OVPContentCard5 plSmallestVisibleSizeL\" style=\"background-color:white\">\n                    <div class=\"plOVPCardHeader\">\n                        <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 100px;\"></div>\n                            <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                <div class=\"plAvatar sapMGTLoadingShimmer plAvatarSizeM plAvatarShapeSquare plOVPCardHeaderAvatar\" style=\"width: 120px; height: 40px; background-size: 900px 900px;\"></div>\n                                <div style=\"vertical-align: inherit;\">\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignEnd plVerticalAlignTop plVerticalRepeater plOVPCardHeaderText\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 50px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 30px;\"></div>\n                                    </div>\n                                </div>\n                                <div style=\"vertical-align: inherit;\">\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignEnd plVerticalAlignTop plVerticalRepeater plOVPCardHeaderText\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 50px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 30px;\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                        </div>\n                    </div>\n                    <div class=\"plOVPCardContent\">\n                        <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                            <div class=\"plBarChart\">\n                                <div style=\"vertical-align: inherit;\">\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plVerticalRepeater plOVPCardContentChart plChartHorMeasure plChartVertMeasure plHorizontalBarChart\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 160px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 120px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 90px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 90px;\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"plOVPCard plOVPCardVersion4 OVPContentCard5 plSmallestVisibleSizeXL\" style=\"background-color:white\">\n                    <div class=\"plOVPCardHeader\">\n                        <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 100px;\"></div>\n                            <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                <div class=\"plAvatar sapMGTLoadingShimmer plAvatarSizeM plAvatarShapeSquare plOVPCardHeaderAvatar\" style=\"width: 120px; height: 40px; background-size: 900px 900px;\"></div>\n                                <div style=\"vertical-align: inherit;\">\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignEnd plVerticalAlignTop plVerticalRepeater plOVPCardHeaderText\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 50px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 30px;\"></div>\n                                    </div>\n                                </div>\n                                <div style=\"vertical-align: inherit;\">\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignEnd plVerticalAlignTop plVerticalRepeater plOVPCardHeaderText\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 50px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 30px;\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                        </div>\n                    </div>\n                    <div class=\"plOVPCardContent\">\n                        <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                            <div class=\"plBarChart\">\n                                <div style=\"vertical-align: inherit;\">\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plVerticalRepeater plOVPCardContentChart plChartHorMeasure plChartVertMeasure plHorizontalBarChart\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 160px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 120px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 90px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 90px;\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"plOVPCard plOVPCardVersion4 OVPContentCard5 plSmallestVisibleSizeXL\" style=\"background-color:white\">\n                    <div class=\"plOVPCardHeader\">\n                        <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 100px;\"></div>\n                            <div class=\"plHorizontalLayout plHorizontalContent plTextAlignStart plVerticalAlignTop\">\n                                <div class=\"plAvatar sapMGTLoadingShimmer plAvatarSizeM plAvatarShapeSquare plOVPCardHeaderAvatar\" style=\"width: 120px; height: 40px; background-size: 900px 900px;\"></div>\n                                <div style=\"vertical-align: inherit;\">\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignEnd plVerticalAlignTop plVerticalRepeater plOVPCardHeaderText\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 50px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 30px;\"></div>\n                                    </div>\n                                </div>\n                                <div style=\"vertical-align: inherit;\">\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignEnd plVerticalAlignTop plVerticalRepeater plOVPCardHeaderText\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 50px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plVerticalRepeaterItem\" style=\"width: 30px;\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plOVPCardHeaderText\" style=\"width: 80px;\"></div>\n                        </div>\n                    </div>\n                    <div class=\"plOVPCardContent\">\n                        <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\">\n                            <div class=\"plBarChart\">\n                                <div style=\"vertical-align: inherit;\">\n                                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plVerticalRepeater plOVPCardContentChart plChartHorMeasure plChartVertMeasure plHorizontalBarChart\">\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 160px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 120px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 90px;\"></div>\n                                        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plVerticalRepeaterItem\" style=\"width: 90px;\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `;\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,8DAAA,2BAIO,SAASC,IACf,MAAO,w+oCAiYR,CAAC,IAAAC,EAAA,CAAAC,WAAA,MAAAD,EAAAD,yBAAA,OAAAC,CAAA","ignoreList":[],"sourceRoot":""}},{"offset":{"line":146,"column":0},"map":{"version":3,"names":["sap","ui","define","Log","Button","Column","ColumnListItem","FlexBox","HBox","MessageBox","MessageToast","ObjectIdentifier","ScrollContainer","SearchField","Switch","Table","Text","Title","VBox","UI5Element","Icon","__BaseSettingsPanel","___TilesPanel","___utils_Accessibility","__AppManager","___utils_Constants","___utils_DragDropUtils","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","BaseSettingsPanel","_finallyRethrows","finalizer","bind","DisplayFormat","getInvisibleText","AppManager","MYHOME_PAGE_ID","SETTINGS_PANELS_KEYS","focusDraggedItem","InsightsTilesSettingsPanel","extend","init","_init","BaseSettingsPanel.prototype.init.call","this","_controlMap","Map","setProperty","INSIGHTS_TILES","_i18nBundle","getText","appManagerInstance","getInstance","_allInsightsApps","_wrapperId","getId","set","alignItems","justifyContent","height","width","direction","addStyleClass","addAggregation","get","_showMessageStrip","_showToolbar","_showTilesList","attachPanelNavigated","setValue","fetchInsightApps","insightsApps","setText","length","_createTableRows","oMessageStripVBox","addItem","text","_getWrapperFlexBox","titleStyle","oInvisibleTitleText","liveChange","oEvent","_onTilesSearch","ariaLabelledBy","titleContainer","toolbarContainer","items","event","sSearchQuery","getSource","getValue","toLowerCase","filteredTiles","filter","app","visualization","title","includes","_createTableWithContainer","table","columns","hAlign","invisibleDragDropText","addDragDropConfigTo","_handleTilesDrop","scrollContainer","vertical","horizontal","content","containerVBox","containerFlexBox","_this","_temp2","iDropItemIndex","oDragItem","getParameter","draggedControl","iDragItemIndex","getParent","indexOfItem","oDropItem","droppedControl","oDragItemPersConfig","data","oDropItemPersConfig","_temp","setBusy","moveConfigs","pageId","sourceSectionIndex","sectionIndex","sourceVisualizationIndex","visualizationIndex","targetSectionIndex","targetVisualizationIndex","Promise","resolve","moveVisualization","_this$appManagerInsta","_getTilePanel","refreshData","reject","removeAllItems","forEach","filteredTile","index","_createColumnListItem","insightsApp","id","existingControl","getElementById","destroy","columnListItem","type","addCell","src","aSupportedDisplayFormats","supportedDisplayFormats","convertSwitchContainer","isCount","isSmartBusinessTile","indexOf","Standard","StandardWide","wrapping","state","displayFormatHint","change","_onConvertTilePress","customTextOn","customTextOff","tooltip","deleteBtn","icon","press","_onDeleteApp","buttonsWrapper","subtitle","persConfig","_this2","updateConfigs","oVisualizationData","updateVisualizations","show","styleClass","QUESTION","actions","Action","CANCEL","emphasizedAction","onClose","action","_handleDeleteApp","_this3","_temp4","_temp3","removeVisualizations","sectionId","vizIds","_this3$appManagerInst","err","error","_wasThrown","_result","_getPanel"],"sources":["InsightsTilesSettingsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport Button from \"sap/m/Button\";\nimport Column from \"sap/m/Column\";\nimport ColumnListItem from \"sap/m/ColumnListItem\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport HBox from \"sap/m/HBox\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport ObjectIdentifier from \"sap/m/ObjectIdentifier\";\nimport ScrollContainer from \"sap/m/ScrollContainer\";\nimport SearchField from \"sap/m/SearchField\";\nimport Switch from \"sap/m/Switch\";\nimport Table from \"sap/m/Table\";\nimport Text from \"sap/m/Text\";\nimport Title from \"sap/m/Title\";\nimport VBox from \"sap/m/VBox\";\nimport Event from \"sap/ui/base/Event\";\nimport Control from \"sap/ui/core/Control\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport Icon from \"sap/ui/core/Icon\";\nimport { DropInfo$DropEvent } from \"sap/ui/core/dnd/DropInfo\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\nimport TilesPanel, { DisplayFormat } from \"./TilesPanel\";\nimport { ICustomVisualization, IPersConfig, ISectionAndVisualization } from \"./interface/AppsInterface\";\nimport { getInvisibleText } from \"./utils/Accessibility\";\nimport AppManager from \"./utils/AppManager\";\nimport { MYHOME_PAGE_ID, SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\nimport { focusDraggedItem } from \"./utils/DragDropUtils\";\n\ninterface IDragEvent {\n\tdraggedControl: ColumnListItem;\n\tdroppedControl: ColumnListItem;\n}\n\n/**\n *\n * Class for My Home Insights Tiles Settings Panel.\n *\n * @extends BaseSettingsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.InsightsTilesSettingsPanel\n */\nexport default class InsightsTilesSettingsPanel extends BaseSettingsPanel {\n\tprivate _wrapperId!: string;\n\tprivate _controlMap!: Map<string, Control | Element>;\n\tprivate _allInsightsApps!: ICustomVisualization[];\n\tprivate appManagerInstance!: AppManager;\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init() {\n\t\tsuper.init();\n\t\tthis._controlMap = new Map();\n\n\t\t//setup panel\n\t\tthis.setProperty(\"key\", SETTINGS_PANELS_KEYS.INSIGHTS_TILES);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"insightsTiles\"));\n\t\tthis.setProperty(\"icon\", \"sap-icon://manager-insight\");\n\n\t\t//Fetch Data\n\t\tthis.appManagerInstance = AppManager.getInstance();\n\t\tthis._allInsightsApps = [];\n\n\t\t//setup Container & content Aggregation\n\t\tthis._wrapperId = `${this.getId()}-tilesSettingsWrapper`;\n\t\tthis._controlMap.set(\n\t\t\tthis._wrapperId,\n\t\t\tnew FlexBox(this._wrapperId, {\n\t\t\t\talignItems: \"Start\",\n\t\t\t\tjustifyContent: \"Start\",\n\t\t\t\theight: \"100%\",\n\t\t\t\twidth: \"100%\",\n\t\t\t\tdirection: \"Column\"\n\t\t\t}).addStyleClass(\"flexContainerCards\")\n\t\t);\n\t\tthis.addAggregation(\"content\", this._controlMap.get(this._wrapperId) as FlexBox);\n\n\t\t//setup content for the settings panel\n\t\tthis._showMessageStrip();\n\t\tthis._showToolbar();\n\t\tthis._showTilesList();\n\n\t\t//fired every time on panel navigation\n\t\tthis.attachPanelNavigated(() => {\n\t\t\t(this._controlMap.get(`${this._wrapperId}--searchField`) as SearchField).setValue(\"\");\n\t\t\tvoid this.appManagerInstance.fetchInsightApps(true, this._i18nBundle.getText(\"insights\") as string).then((insightsApps) => {\n\t\t\t\tthis._allInsightsApps = insightsApps;\n\t\t\t\t(this._controlMap.get(`${this._wrapperId}--title`) as Title).setText(\n\t\t\t\t\t`${this._i18nBundle.getText(\"insightsTilesTitle\")} (${this._allInsightsApps.length})`\n\t\t\t\t);\n\t\t\t\tthis._createTableRows(this._allInsightsApps);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Add the Message Strip to the wrapper FlexBox.\n\t *\n\t * @private\n\t */\n\n\tprivate _showMessageStrip() {\n\t\tconst oMessageStripVBox = new VBox(`${this._wrapperId}--msgStripContainer`, {\n\t\t\twidth: \"calc(100% - 2rem)\"\n\t\t}).addStyleClass(\"sapUiSmallMarginTop sapUiSmallMarginBegin\");\n\t\toMessageStripVBox.addItem(\n\t\t\tnew Text(`${this._wrapperId}--msgStripText`, {\n\t\t\t\ttext: this._i18nBundle.getText(\"insightAppsTabText\")\n\t\t\t})\n\t\t);\n\t\tthis._getWrapperFlexBox().addItem(oMessageStripVBox);\n\t}\n\n\t/**\n\t * Add the Header ToolBar to the wrapper FlexBox.\n\t *\n\t * @private\n\t */\n\tprivate _showToolbar() {\n\t\tthis._controlMap.set(\n\t\t\t`${this._wrapperId}--title`,\n\t\t\tnew Title(`${this._wrapperId}--title`, {\n\t\t\t\ttext: `${this._i18nBundle.getText(\"insightsTilesTitle\")} (${this._allInsightsApps.length})`,\n\t\t\t\ttitleStyle: \"H5\",\n\t\t\t\twidth: \"100%\"\n\t\t\t})\n\t\t);\n\t\tconst oInvisibleTitleText = getInvisibleText(`${this.getId()}--TileTitleText`, this._i18nBundle.getText(\"insightsTiles\"));\n\t\tthis._controlMap.set(\n\t\t\t`${this._wrapperId}--searchField`,\n\t\t\tnew SearchField(`${this._wrapperId}--pagesListSearch`, {\n\t\t\t\tliveChange: (oEvent) => this._onTilesSearch(oEvent),\n\t\t\t\twidth: \"100%\",\n\t\t\t\tariaLabelledBy: [oInvisibleTitleText.getId(), this._wrapperId + \"--msgStripText\", this._wrapperId + \"--title\"]\n\t\t\t}).addStyleClass(\"sapUiTinyMarginTop\")\n\t\t);\n\n\t\tconst titleContainer = new HBox(`${this._wrapperId}--titleContainer`, {\n\t\t\talignItems: \"Center\",\n\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\twidth: \"100%\"\n\t\t});\n\t\ttitleContainer.addItem(this._controlMap.get(`${this._wrapperId}--title`) as Title);\n\t\ttitleContainer.addItem(oInvisibleTitleText);\n\t\tconst toolbarContainer = new VBox(`${this._wrapperId}--toolbarContainer`, {\n\t\t\twidth: \"calc(100% - 2rem)\",\n\t\t\titems: [titleContainer, this._controlMap.get(`${this._wrapperId}--searchField`) as SearchField]\n\t\t}).addStyleClass(\"sapUiSmallMarginTop sapUiSmallMarginBegin\");\n\t\tthis._getWrapperFlexBox().addItem(toolbarContainer);\n\t}\n\n\t/**\n\t * Handles Search Field change\n\t * @private\n\t */\n\tprivate _onTilesSearch(event: Event) {\n\t\tconst sSearchQuery = event.getSource<SearchField>().getValue().toLowerCase();\n\t\tconst filteredTiles = this._allInsightsApps.filter((app) => app.visualization?.title?.toLowerCase().includes(sSearchQuery));\n\t\tthis._createTableRows(filteredTiles);\n\t}\n\n\t/**\n\t * Adds Tiles List Table to Wrapper FlexBox\n\t * @private\n\t */\n\tprivate _showTilesList() {\n\t\tthis._createTableWithContainer();\n\t\tthis._createTableRows(this._allInsightsApps);\n\t}\n\n\t/**\n\t * Creates Table to Render Tiles List\n\t * @private\n\t */\n\tprivate _createTableWithContainer() {\n\t\tconst table = new Table(`${this._wrapperId}-table`, {\n\t\t\tcolumns: [\n\t\t\t\tnew Column(`${this._wrapperId}-table-dndIcon`, {\n\t\t\t\t\thAlign: \"Center\",\n\t\t\t\t\twidth: \"6%\"\n\t\t\t\t}),\n\t\t\t\tnew Column(`${this._wrapperId}-table-title`, {\n\t\t\t\t\twidth: \"94%\"\n\t\t\t\t})\n\t\t\t]\n\t\t}).addStyleClass(\"sapContrastPlus\");\n\t\tconst invisibleDragDropText = getInvisibleText(`${this._wrapperId}-dndAria`, this._i18nBundle.getText(\"keyPressAriaText\"));\n\t\tthis.addDragDropConfigTo(table, (event) => void this._handleTilesDrop(event));\n\t\tthis._controlMap.set(`${this._wrapperId}-table`, table);\n\t\tconst scrollContainer = new ScrollContainer(`${this._wrapperId}-scrollContainer`, {\n\t\t\tvertical: true,\n\t\t\thorizontal: false,\n\t\t\theight: \"100%\",\n\t\t\twidth: \"100%\",\n\t\t\tcontent: [this._controlMap.get(`${this._wrapperId}-table`) as Table]\n\t\t});\n\t\tconst containerVBox = new VBox(`${this._wrapperId}-containerVBox`, {\n\t\t\theight: \"100%\",\n\t\t\twidth: \"100%\",\n\t\t\tjustifyContent: \"Start\",\n\t\t\tdirection: \"Column\",\n\t\t\titems: [invisibleDragDropText, scrollContainer]\n\t\t});\n\t\tconst containerFlexBox = new FlexBox(`${this._wrapperId}-containerFlexBox`, {\n\t\t\talignItems: \"Start\",\n\t\t\tjustifyContent: \"Start\",\n\t\t\theight: \"100%\",\n\t\t\twidth: \"calc(100% - 2rem)\",\n\t\t\tdirection: \"Row\",\n\t\t\titems: [containerVBox]\n\t\t}).addStyleClass(\"sapUiSmallMarginBegin sapUiSmallMarginTop flexContainerCards\");\n\n\t\tthis._getWrapperFlexBox().addItem(containerFlexBox);\n\t}\n\n\t/**\n\t * Handles Drag Drop of Tiles\n\t * @private\n\t */\n\tprivate async _handleTilesDrop(oEvent: DropInfo$DropEvent | IDragEvent) {\n\t\tconst oDragItem = ((oEvent as DropInfo$DropEvent).getParameter?.(\"draggedControl\") ||\n\t\t\t\t(oEvent as IDragEvent).draggedControl) as ColumnListItem,\n\t\t\tiDragItemIndex = (oDragItem.getParent() as Table)?.indexOfItem(oDragItem),\n\t\t\toDropItem = ((oEvent as DropInfo$DropEvent).getParameter?.(\"droppedControl\") ||\n\t\t\t\t(oEvent as IDragEvent).droppedControl) as ColumnListItem,\n\t\t\tiDropItemIndex = (oDragItem.getParent() as Table)?.indexOfItem(oDropItem),\n\t\t\toDragItemPersConfig = oDragItem.data(\"persConfig\") as IPersConfig,\n\t\t\toDropItemPersConfig = oDropItem.data(\"persConfig\") as IPersConfig,\n\t\t\ttable = this._controlMap.get(`${this._wrapperId}-table`) as Table;\n\t\tif (iDragItemIndex !== iDropItemIndex) {\n\t\t\tthis._getWrapperFlexBox().setBusy(true);\n\t\t\tconst moveConfigs = {\n\t\t\t\tpageId: MYHOME_PAGE_ID,\n\t\t\t\tsourceSectionIndex: oDragItemPersConfig.sectionIndex as number,\n\t\t\t\tsourceVisualizationIndex: oDragItemPersConfig.visualizationIndex as number,\n\t\t\t\ttargetSectionIndex: oDropItemPersConfig.sectionIndex as number,\n\t\t\t\ttargetVisualizationIndex: oDropItemPersConfig.visualizationIndex as number\n\t\t\t};\n\t\t\tawait this.appManagerInstance.moveVisualization(moveConfigs);\n\t\t\tthis._allInsightsApps = await this.appManagerInstance.fetchInsightApps(true, this._i18nBundle.getText(\"insights\") as string);\n\t\t\tthis._createTableRows(this._allInsightsApps);\n\t\t\tawait this._getTilePanel().refreshData();\n\t\t\tthis._getWrapperFlexBox().setBusy(false);\n\t\t}\n\t\tfocusDraggedItem(table, iDropItemIndex);\n\t}\n\n\t/**\n\t * Create Table Rows\n\t * @private\n\t */\n\tprivate _createTableRows(insightsApps: ICustomVisualization[]) {\n\t\tconst table = this._controlMap.get(`${this._wrapperId}-table`) as Table;\n\t\ttable.removeAllItems();\n\t\tlet filteredTiles = insightsApps;\n\t\tconst sSearchQuery = (this._controlMap.get(`${this._wrapperId}--searchField`) as SearchField).getValue();\n\t\tif (sSearchQuery) {\n\t\t\tfilteredTiles = this._allInsightsApps.filter((app) => app.visualization?.title?.toLowerCase().includes(sSearchQuery));\n\t\t}\n\t\tfilteredTiles.forEach((filteredTile, index) => {\n\t\t\ttable.addItem(this._createColumnListItem(filteredTile, index));\n\t\t});\n\t}\n\n\t/**\n\t * Create ColumnListItem for each Insights App\n\t * @private\n\t */\n\tprivate _createColumnListItem(insightsApp: ICustomVisualization, index: number): ColumnListItem {\n\t\tconst id = `insightsTiles-${index}-listItem`;\n\t\tconst existingControl = UI5Element.getElementById(id);\n\t\tif (existingControl) {\n\t\t\texistingControl.destroy();\n\t\t}\n\t\t// Create Column List Item\n\t\tconst columnListItem = new ColumnListItem({\n\t\t\tid,\n\t\t\ttype: \"Inactive\",\n\t\t\tariaLabelledBy: [id, `${this._wrapperId}-dndAria`]\n\t\t}).addStyleClass(\"insightsListItem insightsListMargin manageSectionsTable\");\n\n\t\t// Add first cell as Drag & Drop Icon\n\t\tcolumnListItem.addCell(\n\t\t\tnew HBox(`${id}-DndHBox`, {\n\t\t\t\titems: [\n\t\t\t\t\tnew Icon(`${id}-DndIcon`, {\n\t\t\t\t\t\tsrc: \"sap-icon://BusinessSuiteInAppSymbols/icon-grip\"\n\t\t\t\t\t}).addStyleClass(\"tilesDndIcon\")\n\t\t\t\t]\n\t\t\t})\n\t\t);\n\n\t\t//Create Convert Switch\n\t\tconst aSupportedDisplayFormats = insightsApp.visualization?.supportedDisplayFormats || \"\";\n\t\tlet convertSwitchContainer;\n\t\t// if it is not static tile and standard/standardWide display format is supported, display convert switch\n\t\tif (\n\t\t\t(insightsApp.isCount || insightsApp.isSmartBusinessTile) &&\n\t\t\taSupportedDisplayFormats.length > 1 &&\n\t\t\taSupportedDisplayFormats.indexOf(DisplayFormat.Standard) > -1 &&\n\t\t\taSupportedDisplayFormats.indexOf(DisplayFormat.StandardWide) > -1\n\t\t) {\n\t\t\tconvertSwitchContainer = new HBox({\n\t\t\t\tid: `${id}-convertSwitchContainer`,\n\t\t\t\talignItems: \"Center\",\n\t\t\t\titems: [\n\t\t\t\t\tnew Text({\n\t\t\t\t\t\tid: `${id}-switchAppSizeLabel`,\n\t\t\t\t\t\ttext: this._i18nBundle.getText(\"wide\"),\n\t\t\t\t\t\twrapping: false\n\t\t\t\t\t}),\n\t\t\t\t\tnew Switch({\n\t\t\t\t\t\tid: `${id}-convertSwitch`,\n\t\t\t\t\t\t// ariaLabelledBy=\"switchAppSizeLabel\"\n\t\t\t\t\t\tstate: insightsApp.visualization?.displayFormatHint !== DisplayFormat.Standard,\n\t\t\t\t\t\tchange: () => void this._onConvertTilePress(insightsApp),\n\t\t\t\t\t\tcustomTextOn: \" \",\n\t\t\t\t\t\tcustomTextOff: \" \",\n\t\t\t\t\t\ttooltip:\n\t\t\t\t\t\t\tinsightsApp.visualization?.displayFormatHint === DisplayFormat.Standard\n\t\t\t\t\t\t\t\t? this._i18nBundle.getText(\"ConvertToWideTile\")\n\t\t\t\t\t\t\t\t: this._i18nBundle.getText(\"ConvertToTile\")\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t});\n\t\t}\n\n\t\tconst deleteBtn = new Button({\n\t\t\tid: `${id}-deleteAppBtn`,\n\t\t\ttype: \"Transparent\",\n\t\t\ticon: \"sap-icon://decline\",\n\t\t\tpress: () => this._onDeleteApp(insightsApp),\n\t\t\ttooltip: this._i18nBundle.getText(\"removeFromInsights\")\n\t\t});\n\n\t\tconst buttonsWrapper = new HBox({\n\t\t\tid: `${id}-buttonsWrapper`,\n\t\t\talignItems: \"Center\"\n\t\t}).addStyleClass(\"sapUiSmallMarginEnd\");\n\n\t\tif (convertSwitchContainer) {\n\t\t\tbuttonsWrapper.addItem(convertSwitchContainer);\n\t\t}\n\t\tbuttonsWrapper.addItem(deleteBtn);\n\n\t\tcolumnListItem.addCell(\n\t\t\tnew HBox({\n\t\t\t\tid: `${id}-cell`,\n\t\t\t\talignItems: \"Center\",\n\t\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\t\titems: [\n\t\t\t\t\tnew ObjectIdentifier({\n\t\t\t\t\t\tid: `${id}-cellItem`,\n\t\t\t\t\t\ttitle: insightsApp.visualization?.title as string,\n\t\t\t\t\t\ttext: insightsApp.visualization?.subtitle as string,\n\t\t\t\t\t\ttooltip: insightsApp.visualization?.title as string\n\t\t\t\t\t}).addStyleClass(\"objectIdentifierMargin\"),\n\t\t\t\t\tbuttonsWrapper\n\t\t\t\t]\n\t\t\t})\n\t\t);\n\t\tcolumnListItem.data(\"persConfig\", insightsApp.persConfig);\n\n\t\treturn columnListItem;\n\t}\n\n\t/**\n\t * Handles Convert Tile\n\t * @private\n\t */\n\tprivate async _onConvertTilePress(app: ICustomVisualization) {\n\t\tconst displayFormatHint = app.visualization?.displayFormatHint,\n\t\t\tupdateConfigs = {\n\t\t\t\tpageId: MYHOME_PAGE_ID,\n\t\t\t\tsourceSectionIndex: app.persConfig?.sectionIndex as number,\n\t\t\t\tsourceVisualizationIndex: app.persConfig?.visualizationIndex as number,\n\t\t\t\toVisualizationData: {\n\t\t\t\t\tdisplayFormatHint: displayFormatHint === DisplayFormat.Standard ? DisplayFormat.StandardWide : DisplayFormat.Standard\n\t\t\t\t}\n\t\t\t};\n\n\t\tthis._getWrapperFlexBox().setBusy(true);\n\t\tawait this.appManagerInstance.updateVisualizations(updateConfigs);\n\t\tawait this._getTilePanel().refreshData();\n\t\tif (app.visualization) {\n\t\t\tapp.visualization.displayFormatHint = updateConfigs.oVisualizationData.displayFormatHint;\n\t\t}\n\t\tthis._getWrapperFlexBox().setBusy(false);\n\t}\n\n\t/**\n\t * Deletes Insights App\n\t * @private\n\t */\n\tprivate _onDeleteApp(app: ICustomVisualization) {\n\t\tMessageBox.show(this._i18nBundle.getText(\"remove_tile_confirmation_title\", [app.title]) as string, {\n\t\t\tid: \"removeTileConfirmation\",\n\t\t\tstyleClass: \"msgBoxWidth\",\n\t\t\ticon: MessageBox.Icon.QUESTION,\n\t\t\ttitle: this._i18nBundle.getText(\"remove\") as string,\n\t\t\tactions: [this._i18nBundle.getText(\"remove\") as string, MessageBox.Action.CANCEL],\n\t\t\temphasizedAction: this._i18nBundle.getText(\"remove\"),\n\t\t\tonClose: (action: string) => this._handleDeleteApp(action, app)\n\t\t});\n\t}\n\n\t/**\n\t * Handle Delete App Confirmation Decision\n\t * @private\n\t */\n\tprivate async _handleDeleteApp(action: string, app: ISectionAndVisualization) {\n\t\tif (action === this._i18nBundle.getText(\"remove\")) {\n\t\t\tthis._getWrapperFlexBox().setBusy(true);\n\t\t\ttry {\n\t\t\t\tawait this.appManagerInstance.removeVisualizations({\n\t\t\t\t\tsectionId: app.persConfig?.sectionId as string,\n\t\t\t\t\tvizIds: [app.visualization?.id as string]\n\t\t\t\t});\n\t\t\t\tMessageToast.show(this._i18nBundle.getText(\"appRemovedInsights\") as string);\n\t\t\t\tthis._allInsightsApps = await this.appManagerInstance.fetchInsightApps(\n\t\t\t\t\ttrue,\n\t\t\t\t\tthis._i18nBundle.getText(\"insights\") as string\n\t\t\t\t);\n\t\t\t\t(this._controlMap.get(`${this._wrapperId}--title`) as Title).setText(\n\t\t\t\t\t`${this._i18nBundle.getText(\"insightsTilesTitle\")} (${this._allInsightsApps.length})`\n\t\t\t\t);\n\t\t\t\tthis._createTableRows(this._allInsightsApps);\n\t\t\t\tawait this._getTilePanel().refreshData();\n\t\t\t} catch (err) {\n\t\t\t\tLog.error(err as string);\n\t\t\t\tMessageToast.show(this._i18nBundle.getText(\"unableToRemoveInsightsApp\") as string);\n\t\t\t} finally {\n\t\t\t\tthis._getWrapperFlexBox().setBusy(false);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns wrapper FlexBox\n\t * @private\n\t */\n\tprivate _getWrapperFlexBox(): FlexBox {\n\t\treturn this._controlMap.get(this._wrapperId) as FlexBox;\n\t}\n\n\t/**\n\t * Returns Tiles Panel\n\t * @private\n\t */\n\tprivate _getTilePanel(): TilesPanel {\n\t\treturn this._getPanel() as TilesPanel;\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":151,"column":0},"map":{"version":3,"names":["sap","ui","define","Column","ColumnListItem","HBox","ObjectIdentifier","Table","ToggleButton","CustomData","Element","Icon","__BaseSettingsPanel","___flexibility_Layoutflexibility","___utils_Constants","___utils_DataFormatUtils","___utils_DragDropUtils","_interopRequireDefault","obj","__esModule","default","BaseSettingsPanel","CHANGE_TYPES","KEYUSER_SETTINGS_PANELS_KEYS","recycleId","focusDraggedItem","KeyUserLayoutSettingsPanel","extend","metadata","library","init","_init","BaseSettingsPanel.prototype.init.call","this","setProperty","LAYOUT","_i18nBundle","getText","addAggregation","getContent","attachPanelNavigated","layout","_getPanel","resetSections","loadSections","_getContent","layoutTable","getId","width","items","columns","addStyleClass","addDragDropConfigTo","event","onDropLayoutSettings","_loadSections","_this","Promise","resolve","_calculateSectionsState","then","orderedSections","getSections","keyUserSettingsDialog","getParent","removeAllItems","forEach","section","index","addItem","type","hasDetailsPage","completeId","cells","alignItems","src","justifyContent","title","text","tooltip","visible","icon","enabled","blocked","press","createShowHideChangeFile","pressed","ariaLabelledBy","navigateToPage","getDetailsPage","customData","key","value","e","reject","_onDropLayoutSettings","wrapper","wrapperId","dragItem","getParameter","draggedControl","dragItemIndex","indexOfItem","dropItem","droppedControl","dropItemIndex","sectionOrder","dragObject","data","dropObject","actualDragItemIndex","_getActualIndex","actualDropItemIndex","_rearrangeLayoutElements","splice","setSections","addKeyUserChanges","selectorControl","changeSpecificData","changeType","MOVE","content","movedElements","id","sourceIndex","targetIndex","source","aggregation","target","_allLayoutElements","getItems","isLayoutExpanded","getProperty","expandedElementConfig","_getCurrentExpandedElement","some","element","targetContainer","findIndex","container","_createShowHideChangeFile","oControlEvent","isCheckBoxSelected","keyUserChanges","getKeyUserChanges","UNHIDE","HIDE","oExistingChange","find","oChange","getElementById"],"sources":["KeyUserLayoutSettingsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Column from \"sap/m/Column\";\nimport ColumnListItem from \"sap/m/ColumnListItem\";\nimport HBox from \"sap/m/HBox\";\nimport ObjectIdentifier from \"sap/m/ObjectIdentifier\";\nimport Table from \"sap/m/Table\";\nimport ToggleButton, { ToggleButton$PressEvent } from \"sap/m/ToggleButton\";\nimport Control from \"sap/ui/core/Control\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport { DropInfo$DropEvent } from \"sap/ui/core/dnd/DropInfo\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport Element from \"sap/ui/core/Element\";\nimport Icon from \"sap/ui/core/Icon\";\nimport BaseContainer from \"./BaseContainer\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\nimport { CHANGE_TYPES } from \"./flexibility/Layout.flexibility\";\nimport { IDragEvent, IElement } from \"./interface/LayoutInterface\";\nimport KeyUserSettingsDialog from \"./KeyUserSettingsDialog\";\nimport Layout from \"./Layout\";\nimport { KEYUSER_SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\nimport { recycleId } from \"./utils/DataFormatUtils\";\nimport { focusDraggedItem } from \"./utils/DragDropUtils\";\n\n/**\n *\n * Class for Layout Settings Panel for KeyUser Settings Dialog.\n *\n * @extends BaseSettingsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.KeyUserLayoutSettingsPanel\n */\nexport default class KeyUserLayoutSettingsPanel extends BaseSettingsPanel {\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\"\n\t};\n\n\tprivate layoutTable!: Table;\n\tprivate orderedSections!: IElement[];\n\tprivate _allLayoutElements!: BaseContainer[];\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\t//setup panel\n\t\tthis.setProperty(\"key\", KEYUSER_SETTINGS_PANELS_KEYS.LAYOUT);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"editModeTitle\"));\n\n\t\t// //setup layout content\n\t\tthis.addAggregation(\"content\", this.getContent());\n\n\t\t//fired every time on panel navigation\n\t\tthis.attachPanelNavigated(() => {\n\t\t\tconst layout = this._getPanel() as Layout;\n\t\t\tlayout.resetSections();\n\t\t\tvoid this.loadSections();\n\t\t});\n\t}\n\n\t/**\n\t * Returns the content for the Layout Settings Panel.\n\t *\n\t * @private\n\t * @returns {VBox} The control containing the Layout Settings Panel content.\n\t */\n\tprivate getContent(): Table {\n\t\tif (!this.layoutTable) {\n\t\t\tthis.layoutTable = new Table(this.getId() + \"--idLayoutSettingsTable\", {\n\t\t\t\twidth: \"calc(100% - 2rem)\",\n\t\t\t\titems: [],\n\t\t\t\tcolumns: [\n\t\t\t\t\tnew Column(this.getId() + \"--idSectionTitleColumn\", {\n\t\t\t\t\t\twidth: \"100%\"\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t}).addStyleClass(\"layoutSettingsTable sapContrastPlus sapUiSmallMarginBegin\");\n\t\t\tthis.addDragDropConfigTo(this.layoutTable, (event) => this.onDropLayoutSettings(event));\n\t\t}\n\t\treturn this.layoutTable;\n\t}\n\n\t/**\n\t * Method to load the sections\n\t *\n\t * @private\n\t */\n\tprivate async loadSections(): Promise<void> {\n\t\tconst layout = this._getPanel() as Layout;\n\t\tawait layout._calculateSectionsState();\n\t\tthis.orderedSections = layout.getSections() || [];\n\n\t\tconst keyUserSettingsDialog = this.getParent() as KeyUserSettingsDialog;\n\n\t\tthis.layoutTable.removeAllItems();\n\t\tthis.orderedSections.forEach((section: IElement, index: number) => {\n\t\t\tthis.layoutTable\n\t\t\t\t.addItem(\n\t\t\t\t\tnew ColumnListItem(recycleId(`${this.getId()}--layoutSettingsColumnListItem--${index}`), {\n\t\t\t\t\t\ttype: (this.getParent() as KeyUserSettingsDialog)?.hasDetailsPage?.(section.completeId) ? \"Navigation\" : \"Inactive\",\n\t\t\t\t\t\tcells: [\n\t\t\t\t\t\t\tnew HBox(recycleId(`${this.getId()}--layoutColumnListHBox--${index}`), {\n\t\t\t\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\tnew Icon(recycleId(`${this.getId()}--layoutColumnListItemIcon--${index}`), {\n\t\t\t\t\t\t\t\t\t\tsrc: \"sap-icon://vertical-grip\"\n\t\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiSmallMarginEnd\"),\n\t\t\t\t\t\t\t\t\tnew HBox(recycleId(`${this.getId()}--layoutColumnListItemHBox--${index}`), {\n\t\t\t\t\t\t\t\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\t\t\t\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\t\t\tnew ObjectIdentifier(recycleId(`${this.getId()}--layoutColumnListObjectIdentifier--${index}`), {\n\t\t\t\t\t\t\t\t\t\t\t\ttitle: section.title,\n\t\t\t\t\t\t\t\t\t\t\t\ttext: section.text,\n\t\t\t\t\t\t\t\t\t\t\t\ttooltip: section.title\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\tnew ToggleButton(recycleId(`${this.getId()}--layoutColumnListToggleButton--${index}`), {\n\t\t\t\t\t\t\t\t\t\t\t\ttooltip: section.visible\n\t\t\t\t\t\t\t\t\t\t\t\t\t? this._i18nBundle.getText(\"hideBtn\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t: this._i18nBundle.getText(\"showBtn\"),\n\t\t\t\t\t\t\t\t\t\t\t\ticon: \"sap-icon://show\",\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"Emphasized\",\n\t\t\t\t\t\t\t\t\t\t\t\tenabled: !section.blocked,\n\t\t\t\t\t\t\t\t\t\t\t\tpress: (event) => this.createShowHideChangeFile(event, section),\n\t\t\t\t\t\t\t\t\t\t\t\tpressed: !section.visible,\n\t\t\t\t\t\t\t\t\t\t\t\tariaLabelledBy: [\"selectLabel\"]\n\t\t\t\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginEnd sapUiTinyMarginTop\")\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginBegin\")\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\twidth: \"100%\"\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t],\n\t\t\t\t\t\tpress: () => keyUserSettingsDialog?.navigateToPage?.(keyUserSettingsDialog.getDetailsPage(section.completeId)),\n\t\t\t\t\t\tcustomData: new CustomData(recycleId(`${this.getId()}--custom-data--${index}`), {\n\t\t\t\t\t\t\tkey: \"sectionObject\",\n\t\t\t\t\t\t\tvalue: section\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.addStyleClass(\"insightsListItem insightsListMargin\");\n\t\t});\n\t}\n\n\t/**\n\t * Function to execute drag and drop among sections\n\t *\n\t * @private\n\t */\n\tprivate onDropLayoutSettings(event: DropInfo$DropEvent | IDragEvent) {\n\t\tconst wrapper = this._getPanel() as Layout | Control;\n\t\tconst wrapperId = wrapper.getId();\n\t\tconst dragItem = ((event as DropInfo$DropEvent).getParameter?.(\"draggedControl\") ||\n\t\t\t(event as IDragEvent).draggedControl) as ColumnListItem;\n\t\tconst dragItemIndex = (dragItem.getParent() as Table)?.indexOfItem(dragItem);\n\t\tconst dropItem = ((event as DropInfo$DropEvent).getParameter?.(\"droppedControl\") ||\n\t\t\t(event as IDragEvent).droppedControl) as ColumnListItem;\n\t\tconst dropItemIndex = (dragItem.getParent() as Table)?.indexOfItem(dropItem);\n\n\t\tif (dragItemIndex !== dropItemIndex) {\n\t\t\tconst sectionOrder = this.orderedSections;\n\t\t\tconst dragObject = dragItem.data(\"sectionObject\") as IElement;\n\t\t\tconst dropObject = dropItem.data(\"sectionObject\") as IElement;\n\n\t\t\tconst actualDragItemIndex = this._getActualIndex(dragObject.completeId);\n\t\t\tconst actualDropItemIndex = this._getActualIndex(dropObject.completeId);\n\t\t\tthis._rearrangeLayoutElements(actualDragItemIndex, actualDropItemIndex);\n\n\t\t\tsectionOrder.splice(dragItemIndex, 1);\n\t\t\tsectionOrder.splice(dropItemIndex, 0, dragObject);\n\t\t\t(wrapper as Layout).setSections(sectionOrder);\n\n\t\t\tthis.addKeyUserChanges({\n\t\t\t\tselectorControl: wrapper as Control,\n\t\t\t\tchangeSpecificData: {\n\t\t\t\t\tchangeType: CHANGE_TYPES.MOVE,\n\t\t\t\t\tcontent: {\n\t\t\t\t\t\tmovedElements: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: dragObject.completeId,\n\t\t\t\t\t\t\t\tsourceIndex: actualDragItemIndex,\n\t\t\t\t\t\t\t\ttargetIndex: actualDropItemIndex\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\tsource: {\n\t\t\t\t\t\t\tid: wrapperId,\n\t\t\t\t\t\t\taggregation: \"items\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\tid: wrapperId,\n\t\t\t\t\t\t\taggregation: \"items\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvoid this.loadSections();\n\t\t}\n\t\tfocusDraggedItem(this.layoutTable, dropItemIndex);\n\t}\n\n\t/**\n\t * Retrieves the actual index of a layout element by its ID.\n\t *\n\t * @private\n\t * @param {string} id - The ID of the layout element to find.\n\t * @returns {number} The index of the layout element.\n\t */\n\tprivate _getActualIndex(id: string): number {\n\t\tconst layout = this._getPanel() as Layout;\n\t\tthis._allLayoutElements = this._allLayoutElements || [...layout.getItems()];\n\t\tconst isLayoutExpanded = layout.getProperty(\"expanded\") as boolean;\n\t\tconst expandedElementConfig = layout._getCurrentExpandedElement();\n\n\t\tif (isLayoutExpanded && expandedElementConfig) {\n\t\t\t// add the expanded element if it isn't already in the list\n\t\t\tif (!this._allLayoutElements.some((element) => element.getId() === expandedElementConfig.targetContainer.getId())) {\n\t\t\t\tthis._allLayoutElements.splice(\n\t\t\t\t\tlayout.indexOfItem(expandedElementConfig.targetContainer),\n\t\t\t\t\t0,\n\t\t\t\t\texpandedElementConfig.targetContainer\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn this._allLayoutElements.findIndex((element) => element.getId() === id);\n\t}\n\n\t/**\n\t * Rearranges the layout elements by moving an element from the source index to the target index.\n\t *\n\t * @private\n\t * @param {number} sourceIndex - The index of the element to move.\n\t * @param {number} targetIndex - The index to move the element to.\n\t */\n\tprivate _rearrangeLayoutElements(sourceIndex: number, targetIndex: number): void {\n\t\tconst container = this._allLayoutElements.splice(sourceIndex, 1)[0];\n\t\tthis._allLayoutElements.splice(targetIndex, 0, container);\n\t}\n\n\t/**\n\t * Method to set visibility of the container sections\n\t * Toggle button pressed event handler\n\t *\n\t * @private\n\t */\n\tprivate createShowHideChangeFile(oControlEvent: ToggleButton$PressEvent, section: IElement): void {\n\t\tconst isCheckBoxSelected: boolean = !oControlEvent.getParameter(\"pressed\");\n\t\tconst keyUserChanges = this.getKeyUserChanges();\n\t\tconst changeType = isCheckBoxSelected ? CHANGE_TYPES.UNHIDE : CHANGE_TYPES.HIDE;\n\t\tconst oExistingChange = keyUserChanges.find((oChange) => {\n\t\t\treturn oChange.selectorControl.getId() === section.completeId;\n\t\t});\n\n\t\t//Check if the change already exists\n\t\tif (oExistingChange) {\n\t\t\toExistingChange.changeSpecificData.changeType = changeType;\n\t\t} else {\n\t\t\tthis.addKeyUserChanges({\n\t\t\t\tselectorControl: Element.getElementById(section.completeId) as Control,\n\t\t\t\tchangeSpecificData: {\n\t\t\t\t\tchangeType\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":156,"column":0},"map":{"version":3,"names":["sap","ui","define","List","Page","StandardListItem","VBox","Element","EventBus","__BaseSettingsPanel","___flexibility_Layoutflexibility","__KeyUserNewsSettingsPanel","__KeyUserPagesSettingsPanel","__NewsPanel","__PagePanel","___utils_Constants","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","BaseSettingsPanel","CHANGE_TYPES","KeyUserNewsSettingsPanel","KeyUserPagesSettingsPanel","NewsPanel","PagePanel","KEYUSER_SETTINGS_PANELS_KEYS","KeyUserNewsPagesSettingsPanel","extend","metadata","library","init","_init","BaseSettingsPanel.prototype.init.call","this","setProperty","NEWS_PAGES","_i18nBundle","getText","_eventBus","getInstance","subscribe","channelId","eventId","data","changes","addNewsPagesChanges","addAggregation","getContent","attachPanelNavigated","loadSettings","_getContent","wrapperVBox","getId","_loadSettings","associatedPanelId","getPanel","associatedPanel","getElementById","container","getParent","forEach","panel","newsPanel","addItem","getNewsSettingsList","pagePanel","getPageSettingsList","newsVisibilityChangeHandler","_newsVisibilityChangeHandler","oEvent","newsVisibilityCheckBox","getParameter","newsFeedVisibility","getSelected","_getPanel","newsPageContainer","layout","keyUserChanges","getKeyUserChanges","existingChange","find","change","changeSpecificData","changeType","NEWS_FEED_VISIBILITY","newsSettingsPanel","removeUrlMesageStrip","addKeyUserChanges","selectorControl","content","isNewsFeedVisible","_getNewsSettingsList","newsSettingsList","selectionChange","bind","mode","standardListItem","selected","getVisible","press","navigateToNewsSettingsPage","type","title","setAssociation","undefined","setSelected","Boolean","getProperty","_getPageSettingsList","pageSettingsList","items","openPageSettingsDialog","onNavBack","_onNavBack","navContainer","back","_navigateToNewsSettingsPage","getNavContainer","newsSettingsPage","showHeader","getAggregation","backgroundDesign","showNavButton","navButtonPress","addPage","to","firePanelNavigated","_openPageSettingsDialog","pageSettingsPanel","pageSettingsDialog","open","_addNewsPagesChanges","isNewsChangesValid","_isNewsChangesValid","_this","Promise","resolve","isValidChanges","onSaveClearChanges","_onSaveClearChanges","clearKeyUserChanges","onCancelClearKeyUserChanges","_onCancelClearKeyUserChanges","clearNewsPanelChanges"],"sources":["KeyUserNewsPagesSettingsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Dialog from \"sap/m/Dialog\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport List from \"sap/m/List\";\nimport { ListBase$SelectionChangeEvent } from \"sap/m/ListBase\";\nimport NavContainer from \"sap/m/NavContainer\";\nimport Page from \"sap/m/Page\";\nimport StandardListItem from \"sap/m/StandardListItem\";\nimport VBox from \"sap/m/VBox\";\nimport Control from \"sap/ui/core/Control\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport Element from \"sap/ui/core/Element\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport BaseContainer from \"./BaseContainer\";\nimport BaseLayout from \"./BaseLayout\";\nimport BasePanel from \"./BasePanel\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\nimport { CHANGE_TYPES } from \"./flexibility/Layout.flexibility\";\nimport { IKeyUserChange, INewsFeedVisibiliyChange } from \"./interface/KeyUserInterface\";\nimport KeyUserNewsSettingsPanel from \"./KeyUserNewsSettingsPanel\";\nimport KeyUserPagesSettingsPanel from \"./KeyUserPagesSettingsPanel\";\nimport KeyUserSettingsDialog from \"./KeyUserSettingsDialog\";\nimport NewsAndPagesContainer from \"./NewsAndPagesContainer\";\nimport NewsPanel from \"./NewsPanel\";\nimport PagePanel from \"./PagePanel\";\nimport { KEYUSER_SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\n\n/**\n *\n * Class for News & Pages Settings Panel for KeyUser Settings Dialog.\n *\n * @extends BaseSettingsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.KeyUserNewsPagesSettingsPanel\n */\nexport default class KeyUserNewsPagesSettingsPanel extends BaseSettingsPanel {\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\"\n\t};\n\tprivate wrapperVBox!: VBox;\n\tprivate newsPanel!: NewsPanel;\n\tprivate newsSettingsPanel!: KeyUserNewsSettingsPanel;\n\tprivate newsSettingsList!: List;\n\tprivate newsSettingsPage!: Page;\n\tprivate pagePanel!: PagePanel;\n\tprivate pageSettingsPanel!: KeyUserPagesSettingsPanel;\n\tprivate pageSettingsList!: List;\n\tprivate pageSettingsDialog!: Dialog;\n\tprivate _eventBus!: EventBus;\n\tprivate newsFeedVisibility!: boolean | undefined;\n\tprivate standardListItem!: StandardListItem;\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\t//setup panel\n\t\tthis.setProperty(\"key\", KEYUSER_SETTINGS_PANELS_KEYS.NEWS_PAGES);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"editNewsPages\"));\n\n\t\t// Subscribe to event bus\n\t\tthis._eventBus = EventBus.getInstance();\n\t\tthis._eventBus.subscribe(\n\t\t\t\"KeyUserChanges\",\n\t\t\t\"addNewsPagesChanges\",\n\t\t\t(channelId?: string, eventId?: string, data?: object) => {\n\t\t\t\t//errorstate is false when import is successful\n\t\t\t\tconst { changes } = data as { changes: Array<IKeyUserChange> };\n\t\t\t\tthis.addNewsPagesChanges(changes);\n\t\t\t},\n\t\t\tthis\n\t\t);\n\n\t\t// setup layout content\n\t\tthis.addAggregation(\"content\", this.getContent());\n\n\t\t// fired every time on panel navigation\n\t\tthis.attachPanelNavigated(() => this.loadSettings());\n\t}\n\n\t/**\n\t * Returns the content for the KeyUser News Pages Settings Panel.\n\t *\n\t * @private\n\t * @returns {VBox} The control containing the KeyUser News Pages Settings Panel content.\n\t */\n\tprivate getContent(): VBox {\n\t\tif (!this.wrapperVBox) {\n\t\t\tthis.wrapperVBox = new VBox(`${this.getId()}-wrapperVBox`);\n\t\t}\n\t\treturn this.wrapperVBox;\n\t}\n\n\t/**\n\t * Load settings for the panel.\n\t *\n\t * @private\n\t */\n\tprivate loadSettings(): void {\n\t\tconst associatedPanelId = this.getPanel();\n\t\tconst associatedPanel = Element.getElementById(associatedPanelId) as BasePanel;\n\t\tconst container = associatedPanel?.getParent() as BaseContainer;\n\t\tcontainer.getContent()?.forEach((panel: BasePanel) => {\n\t\t\tif (panel instanceof NewsPanel) {\n\t\t\t\tthis.newsPanel = panel;\n\t\t\t\tthis.wrapperVBox.addItem(this.getNewsSettingsList(panel));\n\t\t\t}\n\t\t\tif (panel instanceof PagePanel) {\n\t\t\t\tthis.pagePanel = panel;\n\t\t\t\tthis.wrapperVBox.addItem(this.getPageSettingsList(panel));\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate newsVisibilityChangeHandler(oEvent: ListBase$SelectionChangeEvent): void {\n\t\tconst newsVisibilityCheckBox = oEvent.getParameter(\"listItem\");\n\t\tthis.newsFeedVisibility = newsVisibilityCheckBox?.getSelected();\n\t\tconst newsPanel = this._getPanel() as NewsPanel;\n\t\tconst newsPageContainer = newsPanel.getParent() as NewsAndPagesContainer;\n\t\tconst layout = newsPageContainer.getParent() as BaseLayout;\n\t\tconst keyUserChanges = this.getKeyUserChanges();\n\t\tconst existingChange = keyUserChanges.find((change) => {\n\t\t\treturn change.changeSpecificData.changeType === CHANGE_TYPES.NEWS_FEED_VISIBILITY;\n\t\t});\n\t\tif (!this.newsFeedVisibility && this.newsSettingsPanel) {\n\t\t\tthis.newsSettingsPanel.removeUrlMesageStrip();\n\t\t}\n\t\tif (!existingChange) {\n\t\t\tthis.addKeyUserChanges({\n\t\t\t\tselectorControl: layout,\n\t\t\t\tchangeSpecificData: {\n\t\t\t\t\tchangeType: CHANGE_TYPES.NEWS_FEED_VISIBILITY,\n\t\t\t\t\tcontent: {\n\t\t\t\t\t\tisNewsFeedVisible: this.newsFeedVisibility\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else if ((existingChange.changeSpecificData.content as INewsFeedVisibiliyChange).isNewsFeedVisible !== this.newsFeedVisibility) {\n\t\t\t(existingChange.changeSpecificData.content as INewsFeedVisibiliyChange).isNewsFeedVisible = this.newsFeedVisibility;\n\t\t}\n\t}\n\n\t/**\n\t * Returns News Settings Panel to the content.\n\t *\n\t * @private\n\t * @returns {List} The control containing the News Settings Panel content.\n\t */\n\tprivate getNewsSettingsList(panel: NewsPanel): List {\n\t\tconst newsPanel = this._getPanel() as NewsPanel;\n\t\tif (!this.newsSettingsList) {\n\t\t\tthis.newsSettingsList = new List(`${this.getId()}-news-settings-list`, {\n\t\t\t\tselectionChange: this.newsVisibilityChangeHandler.bind(this),\n\t\t\t\tmode: \"MultiSelect\"\n\t\t\t});\n\t\t\tthis.standardListItem = new StandardListItem(`${this.getId()}-newsSettingsStandardListItem`, {\n\t\t\t\tselected: (newsPanel._getContent()[0].getParent() as FlexBox).getVisible(), // TO-DO: Integrate with keyuser data\n\t\t\t\tpress: this.navigateToNewsSettingsPage.bind(this),\n\t\t\t\ttype: \"Navigation\",\n\t\t\t\ttitle: this._i18nBundle.getText(\"newsFeed\")\n\t\t\t});\n\t\t\tthis.newsSettingsList.addItem(this.standardListItem);\n\t\t\tthis.newsSettingsList.setAssociation(\"panel\", panel);\n\t\t} else {\n\t\t\tif (this.newsFeedVisibility === undefined) {\n\t\t\t\tthis.standardListItem.setSelected(\n\t\t\t\t\tBoolean(newsPanel.getParent()?.getProperty(\"newsFeedVisibility\")) && Boolean(newsPanel.getProperty(\"newsAvailable\"))\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.standardListItem.setSelected(this.newsFeedVisibility);\n\t\t\t}\n\t\t}\n\t\treturn this.newsSettingsList;\n\t}\n\n\t/**\n\t * Returns Page Settings Panel to the content.\n\t *\n\t * @private\n\t * @returns {List} The control containing the Page Settings Panel content.\n\t */\n\tprivate getPageSettingsList(panel: PagePanel): List {\n\t\tif (!this.pageSettingsList) {\n\t\t\tthis.pageSettingsList = new List(`${this.getId()}-page-settings-list`, {\n\t\t\t\tmode: \"None\",\n\t\t\t\titems: [\n\t\t\t\t\tnew StandardListItem(`${this.getId()}-pageSettingsList`, {\n\t\t\t\t\t\tselected: true, // TO-DO: Integrate with keyuser data\n\t\t\t\t\t\tpress: this.openPageSettingsDialog.bind(this),\n\t\t\t\t\t\ttype: \"Navigation\",\n\t\t\t\t\t\ttitle: this._i18nBundle.getText(\"pageGroupHeader\")\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t});\n\t\t\tthis.pageSettingsList.setAssociation(\"panel\", panel);\n\t\t}\n\t\treturn this.pageSettingsList;\n\t}\n\n\tprivate onNavBack(navContainer: NavContainer): void {\n\t\tnavContainer?.back();\n\t\tif (!this.standardListItem.getSelected()) {\n\t\t\tthis.newsSettingsPanel?.removeUrlMesageStrip();\n\t\t}\n\t}\n\n\t/**\n\t * Adds News Settings Page to the dialog.\n\t *\n\t * @private\n\t */\n\tprivate navigateToNewsSettingsPage(): void {\n\t\tconst navContainer = (this.getParent() as KeyUserSettingsDialog)?.getNavContainer?.();\n\t\tif (!this.newsSettingsPage) {\n\t\t\tthis.newsSettingsPanel = new KeyUserNewsSettingsPanel(`${this.getId()}--news-settings-panel`);\n\t\t\tthis.newsSettingsPanel.setAssociation(\"panel\", this.newsPanel);\n\t\t\tthis.newsSettingsPage = new Page(`${this.getId()}-news-settings-page`, {\n\t\t\t\ttitle: this.newsSettingsPanel.getProperty(\"title\") as string,\n\t\t\t\tshowHeader: true,\n\t\t\t\tcontent: this.newsSettingsPanel.getAggregation(\"content\") as Control,\n\t\t\t\tbackgroundDesign: \"Transparent\",\n\t\t\t\tshowNavButton: true,\n\t\t\t\tnavButtonPress: this.onNavBack.bind(this, navContainer)\n\t\t\t});\n\t\t}\n\t\tnavContainer?.addPage(this.newsSettingsPage);\n\t\tnavContainer?.to(this.newsSettingsPage);\n\t\tthis.newsSettingsPanel.firePanelNavigated();\n\t}\n\n\t/**\n\t * Opens Page Settings Dialog.\n\t *\n\t * @private\n\t */\n\tprivate openPageSettingsDialog(): void {\n\t\tif (!this.pageSettingsPanel) {\n\t\t\tthis.pageSettingsPanel = new KeyUserPagesSettingsPanel(`${this.getId()}--pages-settings-panel`);\n\t\t\tthis.pageSettingsPanel.setAssociation(\"panel\", this.pagePanel);\n\t\t\tthis.pageSettingsDialog = (this.pageSettingsPanel.getAggregation(\"content\") as Dialog[])?.[0];\n\t\t}\n\t\tthis.pageSettingsDialog?.open();\n\t\tthis.pageSettingsPanel?.firePanelNavigated();\n\t}\n\n\t/**\n\t * Handles Space Page Changes.\n\t *\n\t * @private\n\t * @param {Array<IKeyUserChange>} changes All Key User Changes.\n\t */\n\tprivate addNewsPagesChanges(changes: Array<IKeyUserChange>): void {\n\t\tchanges.forEach((change) => {\n\t\t\tthis.addKeyUserChanges(change);\n\t\t});\n\t}\n\n\tpublic async isNewsChangesValid() {\n\t\ttry {\n\t\t\treturn await this.newsSettingsPanel?.isValidChanges(this.standardListItem.getSelected());\n\t\t} catch {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic onSaveClearChanges() {\n\t\tthis.newsFeedVisibility = undefined;\n\t\tthis.newsSettingsPanel?.clearKeyUserChanges();\n\t}\n\n\tpublic onCancelClearKeyUserChanges() {\n\t\tconst newsPanel = this._getPanel() as NewsPanel;\n\t\tthis.newsFeedVisibility = undefined;\n\t\tthis.standardListItem?.setSelected((newsPanel._getContent()[0].getParent() as FlexBox).getVisible());\n\t\tthis.newsSettingsPanel?.clearNewsPanelChanges();\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":161,"column":0},"map":{"version":3,"names":["sap","ui","define","Button","CheckBox","Input","Label","MessageBox","MessageStrip","MessageToast","Toolbar","VBox","Library","EventBus","MessageType","SimpleForm","FileUploader","Container","__BaseSettingsPanel","___flexibility_Layoutflexibility","___utils_Constants","__HttpHelper","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","BaseSettingsPanel","CHANGE_TYPES","KEYUSER_SETTINGS_PANELS_KEYS","HttpHelper","Constants","NEWS_FEED_POST_API","KeyUserNewsSettingsPanel","extend","metadata","library","init","_init","BaseSettingsPanel.prototype.init.call","this","controlMap","Map","setProperty","NEWS","_i18nBundle","getText","addAggregation","getContent","attachPanelNavigated","loadSettings","_eventBus","getInstance","subscribe","channelId","eventId","data","showError","showMessageStrip","Warning","validChanges","getMessageStrip","setVisible","getCurrentKeyUserChange","_getCurrentKeyUserChange","keyUserChanges","getKeyUserChanges","existingChange","find","change","changeSpecificData","changeType","NEWS_FEED_URL","content","_getContent","wrapperVBoxId","getId","wrapperVBox","set","isValidChanges","_isValidChanges","newsVisible","_this","_temp4","fileUploader","getFileUploader","keyUserChangeContent","showCustom","customNewsVisibility","undefined","Boolean","_getPanel","getProperty","_temp3","getNewsFeedUploadBtn","getEnabled","error","String","setValue","customNewsFeedFileName","_temp2","getValue","Error","_temp","getVisible","newsUrl","newsFeedURL","Promise","resolve","setURL","reject","clearNewsPanelChanges","_clearNewsPanelChanges","newsPanel","newsUrlInput","get","setEnabled","setSelected","clearKeyUserChanges","addMessageStrip","_addMessageStrip","keyUserNewsPanelToolbarId","keyUserNewsPanelToolbar","height","messageStripWrapper","width","messageStripId","messsageStrip","showIcon","visible","addItem","addContent","handleSelectCustomNewsFeed","_handleSelectCustomNewsFeed","oEvent","getSource","getSelected","newsPageContainer","getParent","layout","addKeyUserChanges","selectorControl","oldNewsFeedUrl","oldShowCustomNewsFeed","oldCustomNewsFeedKey","showCustomNewsFeed","customNewsFeedKey","publish","changes","removeUrlMesageStrip","disable","date","Date","addCustomNewsFeedCheckBox","_addCustomNewsFeedCheckBox","customNewsFeedCheckBoxId","customNewsFeedCheckBox","text","selected","select","bind","addStyleClass","onNewsUrlChange","_onNewsUrlChange","getParameter","keyUserContent","validUrl","getValidURL","_showMessageStrip","bShow","type","textKey","setType","setText","_getValidURL","urlString","url","URL","href","_removeUrlMesageStrip","onUrlLiveChange","_onUrlLiveChange","sNewValue","_getMessageStrip","addNewsURLSimpleForm","_addNewsURLSimpleForm","newsFeedURLSimpleFormId","newsFeedURLSimpleForm","newsFeedURLInputId","newsFeedURLInput","value","InputType","Url","liveChange","enabled","handleFileChange","_handleFileChange","setNewsFeedEnabled","_setNewsFeedEnabled","bEnabled","newsFeedUploadBtn","_getNewsFeedUploadBtn","customNewsUploadFileUploaderButtonId","handleFileUploadError","_handleFileUploadError","iMaxFileSize","getMaximumFileSize","handleFileDialogClose","_handleFileDialogClose","event","fileName","handleNewsFeedFileUpload","_handleNewsFeedFileUpload","_this2","errorMsg","all","getUploadedFile","getServiceAsync","response","fileData","userInfo","userId","payload","changeId","now","toString","attachment","documentType","Post","oResponse","message","includes","customKey","show","oErr","_getUploadedFile","file","oFileUpload","files","reader","FileReader","onload","fileContent","base64String","window","btoa","encodeURIComponent","replace","match","p1","fromCharCode","parseInt","readAsText","readAsDataURL","_getFileUploader","customNewsUploadFileUploader","addCustomNewsUploadSimpleForm","_addCustomNewsUploadSimpleForm","customNewsUploadSimpleFormId","customNewsUploadSimpleForm","customNewsUploadVBox","customNewsUploadFileUploaderControl","name","tooltip","fileType","maximumFileSize","fileSizeExceed","sameFilenameAllowed","afterDialogClose","customNewsUploadFileUploaderButton","press","_loadSettings","removeAllItems"],"sources":["KeyUserNewsSettingsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Button from \"sap/m/Button\";\nimport CheckBox, { CheckBox$SelectEvent } from \"sap/m/CheckBox\";\nimport Input, { Input$LiveChangeEvent } from \"sap/m/Input\";\nimport { InputBase$ChangeEvent } from \"sap/m/InputBase\";\nimport Label from \"sap/m/Label\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport MessageStrip from \"sap/m/MessageStrip\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport Toolbar from \"sap/m/Toolbar\";\nimport VBox from \"sap/m/VBox\";\nimport Library from \"sap/m/library\";\nimport Event from \"sap/ui/base/Event\";\nimport Control from \"sap/ui/core/Control\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport SimpleForm from \"sap/ui/layout/form/SimpleForm\";\nimport FileUploader, { FileUploader$ChangeEvent, FileUploader$FileSizeExceedEvent } from \"sap/ui/unified/FileUploader\";\nimport Container from \"sap/ushell/Container\";\nimport UserInfo from \"sap/ushell/services/UserInfo\";\nimport BaseLayout from \"./BaseLayout\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\nimport NewsAndPagesContainer from \"./NewsAndPagesContainer\";\nimport NewsPanel, { FileFormat } from \"./NewsPanel\";\nimport { CHANGE_TYPES } from \"./flexibility/Layout.flexibility\";\nimport { INewsPersData } from \"./interface/KeyUserInterface\";\nimport { KEYUSER_SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\nimport HttpHelper from \"./utils/HttpHelper\";\n\nconst Constants = {\n\tNEWS_FEED_POST_API: \"/sap/opu/odata4/ui2/insights_srv/srvd/ui2/\" + \"insights_repo_srv/0001/\" + \"NEWS_FEED\"\n};\n\ninterface ShowError {\n\tshowError: boolean;\n\tdate: Date;\n}\n\ninterface UploadedFilePayload {\n\tchangeId: string;\n\tattachment: string | PromiseLike<string>;\n\tdocumentType?: string; // Optional\n}\n\ninterface FileMetaData {\n\ttype: string;\n\tcontent: string | PromiseLike<string>;\n}\n\n/**\n *\n * Class for News Settings Panel for KeyUser Settings Dialog.\n *\n * @extends BaseSettingsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.KeyUserNewsSettingsPanel\n */\nexport default class KeyUserNewsSettingsPanel extends BaseSettingsPanel {\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\"\n\t};\n\n\tprivate controlMap!: Map<string, Control | Element>;\n\tprivate _eventBus!: EventBus;\n\tprivate customNewsVisibility!: boolean;\n\tprivate validChanges!: boolean;\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\t\tthis.controlMap = new Map();\n\n\t\t//setup panel\n\t\tthis.setProperty(\"key\", KEYUSER_SETTINGS_PANELS_KEYS.NEWS);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"editNewsFeed\"));\n\n\t\t// //setup layout content\n\t\tthis.addAggregation(\"content\", this.getContent());\n\n\t\t// fired every time on panel navigation\n\t\tthis.attachPanelNavigated(() => this.loadSettings());\n\n\t\tthis._eventBus = EventBus.getInstance();\n\t\tthis._eventBus.subscribe(\n\t\t\t\"KeyUserChanges\",\n\t\t\t\"newsFeedLoadFailed\",\n\t\t\t(channelId?: string, eventId?: string, data?: object) => {\n\t\t\t\t//errorstate is false when import is successful\n\t\t\t\tif ((data as unknown as ShowError)?.showError) {\n\t\t\t\t\tthis.showMessageStrip(true, MessageType.Warning, \"invalidNewsUrl\");\n\t\t\t\t\tthis.validChanges = false;\n\t\t\t\t} else {\n\t\t\t\t\tthis.getMessageStrip().setVisible(false);\n\t\t\t\t\tthis.validChanges = true;\n\t\t\t\t}\n\t\t\t},\n\t\t\tthis\n\t\t);\n\t}\n\n\tprivate getCurrentKeyUserChange(): INewsPersData {\n\t\tconst keyUserChanges = this.getKeyUserChanges();\n\t\tconst existingChange = keyUserChanges.find((change) => {\n\t\t\treturn change.changeSpecificData.changeType === CHANGE_TYPES.NEWS_FEED_URL;\n\t\t});\n\t\treturn existingChange?.changeSpecificData.content as INewsPersData;\n\t}\n\n\t/**\n\t * Returns the content for the KeyUser news Settings Panel.\n\t *\n\t * @private\n\t * @returns {VBox} The control containing the KeyUser news Settings Panel content.\n\t */\n\tprivate getContent(): VBox {\n\t\tconst wrapperVBoxId = `${this.getId()}-wrapperVBox`;\n\t\tconst wrapperVBox = new VBox(wrapperVBoxId);\n\t\tthis.controlMap.set(wrapperVBoxId, wrapperVBox);\n\n\t\treturn wrapperVBox;\n\t}\n\n\tpublic async isValidChanges(newsVisible: boolean) {\n\t\tthis.validChanges = true;\n\t\tconst fileUploader = this.getFileUploader();\n\t\tconst keyUserChangeContent = this.getCurrentKeyUserChange();\n\t\tconst showCustom =\n\t\t\tthis.customNewsVisibility === undefined ? Boolean(this._getPanel().getProperty(\"showCustom\")) : this.customNewsVisibility;\n\t\tif (this.getNewsFeedUploadBtn().getEnabled()) {\n\t\t\tif (showCustom) {\n\t\t\t\tMessageBox.error(String(this._i18nBundle.getText(\"newsFeedSaveUploadChanges\")));\n\t\t\t\tthis.validChanges = false;\n\t\t\t} else {\n\t\t\t\tif (fileUploader) {\n\t\t\t\t\tfileUploader.setValue(\n\t\t\t\t\t\tkeyUserChangeContent.customNewsFeedFileName || String(this._getPanel().getProperty(\"customFileName\"))\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (showCustom && fileUploader.getValue() === \"\" && newsVisible) {\n\t\t\tthis.showMessageStrip(true, MessageType.Error, \"noNewsFileError\");\n\t\t\tthis.validChanges = false;\n\t\t} else if (!showCustom && newsVisible && !this.getMessageStrip().getVisible()) {\n\t\t\tconst newsUrl = keyUserChangeContent.newsFeedURL;\n\t\t\tawait (this._getPanel() as NewsPanel).setURL(String(newsUrl));\n\t\t}\n\t\treturn this.validChanges;\n\t}\n\n\tpublic clearNewsPanelChanges() {\n\t\tconst newsPanel = this._getPanel();\n\t\tthis.getMessageStrip().setVisible(false);\n\t\tconst newsUrlInput = this.controlMap.get(`${this.getId()}-newsFeedURLInput`) as Input;\n\t\tnewsUrlInput.setValue(String(newsPanel.getProperty(\"url\")));\n\t\tthis.customNewsVisibility = Boolean(newsPanel.getProperty(\"showCustom\"));\n\t\t(this.controlMap.get(`${this.getId()}-customNewsUploadFileUploader`) as FileUploader).setEnabled(this.customNewsVisibility);\n\t\t(this.controlMap.get(`${this.getId()}-newsFeedURLInput`) as Input).setEnabled(!this.customNewsVisibility);\n\t\t(this.controlMap.get(`${this.getId()}-customNewsFeedCheckBox`) as CheckBox).setSelected(this.customNewsVisibility);\n\t\tthis.getFileUploader().setValue(String(newsPanel.getProperty(\"customFileName\")));\n\t\tthis.clearKeyUserChanges();\n\t}\n\n\tprivate addMessageStrip(wrapperVBox: VBox): void {\n\t\tconst keyUserNewsPanelToolbarId = `${this.getId()}-keyUserNewsPanelToolbar`;\n\t\tif (!this.controlMap.get(keyUserNewsPanelToolbarId)) {\n\t\t\tconst keyUserNewsPanelToolbar = new Toolbar(keyUserNewsPanelToolbarId, { height: \"auto\" });\n\t\t\tconst messageStripWrapper = new VBox(`${this.getId()}-messageStripWrapper`, { width: \"100%\" });\n\t\t\tconst messageStripId = `${this.getId()}-messageStrip`;\n\t\t\tconst messsageStrip = new MessageStrip(messageStripId, {\n\t\t\t\tshowIcon: true,\n\t\t\t\tvisible: false\n\t\t\t});\n\t\t\tthis.controlMap.set(messageStripId, messsageStrip);\n\t\t\tmessageStripWrapper.addItem(messsageStrip);\n\t\t\tkeyUserNewsPanelToolbar.addContent(messageStripWrapper);\n\t\t\tthis.controlMap.set(keyUserNewsPanelToolbarId, keyUserNewsPanelToolbar);\n\t\t}\n\t\twrapperVBox.addItem(this.controlMap.get(keyUserNewsPanelToolbarId) as Toolbar);\n\t}\n\n\tprivate handleSelectCustomNewsFeed(oEvent: CheckBox$SelectEvent): void {\n\t\tthis.customNewsVisibility = oEvent.getSource().getSelected();\n\n\t\t(this.controlMap.get(`${this.getId()}-customNewsUploadFileUploader`) as FileUploader).setEnabled(this.customNewsVisibility);\n\t\t(this.controlMap.get(`${this.getId()}-newsFeedURLInput`) as Input).setEnabled(!this.customNewsVisibility);\n\n\t\tconst newsPanel = this._getPanel() as NewsPanel;\n\t\tconst newsPageContainer = newsPanel.getParent() as NewsAndPagesContainer;\n\t\tconst layout = newsPageContainer.getParent() as BaseLayout;\n\t\tconst keyUserChangeContent = this.getCurrentKeyUserChange();\n\t\tif (!keyUserChangeContent) {\n\t\t\tthis.addKeyUserChanges({\n\t\t\t\tselectorControl: layout,\n\t\t\t\tchangeSpecificData: {\n\t\t\t\t\tchangeType: CHANGE_TYPES.NEWS_FEED_URL,\n\t\t\t\t\tcontent: {\n\t\t\t\t\t\toldNewsFeedUrl: String(this._getPanel().getProperty(\"url\")),\n\t\t\t\t\t\toldShowCustomNewsFeed: Boolean(this._getPanel().getProperty(\"showCustom\")),\n\t\t\t\t\t\toldCustomNewsFeedKey: String(this._getPanel().getProperty(\"customFeedKey\")),\n\t\t\t\t\t\tnewsFeedURL: String(this._getPanel().getProperty(\"url\")),\n\t\t\t\t\t\tshowCustomNewsFeed: this.customNewsVisibility,\n\t\t\t\t\t\tcustomNewsFeedKey: String(this._getPanel().getProperty(\"customFeedKey\")),\n\t\t\t\t\t\tcustomNewsFeedFileName: String(this._getPanel().getProperty(\"customFileName\"))\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis._eventBus.publish(\"KeyUserChanges\", \"addNewsPagesChanges\", { changes: this.getKeyUserChanges() });\n\t\t} else if (keyUserChangeContent.showCustomNewsFeed !== this.customNewsVisibility) {\n\t\t\tkeyUserChangeContent.showCustomNewsFeed = this.customNewsVisibility;\n\t\t}\n\t\tthis.removeUrlMesageStrip();\n\t\tthis._eventBus.publish(\"KeyUserChanges\", \"disabledSaveBtn\", { disable: false, date: new Date() });\n\t}\n\n\t/**\n\t * Add CheckBox for Custom News Feed.\n\t *\n\t * @private\n\t */\n\tprivate addCustomNewsFeedCheckBox(wrapperVBox: VBox): void {\n\t\tconst customNewsFeedCheckBoxId = `${this.getId()}-customNewsFeedCheckBox`;\n\t\tif (!this.controlMap.get(customNewsFeedCheckBoxId)) {\n\t\t\tconst customNewsFeedCheckBox = new CheckBox(`${this.getId()}-customNewsFeedCheckBox`, {\n\t\t\t\ttext: this._i18nBundle.getText(\"selectCustomNewsFeed\"),\n\t\t\t\tselected: Boolean(this._getPanel().getProperty(\"showCustom\")),\n\t\t\t\tselect: this.handleSelectCustomNewsFeed.bind(this)\n\t\t\t}).addStyleClass(\"sapUiTinyMargin\");\n\t\t\tthis.controlMap.set(customNewsFeedCheckBoxId, customNewsFeedCheckBox);\n\t\t} else if (!this.getCurrentKeyUserChange()) {\n\t\t\t(this.controlMap.get(`${this.getId()}-customNewsFeedCheckBox`) as CheckBox).setSelected(\n\t\t\t\tBoolean(this._getPanel().getProperty(\"showCustom\"))\n\t\t\t);\n\t\t}\n\t\twrapperVBox.addItem(this.controlMap.get(customNewsFeedCheckBoxId) as CheckBox);\n\t}\n\n\tprivate onNewsUrlChange(oEvent: InputBase$ChangeEvent): void {\n\t\tconst newsPanel = this._getPanel() as NewsPanel;\n\t\tconst newsPageContainer = newsPanel.getParent() as NewsAndPagesContainer;\n\t\tconst layout = newsPageContainer.getParent() as BaseLayout;\n\t\tlet newsUrl = oEvent.getParameter(\"value\");\n\t\tconst keyUserContent = this.getCurrentKeyUserChange();\n\t\tconst validUrl = this.getValidURL(String(newsUrl));\n\t\tif (!validUrl) {\n\t\t\treturn;\n\t\t} else {\n\t\t\tnewsUrl = validUrl;\n\t\t}\n\t\tif (!keyUserContent) {\n\t\t\tthis.addKeyUserChanges({\n\t\t\t\tselectorControl: layout,\n\t\t\t\tchangeSpecificData: {\n\t\t\t\t\tchangeType: CHANGE_TYPES.NEWS_FEED_URL,\n\t\t\t\t\tcontent: {\n\t\t\t\t\t\toldNewsFeedUrl: String(this._getPanel().getProperty(\"url\")),\n\t\t\t\t\t\toldShowCustomNewsFeed: Boolean(this._getPanel().getProperty(\"showCustom\")),\n\t\t\t\t\t\toldCustomNewsFeedKey: String(this._getPanel().getProperty(\"customFeedKey\")),\n\t\t\t\t\t\tnewsFeedURL: newsUrl,\n\t\t\t\t\t\tshowCustomNewsFeed: false,\n\t\t\t\t\t\tcustomNewsFeedKey: String(this._getPanel().getProperty(\"customFeedKey\")),\n\t\t\t\t\t\tcustomNewsFeedFileName: String(this._getPanel().getProperty(\"customFileName\"))\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis._eventBus.publish(\"KeyUserChanges\", \"addNewsPagesChanges\", { changes: this.getKeyUserChanges() });\n\t\t} else if (keyUserContent.newsFeedURL !== newsUrl) {\n\t\t\tkeyUserContent.newsFeedURL = newsUrl;\n\t\t\tkeyUserContent.showCustomNewsFeed = false;\n\t\t}\n\t}\n\n\tprivate showMessageStrip(bShow: boolean, type: MessageType, textKey: string): void {\n\t\tthis.getMessageStrip().setType(type);\n\t\tthis.getMessageStrip().setVisible(bShow);\n\t\tthis.getMessageStrip().setText(String(this._i18nBundle.getText(textKey)));\n\t\tif (type === MessageType.Error) {\n\t\t\tthis._eventBus.publish(\"KeyUserChanges\", \"disabledSaveBtn\", { disable: bShow, date: new Date() });\n\t\t}\n\t}\n\n\tprivate getValidURL(urlString: string): string {\n\t\ttry {\n\t\t\tconst url = new URL(urlString);\n\t\t\treturn url.href;\n\t\t} catch {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\tpublic removeUrlMesageStrip() {\n\t\tthis._eventBus.publish(\"KeyUserChanges\", \"disabledSaveBtn\", { disable: false, date: new Date() });\n\t\tthis.getMessageStrip().setVisible(false);\n\t\tconst newsUrlInput = this.controlMap.get(`${this.getId()}-newsFeedURLInput`) as Input;\n\t\tif (!this.getValidURL(newsUrlInput.getValue())) {\n\t\t\tnewsUrlInput.setValue(\"\");\n\t\t}\n\t}\n\n\tprivate onUrlLiveChange(oEvent: Input$LiveChangeEvent) {\n\t\tconst sNewValue = oEvent.getParameter(\"value\") || \"\";\n\t\tthis.showMessageStrip(!this.getValidURL(sNewValue), MessageType.Error, \"invalidNewsUrl\");\n\t}\n\n\tprivate getMessageStrip(): MessageStrip {\n\t\tconst messageStripId = `${this.getId()}-messageStrip`;\n\t\treturn this.controlMap.get(messageStripId) as MessageStrip;\n\t}\n\n\t/**\n\t * Add SimpleForm for News URL.\n\t *\n\t * @private\n\t */\n\tprivate addNewsURLSimpleForm(wrapperVBox: VBox): void {\n\t\tconst newsFeedURLSimpleFormId = `${this.getId()}-newsFeedURLSimpleForm`;\n\t\tif (!this.controlMap.get(newsFeedURLSimpleFormId)) {\n\t\t\tconst newsFeedURLSimpleForm = new SimpleForm(`${this.getId()}-newsFeedURLSimpleForm`, {\n\t\t\t\tcontent: [\n\t\t\t\t\tnew Label(`${this.getId()}-newsFeedURLLabel`, {\n\t\t\t\t\t\ttext: this._i18nBundle.getText(\"editNewsURL\")\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t}).addStyleClass(\"sapContrastPlus\");\n\t\t\tconst newsFeedURLInputId = `${this.getId()}-newsFeedURLInput`;\n\t\t\tconst newsFeedURLInput = new Input(newsFeedURLInputId, {\n\t\t\t\tvalue: String(this._getPanel().getProperty(\"url\")),\n\t\t\t\ttype: Library.InputType.Url,\n\t\t\t\tchange: this.onNewsUrlChange.bind(this),\n\t\t\t\tliveChange: this.onUrlLiveChange.bind(this),\n\t\t\t\tenabled: !this._getPanel().getProperty(\"showCustom\")\n\t\t\t});\n\t\t\tthis.controlMap.set(newsFeedURLInputId, newsFeedURLInput);\n\t\t\tnewsFeedURLSimpleForm.addContent(newsFeedURLInput);\n\t\t\tthis.controlMap.set(newsFeedURLSimpleFormId, newsFeedURLSimpleForm);\n\t\t} else if (this.getCurrentKeyUserChange()) {\n\t\t\t(this.controlMap.get(`${this.getId()}-newsFeedURLInput`) as Input).setValue(String(this._getPanel().getProperty(\"url\")));\n\t\t}\n\t\twrapperVBox.addItem(this.controlMap.get(newsFeedURLSimpleFormId) as SimpleForm);\n\t}\n\n\tprivate handleFileChange(oEvent: FileUploader$ChangeEvent): void {\n\t\tconst fileUploader = oEvent.getSource();\n\t\tthis.getMessageStrip().setVisible(false);\n\t\tthis._eventBus.publish(\"KeyUserChanges\", \"disabledSaveBtn\", { disable: false, date: new Date() });\n\t\tthis.setNewsFeedEnabled(fileUploader.getValue() !== \"\");\n\t}\n\n\tprivate setNewsFeedEnabled(bEnabled: boolean): void {\n\t\tconst newsFeedUploadBtn = this.getNewsFeedUploadBtn();\n\t\tif (newsFeedUploadBtn) {\n\t\t\tnewsFeedUploadBtn.setEnabled(bEnabled);\n\t\t}\n\t}\n\n\tprivate getNewsFeedUploadBtn(): Button {\n\t\tconst customNewsUploadFileUploaderButtonId = `${this.getId()}-customNewsUploadFileUploaderButton`;\n\t\treturn this.controlMap.get(customNewsUploadFileUploaderButtonId) as Button;\n\t}\n\n\tprivate handleFileUploadError(oEvent: FileUploader$FileSizeExceedEvent): void {\n\t\tconst fileUploader = oEvent.getSource();\n\t\tconst iMaxFileSize = fileUploader.getMaximumFileSize();\n\t\tthis.setNewsFeedEnabled(false);\n\t\tMessageBox.error(String(this._i18nBundle.getText(\"newsFeedMaxFileSizeError\", [iMaxFileSize])));\n\t}\n\n\thandleFileDialogClose(event: Event): void {\n\t\tconst fileUploader = event.getSource<FileUploader>();\n\t\tlet fileName = fileUploader.getValue();\n\t\t// if file selection dialog is closed and no file is selected, set value as last uploaded file\n\n\t\tif (fileName === \"\") {\n\t\t\tfileName = this.getCurrentKeyUserChange()?.customNewsFeedFileName || String(this._getPanel().getProperty(\"customFileName\"));\n\t\t\tthis.setNewsFeedEnabled(false);\n\t\t}\n\t\tfileUploader.setValue(fileName);\n\t}\n\n\tprivate async handleNewsFeedFileUpload(): Promise<void> {\n\t\tlet errorMsg = this._i18nBundle.getText(\"newsFeedFileUploadError\");\n\t\ttry {\n\t\t\tconst response = await Promise.all([this.getUploadedFile(), Container.getServiceAsync<UserInfo>(\"UserInfo\")]);\n\t\t\tconst fileData = response[0];\n\t\t\tconst userInfo = response[1];\n\t\t\tconst userId = userInfo && userInfo.getId();\n\t\t\tconst payload: UploadedFilePayload = { changeId: userId + \"_\" + Date.now().toString(), attachment: fileData.content };\n\n\t\t\t//pass documentType if file is in csv format\n\t\t\t//if documentType is not passed by default document type is considered as excel.\n\t\t\tif (fileData.type) {\n\t\t\t\tpayload.documentType = fileData.type;\n\t\t\t}\n\t\t\tconst oResponse = await HttpHelper.Post(Constants.NEWS_FEED_POST_API, payload);\n\t\t\tconst keyUserChangeContent = this.getCurrentKeyUserChange();\n\t\t\tconst newsPanel = this._getPanel() as NewsPanel;\n\t\t\tconst newsPageContainer = newsPanel.getParent() as NewsAndPagesContainer;\n\t\t\tconst layout = newsPageContainer.getParent() as BaseLayout;\n\t\t\tif (oResponse && (oResponse as { error: { message: string } }).error) {\n\t\t\t\tthis.getFileUploader().setValue(\"\");\n\t\t\t\tif (keyUserChangeContent) {\n\t\t\t\t\tkeyUserChangeContent.customNewsFeedFileName = \"\";\n\t\t\t\t} else {\n\t\t\t\t\tthis.addKeyUserChanges({\n\t\t\t\t\t\tselectorControl: layout,\n\t\t\t\t\t\tchangeSpecificData: {\n\t\t\t\t\t\t\tchangeType: CHANGE_TYPES.NEWS_FEED_URL,\n\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\toldNewsFeedUrl: String(this._getPanel().getProperty(\"url\")),\n\t\t\t\t\t\t\t\toldShowCustomNewsFeed: Boolean(this._getPanel().getProperty(\"showCustom\")),\n\t\t\t\t\t\t\t\toldCustomNewsFeedKey: String(this._getPanel().getProperty(\"customFeedKey\")),\n\t\t\t\t\t\t\t\tnewsFeedURL: String(this._getPanel().getProperty(\"url\")),\n\t\t\t\t\t\t\t\tshowCustomNewsFeed: true,\n\t\t\t\t\t\t\t\tcustomNewsFeedKey: String(this._getPanel().getProperty(\"customFeedKey\")),\n\t\t\t\t\t\t\t\tcustomNewsFeedFileName: String(this._getPanel().getProperty(\"customFileName\"))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\terrorMsg = (oResponse as { error: { message: string } }).error.message.includes(\"NODATA\")\n\t\t\t\t\t? this._i18nBundle.getText(\"newsFeedEmptyFileError\")\n\t\t\t\t\t: errorMsg;\n\t\t\t\tthrow new Error(errorMsg);\n\t\t\t}\n\t\t\tconst customKey = (oResponse as { changeId: string }).changeId;\n\t\t\tif (keyUserChangeContent) {\n\t\t\t\tkeyUserChangeContent.customNewsFeedKey = customKey;\n\t\t\t\tkeyUserChangeContent.customNewsFeedFileName = this.getFileUploader().getValue();\n\t\t\t} else {\n\t\t\t\tthis.addKeyUserChanges({\n\t\t\t\t\tselectorControl: layout,\n\t\t\t\t\tchangeSpecificData: {\n\t\t\t\t\t\tchangeType: CHANGE_TYPES.NEWS_FEED_URL,\n\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\toldNewsFeedUrl: String(this._getPanel().getProperty(\"url\")),\n\t\t\t\t\t\t\toldShowCustomNewsFeed: Boolean(this._getPanel().getProperty(\"showCustom\")),\n\t\t\t\t\t\t\toldCustomNewsFeedKey: String(this._getPanel().getProperty(\"customFeedKey\")),\n\t\t\t\t\t\t\tnewsFeedURL: String(this._getPanel().getProperty(\"url\")),\n\t\t\t\t\t\t\tshowCustomNewsFeed: true,\n\t\t\t\t\t\t\tcustomNewsFeedKey: customKey,\n\t\t\t\t\t\t\tcustomNewsFeedFileName: this.getFileUploader().getValue()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis._eventBus.publish(\"KeyUserChanges\", \"addNewsPagesChanges\", { changes: this.getKeyUserChanges() });\n\t\t\t}\n\t\t\tMessageToast.show(String(this._i18nBundle.getText(\"customNewsFeedUploaded\")));\n\t\t\tthis.setNewsFeedEnabled(false);\n\t\t} catch (oErr) {\n\t\t\tMessageBox.error((oErr as { message: string }).message);\n\t\t\tthis.setNewsFeedEnabled(false);\n\t\t}\n\t}\n\n\tprivate getUploadedFile(): Promise<FileMetaData> {\n\t\treturn new Promise<FileMetaData>((resolve, reject) => {\n\t\t\tconst fileUploader = this.getFileUploader();\n\t\t\tlet errorMsg = this._i18nBundle.getText(\"newsFeedFileUploadError\");\n\t\t\tif (fileUploader && !fileUploader.getValue()) {\n\t\t\t\terrorMsg = this._i18nBundle.getText(\"noNewsFileError\");\n\t\t\t\treject(new Error(errorMsg));\n\t\t\t}\n\n\t\t\tconst file = fileUploader.oFileUpload.files[0];\n\t\t\tconst reader = new FileReader();\n\n\t\t\treader.onload = function () {\n\t\t\t\ttry {\n\t\t\t\t\tconst fileContent = reader.result as string;\n\t\t\t\t\tlet base64String;\n\t\t\t\t\tconst fileData: FileMetaData = { type: \"\", content: \"\" };\n\t\t\t\t\tif (file.type === \"text/csv\") {\n\t\t\t\t\t\tbase64String = window.btoa(\n\t\t\t\t\t\t\tencodeURIComponent(String(fileContent)).replace(/%([0-9A-F]{2})/g, function (match, p1: string) {\n\t\t\t\t\t\t\t\treturn String.fromCharCode(parseInt(p1, 16));\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t\tfileData.type = \"CSV\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbase64String = fileContent.replace(\"data:\", \"\").replace(/^.+,/, \"\");\n\t\t\t\t\t}\n\t\t\t\t\tfileData.content = base64String;\n\t\t\t\t\tresolve(fileData);\n\t\t\t\t} catch {\n\t\t\t\t\treject(new Error(errorMsg));\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (file.type === \"text/csv\") {\n\t\t\t\treader.readAsText(file);\n\t\t\t} else {\n\t\t\t\treader.readAsDataURL(file);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getFileUploader(): FileUploader {\n\t\tconst customNewsUploadFileUploader = `${this.getId()}-customNewsUploadFileUploader`;\n\t\treturn this.controlMap.get(customNewsUploadFileUploader) as FileUploader;\n\t}\n\n\t/**\n\t * Add SimpleForm for Custom News Upload Form.\n\t *\n\t * @private\n\t */\n\tprivate addCustomNewsUploadSimpleForm(wrapperVBox: VBox): void {\n\t\tconst customNewsUploadSimpleFormId = `${this.getId()}-customNewsUploadSimpleForm`;\n\t\tif (!this.controlMap.get(customNewsUploadSimpleFormId)) {\n\t\t\tconst customNewsUploadSimpleForm = new SimpleForm(`${this.getId()}-customNewsUploadSimpleForm`, {\n\t\t\t\tcontent: [\n\t\t\t\t\tnew Label(`${this.getId()}-customNewsUploadLabel`, {\n\t\t\t\t\t\ttext: this._i18nBundle.getText(\"customNewsFeed\")\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t}).addStyleClass(\"sapContrastPlus\");\n\t\t\tconst customNewsUploadVBox = new VBox(`${this.getId()}-customNewsUploadVBox`);\n\t\t\tconst customNewsUploadFileUploader = `${this.getId()}-customNewsUploadFileUploader`;\n\t\t\tconst newsPanel = this._getPanel() as NewsPanel;\n\t\t\tconst customNewsUploadFileUploaderControl = new FileUploader(customNewsUploadFileUploader, {\n\t\t\t\tname: \"newsFeedFileUploader\",\n\t\t\t\ttooltip: this._i18nBundle.getText(\"uploadNewsFeedFile\"),\n\t\t\t\tfileType: newsPanel?.getProperty(\"supportedFileFormats\") as FileFormat[],\n\t\t\t\twidth: \"100%\",\n\t\t\t\tchange: this.handleFileChange.bind(this),\n\t\t\t\tmaximumFileSize: 25,\n\t\t\t\tfileSizeExceed: this.handleFileUploadError.bind(this),\n\t\t\t\tsameFilenameAllowed: true,\n\t\t\t\tafterDialogClose: this.handleFileDialogClose.bind(this),\n\t\t\t\tvalue: String(this._getPanel().getProperty(\"customFileName\")),\n\t\t\t\tenabled: this._getPanel().getProperty(\"showCustom\") as boolean\n\t\t\t});\n\t\t\tthis.controlMap.set(customNewsUploadFileUploader, customNewsUploadFileUploaderControl);\n\t\t\tconst customNewsUploadFileUploaderButtonId = `${this.getId()}-customNewsUploadFileUploaderButton`;\n\t\t\tconst customNewsUploadFileUploaderButton = new Button(customNewsUploadFileUploaderButtonId, {\n\t\t\t\ttext: this._i18nBundle.getText(\"uploadNewsFeedBtn\"),\n\t\t\t\tpress: this.handleNewsFeedFileUpload.bind(this),\n\t\t\t\ttype: \"Emphasized\",\n\t\t\t\tenabled: false\n\t\t\t});\n\t\t\tthis.controlMap.set(customNewsUploadFileUploaderButtonId, customNewsUploadFileUploaderButton);\n\t\t\tcustomNewsUploadVBox.addItem(customNewsUploadFileUploaderControl);\n\t\t\tcustomNewsUploadVBox.addItem(customNewsUploadFileUploaderButton);\n\t\t\tcustomNewsUploadSimpleForm.addContent(customNewsUploadVBox);\n\t\t\tthis.controlMap.set(customNewsUploadSimpleFormId, customNewsUploadSimpleForm);\n\t\t}\n\t\twrapperVBox.addItem(this.controlMap.get(customNewsUploadSimpleFormId) as SimpleForm);\n\t}\n\n\t/**\n\t * Load settings for the panel.\n\t *\n\t * @private\n\t */\n\tprivate loadSettings(): void {\n\t\tconst wrapperVBoxId = `${this.getId()}-wrapperVBox`;\n\t\tconst wrapperVBox = this.controlMap.get(wrapperVBoxId) as VBox;\n\t\twrapperVBox.removeAllItems();\n\t\tthis.addMessageStrip(wrapperVBox);\n\t\tthis.addCustomNewsFeedCheckBox(wrapperVBox);\n\t\tthis.addNewsURLSimpleForm(wrapperVBox);\n\t\tthis.addCustomNewsUploadSimpleForm(wrapperVBox);\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":166,"column":0},"map":{"version":3,"names":["sap","ui","define","Button","ColorPalette","Dialog","FlexBox","FlexItemData","HBox","Label","List","ScrollContainer","SearchField","StandardListItem","Switch","Text","Title","VBox","EventBus","Icon","Parameters","Filter","FilterOperator","JSONModel","Column","TreeTable","__BaseSettingsPanel","___flexibility_Layoutflexibility","___utils_Constants","___utils_IconList","__PageManager","__PersonalisationUtils","_interopRequireDefault","obj","__esModule","default","BaseSettingsPanel","CHANGE_TYPES","DEFAULT_BG_COLOR","END_USER_COLORS","FALLBACK_ICON","KEYUSER_SETTINGS_PANELS_KEYS","ICONS","PageManager","PersonalisationUtils","KeyUserPagesSettingsPanel","extend","constructor","prototype","apply","this","arguments","keyuserSpaceColorChanges","keyuserPageColorChanges","keyuserSpaceIconChanges","keyuserPageIconChanges","metadata","library","init","_init","BaseSettingsPanel.prototype.init.call","controlMap","Map","controlModel","spaces","selectedSpacePage","iconList","setProperty","PAGES","_i18nBundle","getText","_eventBus","getInstance","addAggregation","getContent","attachPanelNavigated","loadSettings","_getContent","dialogId","getId","get","oDialog","title","contentWidth","contentHeight","verticalScrolling","endButton","text","press","_handleDialogClose","bind","type","addStyleClass","set","addDialogContent","_loadSettings","pageManagerInstance","getPersContainerId","_getPanel","getOwnerComponent","prepareSpacesPagesData","prepareIconList","_addDialogContent","dialog","wrapperFlexBox","alignItems","justifyContent","height","width","direction","setModel","addItem","getSpacePagesListItems","getDetailsView","addContent","_getSpacePagesListItems","flexBox","titleStyle","treeTableWrapper","treeTableId","treeTable","selectionMode","selectionBehavior","rows","id","groupHeaderProperty","columnHeaderVisible","rowMode","rowSelectionChange","handleTreeTableRowSelection","layoutData","growFactor","columns","template","items","tooltip","src","backgroundColor","size","color","_getDetailsView","visible","getColorPalette","getIconList","_getColorPalette","wrapperVBox","label","wrapping","colorPaletteVBox","colorPaletteLabel","design","colorPalette","colors","map","value","colorSelect","_handleColorSelect","switchWrapperHBox","switchText","switchHBox","switchId","switchControl","state","change","_handleSwitchChange","enabled","customTextOn","customTextOff","_getIconList","searchFieldId","searchField","liveChange","handleIconSearch","iconListScrollContainer","vertical","horizontal","iconListId","path","icon","event","_handleIconSelect","getSource","iconDensityAware","iconInset","_prepareSpacesPagesData","_this","Promise","resolve","fetchAllAvailableSpaces","then","aSpaces","Array","isArray","forEach","oSpace","BGColor","refreshColor","isSpacePersonalization","persistedApplyColorToAllPages","applyColorToAllPages","children","oPage","oldColor","isPagePersonalization","spaceId","personalizationState","iconPersonalizationState","isPageIconPersonalization","selectedIndices","getSelectedIndices","includes","setSelectedIndex","e","reject","_refreshColor","oColorObject","newObject","name","key","_handleTreeTableRowSelection","oEvent","bindingContext","getParameter","selectedObject","getObject","prevSelectedObject","getProperty","spaceObject","undefined","controlsDisabled","getBlocked","contextPath","getPath","spaceContextPath","replace","setBlocked","selectedContext","_prepareIconList","length","aIcons","Object","keys","oIconCategory","icons","oIcon","push","tags","concat","toString","categoryId","_handleIconSearch","sQuery","getValue","aFilters","Contains","oList","oBinding","getBinding","filter","selectedColor","isSpaceColorChanged","legendColor","_convertColorToLegend","oldLegendColor","oExistingChange","find","changes","oldApplyColorToAllPages","_applyInnerPageColoring","pageObject","pageId","isSpaceColorChangedBefore","existingSpacePersData","listItem","sIcon","getIcon","isSpaceIconChanged","oldIcon","filteredPages","_getInnerPages","page","bindingPath","isSpaceIconChangedBefore","isSpaceIconPersonalization","oLegendColor","endUserColor","switchValue","colorKey","colorValue","sColorKey","sColorValue","bApplyColorToAllPages","innerPages","oChange","index","_mergeKeyUserChanges","pagePanel","wrapperContainer","getParent","layout","selectorControl","changeSpecificData","changeType","SPACE_COLOR","content","addKeyUserChanges","PAGE_COLOR","SPACE_ICON","PAGE_ICON","publish","getKeyUserChanges","close"],"sources":["KeyUserPagesSettingsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Button from \"sap/m/Button\";\nimport ColorPalette, { ColorPalette$ColorSelectEvent } from \"sap/m/ColorPalette\";\nimport Dialog from \"sap/m/Dialog\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport FlexItemData from \"sap/m/FlexItemData\";\nimport HBox from \"sap/m/HBox\";\nimport Label from \"sap/m/Label\";\nimport List from \"sap/m/List\";\nimport ScrollContainer from \"sap/m/ScrollContainer\";\nimport SearchField, { SearchField$LiveChangeEvent } from \"sap/m/SearchField\";\nimport StandardListItem from \"sap/m/StandardListItem\";\nimport Switch, { Switch$ChangeEvent } from \"sap/m/Switch\";\nimport Text from \"sap/m/Text\";\nimport Title from \"sap/m/Title\";\nimport VBox from \"sap/m/VBox\";\nimport Component from \"sap/ui/core/Component\";\nimport Control from \"sap/ui/core/Control\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport Icon from \"sap/ui/core/Icon\";\nimport Parameters, { Value } from \"sap/ui/core/theming/Parameters\";\nimport Context from \"sap/ui/model/Context\";\nimport Filter from \"sap/ui/model/Filter\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport JSONListBinding from \"sap/ui/model/json/JSONListBinding\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport Column from \"sap/ui/table/Column\";\nimport { Table$RowSelectionChangeEvent } from \"sap/ui/table/Table\";\nimport TreeTable from \"sap/ui/table/TreeTable\";\nimport BaseLayout from \"./BaseLayout\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\nimport { CHANGE_TYPES } from \"./flexibility/Layout.flexibility\";\nimport { IKeyUserChange, ISpacePagePersonalization } from \"./interface/KeyUserInterface\";\nimport { IColor, IPage, ISpace } from \"./interface/PageSpaceInterface\";\nimport NewsAndPagesContainer from \"./NewsAndPagesContainer\";\nimport PagePanel from \"./PagePanel\";\nimport { DEFAULT_BG_COLOR, END_USER_COLORS, FALLBACK_ICON, KEYUSER_SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\nimport { ICONS } from \"./utils/IconList\";\nimport PageManager from \"./utils/PageManager\";\nimport PersonalisationUtils from \"./utils/PersonalisationUtils\";\n\n/**\n *\n * Class for Pages Settings Panel for KeyUser Settings Dialog.\n *\n * @extends BaseSettingsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.KeyUserPagesSettingsPanel\n */\nexport default class KeyUserPagesSettingsPanel extends BaseSettingsPanel {\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\"\n\t};\n\n\tprivate controlMap!: Map<string, Control | Element>;\n\tprivate controlModel!: JSONModel;\n\tprivate pageManagerInstance!: PageManager;\n\tprivate selectedContext!: Context;\n\tprivate _eventBus!: EventBus;\n\tprivate keyuserSpaceColorChanges: Array<ISpacePagePersonalization> = [];\n\tprivate keyuserPageColorChanges: Array<ISpacePagePersonalization> = [];\n\tprivate keyuserSpaceIconChanges: Array<ISpacePagePersonalization> = [];\n\tprivate keyuserPageIconChanges: Array<ISpacePagePersonalization> = [];\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\t\tthis.controlMap = new Map();\n\t\tthis.controlModel = new JSONModel({\n\t\t\tspaces: [],\n\t\t\tselectedSpacePage: {},\n\t\t\ticonList: []\n\t\t});\n\n\t\t// setup panel\n\t\tthis.setProperty(\"key\", KEYUSER_SETTINGS_PANELS_KEYS.PAGES);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"editPages\"));\n\n\t\t// Setup Event Bus\n\t\tthis._eventBus = EventBus.getInstance();\n\n\t\t// setup layout content\n\t\tthis.addAggregation(\"content\", this.getContent());\n\n\t\t// fired every time on panel navigation\n\t\tthis.attachPanelNavigated(() => this.loadSettings());\n\t}\n\n\t/**\n\t * Returns the content for the KeyUser Pages Settings Panel.\n\t *\n\t * @private\n\t * @returns {VBox} The control containing the KeyUser Pages Settings Panel content.\n\t */\n\tprivate getContent(): Dialog {\n\t\tconst dialogId = `${this.getId()}-keyUserPagesSettingsDialog`;\n\t\tif (!this.controlMap.get(dialogId)) {\n\t\t\tconst oDialog = new Dialog(dialogId, {\n\t\t\t\ttitle: this._i18nBundle.getText(\"editPages\"),\n\t\t\t\tcontentWidth: \"47rem\",\n\t\t\t\tcontentHeight: \"90%\",\n\t\t\t\tverticalScrolling: false,\n\t\t\t\tendButton: new Button(`${this.getId()}-keyUserPagesSettingsCloseButton`, {\n\t\t\t\t\ttext: this._i18nBundle.getText(\"Close\"),\n\t\t\t\t\tpress: this._handleDialogClose.bind(this),\n\t\t\t\t\ttype: \"Transparent\"\n\t\t\t\t})\n\t\t\t}).addStyleClass(\"sapContrastPlus\");\n\t\t\tthis.controlMap.set(dialogId, oDialog);\n\n\t\t\tthis.addDialogContent();\n\t\t}\n\t\treturn this.controlMap.get(dialogId) as Dialog;\n\t}\n\n\t/**\n\t * Load settings for the panel.\n\t *\n\t * @private\n\t */\n\tprivate loadSettings(): void {\n\t\tif (!this.pageManagerInstance) {\n\t\t\tthis.pageManagerInstance = PageManager.getInstance(\n\t\t\t\tPersonalisationUtils.getPersContainerId(this._getPanel()),\n\t\t\t\tPersonalisationUtils.getOwnerComponent(this._getPanel()) as Component\n\t\t\t);\n\t\t}\n\t\t// setup layout content\n\t\tvoid this.prepareSpacesPagesData();\n\t\tthis.prepareIconList();\n\t}\n\n\t/**\n\t * Add Dialog Content.\n\t *\n\t * @private\n\t */\n\tprivate addDialogContent(): void {\n\t\tconst dialog = this.controlMap.get(`${this.getId()}-keyUserPagesSettingsDialog`) as Dialog;\n\t\tconst wrapperFlexBox = new FlexBox(`${this.getId()}-wrapperFlexBox`, {\n\t\t\talignItems: \"Start\",\n\t\t\tjustifyContent: \"Start\",\n\t\t\theight: \"100%\",\n\t\t\twidth: \"100%\",\n\t\t\tdirection: \"Row\"\n\t\t});\n\t\twrapperFlexBox.setModel(this.controlModel);\n\t\twrapperFlexBox.addItem(this.getSpacePagesListItems());\n\t\twrapperFlexBox.addItem(this.getDetailsView());\n\t\tdialog.addContent(wrapperFlexBox);\n\t}\n\n\t/**\n\t * Get Space Pages List Items.\n\t *\n\t * @private\n\t * @returns {FlexBox} The control containing the Space Pages List Items.\n\t */\n\tprivate getSpacePagesListItems(): FlexBox {\n\t\tconst flexBox = new FlexBox(`${this.getId()}-spacePagesFlexBox`, {\n\t\t\tdirection: \"Column\",\n\t\t\talignItems: \"Start\",\n\t\t\theight: \"100%\",\n\t\t\twidth: \"24rem\",\n\t\t\tjustifyContent: \"Start\"\n\t\t}).addStyleClass(\"spacePagesFlexBox\");\n\n\t\tconst title = new Title(`${this.getId()}-spacePagesTitle`, {\n\t\t\ttext: this._i18nBundle.getText(\"pageGroupHeader\"),\n\t\t\ttitleStyle: \"H4\"\n\t\t}).addStyleClass(\"sapUiSmallMarginBottom\");\n\t\tflexBox.addItem(title);\n\n\t\tconst treeTableWrapper = new VBox(`${this.getId()}-treeTableWrapper`, {\n\t\t\theight: \"100%\"\n\t\t});\n\n\t\tconst treeTableId = `${this.getId()}-spacePagesTreeTable`;\n\t\tconst treeTable = new TreeTable(treeTableId, {\n\t\t\tselectionMode: \"Single\",\n\t\t\tselectionBehavior: \"RowOnly\",\n\t\t\trows: \"{path:'/spaces', parameters: {arrayNames:['children'], numberOfExpandedLevels: 1}}\",\n\t\t\tid: \"idEditIntrestTreeTable\",\n\t\t\tgroupHeaderProperty: \"label\",\n\t\t\tcolumnHeaderVisible: false,\n\t\t\trowMode: \"Auto\",\n\t\t\trowSelectionChange: this.handleTreeTableRowSelection.bind(this),\n\t\t\twidth: \"22rem\",\n\t\t\tlayoutData: new FlexItemData(`${treeTableId}--layoutData`, {\n\t\t\t\tgrowFactor: 1\n\t\t\t}),\n\t\t\tcolumns: [\n\t\t\t\tnew Column(`${treeTableId}--treeTableColumn`, {\n\t\t\t\t\ttemplate: new HBox(`${treeTableId}--treeTableTemplateBox`, {\n\t\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\tnew Text(`${treeTableId}--treeTableItemText`, {\n\t\t\t\t\t\t\t\ttext: \"{label}\"\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew HBox(`${treeTableId}--treeTableColumnItemBox`, {\n\t\t\t\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\tnew Icon(`${treeTableId}--treeTableItemIcon`, {\n\t\t\t\t\t\t\t\t\t\ttooltip: \"{label}\",\n\t\t\t\t\t\t\t\t\t\tsrc: \"{icon}\",\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"{BGColor/value}\",\n\t\t\t\t\t\t\t\t\t\twidth: \"2.5rem\",\n\t\t\t\t\t\t\t\t\t\theight: \"2.5rem\",\n\t\t\t\t\t\t\t\t\t\tsize: \"1.5rem\",\n\t\t\t\t\t\t\t\t\t\tcolor: \"white\"\n\t\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMargin\")\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t]\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t]\n\t\t}).addStyleClass(\"spacePageTable\");\n\t\tthis.controlMap.set(treeTableId, treeTable);\n\t\ttreeTableWrapper.addItem(treeTable);\n\n\t\tflexBox.addItem(treeTableWrapper);\n\t\treturn flexBox;\n\t}\n\n\t/**\n\t * Get details view for the selected space or page.\n\t *\n\t * @private\n\t * @returns {FlexBox} The control containing the Details.\n\t */\n\tprivate getDetailsView(): FlexBox {\n\t\t// Create Wrapper FlexBox\n\t\tconst flexBox = new FlexBox(`${this.getId()}-personalisationDetailsWrapperFlex`, {\n\t\t\theight: \"100%\",\n\t\t\twidth: \"23rem\",\n\t\t\tdirection: \"Column\",\n\t\t\tvisible: \"{= ${/spaces/length} === 0 ? false : true}\"\n\t\t}).addStyleClass(\"personalisationDetailsWrapperFlex\");\n\n\t\t// Create Color Palette and add to wrapper FlexBox\n\t\tflexBox.addItem(this.getColorPalette());\n\n\t\t// Create Icon List and add to wrapper FlexBox\n\t\tflexBox.addItem(this.getIconList());\n\t\treturn flexBox;\n\t}\n\n\t/**\n\t * Get Color Palette.\n\t *\n\t * @private\n\t * @returns {VBox} The control containing the Color Palette.\n\t */\n\tprivate getColorPalette(): VBox {\n\t\tconst wrapperVBox = new VBox(`${this.getId()}-colorPaletteWrapperVBox`, {\n\t\t\twidth: \"100%\"\n\t\t}).addStyleClass(\"sapUiSmallMarginBottom\");\n\n\t\t// Create Title and add to wrapper VBox\n\t\tconst title = new Title(`${this.getId()}-colorPaletteTitle`, {\n\t\t\ttext: \"{/selectedSpacePage/label}\",\n\t\t\ttitleStyle: \"H4\"\n\t\t});\n\t\twrapperVBox.addItem(title);\n\n\t\t// Create Label and add to wrapper VBox\n\t\tconst label = new Label(`${this.getId()}-colorPaletteSpacePageLabel`, {\n\t\t\twrapping: true,\n\t\t\ttext:\n\t\t\t\t\"{= ${/selectedSpacePage/type} === 'Space' ? '\" +\n\t\t\t\tthis._i18nBundle.getText(\"space\") +\n\t\t\t\t\"' : '\" +\n\t\t\t\tthis._i18nBundle.getText(\"page\") +\n\t\t\t\t\"' }\"\n\t\t}).addStyleClass(\"personalisationDetailsLabel\");\n\t\twrapperVBox.addItem(label);\n\n\t\t// Create Color Palette VBox and add to wrapper VBox\n\t\tconst colorPaletteVBox = new VBox(`${this.getId()}-colorPaletteVBox`, {\n\t\t\twidth: \"100%\"\n\t\t}).addStyleClass(\"sapUiMargin-26Top\");\n\t\twrapperVBox.addItem(colorPaletteVBox);\n\n\t\t// Create Color Palette Label and add to Color Palette VBox\n\t\tconst colorPaletteLabel = new Label(`${this.getId()}-colorPaletteLabel`, {\n\t\t\twrapping: true,\n\t\t\tdesign: \"Bold\",\n\t\t\ttext: this._i18nBundle.getText(\"selectColor\")\n\t\t}).addStyleClass(\"personalisationDetailsLabel\");\n\t\tcolorPaletteVBox.addItem(colorPaletteLabel);\n\n\t\t// Create Color Palette and add to Color Palette VBox\n\t\tconst colorPalette = new ColorPalette(`${this.getId()}-colorPalette`, {\n\t\t\tcolors: END_USER_COLORS().map((color) => color.value as string),\n\t\t\tcolorSelect: this._handleColorSelect.bind(this)\n\t\t}).addStyleClass(\"sapContrastPlus sapUiTinyMarginBottom\");\n\t\tthis.controlMap.set(`${this.getId()}-colorPalette`, colorPalette);\n\t\tcolorPaletteVBox.addItem(colorPalette);\n\n\t\t// Create Switch Wrapper HBox and add to wrapper VBox\n\t\tconst switchWrapperHBox = new HBox(`${this.getId()}-switchWrapperHBox`, {\n\t\t\talignItems: \"Center\",\n\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\theight: \"2rem\",\n\t\t\twidth: \"100%\"\n\t\t});\n\t\twrapperVBox.addItem(switchWrapperHBox);\n\n\t\t// Create Text and add to Switch Wrapper HBox\n\t\tconst switchText = new Text(`${this.getId()}-switchText`, {\n\t\t\ttext: this._i18nBundle.getText(\"editPagesColorMessage\")\n\t\t});\n\t\tswitchWrapperHBox.addItem(switchText);\n\n\t\t// Create Switch HBox and add to Switch Wrapper HBox\n\t\tconst switchHBox = new HBox(`${this.getId()}-switchHBox`, {\n\t\t\talignItems: \"Center\"\n\t\t});\n\t\tswitchWrapperHBox.addItem(switchHBox);\n\n\t\t// Create Switch and add to Switch HBox\n\t\tconst switchId = `${this.getId()}-Switch`;\n\t\tconst switchControl = new Switch(switchId, {\n\t\t\tstate: \"{ path: '/selectedSpacePage/applyColorToAllPages', mode: 'TwoWay' }\",\n\t\t\tchange: this._handleSwitchChange.bind(this),\n\t\t\tenabled: \"{= ${/selectedSpacePage/spaceId} ? false : true }\",\n\t\t\tcustomTextOn: \" \",\n\t\t\tcustomTextOff: \" \"\n\t\t});\n\t\tthis.controlMap.set(switchId, switchControl);\n\t\tswitchHBox.addItem(switchControl);\n\n\t\treturn wrapperVBox;\n\t}\n\n\t/**\n\t * Get Icon List.\n\t *\n\t * @private\n\t * @returns {VBox} The control containing the Icon List.\n\t */\n\tprivate getIconList(): VBox {\n\t\tconst wrapperVBox = new VBox(`${this.getId()}-iconListWrapperVBox`, {\n\t\t\twidth: \"100%\",\n\t\t\theight: \"calc(100% - 15rem)\"\n\t\t});\n\n\t\t// Create Label and add to wrapper VBox\n\t\tconst label = new Label(`${this.getId()}-iconListLabel`, {\n\t\t\twrapping: true,\n\t\t\tdesign: \"Bold\",\n\t\t\ttext: this._i18nBundle.getText(\"icon\")\n\t\t}).addStyleClass(\"personalisationDetailsLabel\");\n\t\twrapperVBox.addItem(label);\n\n\t\t// Create SearchField and add to wrapper VBox\n\t\tconst searchFieldId = `${this.getId()}-iconListSearchField`;\n\t\tconst searchField = new SearchField(searchFieldId, {\n\t\t\twidth: \"100%\",\n\t\t\tliveChange: this.handleIconSearch.bind(this)\n\t\t});\n\t\tthis.controlMap.set(searchFieldId, searchField);\n\t\twrapperVBox.addItem(searchField);\n\n\t\t// Create Scroll Container For List of Icons and add to wrapper VBox\n\t\tconst iconListScrollContainer = new ScrollContainer(`${this.getId()}-iconListScrollContainer`, {\n\t\t\tvertical: true,\n\t\t\thorizontal: false,\n\t\t\theight: \"95%\"\n\t\t});\n\t\twrapperVBox.addItem(iconListScrollContainer);\n\n\t\t// Create List of Icons and add to Scroll Container\n\t\tconst iconListId = `${this.getId()}-iconList`;\n\t\tconst iconList = new List(iconListId, {\n\t\t\titems: {\n\t\t\t\tpath: \"/iconList\",\n\t\t\t\ttemplate: new StandardListItem(`${this.getId()}-iconStandardListItem`, {\n\t\t\t\t\ttitle: \"{title}\",\n\t\t\t\t\ticon: \"{icon}\",\n\t\t\t\t\ttype: \"Active\",\n\t\t\t\t\tpress: (event) => this._handleIconSelect(event.getSource()),\n\t\t\t\t\ticonDensityAware: false,\n\t\t\t\t\ticonInset: false\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\t\tthis.controlMap.set(iconListId, iconList);\n\t\ticonListScrollContainer.addContent(iconList);\n\n\t\treturn wrapperVBox;\n\t}\n\n\t/**\n\t * Prepare spaces and pages data.\n\t *\n\t * @private\n\t */\n\tprivate async prepareSpacesPagesData(): Promise<void> {\n\t\tconst aSpaces = await this.pageManagerInstance.fetchAllAvailableSpaces();\n\t\tif (!Array.isArray(aSpaces)) {\n\t\t\treturn;\n\t\t}\n\t\t//Prepare Spaces and Pages Data\n\t\taSpaces.forEach((oSpace) => {\n\t\t\toSpace.BGColor = oSpace.BGColor ? this.refreshColor(oSpace.BGColor) : DEFAULT_BG_COLOR();\n\t\t\toSpace.isSpacePersonalization = oSpace.BGColor || oSpace.icon ? true : false;\n\t\t\toSpace.icon = oSpace.icon || FALLBACK_ICON;\n\t\t\toSpace.persistedApplyColorToAllPages = oSpace.applyColorToAllPages;\n\t\t\toSpace.children.forEach((oPage) => {\n\t\t\t\tif (oSpace.applyColorToAllPages) {\n\t\t\t\t\toPage.BGColor = this.refreshColor(oSpace.BGColor as IColor) as IColor;\n\t\t\t\t\toPage.oldColor = oPage.isPagePersonalization\n\t\t\t\t\t\t? this.refreshColor(oPage.oldColor as { key: string; value: Value; assigned: boolean })\n\t\t\t\t\t\t: DEFAULT_BG_COLOR();\n\t\t\t\t} else {\n\t\t\t\t\toPage.BGColor = oPage.BGColor ? (this.refreshColor(oPage.BGColor as IColor) as IColor) : DEFAULT_BG_COLOR();\n\t\t\t\t}\n\t\t\t\toPage.spaceId = oSpace.id;\n\t\t\t\toPage.personalizationState = oPage.isPagePersonalization;\n\t\t\t\toPage.iconPersonalizationState = oPage.isPageIconPersonalization;\n\t\t\t\toPage.icon = oPage.icon || oSpace.icon || FALLBACK_ICON;\n\t\t\t});\n\t\t});\n\n\t\tthis.controlModel.setProperty(\"/spaces\", aSpaces);\n\t\t// Select the first item in list selected by default\n\t\tconst treeTable = this.controlMap.get(`${this.getId()}-spacePagesTreeTable`) as TreeTable;\n\t\tconst selectedIndices = treeTable.getSelectedIndices();\n\t\tif (!selectedIndices.includes(0)) {\n\t\t\ttreeTable.setSelectedIndex(0);\n\t\t}\n\t}\n\n\t/**\n\t * Refresh color.\n\t *\n\t * @param {string} sColor The color to refresh.\n\t * @returns {string} The refreshed color.\n\t */\n\tprivate refreshColor(oColorObject: IColor): {\n\t\tkey: string;\n\t\tvalue: Value;\n\t\tassigned: boolean;\n\t} {\n\t\t// Refresh color object with new color value in case of theme switching.\n\t\tconst newObject = { ...oColorObject } as IColor;\n\t\tnewObject.value = Parameters.get({ name: oColorObject.key }) as string;\n\t\treturn newObject;\n\t}\n\n\t/**\n\t * Handle Tree Table Row Selection.\n\t *\n\t * @param {Event} oEvent The event object.\n\t * @private\n\t */\n\tprivate handleTreeTableRowSelection(oEvent: Table$RowSelectionChangeEvent): void {\n\t\tinterface IControlWithBlockedProperty {\n\t\t\tgetBlocked: () => boolean;\n\t\t\tsetBlocked: (val: boolean) => void;\n\t\t}\n\t\tconst bindingContext = oEvent.getParameter(\"rowContext\") as Context;\n\t\tconst selectedObject = bindingContext?.getObject() as ISpace | IPage;\n\n\t\tconst prevSelectedObject = this.controlModel.getProperty(\"/selectedSpacePage\") as ISpace | IPage;\n\t\tconst colorPalette = this.controlMap.get(`${this.getId()}-colorPalette`) as unknown as IControlWithBlockedProperty; // setBlocked is not available in ColorPalette\n\t\tconst searchField = this.controlMap.get(`${this.getId()}-iconListSearchField`) as unknown as IControlWithBlockedProperty; // setBlocked is not available in SearchField\n\t\tconst iconList = this.controlMap.get(`${this.getId()}-iconList`) as unknown as IControlWithBlockedProperty; // setBlocked is not available in List\n\t\tconst switchControl = this.controlMap.get(`${this.getId()}-Switch`) as unknown as IControlWithBlockedProperty; // setBlocked is not available in Switch\n\t\tlet spaceObject = undefined;\n\t\tlet controlsDisabled: boolean = colorPalette.getBlocked();\n\n\t\tif (selectedObject.type === \"Page\") {\n\t\t\tconst contextPath = bindingContext.getPath();\n\t\t\tconst spaceContextPath = contextPath.replace(/\\/children\\/\\d*/, \"\");\n\t\t\tspaceObject = this.controlModel.getProperty(spaceContextPath) as ISpace;\n\t\t}\n\n\t\tcontrolsDisabled =\n\t\t\tprevSelectedObject?.type === selectedObject.type && prevSelectedObject?.id === selectedObject.id ? !controlsDisabled : false;\n\t\tcolorPalette.setBlocked(controlsDisabled ? true : (spaceObject?.applyColorToAllPages as boolean));\n\t\tsearchField.setBlocked(controlsDisabled);\n\t\ticonList.setBlocked(controlsDisabled);\n\t\tswitchControl.setBlocked(controlsDisabled);\n\n\t\tthis.controlModel.setProperty(\"/selectedSpacePage\", selectedObject);\n\t\tthis.selectedContext = bindingContext;\n\t}\n\n\t/**\n\t * Prepare icon list.\n\t *\n\t * @private\n\t */\n\tprivate prepareIconList(): void {\n\t\tinterface IiconList {\n\t\t\ttitle: string;\n\t\t\ticon: string;\n\t\t\ttags: string;\n\t\t\tcategoryId: string;\n\t\t}\n\t\tconst iconList = this.controlModel.getProperty(\"/iconList\") as IiconList[];\n\t\tif (!iconList.length) {\n\t\t\tlet icon: string;\n\t\t\tconst aIcons: IiconList[] = [];\n\t\t\tObject.keys(ICONS).forEach((oIconCategory) => {\n\t\t\t\tObject.keys(ICONS[oIconCategory].icons).forEach(function (oIcon) {\n\t\t\t\t\tswitch (oIconCategory) {\n\t\t\t\t\t\tcase \"SAP-icons\":\n\t\t\t\t\t\t\ticon = \"sap-icon://\" + oIcon;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"SAP-icons-TNT\":\n\t\t\t\t\t\t\ticon = \"sap-icon://\" + oIconCategory + \"/\" + oIcon;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"BusinessSuiteInAppSymbols\":\n\t\t\t\t\t\t\ticon = \"sap-icon://\" + oIconCategory + \"/icon-\" + oIcon;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\taIcons.push({\n\t\t\t\t\t\ttitle: oIcon,\n\t\t\t\t\t\ticon: icon,\n\t\t\t\t\t\ttags: ICONS[oIconCategory].icons[oIcon].concat([oIcon]).toString(),\n\t\t\t\t\t\tcategoryId: oIconCategory\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis.controlModel.setProperty(\"/iconList\", aIcons);\n\t\t}\n\t}\n\n\t/**\n\t * Handle Icon Search.\n\t *\n\t * @param {Event} oEvent The event object.\n\t * @private\n\t */\n\tprivate handleIconSearch(oEvent: SearchField$LiveChangeEvent): void {\n\t\tconst sQuery = oEvent.getSource().getValue();\n\t\tconst aFilters = [];\n\t\tif (sQuery && sQuery.length > 0) {\n\t\t\taFilters.push(new Filter(\"tags\", FilterOperator.Contains, sQuery));\n\t\t}\n\t\tconst oList = this.controlMap.get(`${this.getId()}-iconList`) as List;\n\t\tconst oBinding = oList.getBinding(\"items\") as JSONListBinding;\n\t\toBinding?.filter(aFilters);\n\t}\n\n\t/**\n\t * Handle Color Select.\n\t *\n\t * @param {Event} oEvent The event object.\n\t * @private\n\t */\n\tprivate _handleColorSelect(oEvent: ColorPalette$ColorSelectEvent | null, color?: string): void {\n\t\tconst selectedColor = (oEvent?.getParameter(\"value\") as string) || color || \"\";\n\t\tconst selectedObject = this.selectedContext.getObject() as ISpace | IPage;\n\t\tconst isSpaceColorChanged = !(selectedObject as IPage).spaceId;\n\t\tconst legendColor = this._convertColorToLegend(selectedColor);\n\t\tconst oldLegendColor = (selectedObject?.BGColor as { key: string })?.key;\n\n\t\t// Handle color change for space\n\t\tif (isSpaceColorChanged) {\n\t\t\tconst spaceObject: ISpace = selectedObject as ISpace;\n\t\t\t//Check if existing personalization is available\n\t\t\tconst oExistingChange = this.keyuserSpaceColorChanges.find((changes) => {\n\t\t\t\treturn changes.spaceId === spaceObject.id;\n\t\t\t});\n\t\t\tif (oExistingChange) {\n\t\t\t\toExistingChange.BGColor = legendColor;\n\t\t\t\toExistingChange.applyColorToAllPages = spaceObject.applyColorToAllPages as boolean;\n\t\t\t\toExistingChange.oldApplyColorToAllPages = spaceObject.persistedApplyColorToAllPages as boolean;\n\t\t\t} else {\n\t\t\t\tthis.keyuserSpaceColorChanges.push({\n\t\t\t\t\tspaceId: spaceObject.id,\n\t\t\t\t\tBGColor: legendColor,\n\t\t\t\t\toldColor: oldLegendColor,\n\t\t\t\t\tapplyColorToAllPages: spaceObject.applyColorToAllPages,\n\t\t\t\t\toldApplyColorToAllPages: spaceObject.persistedApplyColorToAllPages\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Apply color to all pages\n\t\t\tif (spaceObject.applyColorToAllPages) {\n\t\t\t\tthis._applyInnerPageColoring(spaceObject, legendColor, selectedColor, true);\n\t\t\t}\n\n\t\t\t// Update View Model\n\t\t\tthis.controlModel.setProperty(\"BGColor/key\", legendColor, this.selectedContext);\n\t\t\tthis.controlModel.setProperty(\"BGColor/value\", selectedColor, this.selectedContext);\n\t\t\tthis.controlModel.setProperty(\"isSpacePersonalization\", true, this.selectedContext);\n\t\t} else {\n\t\t\t// Handle color change for page\n\t\t\tconst pageObject: IPage = selectedObject as IPage;\n\t\t\t// Check if existing personalization is available\n\t\t\tconst oExistingChange = this.keyuserPageColorChanges.find((changes) => {\n\t\t\t\treturn changes.pageId === pageObject.id;\n\t\t\t});\n\n\t\t\tconst spaceObject = (this.controlModel.getProperty(\"/spaces\") as ISpace[]).find((oSpace: ISpace) => {\n\t\t\t\treturn oSpace.id === pageObject.spaceId;\n\t\t\t});\n\t\t\tconst isSpaceColorChangedBefore = spaceObject?.isSpacePersonalization;\n\t\t\tconst existingSpacePersData = this.keyuserSpaceColorChanges.find((changes) => {\n\t\t\t\treturn changes.spaceId === spaceObject?.id;\n\t\t\t});\n\n\t\t\tif (oExistingChange) {\n\t\t\t\toExistingChange.BGColor = legendColor;\n\t\t\t} else {\n\t\t\t\tthis.keyuserPageColorChanges.push({\n\t\t\t\t\tpageId: pageObject.id,\n\t\t\t\t\tspaceId: pageObject.spaceId,\n\t\t\t\t\tBGColor: legendColor,\n\t\t\t\t\toldColor:\n\t\t\t\t\t\tisSpaceColorChangedBefore && !pageObject.isPagePersonalization\n\t\t\t\t\t\t\t? (existingSpacePersData as { oldColor: string })?.oldColor\n\t\t\t\t\t\t\t: oldLegendColor\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Update View Model\n\t\t\tthis.controlModel.setProperty(\"BGColor/key\", legendColor, this.selectedContext);\n\t\t\tthis.controlModel.setProperty(\"BGColor/value\", selectedColor, this.selectedContext);\n\t\t\tthis.controlModel.setProperty(\"isPagePersonalization\", true, this.selectedContext);\n\t\t}\n\t}\n\n\t/**\n\t * Handle Icon Select.\n\t *\n\t * @param {Event} oEvent The event object.\n\t * @private\n\t */\n\tprivate _handleIconSelect(listItem: StandardListItem): void {\n\t\tconst sIcon = listItem.getIcon();\n\t\tconst selectedObject = this.selectedContext.getObject() as ISpace | IPage;\n\t\tconst isSpaceIconChanged = !(selectedObject as IPage).spaceId;\n\n\t\t// Handle icon change for space\n\t\tif (isSpaceIconChanged) {\n\t\t\tconst spaceObject = selectedObject as ISpace;\n\t\t\t// Check if existing personalization is available\n\t\t\tconst oExistingChange = this.keyuserSpaceIconChanges.find((change) => change.spaceId === spaceObject.id);\n\t\t\tif (oExistingChange) {\n\t\t\t\toExistingChange.icon = sIcon;\n\t\t\t} else {\n\t\t\t\tthis.keyuserSpaceIconChanges.push({\n\t\t\t\t\tspaceId: spaceObject.id,\n\t\t\t\t\ticon: sIcon,\n\t\t\t\t\toldIcon: spaceObject.icon\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Apply icon to all pages if page icon is not personalized\n\t\t\tconst filteredPages = this._getInnerPages(spaceObject).filter((spaceObject) => !spaceObject.page.isPageIconPersonalization);\n\t\t\tfilteredPages.forEach((page) => {\n\t\t\t\tthis.controlModel.setProperty(page.bindingPath + \"/icon\", sIcon);\n\t\t\t});\n\n\t\t\t// Update View Model\n\t\t\tthis.controlModel.setProperty(\"icon\", sIcon, this.selectedContext);\n\t\t\tthis.controlModel.setProperty(\"isSpaceIconPersonalization\", true, this.selectedContext);\n\t\t} else {\n\t\t\t// Handle icon change for page\n\t\t\tconst pageObject = selectedObject as IPage;\n\t\t\t// Check if existing personalization is available\n\t\t\tconst oExistingChange = this.keyuserPageIconChanges.find((change) => change.pageId === pageObject.id);\n\n\t\t\tconst spaceObject = (this.controlModel.getProperty(\"/spaces\") as ISpace[]).find((oSpace: ISpace) => {\n\t\t\t\treturn oSpace.id === pageObject.spaceId;\n\t\t\t});\n\t\t\tconst isSpaceIconChangedBefore = spaceObject?.isSpaceIconPersonalization;\n\t\t\tconst existingSpacePersData = this.keyuserSpaceIconChanges.find((changes) => {\n\t\t\t\treturn changes.spaceId === spaceObject?.id;\n\t\t\t});\n\n\t\t\tif (oExistingChange) {\n\t\t\t\toExistingChange.icon = sIcon;\n\t\t\t} else {\n\t\t\t\tthis.keyuserPageIconChanges.push({\n\t\t\t\t\tpageId: pageObject.id,\n\t\t\t\t\tspaceId: pageObject.spaceId,\n\t\t\t\t\ticon: sIcon,\n\t\t\t\t\toldIcon:\n\t\t\t\t\t\tisSpaceIconChangedBefore && !pageObject.isPageIconPersonalization\n\t\t\t\t\t\t\t? existingSpacePersData?.oldIcon\n\t\t\t\t\t\t\t: selectedObject.icon\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Update View Model\n\t\t\tthis.controlModel.setProperty(\"icon\", sIcon, this.selectedContext);\n\t\t\tthis.controlModel.setProperty(\"isPageIconPersonalization\", true, this.selectedContext);\n\t\t}\n\t}\n\n\t/**\n\t * Convert color to legend.\n\t *\n\t * @param {string} sColor The color to convert.\n\t * @returns {string} The converted color.\n\t * @private\n\t */\n\tprivate _convertColorToLegend(color: string): string {\n\t\tlet oLegendColor = END_USER_COLORS().find(function (endUserColor) {\n\t\t\treturn endUserColor.value === color;\n\t\t});\n\t\treturn oLegendColor ? oLegendColor.key : DEFAULT_BG_COLOR().key;\n\t}\n\n\t/**\n\t * Handle Switch Change.\n\t *\n\t * @param {Event} oEvent The event object.\n\t * @private\n\t */\n\tprivate _handleSwitchChange(oEvent: Switch$ChangeEvent): void {\n\t\tconst selectedObject = this.selectedContext.getObject() as ISpace;\n\t\tconst switchValue = oEvent.getParameter(\"state\");\n\n\t\t//Check if existing personalization is available\n\t\tconst oExistingChange = this.keyuserSpaceColorChanges.find((changes) => {\n\t\t\treturn changes.spaceId === selectedObject.id;\n\t\t});\n\n\t\tif (oExistingChange) {\n\t\t\toExistingChange.applyColorToAllPages = selectedObject.applyColorToAllPages as boolean;\n\t\t} else {\n\t\t\tthis._handleColorSelect(null, selectedObject.BGColor?.value as string);\n\t\t}\n\n\t\tconst colorKey = switchValue ? (selectedObject.BGColor?.key as string) : DEFAULT_BG_COLOR().key;\n\t\tconst colorValue = switchValue ? (selectedObject.BGColor?.value as string) : DEFAULT_BG_COLOR().value;\n\n\t\t// Apply color to all pages\n\t\tthis._applyInnerPageColoring(selectedObject, colorKey, colorValue as string, switchValue as boolean);\n\t}\n\n\t/**\n\t * Apply inner page coloring.\n\t *\n\t * @param {ISpace} oSpace The space object.\n\t * @param {string} sColorKey The color key.\n\t * @param {string} sColorValue The color value.\n\t * @param {boolean} bApplyColorToAllPages The flag to apply color to all pages.\n\t * @private\n\t */\n\tprivate _applyInnerPageColoring(oSpace: ISpace, sColorKey: string, sColorValue: string, bApplyColorToAllPages: boolean): void {\n\t\tconst innerPages = this._getInnerPages(oSpace);\n\n\t\tinnerPages.forEach((oPage) => {\n\t\t\tif (!bApplyColorToAllPages && oPage.page.isPagePersonalization) {\n\t\t\t\tconst oExistingChange = this.keyuserPageColorChanges.find(function (oChange) {\n\t\t\t\t\treturn oChange.pageId === oPage.page.id;\n\t\t\t\t});\n\t\t\t\tif (oExistingChange) {\n\t\t\t\t\tconst BGColor = oExistingChange.BGColor;\n\t\t\t\t\tthis.controlModel.setProperty(oPage.bindingPath + \"/BGColor/key\", BGColor);\n\t\t\t\t\tthis.controlModel.setProperty(oPage.bindingPath + \"/BGColor/value\", Parameters.get({ name: BGColor as string }));\n\t\t\t\t} else {\n\t\t\t\t\tthis.controlModel.setProperty(oPage.bindingPath + \"/BGColor/key\", (oPage.page.oldColor as IColor)?.key);\n\t\t\t\t\tthis.controlModel.setProperty(oPage.bindingPath + \"/BGColor/value\", (oPage.page.oldColor as IColor)?.value);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.controlModel.setProperty(oPage.bindingPath + \"/BGColor/key\", sColorKey);\n\t\t\t\tthis.controlModel.setProperty(oPage.bindingPath + \"/BGColor/value\", sColorValue);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Get Inner Pages of Space.\n\t *\n\t * @returns {ISpace} Space.\n\t * @private\n\t */\n\n\tprivate _getInnerPages(oSpace: ISpace) {\n\t\treturn oSpace.children.map((oPage, index) => {\n\t\t\treturn {\n\t\t\t\tpage: oPage,\n\t\t\t\tbindingPath: this.selectedContext.getPath() + \"/children/\" + index\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t * Merge Key User Changes.\n\t *\n\t * @private\n\t */\n\tprivate _mergeKeyUserChanges(): void {\n\t\tconst pagePanel = this._getPanel() as PagePanel;\n\t\tconst wrapperContainer = pagePanel.getParent() as NewsAndPagesContainer;\n\t\tconst layout = wrapperContainer.getParent() as BaseLayout;\n\n\t\t// Add Space Color Changes to KeyUser Changes\n\t\tif (this.keyuserSpaceColorChanges.length) {\n\t\t\tconst keyuserSpaceColorChanges: IKeyUserChange = {\n\t\t\t\tselectorControl: layout,\n\t\t\t\tchangeSpecificData: {\n\t\t\t\t\tchangeType: CHANGE_TYPES.SPACE_COLOR,\n\t\t\t\t\tcontent: [...this.keyuserSpaceColorChanges]\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis.addKeyUserChanges(keyuserSpaceColorChanges);\n\t\t}\n\n\t\t// Add Page Color Changes to KeyUser Changes\n\t\tif (this.keyuserPageColorChanges.length) {\n\t\t\tconst keyuserPageColorChanges: IKeyUserChange = {\n\t\t\t\tselectorControl: layout,\n\t\t\t\tchangeSpecificData: {\n\t\t\t\t\tchangeType: CHANGE_TYPES.PAGE_COLOR,\n\t\t\t\t\tcontent: [...this.keyuserPageColorChanges]\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis.addKeyUserChanges(keyuserPageColorChanges);\n\t\t}\n\n\t\t// Add Space Icon Changes to KeyUser Changes\n\t\tif (this.keyuserSpaceIconChanges.length) {\n\t\t\tconst keyuserSpaceIconChanges: IKeyUserChange = {\n\t\t\t\tselectorControl: layout,\n\t\t\t\tchangeSpecificData: {\n\t\t\t\t\tchangeType: CHANGE_TYPES.SPACE_ICON,\n\t\t\t\t\tcontent: [...this.keyuserSpaceIconChanges]\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis.addKeyUserChanges(keyuserSpaceIconChanges);\n\t\t}\n\n\t\t// Add Page Icon Changes to KeyUser Changes\n\t\tif (this.keyuserPageIconChanges.length) {\n\t\t\tconst keyuserPageIconChanges: IKeyUserChange = {\n\t\t\t\tselectorControl: layout,\n\t\t\t\tchangeSpecificData: {\n\t\t\t\t\tchangeType: CHANGE_TYPES.PAGE_ICON,\n\t\t\t\t\tcontent: [...this.keyuserPageIconChanges]\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis.addKeyUserChanges(keyuserPageIconChanges);\n\t\t}\n\t}\n\n\t/**\n\t * Handle Dialog Close.\n\t *\n\t * @private\n\t */\n\tprivate _handleDialogClose(): void {\n\t\tthis._mergeKeyUserChanges();\n\t\t// Add All Changes to KeyUser Dialog\n\t\tthis._eventBus.publish(\"KeyUserChanges\", \"addNewsPagesChanges\", { changes: this.getKeyUserChanges() });\n\n\t\tconst dialogId = `${this.getId()}-keyUserPagesSettingsDialog`;\n\t\t(this.controlMap.get(dialogId) as Dialog).close();\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":171,"column":0},"map":{"version":3,"names":["sap","ui","define","Button","NavContainer","Page","Element","EventBus","__BaseSettingsDialog","__layoutHandler","___flexibility_Layoutflexibility","_interopRequireDefault","obj","__esModule","default","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","_forTo","array","body","check","i","reject","_cycle","length","BaseSettingsDialog","_forOf","target","step","next","done","return","_fixup","TypeError","values","push","layoutHandler","CHANGE_TYPES","KeyUserSettingsDialog","extend","metadata","designtime","renderer","apiVersion","init","_init","BaseSettingsDialog.prototype.init.call","controlMap","Map","detailPageMap","setContentWidth","setContentHeight","setStretch","setShowHeader","addButton","getId","text","_i18nBundle","getText","type","press","saveChanges","handleCancel","navContainerId","navContainer","set","addContent","get","_eventBus","getInstance","subscribe","channelId","eventId","data","getButtons","setEnabled","disable","onBeforeRendering","_onBeforeRendering","event","BaseSettingsDialog.prototype.onBeforeRendering.call","getNavContainer","removeAllPages","getPanels","forEach","panel","index","addPage","getPage","getPages","navigateToPage","_getPage","isMasterPage","id","page","title","getProperty","showHeader","content","getAggregation","backgroundDesign","showNavButton","navButtonPress","back","associatedPanelId","getAssociation","associatedPanel","getElementById","containerId","getParent","_navigateToPage","pageId","panelId","substring","lastIndexOf","find","includes","firePanelNavigated","to","getDetailsPage","_getDetailsPage","hasDetailsPage","_hasDetailsPage","has","_getNavContainer","_saveChanges","Promise","resolve","isValidChanges","allPanels","panelChanges","getKeyUserChanges","createAndAddChanges","clearKeyUserChanges","onSaveClearChanges","close","clearChanges","_isValidChanges","_this2","keyUserNewsPagePanel","_temp2","change","_temp","changeSpecificData","changeType","NEWS_FEED_URL","isNewsChangesValid","_keyUserNewsPagePanel","_createAndAddChanges","changes","allChanges","addChanges","_handleCancel","onCancelClearKeyUserChanges"],"sources":["KeyUserSettingsDialog.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport { Event as JQueryEvent } from \"jquery\";\nimport Button from \"sap/m/Button\";\nimport NavContainer from \"sap/m/NavContainer\";\nimport Page from \"sap/m/Page\";\nimport { MetadataOptions } from \"sap/ui/core/Component\";\nimport Control from \"sap/ui/core/Control\";\nimport Element from \"sap/ui/core/Element\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport BaseSettingsDialog from \"./BaseSettingsDialog\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\nimport layoutHandler from \"./changeHandler/LayoutHandler\";\nimport { CHANGE_TYPES } from \"./flexibility/Layout.flexibility\";\nimport { IKeyUserChange } from \"./interface/KeyUserInterface\";\nimport KeyUserNewsPagesSettingsPanel from \"./KeyUserNewsPagesSettingsPanel\";\n\n/**\n *\n * Dialog class for Key User Settings.\n *\n * @extends BaseSettingsDialog\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.122\n * @private\n *\n * @alias sap.cux.home.KeyUserSettingsDialog\n */\nexport default class KeyUserSettingsDialog extends BaseSettingsDialog {\n\tstatic renderer = {\n\t\tapiVersion: 2\n\t};\n\tstatic readonly metadata: MetadataOptions = {\n\t\tdesigntime: \"not-adaptable-tree\"\n\t};\n\tprivate controlMap!: Map<string, Control | Element>;\n\tprivate detailPageMap!: Map<string, Page>;\n\tprivate _eventBus!: EventBus;\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\t\tthis.controlMap = new Map();\n\t\tthis.detailPageMap = new Map();\n\n\t\t//setup dialog\n\t\tthis.setContentWidth(\"23.636rem\");\n\t\tthis.setContentHeight(\"23.33rem\");\n\t\tthis.setStretch(false);\n\t\tthis.setShowHeader(false);\n\n\t\t//setup dialog buttons\n\t\tthis.addButton(\n\t\t\tnew Button(`${this.getId()}-dialog-save-btn`, {\n\t\t\t\ttext: this._i18nBundle.getText(\"saveButton\"),\n\t\t\t\ttype: \"Emphasized\",\n\t\t\t\tpress: this.saveChanges.bind(this)\n\t\t\t})\n\t\t);\n\t\tthis.addButton(\n\t\t\tnew Button(`${this.getId()}-dialog-close-btn`, {\n\t\t\t\ttext: this._i18nBundle.getText(\"closeSettings\"),\n\t\t\t\ttype: \"Transparent\",\n\t\t\t\tpress: this.handleCancel.bind(this)\n\t\t\t})\n\t\t);\n\n\t\t//setup dialog content\n\t\tconst navContainerId = `${this.getId()}-navContainer`;\n\t\tconst navContainer = new NavContainer(navContainerId);\n\t\tthis.controlMap.set(navContainerId, navContainer);\n\t\tthis.addContent(this.controlMap.get(navContainerId) as NavContainer);\n\t\tthis._eventBus = EventBus.getInstance();\n\t\tthis._eventBus.subscribe(\n\t\t\t\"KeyUserChanges\",\n\t\t\t\"disabledSaveBtn\",\n\t\t\t(channelId?: string, eventId?: string, data?: object) => {\n\t\t\t\t//errorstate is false when import is successful\n\t\t\t\t// const { changes  = data as {disable: boolean, date: Date};\n\t\t\t\tthis.getButtons()[0].setEnabled(!(data as unknown as { disable: boolean; date: Date })?.disable);\n\t\t\t},\n\t\t\tthis\n\t\t);\n\t}\n\n\t/**\n\t * onBeforeRendering lifecycle method.\n\t * Prepares the SettingsDialog content.\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic onBeforeRendering(event: JQueryEvent): void {\n\t\tsuper.onBeforeRendering(event);\n\t\tconst navContainer = this.getNavContainer();\n\t\tnavContainer.removeAllPages();\n\n\t\t//setup master and detail page content\n\t\tthis.getPanels().forEach((panel: BaseSettingsPanel, index: number) => {\n\t\t\tnavContainer.addPage(this.getPage(panel, !index));\n\t\t});\n\n\t\t// navigate to the first page\n\t\tif (navContainer.getPages()?.length) {\n\t\t\tthis.navigateToPage(navContainer.getPages()[0] as Page);\n\t\t}\n\t}\n\n\t/**\n\t * Returns the page content for the SettingsDialog.\n\t *\n\t * @private\n\t * @returns {Page} The page content for the SettingsDialog.\n\t */\n\tprivate getPage(panel: BaseSettingsPanel, isMasterPage: boolean): Page {\n\t\tconst id = `${this.getId()}-${panel.getId()}-page`;\n\t\tlet page = this.controlMap.get(id) as Page;\n\t\tif (!page) {\n\t\t\tconst navContainer = this.getNavContainer();\n\t\t\tpage = new Page(id, {\n\t\t\t\ttitle: panel.getProperty(\"title\") as string,\n\t\t\t\tshowHeader: true,\n\t\t\t\tcontent: panel.getAggregation(\"content\") as Control,\n\t\t\t\tbackgroundDesign: \"Transparent\",\n\t\t\t\tshowNavButton: isMasterPage ? false : true,\n\t\t\t\tnavButtonPress: () => navContainer.back()\n\t\t\t});\n\t\t\tthis.controlMap.set(id, page);\n\n\t\t\t// Set the details page map for navigation\n\t\t\tconst associatedPanelId = panel.getAssociation(\"panel\", null) as string;\n\t\t\tconst associatedPanel = Element.getElementById(associatedPanelId) as BaseSettingsPanel;\n\t\t\tconst containerId = associatedPanel?.getParent()?.getId();\n\t\t\tif (containerId) {\n\t\t\t\tthis.detailPageMap.set(containerId, page);\n\t\t\t}\n\t\t}\n\t\treturn page;\n\t}\n\n\t/**\n\t * Navigates to the selected page.\n\t *\n\t * @param {Page} page The page to navigate to.\n\t */\n\tpublic navigateToPage(page: Page | undefined): void {\n\t\tconst pageId = page?.getId();\n\t\tconst panelId = pageId?.substring(0, pageId.lastIndexOf(\"-page\"));\n\t\tconst panel = this.getPanels().find((panel: BaseSettingsPanel) => panelId?.includes(panel.getId()));\n\t\tpanel?.firePanelNavigated();\n\t\tconst navContainerId = `${this.getId()}-navContainer`;\n\t\tconst navContainer = this.controlMap.get(navContainerId) as NavContainer;\n\t\tif (page) {\n\t\t\tnavContainer.to(page);\n\t\t}\n\t}\n\n\t/**\n\t * Returns the details page for the selected panel.\n\t *\n\t * @param {BaseSettingsPanel} panel The selected panel.\n\t * @returns {Page | undefined} The details page for the selected panel.\n\t */\n\tpublic getDetailsPage(containerId: string): Page | undefined {\n\t\treturn this.detailPageMap.get(containerId);\n\t}\n\n\t/**\n\t * Checks if the selected panel has a details page.\n\t *\n\t * @param {BaseSettingsPanel} panel The selected panel.\n\t * @returns {boolean} True if the selected panel has a details page, false otherwise.\n\t */\n\tpublic hasDetailsPage(containerId: string): boolean {\n\t\treturn this.detailPageMap.has(containerId);\n\t}\n\n\t/**\n\t * Returns the NavContainer.\n\t *\n\t * @returns {NavContainer} NavContainer.\n\t */\n\tpublic getNavContainer(): NavContainer {\n\t\tconst navContainerId = `${this.getId()}-navContainer`;\n\t\treturn this.controlMap.get(navContainerId) as NavContainer;\n\t}\n\n\t/**\n\t * Save the changes.\n\t *\n\t * @private\n\t */\n\tprivate async saveChanges() {\n\t\tconst isValidChanges = await this.isValidChanges();\n\t\tif (isValidChanges) {\n\t\t\tconst allPanels = this.getPanels();\n\t\t\tallPanels.forEach((panel: BaseSettingsPanel) => {\n\t\t\t\tconst panelChanges = panel.getKeyUserChanges();\n\t\t\t\tif (panelChanges.length) {\n\t\t\t\t\tthis.createAndAddChanges(panelChanges);\n\t\t\t\t\tpanel.clearKeyUserChanges();\n\t\t\t\t}\n\t\t\t});\n\t\t\t(allPanels[1] as KeyUserNewsPagesSettingsPanel)?.onSaveClearChanges();\n\t\t\tthis.close();\n\t\t\tlayoutHandler.resolve();\n\t\t\tlayoutHandler.clearChanges();\n\t\t}\n\t}\n\n\tprivate async isValidChanges(): Promise<boolean> {\n\t\tlet isValidChanges = true;\n\t\tconst keyUserNewsPagePanel = this.getPanels()[1] as KeyUserNewsPagesSettingsPanel;\n\t\tconst panelChanges = keyUserNewsPagePanel.getKeyUserChanges();\n\t\tfor (const change of panelChanges) {\n\t\t\tif (change.changeSpecificData.changeType === CHANGE_TYPES.NEWS_FEED_URL) {\n\t\t\t\tisValidChanges = await keyUserNewsPagePanel.isNewsChangesValid();\n\t\t\t}\n\t\t}\n\t\treturn isValidChanges;\n\t}\n\n\t/**\n\t * Create and add keyuser changes to layoutHandler\n\t *\n\t * @private\n\t */\n\tprivate createAndAddChanges(changes: Array<IKeyUserChange>) {\n\t\tconst allChanges: unknown[] = [];\n\t\tchanges.forEach((change) => {\n\t\t\tallChanges.push(change);\n\t\t});\n\t\tlayoutHandler.addChanges(allChanges);\n\t}\n\n\t/**\n\t * Handle cancel event.\n\t *\n\t * @private\n\t */\n\tprivate handleCancel(): void {\n\t\tconst allPanels = this.getPanels();\n\t\tallPanels.forEach((panel: BaseSettingsPanel) => {\n\t\t\tconst panelChanges = panel.getKeyUserChanges();\n\t\t\tif (panelChanges.length) {\n\t\t\t\tpanel.clearKeyUserChanges();\n\t\t\t}\n\t\t});\n\t\tconst keyUserNewsPagePanel = this.getPanels()[1] as KeyUserNewsPagesSettingsPanel;\n\t\tkeyUserNewsPagePanel.onCancelClearKeyUserChanges();\n\t\tthis.close();\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":176,"column":0},"map":{"version":3,"names":["sap","ui","define","Log","Element","S4MyHome","Container","__AdvancedSettingsPanel","__BaseLayout","__BaseLayoutRenderer","__ContentAdditionDialog","__InsightsCardsSettingsPanel","__InsightsTilesSettingsPanel","__KeyUserLayoutSettingsPanel","__KeyUserNewsPagesSettingsPanel","__KeyUserSettingsDialog","__LayoutSettingsPanel","__NewsAndPagesContainer","__NewsSettingsPanel","__NoDataContainer","__PagePanel","__PageSettingsPanel","__SettingsDialog","__ToDosContainer","___utils_Constants","__KeyUserPersonalization","___utils_PerformanceUtils","__PersonalisationUtils","_interopRequireDefault","obj","__esModule","default","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","_forTo","array","body","check","i","reject","_cycle","length","AdvancedSettingsPanel","_forOf","target","step","next","done","return","_fixup","TypeError","values","push","BaseLayout","_catch","recover","BaseLayoutRenderer","ContentAdditionDialog","InsightsCardsSettingsPanel","InsightsTilesSettingsPanel","KeyUserLayoutSettingsPanel","KeyUserNewsPagesSettingsPanel","KeyUserSettingsDialog","LayoutSettingsPanel","NewsAndPagesContainer","NewsSettingsPanel","NoDataContainer","PagePanel","PageSettingsPanel","SettingsDialog","ToDosContainer","SETTINGS_PANELS_KEYS","KeyUserPersonalization","setupPerformanceTracking","PersonalisationUtils","Layout","extend","renderer","metadata","designtime","constructor","_constructor","id","settings","BaseLayout.prototype.constructor.call","_shellUserActions","_isDefaultSettingsDialog","_customNoDataContainerPresent","init","_init","BaseLayout.prototype.init.call","setProperty","_keyUserPersonalization","getOwnerComponent","_i18nBundle","_addUserActions","Promise","resolve","_temp3","getVisible","_userActionsAdded","userActions","getId","icon","text","getText","tooltip","press","openSettingsDialog","getRTAUserAction","rtaUserAction","getServiceAsync","extensionService","_temp2","toggleUserActions","event","show","getParameter","forEach","userAction","showOnHome","hideOnHome","attachRouteMatched","_temp","action","createUserAction","controlType","shellUserAction","error","warning","Error","message","_openSettingsDialog","selectedKey","arguments","undefined","context","_this2","settingsDialog","getAggregation","getPanels","_getSettingsPanels","_addPanelsToSettingsDialog","_calculateSectionsState","BaseLayout.prototype.openSettingsDialog.call","closeSettingsDialog","_closeSettingsDialog","close","onBeforeRendering","_onBeforeRendering","_this3","BaseLayout.prototype.onBeforeRendering.call","_setupSettingsDialog","_setupContentAdditionDialog","persContainerId","getProperty","setPersContainerId","getNoDataContainer","_aOrderedSections","setTimeout","_prepareLayoutData","_setupKeyUserSettingsDialog","allPanels","getItems","container","setAssociation","getContent","panel","panelEnableSettings","enableSettings","defaultSettingsDialog","_getDefaultSettingsDialog","setSettingsDialog","settingsPanel","_getDefaultSettingsPanel","addPanel","sortedPanels","_sortPanels","removeAllPanels","insertPanel","_getLayoutSettingsPanel","_getAdvancedSettingsPanel","panelClassName","getMetadata","getName","_addSettingsPanel","panels","Object","keys","map","key","find","filter","Boolean","_advancedSettingsPanel","_layoutSettingsPanel","_getNoDataContainer","_noDataContainer","item","setVisible","hasVisibleSection","isLayoutExpanded","aOrderedElements","element","getElementById","completeId","aElements","aElementMap","sId","title","getTooltip","elementVisible","elementCustomSettings","getCustomSettings","sContainerType","blocked","visible","setNoDataContainerVisibility","_setNoDataContainerVisibility","contentVisible","noDataContainer","insertItem","removeItem","_this4","aSettingsPanel","_isCustomNews","oSettingsPanel","resetImportModel","setSectionDetails","_setSectionDetails","_this5","elementArray","_temp7","_temp6","oElementItem","bBlocked","_temp5","_temp4","_this5$checkPagesBloc","aNewsAndPagesPanel","_aNewsAndPagesPanel$l","checkPagesBlocked","checkToDoBlocked","_checkPagesBlocked","_this6","_temp10","_pagesAvailable","_temp9","oPanel","_temp8","getUserAvailablePages","aPages","_checkToDoBlocked","toDoContainer","_toDoAccessible","keyUserSettingsDialog","defaultKeyUserSettingsDialog","keyUserLayoutSettingsPanel","keyUserNewsPagesSettingsPanel","setAggregation","getpagesAvailable","_getpagesAvailable","isToDoAccessible","_isToDoAccessible","customNewAvailable","_customNewAvailable","getSections","_getSections","setSections","_setSections","sections","resetSections","_resetSections","contentAdditionDialog"],"sources":["Layout.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport { Event } from \"jquery\";\nimport Log from \"sap/base/Log\";\nimport UI5Event from \"sap/ui/base/Event\";\nimport Element, { MetadataOptions } from \"sap/ui/core/Element\";\nimport S4MyHome from \"sap/ushell/api/S4MyHome\";\nimport Container from \"sap/ushell/Container\";\nimport Extension from \"sap/ushell/services/Extension\";\nimport Item from \"sap/ushell/services/Extension/Item\";\nimport AdvancedSettingsPanel from \"./AdvancedSettingsPanel\";\nimport BaseContainer from \"./BaseContainer\";\nimport type { $BaseLayoutSettings } from \"./BaseLayout\";\nimport BaseLayout from \"./BaseLayout\";\nimport BaseLayoutRenderer from \"./BaseLayoutRenderer\";\nimport BasePanel from \"./BasePanel\";\nimport BaseSettingsDialog from \"./BaseSettingsDialog\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\nimport ContentAdditionDialog from \"./ContentAdditionDialog\";\nimport InsightsCardsSettingsPanel from \"./InsightsCardsSettingsPanel\";\nimport InsightsTilesSettingsPanel from \"./InsightsTilesSettingsPanel\";\nimport KeyUserLayoutSettingsPanel from \"./KeyUserLayoutSettingsPanel\";\nimport KeyUserNewsPagesSettingsPanel from \"./KeyUserNewsPagesSettingsPanel\";\nimport KeyUserSettingsDialog from \"./KeyUserSettingsDialog\";\nimport LayoutSettingsPanel from \"./LayoutSettingsPanel\";\nimport NewsAndPagesContainer from \"./NewsAndPagesContainer\";\nimport NewsSettingsPanel from \"./NewsSettingsPanel\";\nimport NoDataContainer from \"./NoDataContainer\";\nimport PagePanel from \"./PagePanel\";\nimport PageSettingsPanel from \"./PageSettingsPanel\";\nimport SettingsDialog from \"./SettingsDialog\";\nimport ToDosContainer from \"./ToDosContainer\";\nimport { SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\nimport KeyUserPersonalization from \"./utils/KeyUserPersonalization\";\nimport { setupPerformanceTracking } from \"./utils/PerformanceUtils\";\nimport PersonalisationUtils from \"./utils/PersonalisationUtils\";\n\ninterface IElement {\n\tcompleteId: string;\n\tsContainerType: string;\n\tblocked: boolean;\n\tvisible: boolean;\n\ttitle: string;\n\ttext: string;\n}\n\nexport interface UserActionProperties {\n\tid: string;\n\ticon: string;\n\ttext: string;\n\ttooltip: string;\n\tpress: () => void;\n}\n\n/**\n *\n * Layout class for the My Home layout.\n *\n * @extends BaseLayout\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @public\n *\n * @alias sap.cux.home.Layout\n */\nexport default class Layout extends BaseLayout {\n\tprivate _layoutSettingsPanel!: LayoutSettingsPanel;\n\tprivate _advancedSettingsPanel!: AdvancedSettingsPanel;\n\tprivate _isCustomNews!: boolean;\n\tprivate _pagesAvailable!: boolean;\n\tprivate _toDoAccessible!: boolean;\n\tprivate _aOrderedSections!: IElement[] | undefined;\n\tprivate _noDataContainer!: NoDataContainer;\n\tprivate _shellUserActions: Item[] = [];\n\tprivate _userActionsAdded!: boolean;\n\tprivate _keyUserPersonalization!: KeyUserPersonalization;\n\tprivate _isDefaultSettingsDialog: boolean = false;\n\tprivate _customNoDataContainerPresent: boolean = true;\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tdesigntime: \"sap/cux/home/designtime/Layout.designtime\"\n\t};\n\tstatic renderer: typeof BaseLayoutRenderer = BaseLayoutRenderer;\n\n\t/**\n\t * Constructor for a new layout.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $BaseLayoutSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @async\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\t//setup layout\n\t\tthis.setProperty(\"enableSettings\", true);\n\t\tthis.setProperty(\"enableFullScreen\", true);\n\n\t\t// Setup KeyUserPersonalization\n\t\tthis._keyUserPersonalization = new KeyUserPersonalization(PersonalisationUtils.getOwnerComponent(this), this._i18nBundle);\n\t}\n\n\t/**\n\t * Adds all user actions to the Fiori launchpad.\n\t *\n\t * @private\n\t */\n\tprivate async _addUserActions() {\n\t\ttry {\n\t\t\tif (this.getVisible() && !this._userActionsAdded) {\n\t\t\t\tthis._userActionsAdded = true;\n\n\t\t\t\t// Configure User Actions\n\t\t\t\tconst userActions: UserActionProperties[] = [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: `${this.getId()}-homeSettingsBtn`,\n\t\t\t\t\t\ticon: \"sap-icon://edit\",\n\t\t\t\t\t\ttext: this._i18nBundle.getText(\"myHomeSettings\") as string,\n\t\t\t\t\t\ttooltip: this._i18nBundle.getText(\"myHomeSettings\") as string,\n\t\t\t\t\t\tpress: () => {\n\t\t\t\t\t\t\tvoid this.openSettingsDialog();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t\t// Add RTA User Action if Key User\n\t\t\t\tconst rtaUserAction = await this._keyUserPersonalization.getRTAUserAction();\n\t\t\t\tif (rtaUserAction) {\n\t\t\t\t\tuserActions.push(rtaUserAction);\n\t\t\t\t}\n\n\t\t\t\t// Attach User Actions\n\t\t\t\tconst extensionService = await Container.getServiceAsync<Extension>(\"Extension\");\n\t\t\t\tfor (let action of userActions) {\n\t\t\t\t\tconst shellUserAction = await extensionService.createUserAction(action, {\n\t\t\t\t\t\tcontrolType: \"sap.ushell.ui.launchpad.ActionItem\"\n\t\t\t\t\t});\n\t\t\t\t\tshellUserAction.showOnHome();\n\t\t\t\t\tthis._shellUserActions.push(shellUserAction);\n\t\t\t\t}\n\n\t\t\t\t// Toggle User Actions on Page Change\n\t\t\t\tconst toggleUserActions = (event: UI5Event<{ isMyHomeRoute: boolean }>) => {\n\t\t\t\t\tconst show = event.getParameter(\"isMyHomeRoute\");\n\t\t\t\t\tthis._shellUserActions.forEach(function (userAction) {\n\t\t\t\t\t\tif (show) {\n\t\t\t\t\t\t\tuserAction.showOnHome();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuserAction.hideOnHome();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tS4MyHome.attachRouteMatched({}, toggleUserActions, this);\n\t\t\t}\n\t\t} catch (error: unknown) {\n\t\t\tLog.warning(\"Unable to add User Actions\", error instanceof Error ? error.message : \"\");\n\t\t}\n\t}\n\n\t/**\n\t * Opens the settings dialog for the layout.\n\t * Overriden from the BaseLayout to ensure of all panels\n\t * to the dialog if not already added.\n\t *\n\t * @private\n\t * @param {string} selectedKey The key of the panel to navigate to\n\t * @override\n\t */\n\tpublic async openSettingsDialog(selectedKey: string = \"\", context?: object): Promise<void> {\n\t\tconst settingsDialog = this.getAggregation(\"settingsDialog\") as BaseSettingsDialog;\n\t\tif (settingsDialog.getPanels().length !== this._getSettingsPanels().length) {\n\t\t\tthis._addPanelsToSettingsDialog();\n\t\t}\n\t\tawait this._calculateSectionsState();\n\n\t\tsuper.openSettingsDialog(selectedKey, context);\n\t}\n\n\t/**\n\t * Close Settings Dialog\n\t *\n\t * @private\n\t *\n\t */\n\tpublic closeSettingsDialog(): void {\n\t\tconst settingsDialog = this.getAggregation(\"settingsDialog\") as BaseSettingsDialog;\n\t\tsettingsDialog?.close();\n\t}\n\n\t/**\n\t * onBeforeRendering lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic async onBeforeRendering(event: Event): Promise<void> {\n\t\tsuper.onBeforeRendering(event);\n\n\t\t//setup common layout features\n\t\tthis._setupSettingsDialog();\n\n\t\t//setup content addition dialog\n\t\tthis._setupContentAdditionDialog();\n\n\t\t// If PersContainerId provided set to PersonalisationUtils\n\t\tconst persContainerId = this.getProperty(\"persContainerId\") as string;\n\t\tif (persContainerId) {\n\t\t\tPersonalisationUtils.setPersContainerId(persContainerId);\n\t\t}\n\n\t\tthis.getNoDataContainer();\n\n\t\t//prepare layout data, if not already done\n\t\tif (!this._aOrderedSections) {\n\t\t\tsetTimeout(this._prepareLayoutData.bind(this));\n\t\t}\n\n\t\t// Setup KeyUserPersonalization\n\t\tthis._setupKeyUserSettingsDialog();\n\n\t\t//configure user action button if the layout is in an ushell environment\n\t\tawait this._addUserActions();\n\n\t\t// Initialize Performance Metrics\n\t\tawait setupPerformanceTracking(this);\n\t}\n\n\t/**\n\t * Sets up the settings dialog for the layout.\n\t *\n\t * @private\n\t */\n\tprivate _setupSettingsDialog(): void {\n\t\tconst allPanels: BasePanel[] = [];\n\t\t(this.getItems() || []).forEach((container) => {\n\t\t\t//link container to layout\n\t\t\tcontainer.setAssociation(\"layout\", this);\n\n\t\t\t//enable settings for all panels\n\t\t\tcontainer.getContent().forEach((panel) => {\n\t\t\t\tallPanels.push(panel);\n\t\t\t\tconst panelEnableSettings = panel.getProperty(\"enableSettings\") as boolean;\n\t\t\t\tpanel.setProperty(\"enableSettings\", panelEnableSettings !== undefined ? panelEnableSettings : true);\n\t\t\t});\n\t\t});\n\n\t\tconst enableSettings = this.getProperty(\"enableSettings\") as boolean;\n\t\tconst settingsDialog = this.getAggregation(\"settingsDialog\") as BaseSettingsDialog | undefined;\n\t\tif (!settingsDialog) {\n\t\t\tthis._isDefaultSettingsDialog = true;\n\n\t\t\t// If settings dialog is not provided and settings is enabled, create a default settings dialog\n\t\t\tif (enableSettings) {\n\t\t\t\tconst defaultSettingsDialog = this._getDefaultSettingsDialog(allPanels);\n\t\t\t\tthis.setSettingsDialog(defaultSettingsDialog);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get default settings dialog\n\t * @private\n\t * @returns {BaseSettingsDialog} Default settings dialog\n\t */\n\tprivate _getDefaultSettingsDialog(allPanels: BasePanel[]): BaseSettingsDialog {\n\t\tconst defaultSettingsDialog = new SettingsDialog(`${this.getId()}-settings-dialog`);\n\n\t\tallPanels.forEach((panel) => {\n\t\t\tconst settingsPanel = this._getDefaultSettingsPanel(panel);\n\t\t\tif (settingsPanel) {\n\t\t\t\tdefaultSettingsDialog.addPanel(settingsPanel);\n\t\t\t}\n\t\t});\n\n\t\t//sort all panels and add them to the settings dialog\n\t\tconst sortedPanels = this._sortPanels(defaultSettingsDialog.getPanels());\n\t\tdefaultSettingsDialog.removeAllPanels();\n\t\tsortedPanels.forEach((panel) => defaultSettingsDialog.addPanel(panel));\n\n\t\tdefaultSettingsDialog.insertPanel(this._getLayoutSettingsPanel(), 0);\n\t\tdefaultSettingsDialog.addPanel(this._getAdvancedSettingsPanel());\n\n\t\treturn defaultSettingsDialog;\n\t}\n\n\t/**\n\t * Get default Settings Panel\n\t *\n\t * @private\n\t */\n\n\tprivate _getDefaultSettingsPanel(panel: BasePanel): BaseSettingsPanel | undefined {\n\t\tlet settingsPanel: BaseSettingsPanel | undefined;\n\t\tconst panelClassName = panel.getMetadata().getName();\n\t\tswitch (panelClassName) {\n\t\t\tcase \"sap.cux.home.NewsPanel\":\n\t\t\t\tsettingsPanel = new NewsSettingsPanel(`${panel.getId()}-news-settings`);\n\t\t\t\tbreak;\n\t\t\tcase \"sap.cux.home.PagePanel\":\n\t\t\t\tsettingsPanel = new PageSettingsPanel(`${panel.getId()}-page-settings`);\n\t\t\t\tbreak;\n\t\t\tcase \"sap.cux.home.TilesPanel\":\n\t\t\t\tsettingsPanel = new InsightsTilesSettingsPanel(`${panel.getId()}-tiles-settings`);\n\t\t\t\tbreak;\n\t\t\tcase \"sap.cux.home.CardsPanel\":\n\t\t\t\tsettingsPanel = new InsightsCardsSettingsPanel(`${panel.getId()}-cards-settings`);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tsettingsPanel?.setAssociation(\"panel\", panel);\n\t\treturn settingsPanel;\n\t}\n\n\t/**\n\t * Adds all settings panels to the settings dialog, including\n\t * the layout settings panel and advanced settings panel.\n\t *\n\t * @private\n\t */\n\tprivate _addPanelsToSettingsDialog(): void {\n\t\tconst settingsDialog = this.getAggregation(\"settingsDialog\") as BaseSettingsDialog;\n\n\t\t//sort all panels and add them to the settings dialog\n\t\tconst sortedPanels = this._sortPanels(settingsDialog.getPanels());\n\t\tsettingsDialog.removeAllPanels();\n\t\tsortedPanels.forEach((panel) => settingsDialog.addPanel(panel));\n\n\t\t// Layout Settings should be displayed only if no settings dialog is provided\n\t\tif (this._isDefaultSettingsDialog) {\n\t\t\tsettingsDialog.insertPanel(this._getLayoutSettingsPanel(), 0);\n\t\t\tsettingsDialog.addPanel(this._getAdvancedSettingsPanel());\n\t\t}\n\t\tsettingsDialog.addPanel(this._getAdvancedSettingsPanel());\n\t\tthis._addSettingsPanel(settingsDialog.getPanels(), true);\n\t}\n\n\t/**\n\t * Sorts settings panels based on a predefined order.\n\t *\n\t * @private\n\t * @returns {BaseSettingsPanel[]} Sorted settings panels.\n\t */\n\tprivate _sortPanels(panels: BaseSettingsPanel[]): BaseSettingsPanel[] {\n\t\treturn Object.keys(SETTINGS_PANELS_KEYS)\n\t\t\t.map((key) => panels.find((panel) => panel?.getProperty(\"key\") === key))\n\t\t\t.filter(Boolean) as BaseSettingsPanel[];\n\t}\n\n\t/**\n\t * Retrieves the advanced settings panel associated with the layout.\n\t *\n\t * @private\n\t * @returns {AdvancedSettingsPanel} The advanced settings panel.\n\t */\n\tprivate _getAdvancedSettingsPanel(): AdvancedSettingsPanel {\n\t\tif (!this._advancedSettingsPanel) {\n\t\t\tthis._advancedSettingsPanel = new AdvancedSettingsPanel(`${this.getId()}-advanced-settings`);\n\t\t\tthis._advancedSettingsPanel.setAssociation(\"panel\", this);\n\t\t}\n\n\t\treturn this._advancedSettingsPanel;\n\t}\n\n\t/**\n\t * Retrieves the layout settings panel associated with the layout.\n\t *\n\t * @private\n\t * @returns {LayoutSettingsPanel} The layout settings panel.\n\t */\n\tprivate _getLayoutSettingsPanel(): LayoutSettingsPanel {\n\t\tif (!this._layoutSettingsPanel) {\n\t\t\tthis._layoutSettingsPanel = new LayoutSettingsPanel(`${this.getId()}-layout-settings`);\n\t\t\tthis._layoutSettingsPanel.setAssociation(\"panel\", this);\n\t\t}\n\n\t\treturn this._layoutSettingsPanel;\n\t}\n\n\t/**\n\t * Setup of no data container\n\t *\n\t * @private\n\t * @returns {NoDataContainer} No data container\n\t */\n\tprivate getNoDataContainer(): NoDataContainer {\n\t\tif (!this._noDataContainer) {\n\t\t\tthis._noDataContainer = this.getItems().find((item) => item instanceof NoDataContainer) as NoDataContainer;\n\n\t\t\t// if no data container is already present, use it\n\t\t\tif (!this._noDataContainer) {\n\t\t\t\tthis._customNoDataContainerPresent = false;\n\t\t\t\tthis._noDataContainer = new NoDataContainer(`${this.getId()}-noDataContainer`);\n\t\t\t}\n\t\t\tthis._noDataContainer.setVisible(false);\n\t\t}\n\t\treturn this._noDataContainer;\n\t}\n\n\t/**\n\t * Prepares the layout data.\n\t *\n\t * @private\n\t */\n\tprivate _prepareLayoutData(): void {\n\t\tlet hasVisibleSection = false;\n\t\tconst isLayoutExpanded = this.getProperty(\"expanded\") as boolean;\n\t\tconst aOrderedElements =\n\t\t\tthis._aOrderedSections?.map((element) => Element.getElementById(element.completeId) as BaseContainer) || [];\n\t\tconst aElements = isLayoutExpanded && aOrderedElements.length ? aOrderedElements : this.getItems();\n\t\t// set aelementsMap as elementMap[] | [];\n\t\tconst aElementMap: IElement[] = [];\n\t\taElements.forEach((element: BaseContainer) => {\n\t\t\tif (element !== this.getNoDataContainer()) {\n\t\t\t\tconst sId = element.getId();\n\n\t\t\t\t//if no title set for container , then layout setting should show tooltip as title within the settings dialog\n\t\t\t\tlet title = element.getProperty(\"title\") as string;\n\t\t\t\tif (!title) {\n\t\t\t\t\ttitle = element.getTooltip() as string;\n\t\t\t\t}\n\t\t\t\tconst elementVisible = element.getVisible();\n\t\t\t\tconst elementCustomSettings = element.getCustomSettings();\n\t\t\t\taElementMap.push({\n\t\t\t\t\tcompleteId: sId,\n\t\t\t\t\tsContainerType: element.getMetadata().getName(),\n\t\t\t\t\tblocked: false,\n\t\t\t\t\tvisible: element.getProperty(\"visible\") as boolean,\n\t\t\t\t\ttitle: elementCustomSettings.title || title,\n\t\t\t\t\ttext: elementCustomSettings.text\n\t\t\t\t});\n\t\t\t\tif (elementVisible) {\n\t\t\t\t\thasVisibleSection = true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._aOrderedSections = aElementMap;\n\t\tif (!this.getProperty(\"expanded\")) {\n\t\t\tthis.setNoDataContainerVisibility(!hasVisibleSection);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the visibility of the no data container\n\t *\n\t * @private\n\t */\n\tpublic setNoDataContainerVisibility(contentVisible: boolean): void {\n\t\tconst noDataContainer = this.getNoDataContainer();\n\t\tnoDataContainer?.setVisible(contentVisible);\n\t\tif (!this._customNoDataContainerPresent) {\n\t\t\tif (contentVisible) {\n\t\t\t\tthis.insertItem(noDataContainer, 0);\n\t\t\t} else {\n\t\t\t\tthis.removeItem(noDataContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Calculates the state of the sections based on the layout's content.\n\t * @private\n\t */\n\tpublic async _calculateSectionsState(): Promise<void> {\n\t\tconst settingsDialog = this.getAggregation(\"settingsDialog\") as SettingsDialog;\n\t\tconst aSettingsPanel = settingsDialog.getPanels();\n\t\tthis._isCustomNews = false;\n\t\taSettingsPanel.forEach((oSettingsPanel: BaseSettingsPanel) => {\n\t\t\tif (oSettingsPanel instanceof NewsSettingsPanel) {\n\t\t\t\tthis._isCustomNews = true;\n\t\t\t}\n\t\t\tif (oSettingsPanel instanceof AdvancedSettingsPanel) {\n\t\t\t\toSettingsPanel.resetImportModel(true);\n\t\t\t}\n\t\t});\n\t\tawait this.setSectionDetails();\n\t}\n\n\t/**\n\t * Sets the section details based on the layout's content.\n\t * @private\n\t */\n\tprivate async setSectionDetails(): Promise<void> {\n\t\tconst elementArray = this.getItems();\n\t\tfor (const element of elementArray) {\n\t\t\tlet bBlocked = false;\n\t\t\tconst sId = element.getId();\n\t\t\t//check news & apps visibility\n\t\t\tif (element instanceof NewsAndPagesContainer && element.getVisible()) {\n\t\t\t\tconst aNewsAndPagesPanel = element.getContent();\n\t\t\t\t//check whether user has access to pages\n\t\t\t\tbBlocked = aNewsAndPagesPanel.length ? await this.checkPagesBlocked(aNewsAndPagesPanel) : false;\n\t\t\t} else if (element instanceof ToDosContainer) {\n\t\t\t\tbBlocked = this.checkToDoBlocked(element);\n\t\t\t}\n\n\t\t\tthis._aOrderedSections?.forEach((oElementItem) => {\n\t\t\t\tif (oElementItem.completeId === sId) {\n\t\t\t\t\toElementItem.blocked = bBlocked;\n\t\t\t\t\toElementItem.visible = element.getVisible();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Check whether My Interest section is blocked or not\n\t * @private\n\t */\n\tprivate async checkPagesBlocked(aNewsAndPagesPanel: BasePanel[]): Promise<boolean> {\n\t\tfor (const oPanel of aNewsAndPagesPanel) {\n\t\t\tif (oPanel instanceof PagePanel) {\n\t\t\t\t// find if user has any pages accessible\n\t\t\t\tconst aPages = (await oPanel.getUserAvailablePages()) || [];\n\t\t\t\tif (aPages.length) {\n\t\t\t\t\tthis._pagesAvailable = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//if user has no available pages and no  news feed, then block the section\n\t\tif (!this._pagesAvailable && !this._isCustomNews) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Check whether For Me Today section is blocked or not\n\t * @private\n\t */\n\tprivate checkToDoBlocked(toDoContainer: BaseContainer): boolean {\n\t\tif (!toDoContainer.getVisible()) {\n\t\t\tconst panels = toDoContainer.getContent();\n\t\t\tif (panels.length === 0) {\n\t\t\t\tthis._toDoAccessible = false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Sets up the key user settings dialog for the layout.\n\t *\n\t * @private\n\t */\n\tprivate _setupKeyUserSettingsDialog(): void {\n\t\tconst keyUserSettingsDialog = this.getAggregation(\"keyUserSettingsDialog\") as BaseSettingsDialog;\n\t\tif (!keyUserSettingsDialog) {\n\t\t\tconst defaultKeyUserSettingsDialog = new KeyUserSettingsDialog(`${this.getId()}-keyUser-settings-dialog`);\n\n\t\t\t// Add Key User Layout Settings Panel\n\t\t\tconst keyUserLayoutSettingsPanel = new KeyUserLayoutSettingsPanel(`${this.getId()}-keyUser-layout-settings`);\n\t\t\tkeyUserLayoutSettingsPanel.setAssociation(\"panel\", this);\n\t\t\tdefaultKeyUserSettingsDialog.addPanel(keyUserLayoutSettingsPanel);\n\n\t\t\t// Add News and Pages Settings Panel If News and Pages Container is available\n\t\t\t(this.getItems() || []).forEach((container: BaseContainer) => {\n\t\t\t\tif (container instanceof NewsAndPagesContainer) {\n\t\t\t\t\tconst keyUserNewsPagesSettingsPanel = new KeyUserNewsPagesSettingsPanel(`${this.getId()}-keyUser-news-pages-settings`);\n\t\t\t\t\t// Set any panel of the containet to the settings panel as association\n\t\t\t\t\tkeyUserNewsPagesSettingsPanel.setAssociation(\"panel\", container.getContent()?.[0]);\n\t\t\t\t\tdefaultKeyUserSettingsDialog.addPanel(keyUserNewsPagesSettingsPanel);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.setAggregation(\"keyUserSettingsDialog\", defaultKeyUserSettingsDialog);\n\t\t}\n\t}\n\n\t/**\n\t * Return the pages availability value\n\t * @private\n\t */\n\tpublic getpagesAvailable(): boolean {\n\t\treturn this._pagesAvailable;\n\t}\n\n\t/**\n\t * Return the To-Dos availability value\n\t * @private\n\t */\n\tpublic isToDoAccessible(): boolean {\n\t\treturn this._toDoAccessible;\n\t}\n\n\t/**\n\t * Return whether customNews available or not\n\t */\n\tpublic customNewAvailable(): boolean {\n\t\treturn this._isCustomNews;\n\t}\n\n\t/**\n\t * Returns the set of sections present within the layout\n\t *\n\t * @private\n\t */\n\tpublic getSections(): IElement[] {\n\t\treturn this._aOrderedSections!;\n\t}\n\n\t/**\n\t * Sets the sections present within the layout\n\t *\n\t * @private\n\t */\n\tpublic setSections(sections: IElement[]): void {\n\t\tthis._aOrderedSections = sections;\n\t}\n\n\t/**\n\t * Resets the ordered sections of the layout.\n\t *\n\t * @private\n\t */\n\tpublic resetSections(): void {\n\t\tthis._prepareLayoutData();\n\t}\n\n\t/**\n\t * Sets up the content addition dialog for the layout.\n\t *\n\t * @private\n\t */\n\tprivate _setupContentAdditionDialog(): void {\n\t\tlet contentAdditionDialog = this.getAggregation(\"contentAdditionDialog\") as ContentAdditionDialog;\n\t\tif (!contentAdditionDialog) {\n\t\t\tcontentAdditionDialog = new ContentAdditionDialog(`${this.getId()}-content-addition-dialog`);\n\t\t\tthis.setAggregation(\"contentAdditionDialog\", contentAdditionDialog);\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":181,"column":0},"map":{"version":3,"names":["sap","ui","define","Log","Button","Column","ColumnListItem","HBox","MessageBox","ObjectIdentifier","Table","Text","ToggleButton","VBox","Element","Icon","Lib","JSONModel","__BaseSettingsPanel","___flexibility_Layoutflexibility","___utils_Accessibility","___utils_Constants","___utils_DragDropUtils","__PersonalisationUtils","_interopRequireDefault","obj","__esModule","default","BaseSettingsPanel","CHANGE_TYPES","getInvisibleText","SETTINGS_PANELS_KEYS","focusDraggedItem","PersonalisationUtils","LayoutSettingsPanel","extend","metadata","library","constructor","_constructor","id","settings","BaseSettingsPanel.prototype.constructor.call","this","_isCollapseHandlerAttached","init","_init","BaseSettingsPanel.prototype.init.call","setProperty","LAYOUT","_i18nBundle","getText","_resetActionButton","getId","text","press","resetMyhomeSettings","addActionButton","addAggregation","_getContent","attachPanelNavigated","_loadSections","_manageSectionsChanges","createShowHideChangeFile","_createShowHideChangeFile","oControlEvent","_this","toggle","getSource","bValue","getPressed","oContext","getBindingContext","getObject","visible","_getPanel","getSections","find","section","completeId","sChangeType","UNHIDE","HIDE","oWrapperItem","getElementById","push","selectorElement","changeSpecificData","changeType","Promise","resolve","_saveManageSectionsDialog","then","setTimeout","adjustLayout","_switchToCollapsedViewIfRequired","e","reject","containers","layout","isLayoutExpanded","getProperty","forEach","container","toggleFullScreen","_getSelectedPanel","_this2","_calculateSectionsState","_orderedSections","JSON","parse","stringify","oSection","sContainerType","title","String","_controlModel","_layoutTable","setModel","bindItems","path","factory","_dndInvisibleText","isDestroyed","type","cells","alignItems","items","src","addStyleClass","justifyContent","width","tooltip","icon","enabled","event","pressed","ariaLabelledBy","attachEvent","_rearrangeLayoutIfRequired","currentLayoutElements","getItems","Array","isArray","_allLayoutElements","length","isOrderChanged","some","element","index","removeAllItems","addItem","oHeader","_setHeaderIntro","oTable","setLayoutTable","oInvisibleText","oContentVBox","renderType","control","addAriaLabelledBy","oHeaderText","oHeaderVBox","backgroundDesign","_setLayoutTable","columns","addDragDropConfigTo","onDropManageSections","_this3","_persistUserChanges","changes","appComponent","getOwnerComponent","tableModel","getModel","refresh","finally","mProperties","load","name","require","ControlPersonalizationWriteAPI","add","ignoreVariantManagement","aGeneratedChanges","save","selector","catch","oError","Error","error","message","_getActualIndex","expandedElementConfig","_getCurrentExpandedElement","targetContainer","splice","findIndex","_rearrangeLayoutElements","sourceIndex","targetIndex","sourceElement","sourceElements","values","next","value","updateFullScreenElement","indexOf","_onDropManageSections","oEvent","_this4","_temp2","iDropItemIndex","oWrapper","wrapperId","oDragItem","getParameter","draggedControl","iDragItemIndex","getParent","indexOfItem","oDropItem","droppedControl","_temp","sectionOrder","dragObject","dropObject","actualDragItemIndex","actualDropItemIndex","setSections","MOVE","movedElements","source","aggregation","target","draggedContainer","droppedContainer","_resetMyhomeSettings","_this5","show","QUESTION","actions","Action","CANCEL","onClose","oAction","_temp3","aChangesForDeletion","reset","selectors","changeTypes","resetSections","closeSettingsDialog"],"sources":["LayoutSettingsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport Button from \"sap/m/Button\";\nimport Column from \"sap/m/Column\";\nimport ColumnListItem from \"sap/m/ColumnListItem\";\nimport HBox from \"sap/m/HBox\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport ObjectIdentifier from \"sap/m/ObjectIdentifier\";\nimport Table from \"sap/m/Table\";\nimport Text from \"sap/m/Text\";\nimport ToggleButton from \"sap/m/ToggleButton\";\nimport VBox from \"sap/m/VBox\";\nimport Event from \"sap/ui/base/Event\";\nimport Component from \"sap/ui/core/Component\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport Element from \"sap/ui/core/Element\";\nimport Icon from \"sap/ui/core/Icon\";\nimport InvisibleText from \"sap/ui/core/InvisibleText\";\nimport Lib from \"sap/ui/core/Lib\";\nimport { DropInfo$DropEvent } from \"sap/ui/core/dnd/DropInfo\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport BaseContainer from \"./BaseContainer\";\nimport BaseLayout from \"./BaseLayout\";\nimport BaseSettingsPanel, { $BaseSettingsPanelSettings } from \"./BaseSettingsPanel\";\nimport Layout from \"./Layout\";\nimport { CHANGE_TYPES } from \"./flexibility/Layout.flexibility\";\nimport { IControlPersonalizationWriteAPI, IDragEvent, IElement, IManagePersChanges } from \"./interface/LayoutInterface\";\nimport { getInvisibleText } from \"./utils/Accessibility\";\nimport { SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\nimport { focusDraggedItem } from \"./utils/DragDropUtils\";\nimport PersonalisationUtils from \"./utils/PersonalisationUtils\";\n\n/**\n *\n * Class for My Home Layout Settings Panel.\n *\n * @extends BaseSettingsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.LayoutSettingsPanel\n */\nexport default class LayoutSettingsPanel extends BaseSettingsPanel {\n\tprivate _layoutTable!: Table;\n\tpublic _i18nBundle!: ResourceBundle;\n\tprivate _orderedSections!: IElement[];\n\tprivate _manageSectionsChanges!: IManagePersChanges[];\n\tprivate _controlModel!: JSONModel;\n\tprivate _allLayoutElements!: BaseContainer[];\n\tprivate _isCollapseHandlerAttached: boolean = false;\n\tprivate _resetActionButton!: Button;\n\tprivate _dndInvisibleText!: InvisibleText;\n\n\tconstructor(id?: string | $BaseSettingsPanelSettings);\n\tconstructor(id?: string, settings?: $BaseSettingsPanelSettings);\n\tconstructor(id?: string, settings?: $BaseSettingsPanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\"\n\t};\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\t//setup panel\n\t\tthis.setProperty(\"key\", SETTINGS_PANELS_KEYS.LAYOUT);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"layout\"));\n\t\tthis.setProperty(\"icon\", \"sap-icon://grid\");\n\t\tthis._resetActionButton = new Button({\n\t\t\tid: `${this.getId()}-layoutResetBtn`,\n\t\t\ttext: this._i18nBundle.getText(\"resetButton\"),\n\t\t\tpress: () => this.resetMyhomeSettings()\n\t\t});\n\t\t// Add button to actionButtons aggregation\n\t\tthis.addActionButton(this._resetActionButton);\n\t\t//setup layout content\n\t\tthis.addAggregation(\"content\", this._getContent());\n\t\t//fired every time on panel navigation\n\t\tthis.attachPanelNavigated(() => void this._loadSections());\n\t\tthis._manageSectionsChanges = [];\n\t}\n\n\t/**\n\t * Method to set visibility of the container sections\n\t * Toggle button pressed event handler\n\t *\n\t * @private\n\t */\n\tprivate async createShowHideChangeFile(oControlEvent: Event): Promise<void> {\n\t\tconst toggle = oControlEvent.getSource<ToggleButton>();\n\t\tconst bValue = !toggle.getPressed();\n\t\tconst oContext = toggle.getBindingContext()?.getObject() as IElement;\n\n\t\toContext.visible = bValue;\n\t\t(this._getPanel() as Layout).getSections().find((section) => section.completeId === oContext.completeId)!.visible = bValue;\n\n\t\tconst sChangeType = bValue ? CHANGE_TYPES.UNHIDE : CHANGE_TYPES.HIDE;\n\t\tconst oWrapperItem = Element.getElementById(oContext.completeId) as BaseContainer;\n\n\t\tthis._manageSectionsChanges.push({\n\t\t\tselectorElement: oWrapperItem,\n\t\t\tchangeSpecificData: {\n\t\t\t\tchangeType: sChangeType\n\t\t\t}\n\t\t});\n\t\t// }\n\t\tawait this._saveManageSectionsDialog();\n\t\tsetTimeout(() => oWrapperItem.adjustLayout());\n\n\t\t// switch to collapsed view if the container is in expanded view\n\t\tif (!bValue) {\n\t\t\tthis._switchToCollapsedViewIfRequired([oWrapperItem]);\n\t\t}\n\t}\n\n\t/**\n\t * Switches the layout to collapsed view if the current container is in expanded view\n\t *\n\t * @private\n\t * @param {BaseContainer} container - container instance to check\n\t * @returns {void}\n\t */\n\tprivate _switchToCollapsedViewIfRequired(containers: BaseContainer[]): void {\n\t\tconst layout = this._getPanel() as Layout;\n\t\tconst isLayoutExpanded = layout.getProperty(\"expanded\") as boolean;\n\n\t\tif (isLayoutExpanded) {\n\t\t\tcontainers.forEach((container) => {\n\t\t\t\tlayout.toggleFullScreen(container._getSelectedPanel());\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Method to load the sections\n\t *\n\t * @private\n\t */\n\tprivate async _loadSections(): Promise<void> {\n\t\tconst layout = this._getPanel() as Layout;\n\t\tawait layout._calculateSectionsState();\n\n\t\tthis._orderedSections = JSON.parse(JSON.stringify(layout.getSections())) as IElement[];\n\t\t// not a good way as there could be more than one insights container, discuss\n\t\tthis._orderedSections.forEach((oSection) => {\n\t\t\tif (oSection.sContainerType === \"sap.cux.home.InsightsContainer\" && !oSection.title) {\n\t\t\t\toSection.title = String(this._i18nBundle?.getText(\"insights\"));\n\t\t\t}\n\t\t});\n\t\tthis._controlModel = new JSONModel(this._orderedSections);\n\t\tthis._layoutTable.setModel(this._controlModel);\n\n\t\tthis._layoutTable.bindItems({\n\t\t\tpath: \"/\",\n\t\t\tfactory: (id) => {\n\t\t\t\tif (!this._dndInvisibleText || this._dndInvisibleText.isDestroyed()) {\n\t\t\t\t\tthis._dndInvisibleText = getInvisibleText(\n\t\t\t\t\t\tthis.getId() + \"--layoutDndText\",\n\t\t\t\t\t\tthis._i18nBundle.getText(\"keyPressAriaText\")\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn new ColumnListItem(`${id}--columnListItem`, {\n\t\t\t\t\ttype: \"Inactive\",\n\t\t\t\t\tcells: [\n\t\t\t\t\t\tnew HBox(`${id}--columnListHBox`, {\n\t\t\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\tnew Icon(`${id}--columnListIcon`, {\n\t\t\t\t\t\t\t\t\tsrc: \"sap-icon://vertical-grip\"\n\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiSmallMarginEnd\"),\n\t\t\t\t\t\t\t\tnew HBox(`${id}--columnListItemHBox`, {\n\t\t\t\t\t\t\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\t\t\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\t\tnew ObjectIdentifier(`${id}--columnListObjectIdentifier`, {\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"{title}\",\n\t\t\t\t\t\t\t\t\t\t\ttext: \"{text}\",\n\t\t\t\t\t\t\t\t\t\t\ttooltip: \"{title}\"\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\tnew ToggleButton(`${id}--layoutSettingstoggleButton`, {\n\t\t\t\t\t\t\t\t\t\t\ttooltip:\n\t\t\t\t\t\t\t\t\t\t\t\t\"{= ${visible} ? '\" +\n\t\t\t\t\t\t\t\t\t\t\t\tthis._i18nBundle.getText(\"hideBtn\") +\n\t\t\t\t\t\t\t\t\t\t\t\t\"' : '\" +\n\t\t\t\t\t\t\t\t\t\t\t\tthis._i18nBundle.getText(\"showBtn\") +\n\t\t\t\t\t\t\t\t\t\t\t\t\"' }\",\n\t\t\t\t\t\t\t\t\t\t\ticon: \"sap-icon://show\",\n\t\t\t\t\t\t\t\t\t\t\ttype: \"Emphasized\",\n\t\t\t\t\t\t\t\t\t\t\tenabled: \"{= !${blocked}}\",\n\t\t\t\t\t\t\t\t\t\t\tpress: (event: Event) => {\n\t\t\t\t\t\t\t\t\t\t\t\tvoid this.createShowHideChangeFile(event);\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tpressed: \"{= !${visible}}\",\n\t\t\t\t\t\t\t\t\t\t\tariaLabelledBy: [\"selectLabel\"]\n\t\t\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginEnd sapUiTinyMarginTop\")\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tthis._dndInvisibleText\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\twidth: \"100%\"\n\t\t\t\t\t\t})\n\t\t\t\t\t],\n\t\t\t\t\tariaLabelledBy: [this._dndInvisibleText.getId()]\n\t\t\t\t}).addStyleClass(\"insightsListItem insightsListMargin\");\n\t\t\t}\n\t\t});\n\n\t\t// attach collapse event handler to rearrange layout elements if required\n\t\tif (!this._isCollapseHandlerAttached) {\n\t\t\tthis._isCollapseHandlerAttached = true;\n\t\t\tlayout.attachEvent(\"onCollapse\", () => this._rearrangeLayoutIfRequired());\n\t\t}\n\t}\n\n\t/**\n\t * Rearranges the layout elements if their order has changed.\n\t *\n\t * @private\n\t */\n\tprivate _rearrangeLayoutIfRequired(): void {\n\t\tconst layout = this._getPanel() as Layout;\n\t\tconst currentLayoutElements = layout.getItems();\n\n\t\tif (Array.isArray(this._allLayoutElements) && currentLayoutElements.length === this._allLayoutElements.length) {\n\t\t\tconst isOrderChanged = currentLayoutElements.some((element, index) => {\n\t\t\t\treturn element.getId() !== this._allLayoutElements[index].getId();\n\t\t\t});\n\n\t\t\tif (isOrderChanged) {\n\t\t\t\tlayout.removeAllItems();\n\t\t\t\tthis._allLayoutElements.forEach((element) => {\n\t\t\t\t\tlayout.addItem(element);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns the content for the Layout Settings Panel.\n\t *\n\t * @private\n\t * @returns {VBox} The control containing the Layout Settings Panel content.\n\t */\n\tprivate _getContent(): VBox {\n\t\tconst oHeader = this._setHeaderIntro();\n\t\tconst oTable = this.setLayoutTable();\n\t\tconst oInvisibleText = getInvisibleText(this.getId() + \"--titleText\", this._i18nBundle.getText(\"layout\"));\n\n\t\tconst oContentVBox = new VBox(this.getId() + \"--idNewsPageOuterVBoX\", {\n\t\t\talignItems: \"Start\",\n\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\trenderType: \"Bare\",\n\t\t\titems: [oInvisibleText, oHeader, oTable]\n\t\t});\n\t\t[oInvisibleText, oHeader].forEach((control) => {\n\t\t\tthis._resetActionButton.addAriaLabelledBy(control.getId());\n\t\t});\n\t\treturn oContentVBox;\n\t}\n\n\t/**\n\t * Returns the content for the Layout Settings Panel Header.\n\t *\n\t * @private\n\t * @returns {VBox} The control containing the Layout Settings Panel's Header content.\n\t */\n\tprivate _setHeaderIntro(): VBox {\n\t\tconst oHeaderText = new Text(this.getId() + \"--idCustLayoutText\", {\n\t\t\ttext: this._i18nBundle.getText(\"layoutIntroMsg\")\n\t\t});\n\t\tconst oHeaderVBox = new VBox(this.getId() + \"--idLayoutIntroText\", {\n\t\t\tbackgroundDesign: \"Solid\",\n\t\t\talignItems: \"Start\",\n\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\titems: [oHeaderText],\n\t\t\trenderType: \"Bare\"\n\t\t}).addStyleClass(\"sapUiSmallMargin\");\n\t\treturn oHeaderVBox;\n\t}\n\n\t/**\n\t * Returns the content for the Layout Table.\n\t *\n\t * @private\n\t * @returns {sap.ui.core.Control} The control containing the Layout Settings Panel'sTable.\n\t */\n\tprivate setLayoutTable(): Table {\n\t\tif (!this._layoutTable) {\n\t\t\tthis._layoutTable = new Table(this.getId() + \"--idManageSectionsTable\", {\n\t\t\t\twidth: \"calc(100% - 2rem)\",\n\t\t\t\titems: [],\n\n\t\t\t\tcolumns: [\n\t\t\t\t\tnew Column(this.getId() + \"--idSectionTitleColumn\", {\n\t\t\t\t\t\twidth: \"100%\"\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t}).addStyleClass(\"sapContrastPlus sapUiSmallMarginBeginEnd sapUiTinyMarginBottom\");\n\t\t\tthis.addDragDropConfigTo(this._layoutTable, (event) => void this.onDropManageSections(event));\n\t\t}\n\n\t\treturn this._layoutTable;\n\t}\n\n\t/**\n\t * Function to save section changes of MyHomeSettingsDialog\n\t *\n\t * @private\n\t */\n\tprivate async _saveManageSectionsDialog(): Promise<void> {\n\t\treturn this._persistUserChanges({\n\t\t\tchanges: this._manageSectionsChanges,\n\t\t\tappComponent: PersonalisationUtils.getOwnerComponent(this._getPanel() as Layout)\n\t\t})\n\t\t\t.then(() => {\n\t\t\t\tconst tableModel = this._layoutTable.getModel() as JSONModel;\n\t\t\t\ttableModel.refresh();\n\t\t\t\tthis._controlModel.refresh();\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tthis._manageSectionsChanges = [];\n\t\t\t});\n\t}\n\n\t/**\n\t * Function to persist user changes\n\t *\n\t * @private\n\t */\n\tprivate _persistUserChanges(mProperties: { changes: IManagePersChanges[]; appComponent: Component | undefined }): Promise<void> {\n\t\treturn Lib.load({ name: \"sap.ui.fl\" }).then(function () {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tsap.ui.require(\n\t\t\t\t\t[\"sap/ui/fl/write/api/ControlPersonalizationWriteAPI\"],\n\t\t\t\t\tfunction (ControlPersonalizationWriteAPI: IControlPersonalizationWriteAPI) {\n\t\t\t\t\t\tControlPersonalizationWriteAPI.add({\n\t\t\t\t\t\t\tchanges: mProperties.changes,\n\t\t\t\t\t\t\tignoreVariantManagement: true\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.then(function (aGeneratedChanges) {\n\t\t\t\t\t\t\t\treturn resolve(\n\t\t\t\t\t\t\t\t\tControlPersonalizationWriteAPI.save({\n\t\t\t\t\t\t\t\t\t\tselector: {\n\t\t\t\t\t\t\t\t\t\t\tappComponent: mProperties.appComponent\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tchanges: aGeneratedChanges\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(function (oError) {\n\t\t\t\t\t\t\t\tif (oError instanceof Error) {\n\t\t\t\t\t\t\t\t\tLog.error(\"Unable to Save User Change: \" + oError.message);\n\t\t\t\t\t\t\t\t\treturn reject(oError);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves the actual index of a layout element by its ID.\n\t *\n\t * @private\n\t * @param {string} id - The ID of the layout element to find.\n\t * @returns {number} The index of the layout element.\n\t */\n\tprivate _getActualIndex(id: string): number {\n\t\tconst layout = this._getPanel() as Layout;\n\t\tthis._allLayoutElements = this._allLayoutElements || [...layout.getItems()];\n\t\tconst isLayoutExpanded = layout.getProperty(\"expanded\") as boolean;\n\t\tconst expandedElementConfig = layout._getCurrentExpandedElement();\n\n\t\tif (isLayoutExpanded && expandedElementConfig) {\n\t\t\t// add the expanded element if it isn't already in the list\n\t\t\tif (!this._allLayoutElements.some((element) => element.getId() === expandedElementConfig.targetContainer.getId())) {\n\t\t\t\tthis._allLayoutElements.splice(expandedElementConfig.index, 0, expandedElementConfig.targetContainer);\n\t\t\t}\n\t\t}\n\n\t\treturn this._allLayoutElements.findIndex((element) => element.getId() === id);\n\t}\n\n\t/**\n\t * Rearranges the layout elements by moving an element from the source index to the target index.\n\t *\n\t * @private\n\t * @param {number} sourceIndex - The index of the element to move.\n\t * @param {number} targetIndex - The index to move the element to.\n\t */\n\tprivate _rearrangeLayoutElements(sourceIndex: number, targetIndex: number): void {\n\t\tconst container = this._allLayoutElements.splice(sourceIndex, 1)[0];\n\t\tthis._allLayoutElements.splice(targetIndex, 0, container);\n\n\t\t//update the index of the expanded element if in expanded mode\n\t\tconst layout = this._getPanel() as Layout;\n\t\tconst isLayoutExpanded = layout.getProperty(\"expanded\") as boolean;\n\t\tconst expandedElementConfig = layout._getCurrentExpandedElement();\n\t\tif (isLayoutExpanded && expandedElementConfig) {\n\t\t\tconst sourceElement = expandedElementConfig.sourceElements.values().next().value!;\n\t\t\tlayout.updateFullScreenElement(sourceElement, {\n\t\t\t\tindex: this._allLayoutElements.indexOf(expandedElementConfig.targetContainer)\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Function to execute drag and drop among sections\n\t *\n\t * @private\n\t */\n\tprivate async onDropManageSections(oEvent: DropInfo$DropEvent | IDragEvent): Promise<void> {\n\t\tconst oWrapper = this._getPanel() as Layout;\n\t\tconst wrapperId = oWrapper.getId();\n\t\tconst oDragItem = ((oEvent as DropInfo$DropEvent).getParameter?.(\"draggedControl\") ||\n\t\t\t(oEvent as IDragEvent).draggedControl) as ColumnListItem;\n\t\tconst iDragItemIndex = (oDragItem.getParent() as Table)?.indexOfItem(oDragItem);\n\t\tconst oDropItem = ((oEvent as DropInfo$DropEvent).getParameter?.(\"droppedControl\") ||\n\t\t\t(oEvent as IDragEvent).droppedControl) as ColumnListItem;\n\t\tconst iDropItemIndex = (oDragItem.getParent() as Table)?.indexOfItem(oDropItem);\n\n\t\tif (iDragItemIndex !== iDropItemIndex) {\n\t\t\tconst sectionOrder = this._orderedSections;\n\t\t\tconst dragObject = oDragItem.getBindingContext()?.getObject() as IElement;\n\t\t\tconst dropObject = oDropItem.getBindingContext()?.getObject() as IElement;\n\n\t\t\tconst actualDragItemIndex = this._getActualIndex(dragObject.completeId);\n\t\t\tconst actualDropItemIndex = this._getActualIndex(dropObject.completeId);\n\t\t\tthis._rearrangeLayoutElements(actualDragItemIndex, actualDropItemIndex);\n\n\t\t\tsectionOrder.splice(iDragItemIndex, 1);\n\t\t\tsectionOrder.splice(iDropItemIndex, 0, dragObject);\n\t\t\toWrapper.setSections(sectionOrder);\n\n\t\t\tthis._manageSectionsChanges.push({\n\t\t\t\tselectorElement: oWrapper,\n\t\t\t\tchangeSpecificData: {\n\t\t\t\t\tchangeType: CHANGE_TYPES.MOVE,\n\t\t\t\t\tmovedElements: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: dragObject.completeId,\n\t\t\t\t\t\t\tsourceIndex: actualDragItemIndex,\n\t\t\t\t\t\t\ttargetIndex: actualDropItemIndex\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\tsource: {\n\t\t\t\t\t\tid: wrapperId,\n\t\t\t\t\t\taggregation: \"items\"\n\t\t\t\t\t},\n\t\t\t\t\ttarget: {\n\t\t\t\t\t\tid: wrapperId,\n\t\t\t\t\t\taggregation: \"items\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tawait this._saveManageSectionsDialog();\n\n\t\t\t//switch to collapsed view if any of the containers is in expanded view\n\t\t\tconst draggedContainer = Element.getElementById(dragObject.completeId) as BaseContainer;\n\t\t\tconst droppedContainer = Element.getElementById(dropObject.completeId) as BaseContainer;\n\t\t\tthis._switchToCollapsedViewIfRequired([draggedContainer, droppedContainer]);\n\t\t}\n\t\tfocusDraggedItem(this._layoutTable, iDropItemIndex);\n\t}\n\n\t/**\n\t * Function to reset MyHome settings changes\n\t *\n\t * @private\n\t */\n\tprivate resetMyhomeSettings(): void {\n\t\tMessageBox.show(this._i18nBundle.getText(\"reset_cards_confirmation_msg\") as string, {\n\t\t\tid: \"resetCardsConfirmation\",\n\t\t\ticon: MessageBox.Icon.QUESTION,\n\t\t\ttitle: this._i18nBundle.getText(\"reset_cards_confirmation_title\"),\n\t\t\tactions: [this._i18nBundle.getText(\"reset_cards_button\") as string, MessageBox.Action.CANCEL],\n\t\t\tonClose: async (oAction: string) => {\n\t\t\t\tif (oAction === this._i18nBundle.getText(\"reset_cards_button\")) {\n\t\t\t\t\tconst aChangesForDeletion: (BaseContainer | BaseLayout)[] = [];\n\n\t\t\t\t\tfor (let section of this._orderedSections) {\n\t\t\t\t\t\tconst element = Element.getElementById(section.completeId) as BaseContainer;\n\t\t\t\t\t\taChangesForDeletion.push(element);\n\t\t\t\t\t}\n\t\t\t\t\t// Revert Changes Related to DragnDrop\n\t\t\t\t\taChangesForDeletion.push(this._getPanel() as Layout);\n\t\t\t\t\tawait Lib.load({ name: \"sap.ui.fl\" }).then(() => {\n\t\t\t\t\t\tsap.ui.require(\n\t\t\t\t\t\t\t[\"sap/ui/fl/write/api/ControlPersonalizationWriteAPI\"],\n\t\t\t\t\t\t\t(ControlPersonalizationWriteAPI: IControlPersonalizationWriteAPI) => {\n\t\t\t\t\t\t\t\tvoid ControlPersonalizationWriteAPI.reset({\n\t\t\t\t\t\t\t\t\tselectors: aChangesForDeletion,\n\t\t\t\t\t\t\t\t\tchangeTypes: [CHANGE_TYPES.MOVE, CHANGE_TYPES.UNHIDE, CHANGE_TYPES.HIDE]\n\t\t\t\t\t\t\t\t}).finally(() => {\n\t\t\t\t\t\t\t\t\tconst layout = this._getPanel() as Layout;\n\t\t\t\t\t\t\t\t\tlayout.resetSections();\n\t\t\t\t\t\t\t\t\tlayout.closeSettingsDialog();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":186,"column":0},"map":{"version":3,"names":["sap","ui","define","Element","MenuItem","extend","metadata","library","properties","title","type","group","defaultValue","visibility","icon","visible","events","press","constructor","_constructor","id","settings","Element.prototype.constructor.call","this"],"sources":["MenuItem.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport Element from \"sap/ui/core/Element\";\nimport { $MenuItemSettings } from \"./MenuItem\";\n\n/**\n *\n * Class for managing and storing menu items.\n *\n * @extends Element\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @public\n *\n * @alias sap.cux.home.MenuItem\n */\nexport default class MenuItem extends Element {\n\tconstructor(id?: string | $MenuItemSettings);\n\tconstructor(id?: string, settings?: $MenuItemSettings);\n\t/**\n\t * Constructor for a new menu item.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $MenuItemSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * Title of the menu item.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\ttitle: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * Icon of the menu item.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\ticon: { type: \"sap.ui.core.URI\", group: \"Misc\", defaultValue: \"\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * Type of the menu item visualization in the menu list\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\ttype: { type: \"string\", group: \"Misc\", defaultValue: \"Active\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * Visibility of the menu item in the menu list\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\tvisible: { type: \"boolean\", group: \"Misc\", defaultValue: true, visibility: \"public\" }\n\t\t},\n\t\tevents: {\n\t\t\t/**\n\t\t\t * Fires whenever the menu item is pressed.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\tpress: {}\n\t\t}\n\t};\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,mCAAA,iCAAAC,GAAA,aASA,MAgBqBC,EAAiBD,EAAOE,OAAA,yBAa5BC,SAA4B,CAC3CC,QAAS,eACTC,WAAY,CAMXC,MAAO,CAAEC,KAAM,SAAUC,MAAO,OAAQC,aAAc,GAAIC,WAAY,UAMtEC,KAAM,CAAEJ,KAAM,kBAAmBC,MAAO,OAAQC,aAAc,GAAIC,WAAY,UAM9EH,KAAM,CAAEA,KAAM,SAAUC,MAAO,OAAQC,aAAc,SAAUC,WAAY,UAM3EE,QAAS,CAAEL,KAAM,UAAWC,MAAO,OAAQC,aAAc,KAAMC,WAAY,WAE5EG,OAAQ,CAMPC,MAAO,CAAC,IAtCHC,YAAW,SAAAC,EAACC,EAAaC,GAC/BC,6BAAAC,KAAMH,EAAIC,EACX,IAAC,OAXmBjB,CAAQ","ignoreList":[],"sourceRoot":""}},{"offset":{"line":191,"column":0},"map":{"version":3,"names":["sap","ui","define","__BaseContainer","___NewsAndPagesContainerGenericPlaceholder","___library","___utils_Device","_interopRequireDefault","obj","__esModule","default","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","_forTo","array","body","check","i","reject","_cycle","length","BaseContainer","_forOf","target","step","next","done","return","_fixup","TypeError","values","push","getNewsPagesPlaceholder","OrientationType","DeviceType","NewsAndPagesContainer","extend","metadata","properties","colorPersonalizations","type","group","defaultValue","visibility","iconPersonalizations","newsFeedVisibility","renderer","apiVersion","constructor","_constructor","id","settings","BaseContainer.prototype.constructor.call","panelLoaded","init","_init","BaseContainer.prototype.init.call","setProperty","getDeviceType","Desktop","LargeDesktop","Horizontal","Vertical","addCustomSetting","_i18nBundle","getText","load","_load","aContent","getContent","_temp","oContent","Promise","resolve","getData","setColorPersonalizations","_setColorPersonalizations","personalizations","existingPers","getProperty","updatedPers","concat","forEach","getMetadata","getName","applyColorPersonalizations","setIconPersonalizations","_setIconPersonalizations","applyIconPersonalizations","newsVisibilityChangeHandler","_newsVisibilityChangeHandler","personalization","newsPanel","defaultNewsFeedVisible","isURLParamEnabled","isNewsFeedVisible","_getPanelContentWrapper","setVisible","newsPersonalization","_newsPersonalization","Boolean","newsFeedURL","showCustomNewsFeed","customNewsFeedKey","customNewsFeedFileName","url","customFeedKey","String","showCustom","setCustomNewsFeed","setURL","panelLoadedFn","_panelLoadedFn","sPanelType","oVal","pagePanel","adjustLayout","adjustStyleLayout","_adjustStyleLayout","bIsNewsTileVisible","sDeviceType","newsContentWrapper","undefined","pagesContentWrapper","containerWrapper","_getInnerControl","setWidth","setAlignItems","setDirection","addStyleClass","Tablet","setJustifyContent","removeStyleClass","setTimeout","attachResizeHandler","getDomRef","clientWidth","_adjustLayout","getVisible","loaded","removeContent","getGenericPlaceholderContent","_getGenericPlaceholderContent"],"sources":["NewsAndPagesContainer.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport FlexBox from \"sap/m/FlexBox\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport BaseContainer from \"./BaseContainer\";\nimport BasePanel from \"./BasePanel\";\nimport type { $NewsAndPagesContainerSettings } from \"./NewsAndPagesContainer\";\nimport { getNewsPagesPlaceholder } from \"./NewsAndPagesContainerGenericPlaceholder\";\nimport NewsPanel from \"./NewsPanel\";\nimport PagePanel from \"./PagePanel\";\nimport { INewsFeedVisibiliyChange, INewsPersData, ISpacePagePersonalization } from \"./interface/KeyUserInterface\";\nimport { OrientationType } from \"./library\";\nimport { DeviceType } from \"./utils/Device\";\n\ninterface IpanelLoaded {\n\t[key: string]: { loaded: boolean; count: number };\n}\n\n/**\n *\n * Container class for managing and storing News and Pages.\n *\n * @extends BaseContainer\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @public\n *\n * @alias sap.cux.home.NewsAndPagesContainer\n */\n\nexport default class NewsAndPagesContainer extends BaseContainer {\n\tstatic renderer = {\n\t\t...BaseContainer.renderer,\n\t\tapiVersion: 2\n\t};\n\tstatic readonly metadata: MetadataOptions = {\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * Color Personalizations for Spaces & Pages\n\t\t\t */\n\t\t\tcolorPersonalizations: { type: \"array\", group: \"Misc\", defaultValue: [], visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Icon Personalizations for Spaces & Pages\n\t\t\t */\n\t\t\ticonPersonalizations: { type: \"array\", group: \"Misc\", defaultValue: [], visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * News feed visibility flag\n\t\t\t */\n\t\t\tnewsFeedVisibility: { type: \"boolean\", group: \"Misc\", defaultValue: true, visibility: \"hidden\" }\n\t\t}\n\t};\n\n\tprivate panelLoaded: IpanelLoaded = {};\n\tprivate pagePanel!: PagePanel;\n\tprivate newsPanel!: NewsPanel;\n\n\tconstructor(id?: string | $NewsAndPagesContainerSettings);\n\tconstructor(id?: string, settings?: $NewsAndPagesContainerSettings);\n\t/**\n\t * Constructor for the new News and Pages container.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $NewsAndPagesContainerSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\t\tthis.panelLoaded = {};\n\n\t\tthis.setProperty(\n\t\t\t\"orientation\",\n\t\t\tthis.getDeviceType() === DeviceType.Desktop || this.getDeviceType() === DeviceType.LargeDesktop\n\t\t\t\t? OrientationType.Horizontal\n\t\t\t\t: OrientationType.Vertical\n\t\t);\n\t\tthis.addCustomSetting(\"title\", this._i18nBundle.getText(\"myInterestMsg\") as string);\n\t}\n\n\t/**\n\t * Loads the News and Pages section.\n\t * Overrides the load method of the BaseContainer.\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic async load() {\n\t\tconst aContent = this.getContent() as PagePanel[];\n\t\tfor (const oContent of aContent) {\n\t\t\tawait oContent.getData();\n\t\t}\n\t}\n\n\t/**\n\t * Sets property value for colorPersonalization.\n\t * Overridden to update cached personalizations.\n\t *\n\t * @private\n\t * @override\n\t * @returns {NewsAndPagesContainer} the container for chaining\n\t */\n\tsetColorPersonalizations(personalizations: Array<ISpacePagePersonalization>): NewsAndPagesContainer {\n\t\tconst existingPers = (this.getProperty(\"colorPersonalizations\") as ISpacePagePersonalization[]) || [];\n\t\tconst updatedPers = existingPers.concat(personalizations);\n\t\tthis.setProperty(\"colorPersonalizations\", updatedPers);\n\t\tthis.getContent().forEach((oContent) => {\n\t\t\tif (oContent.getMetadata().getName() === \"sap.cux.home.PagePanel\") {\n\t\t\t\t(oContent as PagePanel).applyColorPersonalizations(updatedPers);\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets property value for iconPersonalization.\n\t * Overridden to update cached personalizations.\n\t *\n\t * @private\n\t * @override\n\t * @returns {NewsAndPagesContainer} the container for chaining\n\t */\n\tsetIconPersonalizations(personalizations: Array<ISpacePagePersonalization>): NewsAndPagesContainer {\n\t\tconst existingPers = (this.getProperty(\"iconPersonalizations\") as ISpacePagePersonalization[]) || [];\n\t\tconst updatedPers = existingPers.concat(personalizations);\n\t\tthis.setProperty(\"iconPersonalizations\", updatedPers);\n\t\tthis.getContent().forEach((oContent) => {\n\t\t\tif (oContent.getMetadata().getName() === \"sap.cux.home.PagePanel\") {\n\t\t\t\t(oContent as PagePanel).applyIconPersonalizations(updatedPers);\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\tpublic newsVisibilityChangeHandler(personalization: INewsFeedVisibiliyChange) {\n\t\tconst aContent = this.getContent();\n\t\taContent.forEach((oContent: BasePanel) => {\n\t\t\tif (oContent.getMetadata().getName() === \"sap.cux.home.NewsPanel\") {\n\t\t\t\tlet newsPanel = oContent as NewsPanel;\n\t\t\t\tconst defaultNewsFeedVisible = newsPanel.isURLParamEnabled(\"default-News\");\n\t\t\t\tif (personalization.isNewsFeedVisible) {\n\t\t\t\t\tthis.setProperty(\"newsFeedVisibility\", true);\n\t\t\t\t\tthis._getPanelContentWrapper(newsPanel).setVisible(true);\n\t\t\t\t} else if (!defaultNewsFeedVisible) {\n\t\t\t\t\tthis.setProperty(\"newsFeedVisibility\", false);\n\t\t\t\t\tthis._getPanelContentWrapper(newsPanel).setVisible(false);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic newsPersonalization(personalizations: INewsPersData) {\n\t\tconst aContent = this.getContent();\n\t\taContent.forEach((oContent: BasePanel) => {\n\t\t\tif (oContent.getMetadata().getName() === \"sap.cux.home.NewsPanel\") {\n\t\t\t\tlet newsPanel = oContent as NewsPanel;\n\t\t\t\tconst newsFeedVisibility = Boolean(this.getProperty(\"newsFeedVisibility\"));\n\t\t\t\tconst defaultNewsFeedVisible = newsPanel.isURLParamEnabled(\"default-News\");\n\t\t\t\tif (!defaultNewsFeedVisible) {\n\t\t\t\t\tnewsPanel.setProperty(\"url\", personalizations.newsFeedURL);\n\t\t\t\t\tnewsPanel.setProperty(\"showCustom\", personalizations.showCustomNewsFeed);\n\t\t\t\t\tnewsPanel.setProperty(\"customFeedKey\", personalizations.customNewsFeedKey);\n\t\t\t\t\tnewsPanel.setProperty(\"customFileName\", personalizations.customNewsFeedFileName);\n\t\t\t\t}\n\n\t\t\t\tif (newsFeedVisibility) {\n\t\t\t\t\tconst url = personalizations.newsFeedURL;\n\t\t\t\t\tthis._getPanelContentWrapper(newsPanel).setVisible(true);\n\t\t\t\t\tconst customFeedKey = String(newsPanel.getProperty(\"customFeedKey\"));\n\t\t\t\t\tconst showCustom = Boolean(newsPanel.getProperty(\"showCustom\"));\n\t\t\t\t\tif (!defaultNewsFeedVisible) {\n\t\t\t\t\t\tif (showCustom && customFeedKey) {\n\t\t\t\t\t\t\tnewsPanel.setProperty(\"newsAvailable\", true);\n\t\t\t\t\t\t\tvoid newsPanel.setCustomNewsFeed(customFeedKey);\n\t\t\t\t\t\t} else if (!showCustom && url) {\n\t\t\t\t\t\t\tvoid newsPanel.setURL(url);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._getPanelContentWrapper(newsPanel).setVisible(false);\n\t\t\t\t\t\t\tthis.setProperty(\"newsFeedVisibility\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvoid newsPanel.getData();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic panelLoadedFn(sPanelType: string, oVal: { loaded: boolean; count: number }) {\n\t\t// same issue of panelwrapper not available at this time\n\t\tconst aContent = this.getContent();\n\t\taContent.forEach((oContent: BasePanel) => {\n\t\t\tif (oContent.getMetadata().getName() === \"sap.cux.home.PagePanel\") {\n\t\t\t\tthis.pagePanel = oContent as PagePanel;\n\t\t\t} else if (oContent.getMetadata().getName() === \"sap.cux.home.NewsPanel\") {\n\t\t\t\tthis.newsPanel = oContent as NewsPanel;\n\t\t\t}\n\t\t});\n\t\tthis.panelLoaded[sPanelType] = oVal;\n\t\tthis.adjustLayout();\n\t}\n\n\tpublic adjustStyleLayout(bIsNewsTileVisible: boolean) {\n\t\tconst sDeviceType = this.getDeviceType();\n\t\tconst newsContentWrapper = this.newsPanel ? this._getPanelContentWrapper(this.newsPanel) : undefined;\n\t\tconst pagesContentWrapper = this.pagePanel ? this._getPanelContentWrapper(this.pagePanel) : undefined;\n\t\tconst containerWrapper = this._getInnerControl() as FlexBox;\n\t\tif (bIsNewsTileVisible) {\n\t\t\tthis.newsPanel.adjustLayout();\n\t\t}\n\t\tif (sDeviceType === DeviceType.Desktop || sDeviceType === DeviceType.LargeDesktop) {\n\t\t\tif (bIsNewsTileVisible) {\n\t\t\t\tpagesContentWrapper?.setWidth(\"100%\");\n\t\t\t}\n\t\t\tcontainerWrapper.setAlignItems(\"Center\");\n\t\t\tcontainerWrapper.setDirection(\"Row\");\n\t\t\tnewsContentWrapper?.setWidth(\"100%\");\n\t\t\tnewsContentWrapper?.addStyleClass(\"newsTileMaxWidth\");\n\t\t} else if (sDeviceType === DeviceType.Tablet) {\n\t\t\tpagesContentWrapper?.setWidth(\"100%\");\n\t\t\tpagesContentWrapper?.setJustifyContent(\"Start\");\n\t\t\tnewsContentWrapper?.setWidth(\"calc(100vw - 64px)\");\n\t\t\tnewsContentWrapper?.removeStyleClass(\"newsTileMaxWidth\");\n\t\t\tcontainerWrapper.setAlignItems(\"Baseline\");\n\t\t\tcontainerWrapper.setDirection(\"Column\");\n\t\t}\n\n\t\tif (pagesContentWrapper) {\n\t\t\tsetTimeout(\n\t\t\t\tthis.pagePanel.attachResizeHandler.bind(\n\t\t\t\t\tthis.pagePanel,\n\t\t\t\t\tbIsNewsTileVisible,\n\t\t\t\t\tthis.getDomRef()?.clientWidth || 0,\n\t\t\t\t\tpagesContentWrapper,\n\t\t\t\t\tcontainerWrapper\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Adjusts the layout of the all panels in the container.\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic adjustLayout() {\n\t\tif (this.pagePanel && this.newsPanel && this._getPanelContentWrapper(this.newsPanel).getVisible()) {\n\t\t\tlet bIsNewsTileVisible = true;\n\t\t\tif (this.panelLoaded[\"Page\"]?.loaded || this.panelLoaded[\"News\"]?.loaded) {\n\t\t\t\t// In case News Panel fails to load remove the panel and apply styles for page to take full width\n\t\t\t\tif (this.panelLoaded[\"News\"]?.loaded === false) {\n\t\t\t\t\tbIsNewsTileVisible = false;\n\t\t\t\t\tthis.removeContent(this.newsPanel);\n\t\t\t\t} else if (this.panelLoaded[\"Page\"]?.loaded === false) {\n\t\t\t\t\tthis.removeContent(this.pagePanel);\n\t\t\t\t}\n\t\t\t\tthis.adjustStyleLayout(bIsNewsTileVisible);\n\t\t\t}\n\t\t} else if (this.pagePanel && this.panelLoaded[\"Page\"]?.loaded) {\n\t\t\t// If News Panel is not present apply styles for page to take full width\n\t\t\tthis.adjustStyleLayout(false);\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the generic placeholder content for the News and Pages container.\n\t *\n\t * @returns {string} The HTML string representing the News and Pages container's placeholder content.\n\t */\n\tprotected getGenericPlaceholderContent(): string {\n\t\treturn getNewsPagesPlaceholder();\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":196,"column":0},"map":{"version":3,"names":["sap","ui","define","getNewsPagesPlaceholder","__exports","__esModule"],"sources":["NewsAndPagesContainerGenericPlaceholder.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nexport function getNewsPagesPlaceholder(): string {\n\treturn `\n    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plContent plResponsivePadding\" style=\"background-color:transparent\">\n        <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM\" style=\"width: 225px;\">\n        </div>\n        <div class=\"plPHPCardContainer plSectionMarginBottom\">\n            <div class=\"plPHPCard plPHPCardVersion2 PHPContentCard5 sapUiNoMarginTop\" style=\"background-color:white\">\n                <div class=\"plPHPCardHeader\">\n                    <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop\"></div>\n                </div>\n                <div class=\"plPHPCardContent\">\n                    <div style=\"vertical-align: inherit;\">\n                        <div\n                            class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plVerticalRepeater plPHPCardContentContainer\">\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plVerticalRepeaterItem\"\n                                style=\"width: 100%;\"></div>\n                            <div class=\"plText sapMGTLoadingShimmer plTextWeightS plTextWidthM plPHPCardContentText plVerticalRepeaterItem\"\n                                style=\"width: 80%;\"></div>\n                        </div>\n                    </div>\n                    <div class=\"plHorizontalLayout plHorizontalContent plTextAlignEnd plVerticalAlignBottom\">\n                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardFooterText\"\n                            style=\"width: 80px;\"></div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"plPHPCardVersion3 PHPContentCard6 sapUiNoMarginTop plSmallestVisibleSizeL\">\n                <div class=\"plPHPCardHeader\"></div>\n                <div class=\"plPHPCardContent\">\n                    <div\n                        class=\"plVerticalLayout plVerticalContent plTextAlignplPHPCardContentContainer plVerticalAlignTop\">\n                        <div class=\"plHorizontalLayout plHorizontalContent plTextAlignCenter plVerticalAlignTop\">\n                            <div style=\"vertical-align: inherit; background-color:white;\" class=\"plPHPCard\">\n                                <div\n                                    class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plVerticalRepeater plPHPCardContentItemContainer\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare plVerticalRepeaterItem\">\n                                    </div>\n                                    <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plVerticalRepeaterItem\"\n                                        style=\"width: 100%;\"></div>\n                                    <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plVerticalRepeaterItem\"\n                                        style=\"width: 100%;\"></div>\n                                </div>\n                            </div>\n                            <div style=\"vertical-align: inherit; background-color:white;\" class=\"plPHPCard\">\n                                <div\n                                    class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plVerticalRepeater plPHPCardContentItemContainer\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare plVerticalRepeaterItem\">\n                                    </div>\n                                    <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plVerticalRepeaterItem\"\n                                        style=\"width: 100%;\"></div>\n                                    <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plVerticalRepeaterItem\"\n                                        style=\"width: 100%;\"></div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"plHorizontalLayout plHorizontalContent plTextAlignCenter plVerticalAlignTop\">\n                            <div style=\"vertical-align: inherit; background-color:white;\" class=\"plPHPCard\">\n                                <div\n                                    class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plVerticalRepeater plPHPCardContentItemContainer\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare plVerticalRepeaterItem\">\n                                    </div>\n                                    <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plVerticalRepeaterItem\"\n                                        style=\"width: 100%;\"></div>\n                                    <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plVerticalRepeaterItem\"\n                                        style=\"width: 100%;\"></div>\n                                </div>\n                            </div>\n                            <div style=\"vertical-align: inherit; background-color:white;\" class=\"plPHPCard\">\n                                <div\n                                    class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plVerticalRepeater plPHPCardContentItemContainer\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare plVerticalRepeaterItem\">\n                                    </div>\n                                    <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plVerticalRepeaterItem\"\n                                        style=\"width: 100%;\"></div>\n                                    <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plVerticalRepeaterItem\"\n                                        style=\"width: 100%;\"></div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"plPHPCard plPHPCardVersion3 PHPContentCard7 sapUiNoMarginTop plSmallestVisibleSizeL\">\n                <div class=\"plPHPCardHeader\"></div>\n                <div class=\"plPHPCardContent\">\n                    <div\n                        class=\"plVerticalLayout plVerticalContent plTextAlignplPHPCardContentContainer plVerticalAlignTop\">\n                        <div class=\"plHorizontalLayout plHorizontalContent plTextAlignCenter plVerticalAlignTop\">\n                            <div style=\"vertical-align: inherit; background-color:white;\">\n                                <div\n                                    class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plVerticalRepeater plPHPCardContentItemContainer\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare plVerticalRepeaterItem\">\n                                    </div>\n                                    <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plVerticalRepeaterItem\"\n                                        style=\"width: 100%;\"></div>\n                                    <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plVerticalRepeaterItem\"\n                                        style=\"width: 100%;\"></div>\n                                </div>\n                            </div>\n                            <div style=\"vertical-align: inherit; background-color:white;\">\n                                <div\n                                    class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plVerticalRepeater plPHPCardContentItemContainer\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare plVerticalRepeaterItem\">\n                                    </div>\n                                    <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plVerticalRepeaterItem\"\n                                        style=\"width: 100%;\"></div>\n                                    <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plVerticalRepeaterItem\"\n                                        style=\"width: 100%;\"></div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"plHorizontalLayout plHorizontalContent plTextAlignCenter plVerticalAlignTop\">\n                            <div style=\"vertical-align: inherit; background-color:white;\">\n                                <div\n                                    class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plVerticalRepeater plPHPCardContentItemContainer\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare plVerticalRepeaterItem\">\n                                    </div>\n                                    <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plVerticalRepeaterItem\"\n                                        style=\"width: 100%;\"></div>\n                                    <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plVerticalRepeaterItem\"\n                                        style=\"width: 100%;\"></div>\n                                </div>\n                            </div>\n                            <div style=\"vertical-align: inherit; background-color:white;\">\n                                <div\n                                    class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plVerticalRepeater plPHPCardContentItemContainer\">\n                                    <div\n                                        class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plPHPCardContentTextSquare plVerticalRepeaterItem\">\n                                    </div>\n                                    <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plVerticalRepeaterItem\"\n                                        style=\"width: 100%;\"></div>\n                                    <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardContentText plVerticalRepeaterItem\"\n                                        style=\"width: 100%;\"></div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    `;\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,kEAAA,2BAIO,SAASC,IACf,MAAO,ulXAoJR,CAAC,IAAAC,EAAA,CAAAC,WAAA,MAAAD,EAAAD,0BAAA,OAAAC,CAAA","ignoreList":[],"sourceRoot":""}},{"offset":{"line":201,"column":0},"map":{"version":3,"names":["sap","ui","define","Button","CustomListItem","Dialog","HBox","Image","Label","Link","List","Text","Title","VBox","CustomData","Element","HTML","__BaseNewsItem","___utils_Constants","___utils_DataFormatUtils","_interopRequireDefault","obj","__esModule","default","BaseNewsItem","DEFAULT_NEWS_URL","recycleId","NewsGroup","extend","metadata","library","aggregations","newsItems","type","singularName","multiple","constructor","_constructor","id","settings","BaseNewsItem.prototype.constructor.call","this","init","_init","BaseNewsItem.prototype.init.call","_oTile","attachPress","pressNewsItem","bind","createNewsGroupDialog","_pressNewsItem","openNewsGroupDialog","_openNewsGroupDialog","_this","_temp2","oNewsGroupDialog","setTitle","getTitle","oNewsGroupImage","setSrc","sImageUrl","loadNewsDetails","aData","oNewsList","setBusy","oNewsPanel","getParent","customFileName","getProperty","isCSVFileFormat","split","pop","toLowerCase","getImageUrl","aFavNewsFeed","getFavNewsFeed","_temp","getUrl","oNewsConfig","changeId","getCustomFeedKey","title","showAllPreparationRequired","open","sNewsFeedURL","getNewsFeedDetailsUrl","Promise","resolve","getAuthNewsFeed","then","_oNewsPanel$getAuthNe","currentDefaultGroup","getCurrentNewsGroup","getId","_group_to_article","e","reject","_loadNewsDetails","aNewsDetails","destroyAggregation","forEach","oItem","i","oCustomListItem","generateNewsListTemplate","addItem","_generateNewsListTemplate","oFieldVBox","addStyleClass","expandFields","oField","items","text","label","tooltip","value","setVisible","content","titleStyle","Description","Type","_i18nBundle","getText","href","target","press","handleShowNewsFeedDetails","customData","key","description","_createNewsGroupDialog","width","height","src","contentWidth","contentHeight","buttons","closeNewsGroupDialog","addDependent","_closeNewsGroupDialog","close","_handleShowNewsFeedDetails","oEvent","listItemIndex","getSource","data","fieldsVBox","getElementById","fieldExpanded","getVisible","sButtonShowText","setText"],"sources":["NewsGroup.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Button from \"sap/m/Button\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport Dialog from \"sap/m/Dialog\";\nimport HBox from \"sap/m/HBox\";\nimport Image from \"sap/m/Image\";\nimport Label from \"sap/m/Label\";\nimport Link from \"sap/m/Link\";\nimport List from \"sap/m/List\";\nimport Text from \"sap/m/Text\";\nimport Title from \"sap/m/Title\";\nimport VBox from \"sap/m/VBox\";\nimport Event from \"sap/ui/base/Event\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport Element from \"sap/ui/core/Element\";\nimport HTML from \"sap/ui/core/HTML\";\nimport BaseNewsItem from \"./BaseNewsItem\";\nimport { $NewsGroupSettings } from \"./NewsGroup\";\nimport NewsPanel, { ICustomNewsFeed, INewsItem, INewsLink, INewsParam } from \"./NewsPanel\";\nimport { DEFAULT_NEWS_URL } from \"./utils/Constants\";\nimport { recycleId } from \"./utils/DataFormatUtils\";\n\n/**\n *\n * Class for managing and storing News Group items.\n *\n * @extends sap.cux.home.BaseNewsItem\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.NewsGroup\n */\nexport default class NewsGroup extends BaseNewsItem {\n\tprivate oNewsGroupDialog!: Dialog;\n\tprivate oNewsGroupImage!: Image;\n\tprivate oNewsList!: List;\n\tprivate currentDefaultGroup!: ICustomNewsFeed;\n\n\tconstructor(idOrSettings?: string | $NewsGroupSettings);\n\tconstructor(id?: string, settings?: $NewsGroupSettings);\n\tconstructor(id?: string, settings?: $NewsGroupSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * newsItems aggregation of the news. These items will be shown in a dialog on click of the news\n\t\t\t */\n\t\t\tnewsItems: { type: \"sap.cux.home.NewsItem\", singularName: \"newsItem\", multiple: true }\n\t\t}\n\t};\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\t\tthis._oTile.attachPress(this, this.pressNewsItem.bind(this));\n\t\tthis.createNewsGroupDialog();\n\t}\n\n\t/**\n\t * Handles the press event on the news item, opens the dialog.\n\t * @returns {void}\n\t */\n\tprivate pressNewsItem(): void {\n\t\tvoid this.openNewsGroupDialog();\n\t}\n\n\t/**\n\t * Opens the dialog for news details\n\t * @returns {Promise<void>}\n\t */\n\tprivate async openNewsGroupDialog(): Promise<void> {\n\t\tthis.oNewsList?.setBusy(true);\n\t\tconst oNewsPanel = this.getParent() as NewsPanel;\n\t\tconst customFileName = oNewsPanel.getProperty(\"customFileName\") as string;\n\t\tconst isCSVFileFormat = customFileName.split(\".\").pop()?.toLowerCase() === \"csv\";\n\n\t\tconst sImageUrl = this.getImageUrl();\n\t\tconst aFavNewsFeed = oNewsPanel.getFavNewsFeed();\n\t\tlet aData: ICustomNewsFeed[] = [];\n\n\t\tif (oNewsPanel.getUrl() !== DEFAULT_NEWS_URL) {\n\t\t\tconst oNewsConfig: INewsItem = {\n\t\t\t\tchangeId: oNewsPanel.getCustomFeedKey(),\n\t\t\t\ttitle: this.getTitle(),\n\t\t\t\tshowAllPreparationRequired: isCSVFileFormat ? false : !aFavNewsFeed ? true : aFavNewsFeed.showAllPreparationRequired\n\t\t\t};\n\n\t\t\tthis.oNewsGroupDialog?.open();\n\t\t\tconst sNewsFeedURL = oNewsPanel.getNewsFeedDetailsUrl(oNewsConfig);\n\n\t\t\taData = (await oNewsPanel.getAuthNewsFeed(sNewsFeedURL, oNewsConfig.title)) as ICustomNewsFeed[];\n\t\t} else {\n\t\t\tthis.oNewsGroupDialog?.open();\n\t\t\tthis.currentDefaultGroup = oNewsPanel.getCurrentNewsGroup(this.getId()) as ICustomNewsFeed;\n\t\t\taData = (this.currentDefaultGroup?._group_to_article as ICustomNewsFeed[]) || [];\n\t\t}\n\t\tthis.oNewsGroupDialog?.setTitle(this.getTitle());\n\t\tthis.oNewsGroupImage?.setSrc(sImageUrl);\n\t\tthis.loadNewsDetails(aData);\n\t}\n\n\t/**\n\t * Iterate through the provided news details data and loads the news items\n\t * @param {ICustomNewsFeed[]} aNewsDetails array of news items to be shown in the list\n\t * @returns {void}\n\t */\n\tprivate loadNewsDetails(aNewsDetails: ICustomNewsFeed[]): void {\n\t\tthis.oNewsList?.destroyAggregation(\"items\", true);\n\t\t(aNewsDetails || []).forEach((oItem: ICustomNewsFeed, i: number) => {\n\t\t\tconst oCustomListItem = this.generateNewsListTemplate(oItem, i);\n\t\t\tthis.oNewsList?.addItem(oCustomListItem);\n\t\t});\n\t\tthis.oNewsList?.setBusy(false);\n\t}\n\n\t/**\n\t * Generates the custom list item templates for the news details\n\t * @param {ICustomNewsFeed} oItem news feed item for binding the template\n\t * @param {number} i index of the item\n\t * @returns {CustomListItem} the template of list item to be shown in the dialog\n\t */\n\tprivate generateNewsListTemplate(oItem: ICustomNewsFeed, i: number): CustomListItem {\n\t\tconst oNewsPanel = this.getParent() as NewsPanel;\n\t\tif (oNewsPanel.getUrl() !== DEFAULT_NEWS_URL) {\n\t\t\tconst oFieldVBox = new VBox(this.getId() + \"--idNewsFieldsBox\" + \"--\" + i).addStyleClass(\"newsListItemContainer\");\n\n\t\t\t((oItem?.expandFields as INewsLink[]) || []).forEach((oField) => {\n\t\t\t\toFieldVBox.addItem(\n\t\t\t\t\tnew HBox(\"\", {\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\tnew Label(\"\", {\n\t\t\t\t\t\t\t\ttext: oField.label + \":\",\n\t\t\t\t\t\t\t\ttooltip: oField.label\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew Text(\"\", {\n\t\t\t\t\t\t\t\ttext: oField.value\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t]\n\t\t\t\t\t}).addStyleClass(\"newsListItemContainer\")\n\t\t\t\t);\n\t\t\t});\n\t\t\toFieldVBox.setVisible(false);\n\n\t\t\treturn new CustomListItem(this.getId() + \"--idNewsDetailItem\" + \"--\" + i, {\n\t\t\t\tcontent: [\n\t\t\t\t\tnew VBox(`${this.getId()}--newsList--${i}`, {\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\tnew Title(`${this.getId()}--newsTitle--${i}`, {\n\t\t\t\t\t\t\t\ttext: (oItem.Title as INewsLink).value,\n\t\t\t\t\t\t\t\ttitleStyle: \"H6\"\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew Text(`${this.getId()}--newsText--${i}`, {\n\t\t\t\t\t\t\t\ttext: (oItem.Description as INewsLink).value\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew HBox(`${this.getId()}--newsHBox--${i}`, {\n\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\tnew Label(`${this.getId()}--newsLabel--${i}`, {\n\t\t\t\t\t\t\t\t\t\ttext: (oItem.Type as INewsLink).label + \":\",\n\t\t\t\t\t\t\t\t\t\ttooltip: (oItem.Type as INewsLink).label\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tnew Text(`${this.getId()}--newsItemText--${i}`, {\n\t\t\t\t\t\t\t\t\t\ttext: (oItem.Type as INewsLink).value\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}).addStyleClass(\"newsListItemContainer\"),\n\t\t\t\t\t\t\tnew HBox(`${this.getId()}--newsListItemBox--${i}`, {\n\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\tnew Label(`${this.getId()}--newsListItemLabel--${i}`, {\n\t\t\t\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"readMoreLink\") + \":\",\n\t\t\t\t\t\t\t\t\t\ttooltip: (oItem.Link as INewsParam).value.label + \"\"\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tnew Link(`${this.getId()}--newsListItemLink--${i}`, {\n\t\t\t\t\t\t\t\t\t\thref: (oItem.Link as INewsParam).value.value + \"\",\n\t\t\t\t\t\t\t\t\t\ttext: (oItem.Link as INewsParam).text,\n\t\t\t\t\t\t\t\t\t\ttarget: \"_blank\"\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}).addStyleClass(\"newsListItemContainer\"),\n\t\t\t\t\t\t\toFieldVBox,\n\t\t\t\t\t\t\tnew Button(`${this.getId()}--expand--${i}`, {\n\t\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"expand\") as string,\n\t\t\t\t\t\t\t\tpress: this.handleShowNewsFeedDetails.bind(this),\n\t\t\t\t\t\t\t\tcustomData: new CustomData({\n\t\t\t\t\t\t\t\t\tkey: \"index\",\n\t\t\t\t\t\t\t\t\tvalue: i\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t]\n\t\t\t\t\t}).addStyleClass(\"newsListItemContainer\")\n\t\t\t\t]\n\t\t\t}).addStyleClass(\"newsListItem\");\n\t\t} else {\n\t\t\treturn new CustomListItem(this.getId() + \"--idNewsDetailItem\" + \"--\" + i, {\n\t\t\t\tcontent: [\n\t\t\t\t\tnew VBox({\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\tnew HTML({\n\t\t\t\t\t\t\t\tcontent: oItem.description as string\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t]\n\t\t\t\t\t}).addStyleClass(\"newsListItemContainer\")\n\t\t\t\t]\n\t\t\t}).addStyleClass(\"newsListItem\");\n\t\t}\n\t}\n\n\t/**\n\t * Creates the dialog which contains the news detail items\n\t * @returns {void}\n\t */\n\tprivate createNewsGroupDialog(): void {\n\t\t//create the dialog template without binding\n\t\tif (!this.oNewsGroupDialog) {\n\t\t\tthis.oNewsGroupImage = new Image(recycleId(`${this.getId()}-custNewsImage`), {\n\t\t\t\twidth: \"100%\",\n\t\t\t\theight: \"15rem\",\n\t\t\t\tsrc: \"/resources/sap/cux/home/img/CustomNewsFeed/SupplyChain/3.jpg\"\n\t\t\t});\n\t\t\tthis.oNewsList = new List(recycleId(`${this.getId()}-custNewsList`));\n\t\t\tthis.oNewsGroupDialog = new Dialog(recycleId(`${this.getId()}-custNewsFeedDetailsDialog`), {\n\t\t\t\ttitle: this.getTitle(),\n\t\t\t\tcontentWidth: \"52rem\",\n\t\t\t\tcontentHeight: \"100%\",\n\t\t\t\tcontent: [this.oNewsGroupImage, this.oNewsList],\n\t\t\t\tbuttons: [\n\t\t\t\t\tnew Button(recycleId(`${this.getId()}-custNewsFeedDetailsCloseBtn`), {\n\t\t\t\t\t\ttext: this._i18nBundle.getText(\"Close\"),\n\t\t\t\t\t\tpress: this.closeNewsGroupDialog.bind(this),\n\t\t\t\t\t\ttype: \"Transparent\"\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t});\n\t\t\tthis.addDependent(this.oNewsGroupDialog);\n\t\t}\n\t}\n\n\t/**\n\t * Closes the news details dialog\n\t * @returns {void}\n\t */\n\tprivate closeNewsGroupDialog(): void {\n\t\t// Close the dialog first\n\t\tif (this.oNewsGroupDialog) {\n\t\t\tthis.oNewsGroupDialog.close();\n\t\t}\n\t}\n\n\t/**\n\t * Handles the click on the show more button of news detail items in news group dialog\n\t * @param {Event} oEvent\n\t * @returns {void}\n\t */\n\tprivate handleShowNewsFeedDetails(oEvent: Event): void {\n\t\tconst listItemIndex = oEvent.getSource<Button>().data(\"index\") as number;\n\t\tconst fieldsVBox = Element.getElementById(this.getId() + \"--idNewsFieldsBox\" + \"--\" + listItemIndex) as VBox;\n\t\tconst fieldExpanded: boolean = fieldsVBox.getVisible();\n\t\tfieldsVBox.setVisible(!fieldExpanded);\n\t\tconst sButtonShowText = fieldExpanded\n\t\t\t? (this._i18nBundle.getText(\"expand\") as string)\n\t\t\t: (this._i18nBundle.getText(\"collapse\") as string);\n\t\toEvent.getSource<Button>().setText(sButtonShowText);\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":206,"column":0},"map":{"version":3,"names":["sap","ui","define","sap_m_library","__BaseNewsItem","_interopRequireDefault","obj","__esModule","default","URLHelper","BaseNewsItem","NewsItem","extend","metadata","library","properties","url","type","group","defaultValue","constructor","_constructor","id","settings","BaseNewsItem.prototype.constructor.call","this","init","_init","BaseNewsItem.prototype.init.call","_oTile","attachPress","pressNewsItem","bind","setUrl","_setUrl","sUrl","setProperty","getUrl","_getUrl","getProperty","_pressNewsItem","redirect"],"sources":["NewsItem.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport { URLHelper } from \"sap/m/library\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport BaseNewsItem from \"./BaseNewsItem\";\nimport { $NewsItemSettings } from \"./NewsItem\";\n\n/**\n *\n * Class for managing and storing News items.\n *\n * @extends sap.cux.home.BaseNewsItem\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.NewsItem\n */\nexport default class NewsItem extends BaseNewsItem {\n\tconstructor(idOrSettings?: string | $NewsItemSettings);\n\tconstructor(id?: string, settings?: $NewsItemSettings);\n\tconstructor(id?: string, settings?: $NewsItemSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * The URL of the news item. Clicking on the item navigates to this URL.\n\t\t\t */\n\t\t\turl: { type: \"string\", group: \"Misc\", defaultValue: \"\" }\n\t\t}\n\t};\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\t\tthis._oTile.attachPress(this, this.pressNewsItem.bind(this));\n\t}\n\n\t/**\n\t * Sets the URL of the news item.\n\t * @param {string} sUrl - The URL of the news item.\n\t */\n\tpublic setUrl(sUrl: string): NewsItem {\n\t\tthis._oTile.setUrl(sUrl);\n\t\treturn this.setProperty(\"url\", sUrl, true);\n\t}\n\n\t/**\n\t * Gets the URL of the news item.\n\t * @param {string} sUrl - The URL of the news item.\n\t */\n\tpublic getUrl(): string {\n\t\treturn this.getProperty(\"url\") as string;\n\t}\n\n\t/**\n\t * Handles the press event on the news item, redirecting the user to the specified URL.\n\t */\n\tprivate pressNewsItem(): void {\n\t\tURLHelper.redirect(this.getUrl(), true);\n\t}\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,mCAAA,4CAAAC,EAAAC,GAAA,sBAAAC,EAAAC,GAAA,OAAAA,KAAAC,mBAAAD,EAAAE,UAAA,YAAAF,EAAAE,QAAAF,CAAA,OAKSG,EAASN,EAAA,mBAEXO,EAAYL,EAAAD,GAGnB,MAgBqBO,EAAiBD,EAAYE,OAAA,yBAOjCC,SAA4B,CAC3CC,QAAS,eACTC,WAAY,CAIXC,IAAK,CAAEC,KAAM,SAAUC,MAAO,OAAQC,aAAc,MAVtDC,YAAW,SAAAC,EAACC,EAAaC,GACxBC,6BAAAC,KAAMH,EAAIC,EACX,EAkBOG,KAAI,SAAAC,IACVC,sBAAAH,MACAA,KAAKI,OAAOC,YAAYL,KAAMA,KAAKM,cAAcC,KAAKP,MACvD,EAMOQ,OAAM,SAAAC,EAACC,GACbV,KAAKI,OAAOI,OAAOE,GACnB,OAAOV,KAAKW,YAAY,MAAOD,EAAM,KACtC,EAMOE,OAAM,SAAAC,IACZ,OAAOb,KAAKc,YAAY,MACzB,EAKQR,cAAa,SAAAS,IACpB/B,EAAUgC,SAAShB,KAAKY,SAAU,KACnC,IAAC,OAlDmB1B,CAAQ","ignoreList":[],"sourceRoot":""}},{"offset":{"line":211,"column":0},"map":{"version":3,"names":["sap","ui","define","Log","GenericTile","SlideTile","EventBus","DateFormat","XMLModel","Container","__BaseNewsPanel","__MenuItem","__NewsGroup","__NewsItem","___library","___utils_Constants","___utils_DataFormatUtils","___utils_Device","___utils_FESRUtil","__HttpHelper","__PersonalisationUtils","__UshellPersonalizer","_interopRequireDefault","obj","__esModule","default","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","BaseNewsPanel","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","_for","test","update","body","stage","shouldContinue","updateValue","reject","_resumeAfterTest","_resumeAfterBody","_resumeAfterUpdate","MenuItem","_catch","recover","NewsGroup","NewsItem","NewsType","DEFAULT_NEWS_URL","recycleId","DeviceType","addFESRId","HttpHelper","PersonalisationUtils","UshellPersonalizer","BASE_URL","NEWS_FEED_READ_API","NEWS_FEED_TRANSLATION_API","DEFAULT_FEED_COUNT","fnImagePlaceholder","sPath","N","Array","from","length","i","CUSTOM_NEWS_FEED","TITLE","LINK","VALIDITY","PREPARATION_REQUIRED","EXCLUDE_FIELDS","IMAGE_URL","FESR_STEP_NAME","EMPTY_DATA_ERROR_CODE","CUSTOM_IMAGES","Finance","Manufacturing","Sales","NewsPanel","extend","metadata","library","properties","url","type","group","defaultValue","visibility","RSS","customFeedKey","customFileName","showCustom","newsAvailable","supportedFileFormats","aggregations","newsGroup","singularName","multiple","constructor","_constructor","id","settings","BaseNewsPanel.prototype.constructor.call","_defaultNewsPromise","customNewsFeedCache","Map","init","_init","BaseNewsPanel.prototype.init.call","oNewsTile","getId","displayTime","width","height","tiles","mode","frameType","addStyleClass","getNewsWrapper","addContent","setProperty","_i18nBundle","getText","_eventBus","getInstance","oManageMenuItem","title","icon","press","handleEditNews","addAggregation","defaultNewsEnabled","isURLParamEnabled","setUrl","_isURLParamEnabled","paramName","urlParams","URLSearchParams","window","location","search","get","toUpperCase","getData","_getData","_temp7","_temp5","fireEvent","adjustLayout","_temp4","sUrl","getProperty","Promise","resolve","initializeXmlModel","_this$initializeXmlMo","oNewsModel","setModel","setVisible","_temp3","bNewsLoad","setCustomNewsFeed","_temp2","sCustomNewsFeedKey","getCustomFeedKey","_temp","handleFeedError","getUrl","mandatoryNewsFeed","_temp6","favNewsFeed","setFavNewsFeed","getCurrentNewsGroup","_getCurrentNewsGroup","aValues","_defaultNews","aGroupId","split","groupId","currentGroup","find","oGroup","group_id","_getCustomFeedKey","_getUrl","_initializeXmlModel","_this2","oParent","getParent","setDefaultBindingMode","attachRequestCompleted","oEvent","panelLoadedFn","loaded","count","oDocument","getSource","loadNewsFeed","publish","showError","date","Date","attachRequestFailed","_loadNewsFeed","noOfFeeds","_this3","_temp9","querySelector","oBindingInfo","path","destroyAggregation","bindNewsTile","_temp8","extractAllImageUrls","_handleFeedError","generateErrorMessage","setURL","_setURL","_this4","_adjustLayout","getDeviceType","Mobile","setHeight","setWidth","removeStyleClass","_bindNewsTile","oSlideTile","getBinding","bindAggregation","templateShareable","factory","sId","oContext","newsInfo","getObject","oTile","getElementsByTagName","textContent","subTitle","imageUrl","footer","formatDate","sGroupId","newsId","subTitleNews","getTile","_extractAllImageUrls","_this5","_temp10","oItemElement","extractImage","oImageUrl","createElement","appendChild","_formatDate","timeStamp","relativeDateFormatter","getDateTimeInstance","style","relative","relativeStyle","format","getFavNewsFeed","_getFavNewsFeed","_extractImage","sHrefLink","fnLoadPlaceholderImage","sPrefix","require","toUrl","image","fetch","res","text","sHTML","aMatches","match","isArray","catch","isCSVFileFormat","_isCSVFileFormat","fileName","pop","toLowerCase","_setFavNewsFeed","defaultFeed","_this6","_getUserPersonalization","personalizer","read","persData","defaultNewsFeed","_setCustomNewsFeed","sFeedId","_this7","_temp12","aFeeds","Error","items","filter","oNewsFeed","includes","loadCustomNewsFeed","showAllPrepRequired","showAllPreparationRequired","push","_temp11","getCustomNewsFeed","_this7$getCustomNewsF","_this7$getCustomNewsF2","err","error","filterMandatoryNews","_filterMandatoryNews","newsGroups","isTopLevelMandatory","mandatory_text","isAnyArticleMandatory","_group_to_article","some","article","getDefaultNewsFeedDetails","_getDefaultNewsFeedDetails","newsResponse","aNews","JSON","parse","stringify","aDefaultNews","oDefaultFeedDict","map","oFeed","description","footer_text","getDefaultFeedImage","getMandatoryDefaultNewsFeed","_getMandatoryDefaultNewsFeed","getDefaultNewsResponse","_getDefaultNewsResponse","fetchDefaultNews","_fetchDefaultNews","_this8","response","ok","status","json","_response$json","_getCustomNewsFeed","_this9","aDefaultgroups","getCustomFeedData","_getCustomFeedData","_this10","newsDetailUrl","getNewsFeedDetailsUrl","changeId","has","set","getAuthNewsFeed","_this10$customNewsFee","authorizedNewsFeeds","oFeedDict","forEach","getCustomFeedImage","_getNewsFeedDetailsUrl","oNews","_getAuthNewsFeed","sNewsUrl","newsTitle","_this11","all","getAllAvailableApps","getNewsFeedDetails","_ref","aAvailableApps","aNewsFeed","arrangeNewsFeeds","_arrangeNewsFeeds","aAuthNewsFeed","Category","ImpactedArtifacts","aImpactedArtifacts","impactedArtifact","oImpactedArtifact","isAuthFeed","_isAuthFeed","fioriIdSplitter","aTokens","sFioriId","trim","index","findIndex","oApp","signature","parameters","_getAllAvailableApps","getServiceAsync","oService","_oAdapter","_aInbounds","message","_getNewsFeedDetails","_exit","_this12","_temp14","_result3","fnFormattedLabel","sLabel","replace","GetJSON","getTranslatedText","_ref2","translationResponse","aTranslation","filterNewsOnTitle","aFields","Object","keys","aExpandFields","oField","oTranslatedField","oTranslation","ColumnName","oTranslatedFieldName","TranslatedName","label","Link","expanded","expandFields","_temp13","newsFeedDetails","_this12$filterNewsOnT","_filterNewsOnTitle","newsDetail","LineOfBusiness","_getTranslatedText","_loadCustomNewsFeed","feeds","feedType","_this13","oXMLResponse","parseJsonToXml","unbindAggregation","setData","_parseJsonToXml","_transformJsonForXml","aData","data","item","_jsonToXml","xml","key","transformedJson","rootToken","replaceAll","parser","DOMParser","parseFromString","_getCustomFeedImage","sFileName","sFileBasePath","sFilePath","files","randomIndex","randomArray","Uint32Array","crypto","getRandomValues","_getDefaultFeedImage","imgId","bg_image_id","groupImg","_group_to_image","image_id","mimeType","mime_type","groupBgImg","bg_image","isValidBase64","base64Data","base64UrlToBase64","_base64UrlToBase","base64Url","base64","_isValidBase","input","base64Regex","paddingIndex","indexOf","lastPaddingIndex","lastIndexOf","persContainerId","getPersContainerId","ownerComponent","getOwnerComponent"],"sources":["NewsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport GenericTile from \"sap/m/GenericTile\";\nimport SlideTile from \"sap/m/SlideTile\";\nimport { FrameType } from \"sap/m/library\";\nimport Event from \"sap/ui/base/Event\";\nimport Component from \"sap/ui/core/Component\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport DateFormat from \"sap/ui/core/format/DateFormat\";\nimport Context from \"sap/ui/model/Context\";\nimport XMLModel from \"sap/ui/model/xml/XMLModel\";\nimport Container from \"sap/ushell/Container\";\nimport type { $BaseNewsPanelSettings } from \"./BaseNewsPanel\";\nimport BaseNewsPanel from \"./BaseNewsPanel\";\nimport MenuItem from \"./MenuItem\";\nimport NewsAndPagesContainer from \"./NewsAndPagesContainer\";\nimport NewsGroup from \"./NewsGroup\";\nimport NewsItem from \"./NewsItem\";\nimport { NewsType } from \"./library\";\nimport { DEFAULT_NEWS_URL } from \"./utils/Constants\";\nimport { recycleId } from \"./utils/DataFormatUtils\";\nimport { DeviceType } from \"./utils/Device\";\nimport { addFESRId } from \"./utils/FESRUtil\";\nimport HttpHelper from \"./utils/HttpHelper\";\nimport PersonalisationUtils from \"./utils/PersonalisationUtils\";\nimport UshellPersonalizer from \"./utils/UshellPersonalizer\";\n\ninterface IBindingInfo {\n\tpath: string;\n\tlength: number;\n}\n\ninterface INewsResponse {\n\tvalue: ICustomNewsFeed[];\n}\n\nexport interface ICustomNewsFeed {\n\ttitle: string;\n\tsubTitle?: string;\n\tdescription?: string;\n\tfooter_text?: Record<string, string>;\n\tmandatory_text?: string;\n\t_group_to_image?: Record<string, string>;\n\t_group_to_article?: ICustomNewsFeed[];\n\t[key: string]: unknown;\n}\n\nexport interface INewsItem {\n\tchangeId: string;\n\ttitle?: string;\n\tshowAllPreparationRequired?: boolean;\n}\n\ninterface ITranslatedText {\n\tColumnName?: string;\n\tTranslatedName?: string;\n}\n\ninterface IAppConfiguration {\n\t_oAdapter: {\n\t\t_aInbounds: IAvailableApp[];\n\t};\n}\n\ninterface ODataResponse {\n\t\"@odata.context\": string;\n\t\"@odata.metadataEtag\": string;\n\tvalue: ICustomNewsFeed[];\n}\n\ninterface IAvailableApp {\n\tsemanticObject?: string;\n\taction?: string;\n\tid?: string;\n\ttitle?: string;\n\tpermanentKey?: string;\n\tcontentProviderId?: string;\n\tresolutionResult?: {\n\t\t[key: string]: string;\n\t};\n\tdeviceTypes?: {\n\t\t[key: string]: boolean;\n\t};\n\tsignature: {\n\t\tparameters: {\n\t\t\t[key: string]: IAppParameter;\n\t\t};\n\t\tadditionalParameters?: string;\n\t};\n}\n\ninterface IAppParameter {\n\tdefaultValue?: {\n\t\tvalue: string;\n\t\tformat: string;\n\t};\n\trequired: boolean;\n}\ninterface IFavNewsFeed {\n\titems: string[];\n\tshowAllPreparationRequired?: boolean;\n}\nexport interface INewsLink {\n\t[key: string]: string;\n}\n\nexport interface INewsParam {\n\t[key: string]: { [key: string]: string };\n}\n\nexport type FileFormat = \"xlsx\" | \"csv\";\n\nconst BASE_URL = \"/sap/opu/odata4/ui2/insights_srv/srvd/ui2/\",\n\tNEWS_FEED_READ_API = BASE_URL + \"insights_read_srv/0001/\" + \"NEWS_FEED\",\n\tNEWS_FEED_TRANSLATION_API = BASE_URL + \"insights_read_srv/0001/\" + \"NewsFeedColumnTranslation\",\n\tDEFAULT_FEED_COUNT = 7,\n\tfnImagePlaceholder = function (sPath: string, N: number) {\n\t\treturn Array.from({ length: N }, function (v, i) {\n\t\t\treturn sPath + \"/\" + (i + 1) + \".jpg\";\n\t\t});\n\t};\n\nconst CUSTOM_NEWS_FEED = {\n\t\tTITLE: \"LineOfBusiness\",\n\t\tLINK: \"WhatsNewDocument\",\n\t\tVALIDITY: \"ValidAsOf\",\n\t\tPREPARATION_REQUIRED: \"PreparationRequired\",\n\t\tEXCLUDE_FIELDS: [\n\t\t\t\"ChangeId\",\n\t\t\t\"LineNumber\",\n\t\t\t\"LineOfBusiness\",\n\t\t\t\"SolutionArea\",\n\t\t\t\"Title\",\n\t\t\t\"Description\",\n\t\t\t\"Type\",\n\t\t\t\"ValidAsOf\",\n\t\t\t\"WhatsNewDocument\",\n\t\t\t\"Link\"\n\t\t],\n\t\tIMAGE_URL: \"sap/cux/home/img/CustomNewsFeed/\",\n\t\tFESR_STEP_NAME: \"custNewsSlide-press\",\n\t\tEMPTY_DATA_ERROR_CODE: \"NODATA\"\n\t},\n\tCUSTOM_IMAGES: { [key: string]: string[] } = {\n\t\t\"Application Platform and Infrastructure\": fnImagePlaceholder(\"ApplicationPlatformandInfrastructure\", 3),\n\t\t\"Asset Management\": fnImagePlaceholder(\"AssetManagement\", 3),\n\t\t\"Cross Applications\": fnImagePlaceholder(\"CrossApplications\", 3),\n\t\tFinance: fnImagePlaceholder(\"Finance\", 3),\n\t\tManufacturing: fnImagePlaceholder(\"Manufacturing\", 3),\n\t\t\"R&D / Engineering\": fnImagePlaceholder(\"RnDandEngineering\", 3),\n\t\tSales: fnImagePlaceholder(\"Sales\", 3),\n\t\t\"Sourcing and Procurement\": fnImagePlaceholder(\"SourcingandProcurement\", 3),\n\t\t\"Supply Chain\": fnImagePlaceholder(\"SupplyChain\", 3),\n\t\tdefault: [\"default.jpg\"]\n\t};\n\n/**\n *\n * Panel class for managing and storing News.\n *\n * @extends sap.cux.home.BaseNewsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @public\n *\n * @alias sap.cux.home.NewsPanel\n */\nexport default class NewsPanel extends BaseNewsPanel {\n\tprivate oNewsTile!: SlideTile;\n\tprivate oNewsModel!: XMLModel;\n\tprivate oManageMenuItem!: MenuItem;\n\tprivate image!: number;\n\tprivate customNewsFeedCache: Map<string, unknown>;\n\tprivate bNewsLoad!: boolean;\n\tprivate favNewsFeed!: IFavNewsFeed;\n\tprivate _eventBus!: EventBus;\n\tprivate _defaultNews!: ODataResponse;\n\tprivate mandatoryNewsFeed!: string[];\n\tprivate _defaultNewsPromise: Promise<ODataResponse> | null = null;\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * The URL of the news item.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\turl: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * Type of the news item.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\ttype: {\n\t\t\t\ttype: \"sap.cux.home.NewsType\",\n\t\t\t\tgroup: \"Misc\",\n\t\t\t\tvisibility: \"public\",\n\t\t\t\tdefaultValue: NewsType.RSS\n\t\t\t},\n\t\t\t/**\n\t\t\t * The key of custom news feed.\n\t\t\t *\n\t\t\t * @private\n\t\t\t */\n\t\t\tcustomFeedKey: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * The filename of custom news feed.\n\t\t\t *\n\t\t\t * @private\n\t\t\t */\n\t\t\tcustomFileName: { type: \"string\", group: \"Misc\", defaultValue: \"\" },\n\t\t\t/**\n\t\t\t * The flag for custom news feed is checked or not.\n\t\t\t *\n\t\t\t * @private\n\t\t\t */\n\t\t\tshowCustom: { type: \"boolean\", group: \"Misc\", defaultValue: false },\n\t\t\t/**\n\t\t\t * The flag to determine rss feed will load or not.\n\t\t\t *\n\t\t\t * @private\n\t\t\t */\n\t\t\tnewsAvailable: { type: \"boolean\", group: \"Misc\", defaultValue: true, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Supported file formats for news.\n\t\t\t *\n\t\t\t * @private\n\t\t\t */\n\t\t\tsupportedFileFormats: { type: \"FileFormat[]\", group: \"Misc\", defaultValue: [\"xlsx\"], visibility: \"hidden\" }\n\t\t},\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * newsGroup aggregation for News\n\t\t\t */\n\t\t\tnewsGroup: { type: \"sap.cux.home.NewsGroup\", singularName: \"newsGroup\", multiple: true, visibility: \"hidden\" }\n\t\t}\n\t};\n\n\tconstructor(idOrSettings?: string | $BaseNewsPanelSettings);\n\tconstructor(id?: string, settings?: $BaseNewsPanelSettings);\n\t/**\n\t * Constructor for a new News Panel.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $BaseNewsPanelSettings) {\n\t\tsuper(id, settings);\n\t\tthis.customNewsFeedCache = new Map();\n\t}\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\tthis.oNewsTile = new SlideTile(this.getId() + \"--idNewsSlide\", {\n\t\t\tdisplayTime: 20000,\n\t\t\twidth: \"100%\",\n\t\t\theight: \"17rem\",\n\t\t\ttiles: [\n\t\t\t\tnew GenericTile(this.getId() + \"--placeholder\", {\n\t\t\t\t\tstate: \"Loading\",\n\t\t\t\t\tmode: \"ArticleMode\",\n\t\t\t\t\tframeType: \"Stretch\" as FrameType\n\t\t\t\t})\n\t\t\t]\n\t\t}).addStyleClass(\"newsTileMaxWidth sapUiSmallMarginTop\");\n\t\taddFESRId(this.oNewsTile, \"newsSlidePress\");\n\t\tthis.getNewsWrapper().addContent(this.oNewsTile);\n\t\tthis.getNewsWrapper().addStyleClass(\"newsWrapper\");\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"newsTitle\"));\n\t\tthis._eventBus = EventBus.getInstance();\n\n\t\tthis.oManageMenuItem = new MenuItem(`${this.getId()}-manageNews`, {\n\t\t\ttitle: this._i18nBundle.getText(\"mngNews\"),\n\t\t\ticon: \"sap-icon://edit\",\n\t\t\tpress: this.handleEditNews.bind(this)\n\t\t});\n\t\tthis.addAggregation(\"menuItems\", this.oManageMenuItem);\n\t\taddFESRId(this.oManageMenuItem, \"manageNews\");\n\t\tlet defaultNewsEnabled = this.isURLParamEnabled(\"default-News\");\n\t\t// if Default News url param is enabled, show default news only\n\t\tif (defaultNewsEnabled) {\n\t\t\tthis.setUrl(DEFAULT_NEWS_URL);\n\t\t\tthis.setProperty(\"showCustom\", false);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param paramName name of parameter\n\t * This method checks if the URL parameter is enabled.\n\t * @returns {boolean} True if the parameter is enabled, false otherwise.\n\t * @private\n\t */\n\tpublic isURLParamEnabled(paramName: string): boolean {\n\t\tconst urlParams = new URLSearchParams(window.location.search);\n\t\treturn urlParams.get(paramName)?.toUpperCase() === \"TRUE\";\n\t}\n\n\t/**\n\t * Retrieves news data asynchronously.\n\t * If the news model is not initialized, it initializes the XML model and loads news feed data.\n\t * @private\n\t * @returns {Promise} A promise that resolves when the news data is retrieved.\n\t */\n\tpublic async getData() {\n\t\tlet sUrl: string = this.getUrl();\n\t\tlet defaultNewsEnabled = this.isURLParamEnabled(\"default-News\");\n\t\tthis.mandatoryNewsFeed = [];\n\t\tif (!this.favNewsFeed) {\n\t\t\tawait this.setFavNewsFeed(defaultNewsEnabled);\n\t\t}\n\n\t\tif (sUrl && sUrl !== DEFAULT_NEWS_URL && !this.getProperty(\"showCustom\")) {\n\t\t\t//rss feed scenario\n\t\t\tthis.oNewsModel = await this.initializeXmlModel(sUrl);\n\t\t\tthis.oNewsTile.setModel(this.oNewsModel);\n\t\t\tthis.oManageMenuItem.setVisible(false);\n\t\t} else if (sUrl == DEFAULT_NEWS_URL && !this.getProperty(\"showCustom\")) {\n\t\t\t// default news scenario\n\t\t\tthis.bNewsLoad = this.bNewsLoad || false;\n\t\t\tthis.oManageMenuItem.setVisible(true);\n\t\t\tvoid this.setCustomNewsFeed(\"\");\n\t\t} else if (this.getProperty(\"showCustom\")) {\n\t\t\t//custom news scenario\n\t\t\tthis.bNewsLoad = this.bNewsLoad || false;\n\t\t\tthis.oManageMenuItem.setVisible(true);\n\t\t\tconst sCustomNewsFeedKey = this.getCustomFeedKey();\n\t\t\tif (sCustomNewsFeedKey) {\n\t\t\t\tawait this.setCustomNewsFeed(sCustomNewsFeedKey);\n\t\t\t} else {\n\t\t\t\tthis.handleFeedError();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.handleFeedError();\n\t\t}\n\t\tthis.fireEvent(\"loaded\");\n\t\tthis.adjustLayout();\n\t}\n\n\t/**\n\t * Retrieves the current news group data based on the provided id.\n\t *\n\t * @param id - The group ID\n\t * @returns The news group object that matches the extracted group ID, or `undefined`\n\t *          if no matching group is found.\n\t * @private\n\t */\n\tpublic getCurrentNewsGroup(id: string) {\n\t\tlet aValues = this._defaultNews.value;\n\t\tlet aGroupId = id.split(\"-\");\n\t\t// find the groupid from the sId\n\t\tlet groupId = aGroupId?.[aGroupId.length - 1];\n\t\tlet currentGroup = aValues.find((oGroup) => oGroup.group_id === groupId);\n\t\treturn currentGroup;\n\t}\n\n\t/**\n\t * Returns the custom news feed key property of NewsPanel\n\t * @returns {string} custom news feed key\n\t */\n\tpublic getCustomFeedKey(): string {\n\t\treturn this.getProperty(\"customFeedKey\") as string;\n\t}\n\n\t/**\n\t * Returns the Url property of NewsPanel\n\t * @returns {any}\n\t */\n\tpublic getUrl(): string {\n\t\treturn this.getProperty(\"url\") as string;\n\t}\n\n\t/**\n\t * Initializes an XML model for managing news data.\n\t * This method returns a Promise that resolves to the initialized XML model.\n\t */\n\n\t/**\n\t * Initializes an XML model for managing news data.\n\t * This method returns a Promise that resolves to the initialized XML model.\n\t * @param {string} sUrl rss url to load the news feed\n\t * @returns {Promise<XMLModel>} XML Document containing the news feeds\n\t */\n\tprivate async initializeXmlModel(sUrl: string): Promise<XMLModel> {\n\t\tconst oParent = this.getParent() as NewsAndPagesContainer;\n\t\treturn new Promise((resolve) => {\n\t\t\tconst oNewsModel = new XMLModel(sUrl);\n\t\t\toNewsModel.setDefaultBindingMode(\"OneWay\");\n\t\t\toNewsModel.attachRequestCompleted((oEvent: Event) => {\n\t\t\t\tvoid (async () => {\n\t\t\t\t\tif (!this.bNewsLoad) {\n\t\t\t\t\t\toParent?.panelLoadedFn(\"News\", { loaded: true, count: DEFAULT_FEED_COUNT });\n\t\t\t\t\t\tthis.bNewsLoad = true;\n\t\t\t\t\t}\n\t\t\t\t\tconst oDocument = oEvent.getSource<XMLModel>().getData() as XMLDocument;\n\t\t\t\t\tawait this.loadNewsFeed(oDocument, 0);\n\t\t\t\t\tthis._eventBus.publish(\"KeyUserChanges\", \"newsFeedLoadFailed\", { showError: false, date: new Date() });\n\t\t\t\t\tresolve(oNewsModel);\n\t\t\t\t})();\n\t\t\t});\n\t\t\toNewsModel.attachRequestFailed(() => {\n\t\t\t\tthis.handleFeedError();\n\t\t\t\tif (!this.bNewsLoad) {\n\t\t\t\t\toParent?.panelLoadedFn(\"News\", { loaded: false, count: 0 });\n\t\t\t\t\tthis.bNewsLoad = true;\n\t\t\t\t}\n\t\t\t\tthis._eventBus.publish(\"KeyUserChanges\", \"newsFeedLoadFailed\", { showError: true, date: new Date() });\n\t\t\t\tresolve(oNewsModel);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Loads the news feed based on the provided document and number of feeds.\n\t * Determines the feed type (RSS, feed, custom) and binds the news tile accordingly.\n\t * @param {Document} oDocument - The document containing the news feed data.\n\t * @param {number} [noOfFeeds] - The number of feeds to be displayed. Defaults to a predefined value.\n\t */\n\tprivate async loadNewsFeed(oDocument: Document, noOfFeeds: number) {\n\t\tlet oBindingInfo: IBindingInfo;\n\t\tif (!oDocument?.querySelector(\"customFeed\") && !oDocument?.querySelector(\"defaultFeed\")) {\n\t\t\tawait this.extractAllImageUrls(oDocument, noOfFeeds || DEFAULT_FEED_COUNT);\n\t\t}\n\n\t\tif (!!oDocument?.querySelector(\"rss\") && !!oDocument?.querySelector(\"item\")) {\n\t\t\toBindingInfo = {\n\t\t\t\tpath: \"/channel/item/\",\n\t\t\t\tlength: noOfFeeds || DEFAULT_FEED_COUNT\n\t\t\t};\n\t\t} else if (!!oDocument?.querySelector(\"atom\") && !!oDocument?.querySelector(\"entry\")) {\n\t\t\toBindingInfo = {\n\t\t\t\tpath: \"/entry/\",\n\t\t\t\tlength: noOfFeeds || DEFAULT_FEED_COUNT\n\t\t\t};\n\t\t} else if (\n\t\t\t(!!oDocument?.querySelector(\"customFeed\") || !!oDocument?.querySelector(\"defaultFeed\")) &&\n\t\t\t!!oDocument?.querySelector(\"item\")\n\t\t) {\n\t\t\tthis.destroyAggregation(\"newsItems\");\n\t\t\toBindingInfo = {\n\t\t\t\tpath: \"/item/\",\n\t\t\t\tlength: noOfFeeds || DEFAULT_FEED_COUNT\n\t\t\t};\n\t\t} else {\n\t\t\tthis.handleFeedError();\n\t\t\treturn;\n\t\t}\n\t\tthis.bindNewsTile(this.oNewsTile, oBindingInfo);\n\t}\n\n\t/**\n\t * Handles errors that occur during the loading of the news feed.\n\t * @returns {void}\n\t */\n\tpublic handleFeedError(): void {\n\t\tif (this.getProperty(\"showCustom\") || this.getUrl() === DEFAULT_NEWS_URL) {\n\t\t\tthis.generateErrorMessage().setVisible(true);\n\t\t\tthis.oNewsTile.setVisible(false);\n\t\t} else {\n\t\t\t(this.getNewsWrapper()?.getParent() as FlexBox).setVisible(false);\n\t\t\tthis.setProperty(\"newsAvailable\", false);\n\t\t\tthis.oManageMenuItem.setVisible(false);\n\t\t}\n\t}\n\n\tpublic async setURL(url: string) {\n\t\tthis.setProperty(\"showCustom\", false);\n\t\tthis.setProperty(\"newsAvailable\", true);\n\t\tthis.generateErrorMessage().setVisible(false);\n\t\t(this.getNewsWrapper()?.getParent() as FlexBox).setVisible(true);\n\t\tthis.oNewsTile.setVisible(true);\n\t\tthis.setProperty(\"url\", url);\n\t\tawait this.getData();\n\t}\n\n\t/**\n\t * Adjust layout based on the device type\n\t *\n\t * @private\n\t */\n\tpublic adjustLayout() {\n\t\tif (this.getDeviceType() === DeviceType.Mobile) {\n\t\t\tthis.oNewsTile.setHeight(\"11rem\");\n\t\t\tthis.generateErrorMessage().setWidth(\"100%\");\n\t\t\tthis.oNewsTile.removeStyleClass(\"sapUiSmallMarginTop\");\n\t\t} else {\n\t\t\tthis.oNewsTile.setHeight(\"17rem\");\n\t\t\t(this.getNewsWrapper()?.getParent() as FlexBox).setWidth(\"100%\");\n\t\t}\n\t}\n\n\t/**\n\t * Binds the news tile with the provided binding information.\n\t * @param {sap.m.SlideTile} oSlideTile - The SlideTile control to be bound.\n\t * @param {IBindingInfo} oBindingInfo - The binding information containing the path and length of the aggregation.\n\t */\n\tprivate bindNewsTile(oSlideTile: SlideTile, oBindingInfo: IBindingInfo): void {\n\t\tif (oBindingInfo) {\n\t\t\tif (!oSlideTile.getBinding(\"tiles\")) {\n\t\t\t\toSlideTile.bindAggregation(\"tiles\", {\n\t\t\t\t\tpath: oBindingInfo.path,\n\t\t\t\t\tlength: oBindingInfo.length,\n\t\t\t\t\ttemplateShareable: false,\n\t\t\t\t\tfactory: (sId: string, oContext: Context) => {\n\t\t\t\t\t\tconst newsInfo = oContext.getObject() as XMLDocument;\n\t\t\t\t\t\tlet oTile;\n\t\t\t\t\t\tif (newsInfo.getElementsByTagName(\"link\").length > 0) {\n\t\t\t\t\t\t\toTile = new NewsItem(recycleId(`${sId}-news-item`), {\n\t\t\t\t\t\t\t\turl: newsInfo.getElementsByTagName(\"link\")[0].textContent as string,\n\t\t\t\t\t\t\t\ttitle: newsInfo.getElementsByTagName(\"title\")[0].textContent as string,\n\t\t\t\t\t\t\t\tsubTitle: newsInfo.getElementsByTagName(\"description\")[0].textContent as string,\n\t\t\t\t\t\t\t\timageUrl: newsInfo.getElementsByTagName(\"imageUrl\")[0].textContent as string,\n\t\t\t\t\t\t\t\tfooter: this.formatDate(newsInfo.getElementsByTagName(\"pubDate\")[0].textContent as string)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet sGroupId = (newsInfo.getElementsByTagName(\"id\")?.[0]?.textContent as string) ?? \"\";\n\t\t\t\t\t\t\tlet newsId = sGroupId ? sId + \"-newsgroup-\" + sGroupId : sId + \"-newsgroup\";\n\t\t\t\t\t\t\tlet subTitleNews = newsInfo.getElementsByTagName(\"subTitle\")?.[0]?.textContent ?? \"\";\n\t\t\t\t\t\t\toTile = new NewsGroup(recycleId(newsId), {\n\t\t\t\t\t\t\t\ttitle: newsInfo.getElementsByTagName(\"title\")[0].textContent as string,\n\t\t\t\t\t\t\t\tsubTitle: subTitleNews || (this._i18nBundle.getText(\"newsFeedDescription\") as string),\n\t\t\t\t\t\t\t\timageUrl: newsInfo.getElementsByTagName(\"imageUrl\")?.[0]?.textContent as string,\n\t\t\t\t\t\t\t\tfooter: newsInfo.getElementsByTagName(\"footer\")?.[0]?.textContent as string\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.addAggregation(\"newsItems\", oTile, true);\n\t\t\t\t\t\treturn oTile.getTile();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Extracts images for all the news tiles\n\t * @param {Document} oDocument - The document containing the news feed data.\n\t * @param {number} [noOfFeeds] - The number of feeds to be displayed. Defaults to a predefined value.\n\t */\n\tprivate async extractAllImageUrls(oDocument: Document, noOfFeeds: number) {\n\t\tfor (let i = 0; i < noOfFeeds; i++) {\n\t\t\tconst oItemElement = oDocument?.getElementsByTagName(\"item\")[i];\n\t\t\tconst sUrl: string = await this.extractImage(oItemElement.getElementsByTagName(\"link\")[0].textContent as string);\n\t\t\tconst oImageUrl = oDocument.createElement(\"imageUrl\");\n\t\t\toImageUrl.textContent = sUrl;\n\t\t\toItemElement.appendChild(oImageUrl);\n\t\t}\n\t}\n\n\t/**\n\t * Converts the given date to a relative date-time format.\n\t * @param {string} timeStamp - The timestamp to be converted.\n\t * @returns {string} The date in relative date-time format.\n\t */\n\tprivate formatDate(timeStamp: string): string {\n\t\tconst relativeDateFormatter = DateFormat.getDateTimeInstance({\n\t\t\tstyle: \"medium\",\n\t\t\trelative: true,\n\t\t\trelativeStyle: \"short\"\n\t\t});\n\t\treturn relativeDateFormatter.format(new Date(timeStamp));\n\t}\n\n\t/**\n\t * Returns the favourite news feed for the custom news\n\t * @returns {IFavNewsFeed}\n\t * @private\n\t */\n\tpublic getFavNewsFeed() {\n\t\treturn this.favNewsFeed;\n\t}\n\n\t/**\n\t * Extracts the image URL from the provided HREF link or link.\n\t * @param {string} sHrefLink - The HREF link containing the image URL.\n\t * @returns {Promise} A promise that resolves to the extracted image URL.\n\t */\n\tprivate extractImage(sHrefLink: string): Promise<string> {\n\t\tconst fnLoadPlaceholderImage = () => {\n\t\t\tconst sPrefix = sap.ui.require.toUrl(\"sap/cux/home/utils\");\n\t\t\tthis.image = this.image ? this.image + 1 : 1;\n\t\t\tthis.image = this.image < 9 ? this.image : 1;\n\t\t\treturn `${sPrefix}/imgNews/${this.image}.jpg`;\n\t\t};\n\n\t\treturn fetch(sHrefLink)\n\t\t\t.then((res) => res.text())\n\t\t\t.then((sHTML) => {\n\t\t\t\tconst aMatches = sHTML.match(/<meta[^>]*property=[\"']og:image[\"'][^>]*content=[\"']([^\"']+)[\"'][^>]*>/i);\n\t\t\t\treturn Array.isArray(aMatches) && aMatches[1] ? aMatches[1] : fnLoadPlaceholderImage();\n\t\t\t})\n\t\t\t.catch(fnLoadPlaceholderImage);\n\t}\n\n\t/**\n\t * Checks if the custom file format is CSV based on the custom file name.\n\t *\n\t * @param {string} fileName - The custom file name.\n\t * @returns {boolean} True if the file format is CSV, otherwise false.\n\t */\n\tprivate isCSVFileFormat(fileName: string): boolean {\n\t\treturn fileName.split(\".\").pop()?.toLowerCase() === (\"csv\" as string);\n\t}\n\t/**\n\t * Sets the favorite news feed for the user by retrieving personalization data.\n\t *\n\t * This method asynchronously fetches the user's personalization data and updates\n\t * the `favNewsFeed` property with the favorite news feed information.\n\t *\n\t * @returns {Promise<void>} A promise that resolves when the favorite news feed is set.\n\t * @private\n\t */\n\tprivate async setFavNewsFeed(defaultFeed?: boolean): Promise<void> {\n\t\tconst personalizer = await this._getUserPersonalization();\n\t\tconst persData = await personalizer?.read();\n\t\tthis.favNewsFeed = (defaultFeed ? persData?.defaultNewsFeed : persData?.favNewsFeed) as IFavNewsFeed;\n\t}\n\n\t/**\n\t * This method retrieves the count and feeds of the custom news feed asynchronously.\n\t * If the count is not zero, it loads the custom news feed data and returns the feeds.\n\t * @param {string} sFeedId - The ID of the custom news feed to set.\n\t * @returns {Promise} A promise that resolves to an array of news feeds.\n\t * @private\n\t */\n\tpublic async setCustomNewsFeed(sFeedId: string): Promise<void> {\n\t\ttry {\n\t\t\tthis.oNewsTile.setVisible(true);\n\t\t\tthis.generateErrorMessage().setVisible(false);\n\t\t\tawait this.setFavNewsFeed(!sFeedId);\n\t\t\tconst customFileName = this.getProperty(\"customFileName\") as string;\n\t\t\tconst showAllPrepRequired = this.isCSVFileFormat(customFileName)\n\t\t\t\t? false\n\t\t\t\t: (this.favNewsFeed?.showAllPreparationRequired ?? true);\n\n\t\t\tif (this.isCSVFileFormat(customFileName)) {\n\t\t\t\tCUSTOM_NEWS_FEED.EXCLUDE_FIELDS.push(\"PreparationRequired\");\n\t\t\t}\n\t\t\tlet aFeeds;\n\t\t\tif (sFeedId) {\n\t\t\t\taFeeds = await this.getCustomNewsFeed(sFeedId, showAllPrepRequired);\n\t\t\t} else {\n\t\t\t\taFeeds = await this.getCustomNewsFeed(\"\", true);\n\t\t\t}\n\n\t\t\tif (aFeeds.length === 0) {\n\t\t\t\tthrow new Error(\"Error: No news feed available\");\n\t\t\t}\n\t\t\t//filer selected feeds from all news feed\n\t\t\tif (this.favNewsFeed?.items?.length) {\n\t\t\t\taFeeds = aFeeds.filter((oNewsFeed) => {\n\t\t\t\t\t//return this.favNewsFeed?.items.includes(oNewsFeed.title) || this.mandatoryNewsFeed.includes(oNewsFeed.title);\n\t\t\t\t\treturn this.favNewsFeed?.items.includes(oNewsFeed.title);\n\t\t\t\t});\n\t\t\t} else if (this.favNewsFeed?.items?.length === 0) {\n\t\t\t\t(this.getParent() as NewsAndPagesContainer)?.panelLoadedFn(\"News\", { loaded: true, count: 0 });\n\t\t\t\tthrow new Error(\"Error: No fav news feed available\");\n\t\t\t}\n\t\t\tawait this.loadCustomNewsFeed(aFeeds, sFeedId ? \"customFeed\" : \"defaultFeed\");\n\t\t} catch (err) {\n\t\t\tLog.error(err as string);\n\t\t\tthis.handleFeedError();\n\t\t}\n\t}\n\n\t/**\n\t * Filters the provided list of news groups to include only those that are marked as mandatory.\n\t *\n\t * A news group is considered mandatory if:\n\t * - Its `mandatory_text` property (at the top level) is set to \"TRUE\" (case-insensitive).\n\t * - Any of its associated articles (in the `_group_to_article` array) has a `mandatory_text` property set to \"TRUE\" (case-insensitive).\n\t *\n\t * If any article within a group is marked as mandatory, the group's `mandatory_text` property\n\t * is updated to \"TRUE\".\n\t *\n\t * @param newsGroups - An array of news groups to filter. Each group is expected to implement the `ICustomNewsFeed` interface.\n\t * @returns An array of news groups that are marked as mandatory.\n\t * @private\n\t */\n\tprivate filterMandatoryNews(newsGroups: ICustomNewsFeed[]) {\n\t\treturn newsGroups.filter((group) => {\n\t\t\t// Check top-level mandatory_text\n\t\t\tconst isTopLevelMandatory = group.mandatory_text?.toUpperCase() === \"TRUE\";\n\n\t\t\t// Check if any inner _group_to_article has mandatory_text true\n\t\t\tconst isAnyArticleMandatory = group._group_to_article?.some(function (article) {\n\t\t\t\t//make mandatory_test true at group level if any article is mandatory\n\t\t\t\tif (article.mandatory_text?.toUpperCase() === \"TRUE\") {\n\t\t\t\t\tgroup.mandatory_text = \"TRUE\";\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn isTopLevelMandatory || isAnyArticleMandatory;\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves the default news feed details from the given OData response.\n\t *\n\t * @param newsResponse - The OData response containing the news feed data.\n\t * @param showAllPreparationRequired - A boolean flag indicating whether to filter news items that require preparation.\n\t * @returns An array of default news feed items.\n\t * @private\n\t */\n\tprivate getDefaultNewsFeedDetails(newsResponse: ODataResponse) {\n\t\tlet aNews: ICustomNewsFeed[] = JSON.parse(JSON.stringify(newsResponse.value || [])) as ICustomNewsFeed[];\n\t\tconst aDefaultNews: ICustomNewsFeed[] = [];\n\t\tconst oDefaultFeedDict = {} as Record<string, string>;\n\t\tthis.mandatoryNewsFeed = [];\n\t\tif (aNews?.length > 0) {\n\t\t\tthis.mandatoryNewsFeed = this.filterMandatoryNews(aNews).map((oFeed) => oFeed.title);\n\n\t\t\tfor (const oFeed of aNews) {\n\t\t\t\tconst title = oFeed.title;\n\t\t\t\tlet subTitle = \"\";\n\t\t\t\tif (!oDefaultFeedDict[title]) {\n\t\t\t\t\tsubTitle = oFeed.subTitle || oFeed.description || \"\";\n\t\t\t\t\taDefaultNews.push({\n\t\t\t\t\t\ttitle: title,\n\t\t\t\t\t\tfooter: oFeed.footer_text,\n\t\t\t\t\t\timageUrl: this.getDefaultFeedImage(oFeed),\n\t\t\t\t\t\tid: oFeed.group_id,\n\t\t\t\t\t\tsubTitle: subTitle || \"\"\n\t\t\t\t\t});\n\t\t\t\t\toDefaultFeedDict[title] = title;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn aDefaultNews;\n\t}\n\n\t/**\n\t * Returns the mandatory news feed details\n\t * If the mandatory news feed is not set, it returns an empty array.\n\t *\n\t * @returns {ICustomNewsFeed[]} The mandatory news feed details.\n\t * @private\n\t */\n\tpublic getMandatoryDefaultNewsFeed() {\n\t\treturn this.mandatoryNewsFeed || [];\n\t}\n\n\t/**\n\t * Retrieves the default news response, either from cache or by fetching it.\n\t * @returns {Promise<ODataResponse>} A promise that resolves to the default news data\n\t * @private\n\t */\n\tprivate getDefaultNewsResponse(): Promise<ODataResponse> {\n\t\t// Return cached data if available\n\t\tif (this._defaultNews) {\n\t\t\treturn Promise.resolve(this._defaultNews);\n\t\t}\n\n\t\tif (!this._defaultNewsPromise) {\n\t\t\tthis._defaultNewsPromise = this.fetchDefaultNews();\n\t\t}\n\n\t\treturn this._defaultNewsPromise;\n\t}\n\n\t/**\n\t * Fetches the default news data from the server.\n\t * @returns {Promise<ODataResponse>} A promise that resolves to the fetched news data\n\t * @throws {Error} If the network request fails or returns a non-OK status\n\t * @private\n\t */\n\tprivate async fetchDefaultNews(): Promise<ODataResponse> {\n\t\ttry {\n\t\t\tconst response = await fetch(DEFAULT_NEWS_URL);\n\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(`HTTP error! status: ${response.status}`);\n\t\t\t}\n\n\t\t\tthis._defaultNews = (await response.json()) as ODataResponse;\n\t\t\treturn this._defaultNews;\n\t\t} catch (error) {\n\t\t\tthis._defaultNewsPromise = null;\n\t\t\tLog.error(error as string);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves a custom news feed based on the provided feed ID.\n\t * If no feed ID is provided, it returns the default news feed.\n\t *\n\t * @param {string} sFeedId - The ID of the custom news feed to retrieve. If not provided, the default news feed is returned.\n\t * @param {boolean} showAllPreparationRequired - A flag indicating whether to show all preparation required.\n\t * @returns {Promise<ICustomNewsFeed[]>} A promise that resolves to an array of custom news feed items.\n\t * @private\n\t */\n\tpublic async getCustomNewsFeed(sFeedId: string, showAllPreparationRequired: boolean): Promise<ICustomNewsFeed[]> {\n\t\tif (!sFeedId) {\n\t\t\tawait this.getDefaultNewsResponse();\n\t\t\tlet aDefaultgroups = this.getDefaultNewsFeedDetails(this._defaultNews);\n\t\t\treturn aDefaultgroups;\n\t\t} else {\n\t\t\treturn this.getCustomFeedData(sFeedId, showAllPreparationRequired);\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves custom news feed items identified by the provided feed ID and settings.\n\t * It processes the response data and returns an array of custom news feed items.\n\t * @param {string} sFeedId - The ID of the custom news feed.\n\t * @param {boolean} showAllPreparationRequired - Indicates whether to show all preparation required.\n\t * @returns {Promise} A Promise that resolves to an array of custom news feed items.\n\t * @private\n\t */\n\tprivate async getCustomFeedData(sFeedId: string, showAllPreparationRequired: boolean): Promise<ICustomNewsFeed[]> {\n\t\ttry {\n\t\t\tconst newsDetailUrl = this.getNewsFeedDetailsUrl({ changeId: sFeedId, showAllPreparationRequired });\n\t\t\tif (!this.customNewsFeedCache.has(newsDetailUrl)) {\n\t\t\t\tthis.customNewsFeedCache.set(newsDetailUrl, this.getAuthNewsFeed(newsDetailUrl));\n\t\t\t}\n\t\t\tconst authorizedNewsFeeds = (await this.customNewsFeedCache.get(newsDetailUrl)) as ICustomNewsFeed[];\n\t\t\tconst oFeedDict: { [key: string]: string } = {};\n\t\t\tconst aFeeds: ICustomNewsFeed[] = [];\n\t\t\tif (authorizedNewsFeeds?.length > 0) {\n\t\t\t\tauthorizedNewsFeeds.forEach((oFeed: ICustomNewsFeed) => {\n\t\t\t\t\tconst title = oFeed[CUSTOM_NEWS_FEED.TITLE] as INewsLink;\n\t\t\t\t\tif (!oFeedDict[title.value]) {\n\t\t\t\t\t\taFeeds.push({\n\t\t\t\t\t\t\ttitle: title.value,\n\t\t\t\t\t\t\tfooter: (oFeed[CUSTOM_NEWS_FEED.VALIDITY] as INewsLink).value,\n\t\t\t\t\t\t\timageUrl: this.getCustomFeedImage(title.value)\n\t\t\t\t\t\t});\n\t\t\t\t\t\toFeedDict[title.value] = title.value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn aFeeds; // group details\n\t\t} catch (err) {\n\t\t\tLog.error(err as string);\n\t\t\tthrow new Error(err as string);\n\t\t}\n\t}\n\n\t/**\n\t * Generates the URL for retrieving news feed details based on the provided news object.\n\t * The generated URL limits the number of results to 999.\n\t * @param {INewsItem} oNews - The news object containing properties such as changeId, title, and showAllPreparationRequired.\n\t * @returns {string} The URL for retrieving news feed details.\n\t */\n\tpublic getNewsFeedDetailsUrl(oNews: INewsItem) {\n\t\tlet sUrl = NEWS_FEED_READ_API + \"?$filter=ChangeId eq \" + \"'\" + oNews.changeId + \"'\";\n\t\tconst customFileName = this.getProperty(\"customFileName\") as string;\n\t\tif (!this.isCSVFileFormat(customFileName) && oNews.showAllPreparationRequired) {\n\t\t\tsUrl = sUrl + \" and PreparationRequired eq true\";\n\t\t}\n\t\treturn sUrl + \"&$top=999\";\n\t}\n\n\t/**\n\t * Retrieves the news feed from the specified URL after applying authorization filtering based on the available apps.\n\t * If the news feed contains impacted artifacts, it checks if the current user has access to any of the impacted apps.\n\t * If the user has access to at least one impacted app, the news feed is included in the returned array.\n\t * @param {string} sNewsUrl - The URL of the news feed.\n\t * @returns {Array} The filtered array of news feed items authorized for the user.\n\t */\n\tpublic async getAuthNewsFeed(sNewsUrl: string, newsTitle?: string) {\n\t\ttry {\n\t\t\tconst [aAvailableApps, aNewsFeed] = await Promise.all([\n\t\t\t\tthis.getAllAvailableApps(),\n\t\t\t\tthis.getNewsFeedDetails(sNewsUrl, newsTitle)\n\t\t\t]);\n\t\t\tif (aAvailableApps.length === 0) {\n\t\t\t\treturn aNewsFeed;\n\t\t\t}\n\t\t\treturn this.arrangeNewsFeeds(aNewsFeed, aAvailableApps);\n\t\t} catch (err) {\n\t\t\tLog.error(err as string);\n\t\t}\n\t}\n\n\t/**\n\t * If the news feed contains impacted artifacts, it checks if the current user has access to any of the impacted apps.\n\t * If the user has access to at least one impacted app, the news feed is included in the returned array.\n\t * @param {ICustomNewsFeed[]} aNewsFeed - array of news feed\n\t * @param {IAvailableApp[]} aAvailableApps - array of all availabel apps\n\t * @returns {Array} The filtered array of news feed items authorized for the user.\n\t */\n\tprivate arrangeNewsFeeds(aNewsFeed: ICustomNewsFeed[], aAvailableApps: IAvailableApp[]) {\n\t\tconst aAuthNewsFeed: ICustomNewsFeed[] = [];\n\n\t\taNewsFeed.forEach((oNewsFeed: ICustomNewsFeed) => {\n\t\t\tif ((oNewsFeed.Category as INewsLink).value !== \"App\" || !(oNewsFeed.ImpactedArtifacts as INewsLink).value) {\n\t\t\t\taAuthNewsFeed.push(oNewsFeed);\n\t\t\t} else {\n\t\t\t\tconst aImpactedArtifacts: string[] = (oNewsFeed.ImpactedArtifacts as INewsLink).value.split(\"\\n\");\n\t\t\t\tfor (let impactedArtifact of aImpactedArtifacts) {\n\t\t\t\t\tconst oImpactedArtifact = impactedArtifact;\n\t\t\t\t\tif (oImpactedArtifact && this.isAuthFeed(aAvailableApps, impactedArtifact)) {\n\t\t\t\t\t\taAuthNewsFeed.push(oNewsFeed);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn aAuthNewsFeed;\n\t}\n\n\t/**\n\t * takes all available apps list and the impacted atifact from the news and returns if it's valid\n\t * @param {IAvailableApp[]} aAvailableApps - Array of all available apps\n\t * @param {string} oImpactedArtifact - impacted artifact form the news\n\t * @returns {boolean} checks if the news is authenticated with the available apps list\n\t */\n\tprivate isAuthFeed(aAvailableApps: IAvailableApp[], oImpactedArtifact: string) {\n\t\tconst fioriIdSplitter = \"|\";\n\t\tif (oImpactedArtifact.includes(fioriIdSplitter)) {\n\t\t\tconst aTokens = oImpactedArtifact.split(fioriIdSplitter);\n\t\t\tconst sFioriId = (aTokens[aTokens.length - 1] || \"\").trim();\n\t\t\tif (sFioriId) {\n\t\t\t\tconst index = aAvailableApps.findIndex((oApp: IAvailableApp) => {\n\t\t\t\t\treturn sFioriId === oApp?.signature?.parameters[\"sap-fiori-id\"]?.defaultValue?.value;\n\t\t\t\t});\n\t\t\t\treturn index > -1;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Retrieves all available apps from the ClientSideTargetResolution service for authorization filtering.\n\t * @returns {Array} An array of available apps.\n\t */\n\tprivate async getAllAvailableApps(): Promise<IAvailableApp[]> {\n\t\ttry {\n\t\t\tconst oService = await Container.getServiceAsync<IAppConfiguration>(\"ClientSideTargetResolution\");\n\t\t\treturn oService?._oAdapter._aInbounds || [];\n\t\t} catch (err) {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tLog.error(err.message);\n\t\t\t}\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the news feed details from the specified URL, including translation and formatting of field labels.\n\t * @param {string} sUrl - The URL of the news feed details.\n\t * @returns {Array} The array of news feed items with translated and formatted field labels.\n\t */\n\tprivate async getNewsFeedDetails(sUrl: string, newsTitle?: string): Promise<ICustomNewsFeed[]> {\n\t\tif (this.customNewsFeedCache.has(sUrl)) {\n\t\t\tconst newsFeedDetails = await this.customNewsFeedCache.get(sUrl);\n\t\t\treturn this.filterNewsOnTitle(newsFeedDetails as ICustomNewsFeed[], newsTitle);\n\t\t}\n\n\t\tconst fnFormattedLabel = (sLabel: string) => sLabel.replace(/([a-z0-9])([A-Z])/g, \"$1 $2\");\n\t\tconst [newsResponse, translationResponse] = await Promise.all([\n\t\t\tHttpHelper.GetJSON(sUrl) as Promise<{ value: ICustomNewsFeed[] }>,\n\t\t\tthis.getTranslatedText(this.getCustomFeedKey())\n\t\t]);\n\t\tlet aNews: ICustomNewsFeed[] = JSON.parse(JSON.stringify((newsResponse as INewsResponse).value || [])) as ICustomNewsFeed[];\n\t\tconst aTranslation = JSON.parse(JSON.stringify((translationResponse as INewsResponse).value || [])) as ITranslatedText[];\n\t\taNews = this.filterNewsOnTitle(aNews, newsTitle);\n\t\treturn aNews.map((oNews: ICustomNewsFeed) => {\n\t\t\tconst aFields = Object.keys(oNews);\n\t\t\tconst aExpandFields: INewsLink[] = [];\n\t\t\taFields.forEach((oField) => {\n\t\t\t\tconst oTranslatedField = aTranslation.find(\n\t\t\t\t\t(oTranslation: ITranslatedText) => oTranslation?.ColumnName?.toUpperCase() === oField.toUpperCase()\n\t\t\t\t);\n\t\t\t\tconst oTranslatedFieldName = (oTranslatedField?.TranslatedName as string) || fnFormattedLabel(oField);\n\t\t\t\toNews[oField] = { label: oTranslatedFieldName, value: oNews[oField] as string } as INewsLink;\n\t\t\t\tif (!CUSTOM_NEWS_FEED.EXCLUDE_FIELDS.includes(oField)) {\n\t\t\t\t\taExpandFields.push(oNews[oField] as INewsLink);\n\t\t\t\t}\n\t\t\t});\n\t\t\toNews.Link = {\n\t\t\t\tlabel: this._i18nBundle.getText(\"readMoreLink\") as string,\n\t\t\t\tvalue: oNews[CUSTOM_NEWS_FEED.LINK] as string,\n\t\t\t\ttext: \"Link\"\n\t\t\t};\n\t\t\toNews.expanded = aNews.length === 1;\n\t\t\toNews.expandFields = aExpandFields;\n\t\t\treturn oNews;\n\t\t});\n\t}\n\n\t/**\n\t * Filters the news feed data based on the LOB title for the news detail dialog\n\t *\n\t * @private\n\t * @param {ICustomNewsFeed[]} aNews complete news feed data\n\t * @param {?string} [newsTitle] title of the line of business to be filtered on\n\t * @returns {ICustomNewsFeed[]} filtered news feed for provided LOB title\n\t */\n\tprivate filterNewsOnTitle(aNews: ICustomNewsFeed[], newsTitle?: string): ICustomNewsFeed[] {\n\t\tif (newsTitle) {\n\t\t\treturn aNews.filter((newsDetail: ICustomNewsFeed) => {\n\t\t\t\treturn (newsDetail.LineOfBusiness as INewsLink).value === newsTitle;\n\t\t\t});\n\t\t}\n\t\treturn aNews;\n\t}\n\n\t/**\n\t * Retrieves translated text for news feed fields based on the specified feed ID.\n\t * @param {string} sFeedId - The ID of the custom news feed\n\t * @returns {Promise} A promise resolving to the translated text for news feed fields.\n\t */\n\tprivate getTranslatedText(sFeedId: string) {\n\t\ttry {\n\t\t\tconst sUrl = NEWS_FEED_TRANSLATION_API + \"?$filter=Changeid eq '\" + sFeedId + \"'\";\n\t\t\tif (!this.customNewsFeedCache.has(sUrl)) {\n\t\t\t\tthis.customNewsFeedCache.set(sUrl, HttpHelper.GetJSON(sUrl) as Promise<ICustomNewsFeed[]>);\n\t\t\t}\n\t\t\treturn this.customNewsFeedCache.get(sUrl);\n\t\t} catch (err) {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tLog.error(err.message);\n\t\t\t}\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Loads custom news feed into the news panel after parsing JSON feed data to XML format.\n\t * @param {Array} feeds - The array of custom news feed items.\n\t */\n\tprivate async loadCustomNewsFeed(feeds: ICustomNewsFeed[], feedType: string) {\n\t\tconst oXMLResponse = this.parseJsonToXml(JSON.parse(JSON.stringify(feeds)) as JSON[], feedType);\n\t\tconst oParent = this.getParent() as NewsAndPagesContainer;\n\t\tif (!this.oNewsModel) {\n\t\t\tthis.oNewsModel = new XMLModel(oXMLResponse);\n\t\t\tif (!this.bNewsLoad) {\n\t\t\t\toParent?.panelLoadedFn(\"News\", { loaded: true, count: DEFAULT_FEED_COUNT });\n\t\t\t\tthis.bNewsLoad = true;\n\t\t\t}\n\t\t\tthis.oNewsTile.setModel(this.oNewsModel);\n\t\t} else {\n\t\t\tthis.oNewsTile.unbindAggregation(\"tiles\", false); // Unbind the bound aggregation\n\t\t\tthis.oNewsTile.destroyAggregation(\"tiles\"); // Removes old tiles\n\t\t\tthis.oNewsModel.setData(oXMLResponse);\n\t\t}\n\t\tawait this.loadNewsFeed(oXMLResponse, feeds.length);\n\t}\n\n\t/**\n\t * Parses JSON data into XML format.\n\t * @param {JSON[]} json - The JSON data to be parsed into XML.\n\t * @returns {XMLDocument} The XML document representing the parsed JSON data.\n\t */\n\tprivate parseJsonToXml(json: JSON[], feedType: string): XMLDocument {\n\t\tconst _transformJsonForXml = (aData: JSON[]) => aData.map((data: JSON) => ({ item: data }));\n\t\tconst _jsonToXml = (json: JSON) => {\n\t\t\tlet xml = \"\";\n\t\t\tlet key: string;\n\t\t\tfor (key in json) {\n\t\t\t\tconst value = json[key as keyof typeof json];\n\t\t\t\tif (value) {\n\t\t\t\t\tif (typeof value === \"object\") {\n\t\t\t\t\t\txml += `<${key}>${_jsonToXml(value)}</${key}>`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\txml += `<${key}>${value as string}</${key}>`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn xml.replace(/<\\/?\\d+>/g, \"\");\n\t\t};\n\t\tconst transformedJson: JSON = JSON.parse(JSON.stringify(_transformJsonForXml(json))) as JSON;\n\t\tlet xml = \"<?xml version='1.0' encoding='UTF-8'?>\";\n\t\tconst rootToken = feedType;\n\t\txml += `<${rootToken}>`;\n\t\txml += _jsonToXml(transformedJson);\n\t\txml += `</${rootToken}>`;\n\t\txml = xml.replaceAll(\"&\", \"&amp;\");\n\t\tconst parser = new DOMParser();\n\t\treturn parser.parseFromString(xml, \"text/xml\");\n\t}\n\n\t/**\n\t * Randomly selects an image from the available images for the feed item.\n\t * @param {string} sFileName - The file name of the custom news feed item.\n\t * @returns {string} The URL of the image for the feed item.\n\t * @private\n\t */\n\tprivate getCustomFeedImage(sFileName: string) {\n\t\tconst sFileBasePath = sap.ui.require.toUrl(CUSTOM_NEWS_FEED.IMAGE_URL);\n\t\tlet sFilePath = sFileBasePath + CUSTOM_IMAGES.default[0];\n\t\tconst files = CUSTOM_IMAGES[sFileName] || [];\n\t\tlet randomIndex = 0;\n\t\tif (files.length > 0) {\n\t\t\tconst randomArray = new window.Uint32Array(1);\n\t\t\twindow.crypto.getRandomValues(randomArray);\n\t\t\trandomIndex = randomArray[0] % 3;\n\t\t\tsFilePath = sFileBasePath + files[randomIndex];\n\t\t}\n\t\treturn sFilePath;\n\t}\n\n\t/**\n\t * Retrieves the default feed image for a given news feed.\n\t *\n\t * @param {ICustomNewsFeed} oFeed - The custom news feed object.\n\t * @returns {string} The base64 encoded image string with the appropriate MIME type, or an empty string if no valid image is found.\n\t * @private\n\t */\n\tprivate getDefaultFeedImage(oFeed: ICustomNewsFeed): string {\n\t\tconst imgId = oFeed?.bg_image_id;\n\t\tconst groupImg = oFeed?._group_to_image;\n\n\t\tif (!groupImg || groupImg.image_id !== imgId) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tlet mimeType = groupImg.mime_type;\n\t\tconst groupBgImg = groupImg.bg_image;\n\n\t\tif (!groupBgImg) {\n\t\t\treturn \"\";\n\t\t}\n\t\tif (mimeType === \"application/octet-stream\") {\n\t\t\tmimeType = \"image/jpeg\";\n\t\t}\n\t\tif (!this.isValidBase64(groupBgImg)) {\n\t\t\tconst base64Data = this.base64UrlToBase64(groupBgImg);\n\t\t\treturn `data:${mimeType};base64,${base64Data}`;\n\t\t}\n\t\treturn `data:${mimeType};base64,${groupBgImg}`;\n\t}\n\n\t/**\n\t * Converts a base64 URL string to a standard base64 string.\n\t *\n\t * @param {string} base64Url - The base64 URL string to convert.\n\t * @returns {string} The converted base64 string.\n\t * @private\n\t */\n\tprivate base64UrlToBase64(base64Url: string) {\n\t\tlet base64 = base64Url?.replace(/_/g, \"/\").replace(/-/g, \"+\");\n\n\t\t// Add padding if missing (Base64 should be a multiple of 4)\n\t\twhile (base64.length % 4 !== 0) {\n\t\t\tbase64 += \"=\";\n\t\t}\n\t\treturn base64;\n\t}\n\n\t/**\n\t * Checks if a string is a valid base64 encoded string.\n\t * @param input The string to validate\n\t * @returns boolean indicating if the string is valid base64\n\t * @private\n\t */\n\tprivate isValidBase64(input: string): boolean {\n\t\t// Check if the string exists and isn't empty\n\t\tif (!input || input.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Canonical base64 strings use these characters\n\t\t// A-Z, a-z, 0-9, +, /, and = for padding\n\t\tconst base64Regex = /^[A-Za-z0-9+/]*={0,2}$/;\n\n\t\t// Check if the string matches the base64 character set\n\t\tif (!base64Regex.test(input)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if the length is valid\n\t\t// Base64 strings have a length that is a multiple of 4\n\t\tif (input.length % 4 !== 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check padding rules\n\t\tif (input.includes(\"=\")) {\n\t\t\t// If there is padding, it must be at the end\n\t\t\tconst paddingIndex = input.indexOf(\"=\");\n\t\t\tconst lastPaddingIndex = input.lastIndexOf(\"=\");\n\t\t\t// Padding should only occur at the end\n\t\t\tif (paddingIndex !== input.length - (input.length - paddingIndex)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Can only have 1 or 2 padding characters\n\t\t\tif (input.length - paddingIndex > 2) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Make sure all padding is at the end\n\t\t\tif (paddingIndex !== lastPaddingIndex && lastPaddingIndex !== paddingIndex + 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate _getUserPersonalization() {\n\t\tconst persContainerId = PersonalisationUtils.getPersContainerId(this);\n\t\tconst ownerComponent = PersonalisationUtils.getOwnerComponent(this) as Component;\n\t\treturn UshellPersonalizer.getInstance(persContainerId, ownerComponent);\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":216,"column":0},"map":{"version":3,"names":["sap","ui","define","HBox","Label","List","StandardListItem","Switch","Text","Title","VBox","__BaseSettingsPanel","___utils_Accessibility","___utils_Constants","___utils_FESRUtil","__PersonalisationUtils","__UshellPersonalizer","_interopRequireDefault","obj","__esModule","default","BaseSettingsPanel","getInvisibleText","SETTINGS_PANELS_KEYS","addFESRSemanticStepName","FESR_EVENTS","PersonalisationUtils","UshellPersonalizer","NewsSettingsPanel","extend","init","_init","BaseSettingsPanel.prototype.init.call","this","setProperty","NEWS","_i18nBundle","getText","addAggregation","getContent","attachPanelNavigated","loadNewsFeedSettings","aFavNewsFeed","_getContent","oHeader","setHeader","oTitle","setTitleMessage","oContentVBox","getId","alignItems","justifyContent","items","setNewsList","getPersonalization","_getPersonalization","_this","_temp2","oPersonalizer","_temp","Promise","resolve","getInstance","getPersContainerId","_getPanel","getOwnerComponent","then","_UshellPersonalizer$g","e","reject","_setHeader","headerText","text","oHeaderVBox","addStyleClass","_setTitleMessage","title","titleStyle","oTitleHbox","oTitleVBox","_setNewsList","oShowSwitchLabel","oShowSwitch","customTextOn","customTextOff","change","saveNewsFeedSettings","state","ariaLabelledBy","CHANGE","oCustNewsSwitchContainer","width","oShowAllPrep","oInvisibleText","oList","mode","selectionChange","oNewsListVBox","direction","isCSVFileFormat","_isCSVFileFormat","fileName","split","pop","toLowerCase","_saveNewsFeedSettings","_this2","aSelectedNewsFeed","getSelectedItems","map","item","getTitle","feedKey","oNewsPanel","getCustomFeedKey","customFileName","getProperty","oFavNewsFeed","showAllPreparationRequired","getState","read","oPersData","favNewsFeed","defaultNewsFeed","write","setState","setCustomNewsFeed","setItems","_setItems","aItems","destroyAggregation","forEach","oItem","i","oCustomListItem","selected","addItem","_loadNewsFeedSettings","_this3","sFeedKey","aPersNewsFeed","mandatoryNewsFeed","setVisible","getCustomNewsFeed","aNewsFeed","setText","getMandatoryDefaultNewsFeed","length","combinedFavMandatoryNews","oNewsFeed","NewsFeedInFavorites","find","blocked","feedName"],"sources":["NewsSettingsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport HBox from \"sap/m/HBox\";\nimport Label from \"sap/m/Label\";\nimport List from \"sap/m/List\";\nimport ListItemBase from \"sap/m/ListItemBase\";\nimport StandardListItem from \"sap/m/StandardListItem\";\nimport Switch from \"sap/m/Switch\";\nimport Text from \"sap/m/Text\";\nimport Title from \"sap/m/Title\";\nimport VBox from \"sap/m/VBox\";\nimport Component from \"sap/ui/core/Component\";\nimport Control from \"sap/ui/core/Control\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\nimport NewsPanel, { ICustomNewsFeed } from \"./NewsPanel\";\nimport { getInvisibleText } from \"./utils/Accessibility\";\nimport { SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\nimport { addFESRSemanticStepName, FESR_EVENTS } from \"./utils/FESRUtil\";\nimport PersonalisationUtils from \"./utils/PersonalisationUtils\";\nimport UshellPersonalizer from \"./utils/UshellPersonalizer\";\n\ninterface IFavNewsFeed {\n\titems: string[];\n\tshowAllPreparationRequired?: boolean;\n}\n\n/**\n *\n * Class for My Home News Settings Panel.\n *\n * @extends BaseSettingsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.NewsSettingsPanel\n */\nexport default class NewsSettingsPanel extends BaseSettingsPanel {\n\tprivate oShowSwitch!: Switch;\n\tprivate oCustNewsSwitchContainer!: HBox;\n\tprivate oList!: List;\n\tprivate oPersonalizer!: UshellPersonalizer;\n\tprivate oNewsPanel!: NewsPanel;\n\tprivate aFavNewsFeed!: ICustomNewsFeed[] | string[];\n\tprivate headerText!: Text;\n\tprivate title!: Title;\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\t//setup panel\n\t\tthis.setProperty(\"key\", SETTINGS_PANELS_KEYS.NEWS);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"news\"));\n\t\tthis.setProperty(\"icon\", \"sap-icon://newspaper\");\n\n\t\t//setup layout content\n\t\tthis.addAggregation(\"content\", this.getContent());\n\n\t\t//fired every time on panel navigation\n\t\tthis.attachPanelNavigated(() => {\n\t\t\tvoid this.loadNewsFeedSettings();\n\t\t});\n\t\tthis.aFavNewsFeed = [];\n\t}\n\n\t/**\n\t * Returns the content for the News Settings Panel.\n\t *\n\t * @private\n\t * @returns {Control} The control containing the News Settings Panel content.\n\t */\n\tprivate getContent(): Control {\n\t\tconst oHeader = this.setHeader();\n\t\tconst oTitle = this.setTitleMessage();\n\t\tconst oContentVBox = new VBox(this.getId() + \"--idNewsPageOuterVBoX\", {\n\t\t\talignItems: \"Start\",\n\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\titems: [oHeader, oTitle, this.setNewsList()]\n\t\t});\n\t\treturn oContentVBox;\n\t}\n\n\t/**\n\t * Get personalization instance\n\t */\n\tprivate async getPersonalization() {\n\t\tif (!this.oPersonalizer) {\n\t\t\tthis.oPersonalizer = await UshellPersonalizer.getInstance(\n\t\t\t\tPersonalisationUtils.getPersContainerId(this._getPanel()),\n\t\t\t\tPersonalisationUtils.getOwnerComponent(this._getPanel()) as Component\n\t\t\t);\n\t\t}\n\t\treturn this.oPersonalizer;\n\t}\n\n\t/**\n\t * Returns the content for the News Settings Panel Header.\n\t *\n\t * @private\n\t * @returns {sap.ui.core.Control} The control containing the News Settings Panel's Header content.\n\t */\n\tprivate setHeader() {\n\t\tthis.headerText = new Text(this.getId() + \"--idCustNewsFeedSettingsText\", {\n\t\t\ttext: this._i18nBundle.getText(\"newsFeedSettingsText\")\n\t\t});\n\t\tconst oHeaderVBox = new VBox(this.getId() + \"--idCustNewsFeedSettingsTextContainer\", {\n\t\t\talignItems: \"Start\",\n\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\titems: [this.headerText]\n\t\t}).addStyleClass(\"sapUiSmallMarginTop sapUiSmallMarginBegin\");\n\t\treturn oHeaderVBox;\n\t}\n\n\t/**\n\t * Returns the content for the News Settings Panel Title description.\n\t *\n\t * @private\n\t * @returns {sap.ui.core.Control} The control containing the News Settings Panel's Title description.\n\t */\n\tprivate setTitleMessage() {\n\t\tthis.title = new Title(this.getId() + \"--idCustNewsFeedSettignsTitle\", {\n\t\t\ttext: this._i18nBundle.getText(\"newsFeedSettingsHeading\"),\n\t\t\ttitleStyle: \"H5\"\n\t\t});\n\t\tconst oTitleHbox = new HBox(this.getId() + \"--idCustNewsFeedSettingsTitleContainer\", {\n\t\t\talignItems: \"Center\",\n\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\titems: [this.title]\n\t\t});\n\t\tconst oTitleVBox = new VBox(this.getId() + \"--idCustNewsFeedSettingsTitleVBox\", {\n\t\t\talignItems: \"Start\",\n\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\titems: [oTitleHbox]\n\t\t}).addStyleClass(\"sapUiSmallMarginTop sapUiSmallMarginBegin\");\n\t\treturn oTitleVBox;\n\t}\n\n\t/**\n\t * Returns the content for the news List\n\t *\n\t * @private\n\t * @returns {sap.ui.core.Control} The control containing the News Settings Panel's List\n\t */\n\tprivate setNewsList() {\n\t\t//showAllPrepRequired Switch\n\t\tconst oShowSwitchLabel = new Label(this.getId() + \"--idShowAllCustNewsSwitchLabel\", {\n\t\t\ttext: this._i18nBundle.getText(\"showAllPreparationRequiredSwitchLabel\")\n\t\t});\n\t\tthis.oShowSwitch = new Switch(`${this.getId()}-showSwitch`, {\n\t\t\t// 'ariaLabelledBy': \"idShowAllCustNewsSwitchLabel idShowAllCustNewsSwitch\",\n\t\t\tcustomTextOn: \" \",\n\t\t\tcustomTextOff: \" \",\n\t\t\tchange: () => {\n\t\t\t\tvoid this.saveNewsFeedSettings();\n\t\t\t},\n\t\t\t// 'fesr:change': \"showPrepRequire\",\n\t\t\tstate: false,\n\t\t\tariaLabelledBy: [`${this.getId()}--idShowAllCustNewsSwitchLabel`]\n\t\t});\n\t\taddFESRSemanticStepName(this.oShowSwitch, FESR_EVENTS.CHANGE, \"showPrepRequire\");\n\t\tthis.oCustNewsSwitchContainer = new HBox(this.getId() + \"--idShowAllCustNewsSwitchContainer\", {\n\t\t\talignItems: \"Center\",\n\t\t\titems: [oShowSwitchLabel, this.oShowSwitch],\n\t\t\twidth: \"94%\"\n\t\t}).addStyleClass(\"sapUiSmallMarginTop\");\n\n\t\tconst oShowAllPrep = new VBox(this.getId() + \"--idShowAllCustNewsSwitchVBox\", {\n\t\t\titems: [this.oCustNewsSwitchContainer],\n\t\t\twidth: \"94%\"\n\t\t}).addStyleClass(\"sapUiSmallMarginTop\");\n\t\tconst oInvisibleText = getInvisibleText(`${this.getId()}--newsTitleText`, this._i18nBundle.getText(\"newsTitle\"));\n\t\t//List of news items\n\t\tthis.oList = new List(this.getId() + \"--idCustNewsFeedList\", {\n\t\t\tmode: \"MultiSelect\",\n\t\t\tselectionChange: () => {\n\t\t\t\tvoid this.saveNewsFeedSettings();\n\t\t\t},\n\t\t\tariaLabelledBy: [\n\t\t\t\toInvisibleText.getId(),\n\t\t\t\t`${this.getId()}--idCustNewsFeedSettingsText`,\n\t\t\t\t`${this.getId()}--idCustNewsFeedSettignsTitle`\n\t\t\t]\n\t\t});\n\t\t//Outer VBox\n\t\tconst oNewsListVBox = new VBox(this.getId() + \"--idCustNewsFeedListContainer\", {\n\t\t\tdirection: \"Column\",\n\t\t\titems: [this.oList, oShowAllPrep, oInvisibleText],\n\t\t\twidth: \"96%\"\n\t\t}).addStyleClass(\"sapUiSmallMarginTop sapUiSmallMarginBegin\");\n\t\treturn oNewsListVBox;\n\t}\n\n\t/**\n\t * Checks if the custom file format is CSV based on the custom file name.\n\t *\n\t * @param {string} fileName - The custom file name.\n\t * @returns {boolean} True if the file format is CSV, otherwise false.\n\t */\n\tprivate isCSVFileFormat(fileName: string): boolean {\n\t\treturn fileName.split(\".\").pop()?.toLowerCase() === \"csv\";\n\t}\n\n\t/**\n\t *\n\t * Saves news feed settings and shows news feed based on selection change of list of switch\n\t *\n\t * @private\n\t */\n\tprivate async saveNewsFeedSettings() {\n\t\tconst aSelectedNewsFeed: string[] = this.oList.getSelectedItems().map((item: ListItemBase) => {\n\t\t\treturn (item as StandardListItem).getTitle();\n\t\t});\n\t\tconst feedKey = this.oNewsPanel.getCustomFeedKey();\n\n\t\tconst customFileName = this.oNewsPanel.getProperty(\"customFileName\") as string;\n\t\tlet oFavNewsFeed;\n\t\tif (feedKey) {\n\t\t\toFavNewsFeed = {\n\t\t\t\titems: aSelectedNewsFeed,\n\t\t\t\tshowAllPreparationRequired: this.isCSVFileFormat(customFileName) ? false : this.oShowSwitch.getState()\n\t\t\t} as IFavNewsFeed;\n\t\t} else {\n\t\t\toFavNewsFeed = {\n\t\t\t\titems: aSelectedNewsFeed\n\t\t\t};\n\t\t}\n\t\tconst oPersonalizer = await this.getPersonalization();\n\t\tconst oPersData = (await oPersonalizer.read()) || {};\n\t\tif (feedKey) {\n\t\t\toPersData.favNewsFeed = oFavNewsFeed;\n\t\t} else {\n\t\t\toPersData.defaultNewsFeed = oFavNewsFeed;\n\t\t}\n\t\tawait oPersonalizer.write(oPersData);\n\t\t//get the latest value of switch and set the state\n\t\tthis.oShowSwitch.setState(oFavNewsFeed.showAllPreparationRequired);\n\t\t//load news feed\n\t\tawait this.oNewsPanel.setCustomNewsFeed(feedKey);\n\t}\n\t/** Set items for the NewsList\n\t * @param {Array} [aItems] news items to be set as items aggregation\n\t * @private\n\t */\n\tprivate setItems(aItems: ICustomNewsFeed[]) {\n\t\tthis.oList.destroyAggregation(\"items\", true);\n\t\t(aItems || []).forEach((oItem: ICustomNewsFeed, i: number) => {\n\t\t\tconst oCustomListItem = new StandardListItem(this.getId() + \"--idCustNewsFeedItem\" + \"--\" + i, {\n\t\t\t\ttitle: oItem.title,\n\t\t\t\tselected: oItem.selected as boolean\n\t\t\t\t// blocked: oItem.blocked as boolean\n\t\t\t});\n\t\t\t//.addStyleClass(\"newsListItem\");\n\t\t\tthis.oList.addItem(oCustomListItem);\n\t\t});\n\t}\n\n\t/**\n\t * Loads news feed settings\n\t *\n\t * @returns {Promise} resolves to news feed settings\n\t */\n\tprivate async loadNewsFeedSettings() {\n\t\tthis.oNewsPanel = this._getPanel() as NewsPanel;\n\t\tconst sFeedKey = this.oNewsPanel.getCustomFeedKey();\n\t\tconst oPersonalizer = await this.getPersonalization();\n\t\tconst oPersData = await oPersonalizer.read();\n\t\tconst aPersNewsFeed = (sFeedKey ? oPersData?.[\"favNewsFeed\"] : oPersData?.[\"defaultNewsFeed\"]) as IFavNewsFeed;\n\t\tlet showAllPreparationRequired = false;\n\t\tshowAllPreparationRequired = aPersNewsFeed?.showAllPreparationRequired ?? !aPersNewsFeed;\n\n\t\tconst customFileName = this.oNewsPanel.getProperty(\"customFileName\") as string;\n\n\t\tlet mandatoryNewsFeed: string[] = [];\n\t\tif (this.isCSVFileFormat(customFileName) || !sFeedKey) {\n\t\t\tthis.oCustNewsSwitchContainer.setVisible(false);\n\t\t}\n\n\t\tlet aNewsFeed: ICustomNewsFeed[] = await this.oNewsPanel.getCustomNewsFeed(sFeedKey, false);\n\t\tif (!sFeedKey) {\n\t\t\tthis.headerText.setText(this._i18nBundle.getText(\"defaultNewsSettingsText\"));\n\t\t\tthis.title.setText(this._i18nBundle.getText(\"defaultNewsSettingsHeading\"));\n\t\t\tmandatoryNewsFeed = this.oNewsPanel.getMandatoryDefaultNewsFeed();\n\t\t} else {\n\t\t\tthis.headerText.setText(this._i18nBundle.getText(\"newsFeedSettingsText\"));\n\t\t\tthis.title.setText(this._i18nBundle.getText(\"newsFeedSettingsHeading\"));\n\t\t}\n\t\tif (aNewsFeed && aNewsFeed.length > 0) {\n\t\t\tthis.aFavNewsFeed = (aPersNewsFeed && aPersNewsFeed.items) || aNewsFeed;\n\t\t\t// combine favnewsFeed with mandatory news group as mandatorynews should always be shown\n\t\t\t// let favMandatoryNewsSet = new Set([...this.aFavNewsFeed, ...mandatoryNewsFeed]);\n\t\t\t// let combinedFavMandatoryNews = Array.from(favMandatoryNewsSet);\n\t\t\tlet combinedFavMandatoryNews = this.aFavNewsFeed;\n\t\t\taNewsFeed = aNewsFeed.map((oNewsFeed: ICustomNewsFeed) => {\n\t\t\t\tconst NewsFeedInFavorites = combinedFavMandatoryNews.find((oFavNewsFeed) => {\n\t\t\t\t\treturn oFavNewsFeed === oNewsFeed.title;\n\t\t\t\t})\n\t\t\t\t\t? true\n\t\t\t\t\t: false;\n\n\t\t\t\toNewsFeed.selected = !aPersNewsFeed ? true : NewsFeedInFavorites;\n\t\t\t\toNewsFeed.blocked = !!mandatoryNewsFeed.find((feedName) => {\n\t\t\t\t\treturn feedName === oNewsFeed.title;\n\t\t\t\t});\n\t\t\t\treturn oNewsFeed;\n\t\t\t});\n\t\t\tthis.aFavNewsFeed = aNewsFeed;\n\t\t\tthis.setItems(this.aFavNewsFeed);\n\t\t\tthis.oShowSwitch.setState(!!showAllPreparationRequired);\n\t\t\treturn aNewsFeed;\n\t\t}\n\t}\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,4CAAA,oRAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,sBAAAC,EAAAC,GAAA,OAAAA,KAAAC,mBAAAD,EAAAE,UAAA,YAAAF,EAAAE,QAAAF,CAAA,OAgBOG,EAAiBJ,EAAAN,GAAA,MAEfW,EAAgBV,EAAA,0BAChBW,EAAoBV,EAAA,8BACpBW,EAAuBV,EAAA,iCAAEW,EAAWX,EAAA,qBACtCY,EAAoBT,EAAAF,GAAA,MACpBY,EAAkBV,EAAAD,GAOzB,MAgBqBY,EAA0BP,EAAiBQ,OAAA,kCAgBxDC,KAAI,SAAAC,IACVC,sBAAAC,MAGAA,KAAKC,YAAY,MAAOX,EAAqBY,MAC7CF,KAAKC,YAAY,QAASD,KAAKG,YAAYC,QAAQ,SACnDJ,KAAKC,YAAY,OAAQ,wBAGzBD,KAAKK,eAAe,UAAWL,KAAKM,cAGpCN,KAAKO,qBAAqB,UACpBP,KAAKQ,sBAAsB,GAEjCR,KAAKS,aAAe,EACrB,EAQQH,WAAU,SAAAI,IACjB,MAAMC,EAAUX,KAAKY,YACrB,MAAMC,EAASb,KAAKc,kBACpB,MAAMC,EAAe,IAAItC,EAAKuB,KAAKgB,QAAU,wBAAyB,CACrEC,WAAY,QACZC,eAAgB,eAChBC,MAAO,CAACR,EAASE,EAAQb,KAAKoB,iBAE/B,OAAOL,CACR,EAKcM,mBAAkB,SAAAC,IAAA,IAAG,MAAAC,EAC7BvB,KAAI,SAAAwB,IAMT,OAAOD,EAAKE,aAAc,OAAAC,EAAA,eANrBH,EAAKE,cAAa,QAAAE,QAAAC,QACKlC,EAAmBmC,YAC7CpC,EAAqBqC,mBAAmBP,EAAKQ,aAC7CtC,EAAqBuC,kBAAkBT,EAAKQ,eAC5CE,KAAA,SAAAC,GAHDX,EAAKE,cAAaS,CAGhB,IAEuB,GAFvB,OAAAP,QAAAC,QAAAF,KAAAO,KAAAP,EAAAO,KAAAT,KAAAE,GAGJ,CAAC,MAAAS,GAAA,OAAAR,QAAAS,OAAAD,EAAA,GAQOvB,UAAS,SAAAyB,IAChBrC,KAAKsC,WAAa,IAAI/D,EAAKyB,KAAKgB,QAAU,+BAAgC,CACzEuB,KAAMvC,KAAKG,YAAYC,QAAQ,0BAEhC,MAAMoC,EAAc,IAAI/D,EAAKuB,KAAKgB,QAAU,wCAAyC,CACpFC,WAAY,QACZC,eAAgB,eAChBC,MAAO,CAACnB,KAAKsC,cACXG,cAAc,6CACjB,OAAOD,CACR,EAQQ1B,gBAAe,SAAA4B,IACtB1C,KAAK2C,MAAQ,IAAInE,EAAMwB,KAAKgB,QAAU,gCAAiC,CACtEuB,KAAMvC,KAAKG,YAAYC,QAAQ,2BAC/BwC,WAAY,OAEb,MAAMC,EAAa,IAAI3E,EAAK8B,KAAKgB,QAAU,yCAA0C,CACpFC,WAAY,SACZC,eAAgB,eAChBC,MAAO,CAACnB,KAAK2C,SAEd,MAAMG,EAAa,IAAIrE,EAAKuB,KAAKgB,QAAU,oCAAqC,CAC/EC,WAAY,QACZC,eAAgB,eAChBC,MAAO,CAAC0B,KACNJ,cAAc,6CACjB,OAAOK,CACR,EAQQ1B,YAAW,SAAA2B,IAElB,MAAMC,EAAmB,IAAI7E,EAAM6B,KAAKgB,QAAU,iCAAkC,CACnFuB,KAAMvC,KAAKG,YAAYC,QAAQ,2CAEhCJ,KAAKiD,YAAc,IAAI3E,EAAO,GAAG0B,KAAKgB,qBAAsB,CAE3DkC,aAAc,IACdC,cAAe,IACfC,OAAQA,UACFpD,KAAKqD,sBAAsB,EAGjCC,MAAO,MACPC,eAAgB,CAAC,GAAGvD,KAAKgB,2CAE1BzB,EAAwBS,KAAKiD,YAAazD,EAAYgE,OAAQ,mBAC9DxD,KAAKyD,yBAA2B,IAAIvF,EAAK8B,KAAKgB,QAAU,qCAAsC,CAC7FC,WAAY,SACZE,MAAO,CAAC6B,EAAkBhD,KAAKiD,aAC/BS,MAAO,QACLjB,cAAc,uBAEjB,MAAMkB,EAAe,IAAIlF,EAAKuB,KAAKgB,QAAU,gCAAiC,CAC7EG,MAAO,CAACnB,KAAKyD,0BACbC,MAAO,QACLjB,cAAc,uBACjB,MAAMmB,EAAiBvE,EAAiB,GAAGW,KAAKgB,yBAA0BhB,KAAKG,YAAYC,QAAQ,cAEnGJ,KAAK6D,MAAQ,IAAIzF,EAAK4B,KAAKgB,QAAU,uBAAwB,CAC5D8C,KAAM,cACNC,gBAAiBA,UACX/D,KAAKqD,sBAAsB,EAEjCE,eAAgB,CACfK,EAAe5C,QACf,GAAGhB,KAAKgB,sCACR,GAAGhB,KAAKgB,0CAIV,MAAMgD,EAAgB,IAAIvF,EAAKuB,KAAKgB,QAAU,gCAAiC,CAC9EiD,UAAW,SACX9C,MAAO,CAACnB,KAAK6D,MAAOF,EAAcC,GAClCF,MAAO,QACLjB,cAAc,6CACjB,OAAOuB,CACR,EAQQE,gBAAe,SAAAC,EAACC,GACvB,OAAOA,EAASC,MAAM,KAAKC,OAAOC,gBAAkB,KACrD,EAQclB,qBAAoB,SAAAmB,IAAA,IAAG,MAAAC,EACAzE,KAApC,MAAM0E,EAA8BD,EAAKZ,MAAMc,mBAAmBC,IAAKC,GAC9DA,EAA0BC,YAEnC,MAAMC,EAAUN,EAAKO,WAAWC,mBAEhC,MAAMC,EAAiBT,EAAKO,WAAWG,YAAY,kBACnD,IAAIC,EACJ,GAAIL,EAAS,CACZK,EAAe,CACdjE,MAAOuD,EACPW,2BAA4BZ,EAAKP,gBAAgBgB,GAAkB,MAAQT,EAAKxB,YAAYqC,WAE9F,KAAO,CACNF,EAAe,CACdjE,MAAOuD,EAET,CAAC,OAAA/C,QAAAC,QAC2B6C,EAAKpD,sBAAoBY,KAAA,SAA/CR,GAAa,OAAAE,QAAAC,QACMH,EAAc8D,QAAMtD,KAAA,SAAvCuD,GACN,GAAIT,EAAS,CACZS,EAAUC,YAAcL,CACzB,KAAO,CACNI,EAAUE,gBAAkBN,CAC7B,CAAC,OAAAzD,QAAAC,QACKH,EAAckE,MAAMH,IAAUvD,KAAA,WAEpCwC,EAAKxB,YAAY2C,SAASR,EAAaC,4BACvC,OAAA1D,QAAAC,QACM6C,EAAKO,WAAWa,kBAAkBd,IAAQ9C,KAAA,mBACjD,CAAC,MAAAE,GAAA,OAAAR,QAAAS,OAAAD,EAAA,GAKO2D,SAAQ,SAAAC,EAACC,GAChBhG,KAAK6D,MAAMoC,mBAAmB,QAAS,OACtCD,GAAU,IAAIE,QAAQ,CAACC,EAAwBC,KAC/C,MAAMC,EAAkB,IAAIhI,EAAiB2B,KAAKgB,QAAU,uBAAyB,KAAOoF,EAAG,CAC9FzD,MAAOwD,EAAMxD,MACb2D,SAAUH,EAAMG,WAIjBtG,KAAK6D,MAAM0C,QAAQF,EAAgB,EAErC,EAOc7F,qBAAoB,SAAAgG,IAAA,IAAG,MAAAC,EACpCzG,KAAAyG,EAAKzB,WAAayB,EAAK1E,YACvB,MAAM2E,EAAWD,EAAKzB,WAAWC,mBAAmB,OAAAtD,QAAAC,QACxB6E,EAAKpF,sBAAoBY,KAAA,SAA/CR,GAAa,OAAAE,QAAAC,QACKH,EAAc8D,QAAMtD,KAAA,SAAtCuD,GACN,MAAMmB,EAAiBD,EAAWlB,IAAY,eAAiBA,IAAY,mBAC3E,IAAIH,EAA6B,MACjCA,EAA6BsB,GAAetB,6BAA+BsB,EAE3E,MAAMzB,EAAiBuB,EAAKzB,WAAWG,YAAY,kBAEnD,IAAIyB,EAA8B,GAClC,GAAIH,EAAKvC,gBAAgBgB,KAAoBwB,EAAU,CACtDD,EAAKhD,yBAAyBoD,WAAW,MAC1C,CAAC,OAAAlF,QAAAC,QAEwC6E,EAAKzB,WAAW8B,kBAAkBJ,EAAU,QAAMzE,KAAA,SAAvF8E,GACJ,IAAKL,EAAU,CACdD,EAAKnE,WAAW0E,QAAQP,EAAKtG,YAAYC,QAAQ,4BACjDqG,EAAK9D,MAAMqE,QAAQP,EAAKtG,YAAYC,QAAQ,+BAC5CwG,EAAoBH,EAAKzB,WAAWiC,6BACrC,KAAO,CACNR,EAAKnE,WAAW0E,QAAQP,EAAKtG,YAAYC,QAAQ,yBACjDqG,EAAK9D,MAAMqE,QAAQP,EAAKtG,YAAYC,QAAQ,2BAC7C,CAAC,GACG2G,GAAaA,EAAUG,OAAS,EAAC,CACpCT,EAAKhG,aAAgBkG,GAAiBA,EAAcxF,OAAU4F,EAI9D,IAAII,EAA2BV,EAAKhG,aACpCsG,EAAYA,EAAUnC,IAAKwC,IAC1B,MAAMC,EAAsBF,EAAyBG,KAAMlC,GACnDA,IAAiBgC,EAAUzE,OAEhC,KACA,MAEHyE,EAAUd,UAAYK,EAAgB,KAAOU,EAC7CD,EAAUG,UAAYX,EAAkBU,KAAME,GACtCA,IAAaJ,EAAUzE,OAE/B,OAAOyE,CAAS,GAEjBX,EAAKhG,aAAesG,EACpBN,EAAKX,SAASW,EAAKhG,cACnBgG,EAAKxD,YAAY2C,WAAWP,GAC5B,OAAO0B,CAAU,OAEnB,CAAC,MAAA5E,GAAA,OAAAR,QAAAS,OAAAD,EAAA,YAvRmBxC,CAAiB","ignoreList":[],"sourceRoot":""}},{"offset":{"line":221,"column":0},"map":{"version":3,"names":["sap","ui","define","Button","IllustratedMessage","IllustratedMessageSize","IllustratedMessageType","VBox","__BaseContainer","__BaseContainerRenderer","__BasePanel","___library","_interopRequireDefault","obj","__esModule","default","BaseContainer","BaseContainerRenderer","BasePanel","OrientationType","NoDataContentPanel","init","super","this","setProperty","NoDataContainer","extend","renderer","apiVersion","metadata","library","properties","width","type","group","defaultValue","visibility","height","orientation","Vertical","enableSettings","constructor","_constructor","id","settings","BaseContainer.prototype.constructor.call","_init","BaseContainer.prototype.init.call","addStyleClass","onBeforeRendering","_onBeforeRendering","content","getContent","length","_setupDefaultContent","BaseContainer.prototype.onBeforeRendering.call","illustratedMessage","getId","illustrationSize","Large","illustrationType","NoEntries","title","_i18nBundle","getText","ariaTitleLevel","description","editMyHomeButton","text","press","getParent","openSettingsDialog","insertAdditionalContent","wrapper","alignItems","justifyContent","renderType","items","visible","contentPanel","_addContent","addContent"],"sources":["NoDataContainer.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Button from \"sap/m/Button\";\nimport IllustratedMessage from \"sap/m/IllustratedMessage\";\nimport IllustratedMessageSize from \"sap/m/IllustratedMessageSize\";\nimport IllustratedMessageType from \"sap/m/IllustratedMessageType\";\nimport VBox from \"sap/m/VBox\";\nimport { MetadataOptions } from \"sap/ui/core/Element\";\nimport type { $BaseContainerSettings } from \"./BaseContainer\";\nimport BaseContainer from \"./BaseContainer\";\nimport BaseContainerRenderer from \"./BaseContainerRenderer\";\nimport BasePanel from \"./BasePanel\";\nimport Layout from \"./Layout\";\nimport { OrientationType } from \"./library\";\n\n/**\n *\n * Panel class to show no data content.\n *\n */\nclass NoDataContentPanel extends BasePanel {\n\t/**\n\t * Init lifecycle method\n\t *\n\t */\n\tpublic init() {\n\t\tsuper.init();\n\t\tthis.setProperty(\"enableSettings\", false);\n\t}\n}\n\n/**\n *\n * Container class to show no data content.\n *\n * @extends BaseContainer\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @public\n *\n * @alias sap.cux.home.NoDataContainer\n */\nexport default class NoDataContainer extends BaseContainer {\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * Width of the container. Default value is 100%.\n\t\t\t */\n\t\t\twidth: { type: \"sap.ui.core.CSSSize\", group: \"Dimension\", defaultValue: \"100%\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Height of the container. Default value is 100%.\n\t\t\t */\n\t\t\theight: { type: \"sap.ui.core.CSSSize\", group: \"Dimension\", defaultValue: \"100%\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Orientation of the container. Default value is Vertical.\n\t\t\t */\n\t\t\torientation: {\n\t\t\t\ttype: \"sap.cux.home.OrientationType\",\n\t\t\t\tgroup: \"Data\",\n\t\t\t\tdefaultValue: OrientationType.Vertical,\n\t\t\t\tvisibility: \"hidden\"\n\t\t\t},\n\t\t\t/**\n\t\t\t * Enable my home settings. Default value is false.\n\t\t\t */\n\t\t\tenableSettings: { type: \"boolean\", group: \"Behavior\", defaultValue: false, visibility: \"hidden\" }\n\t\t}\n\t};\n\n\tstatic renderer = {\n\t\t...BaseContainerRenderer,\n\t\tapiVersion: 2\n\t};\n\n\tconstructor(id?: string | $BaseContainerSettings);\n\tconstructor(id?: string, settings?: $BaseContainerSettings);\n\t/**\n\t * Constructor for a new NoData Container.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $BaseContainerSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\t\tthis.addStyleClass(\"sapCuxNoDataContainer\");\n\t\tthis.addStyleClass(\"sapCuxNoMarginBottom\");\n\t}\n\n\t/**\n\t * onBeforeRendering lifecycle method\n\t *\n\t * @private\n\t */\n\tpublic onBeforeRendering(): void {\n\t\t// If no content is set, set up default content\n\t\tconst content = this.getContent();\n\t\tif (content?.length === 0) {\n\t\t\tthis._setupDefaultContent();\n\t\t}\n\n\t\tsuper.onBeforeRendering();\n\t}\n\n\t/**\n\t * Set up default no-data content for the container.\n\t *\n\t * @private\n\t */\n\tprivate _setupDefaultContent(): void {\n\t\t// set up default inner illustrated message\n\t\tconst illustratedMessage = new IllustratedMessage(this.getId() + \"-noDataMessage\", {\n\t\t\tillustrationSize: IllustratedMessageSize.Large,\n\t\t\tillustrationType: IllustratedMessageType.NoEntries,\n\t\t\ttitle: this._i18nBundle.getText(\"noSectionTitle\"),\n\t\t\tariaTitleLevel: \"H2\",\n\t\t\tdescription: this._i18nBundle.getText(\"noSectionDescription\")\n\t\t}).addStyleClass(\"myHomeIllustratedMsg\");\n\n\t\t// set up button to edit my home\n\t\tconst editMyHomeButton = new Button(this.getId() + \"-editMyHomeBtn\", {\n\t\t\ttext: this._i18nBundle.getText(\"noSectionButton\"),\n\t\t\ttype: \"Emphasized\",\n\t\t\tpress: () => {\n\t\t\t\tvoid (this.getParent() as Layout)?.openSettingsDialog();\n\t\t\t}\n\t\t});\n\t\tillustratedMessage.insertAdditionalContent(editMyHomeButton, 0);\n\n\t\t// set up no-data content wrapper\n\t\tconst wrapper = new VBox(this.getId() + \"-noDataWrapper\", {\n\t\t\talignItems: \"Center\",\n\t\t\tjustifyContent: \"Center\",\n\t\t\trenderType: \"Bare\",\n\t\t\titems: [illustratedMessage],\n\t\t\tvisible: true\n\t\t});\n\n\t\t// set up content panel\n\t\tconst contentPanel = new NoDataContentPanel(`${this.getId()}-noDataContent`);\n\t\tcontentPanel._addContent(wrapper);\n\n\t\t// add content to the container\n\t\tthis.addContent(contentPanel);\n\t}\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,0CAAA,sMAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,sBAAAC,EAAAC,GAAA,OAAAA,KAAAC,mBAAAD,EAAAE,UAAA,YAAAF,EAAAE,QAAAF,CAAA,OAWOG,EAAaJ,EAAAJ,GAAA,MACbS,EAAqBL,EAAAH,GAAA,MACrBS,EAASN,EAAAF,GAAA,MAEPS,EAAeR,EAAA,mBAOxB,MAAMS,UAA2BF,EAKzBG,OACNC,MAAMD,OACNE,KAAKC,YAAY,iBAAkB,MACpC,EAGD,MAgBqBC,EAAwBT,EAAaU,OAAA,gCA4BlDC,SAAW,IACdV,EACHW,WAAY,GA7BGC,SAA4B,CAC3CC,QAAS,eACTC,WAAY,CAIXC,MAAO,CAAEC,KAAM,sBAAuBC,MAAO,YAAaC,aAAc,OAAQC,WAAY,UAI5FC,OAAQ,CAAEJ,KAAM,sBAAuBC,MAAO,YAAaC,aAAc,OAAQC,WAAY,UAI7FE,YAAa,CACZL,KAAM,+BACNC,MAAO,OACPC,aAAchB,EAAgBoB,SAC9BH,WAAY,UAKbI,eAAgB,CAAEP,KAAM,UAAWC,MAAO,WAAYC,aAAc,MAAOC,WAAY,YAiBlFK,YAAW,SAAAC,EAACC,EAAaC,GAC/BC,6BAAAtB,KAAMoB,EAAIC,EACX,EAOOvB,KAAI,SAAAyB,IACVC,sBAAAxB,MACAA,KAAKyB,cAAc,yBACnBzB,KAAKyB,cAAc,uBACpB,EAOOC,kBAAiB,SAAAC,IAEvB,MAAMC,EAAU5B,KAAK6B,aACrB,GAAID,GAASE,SAAW,EAAG,CAC1B9B,KAAK+B,sBACN,CAEAC,mCAAAhC,KACD,EAOQ+B,qBAAoB,SAAAA,IAE3B,MAAME,EAAqB,IAAIpD,EAAmBmB,KAAKkC,QAAU,iBAAkB,CAClFC,iBAAkBrD,EAAuBsD,MACzCC,iBAAkBtD,EAAuBuD,UACzCC,MAAOvC,KAAKwC,YAAYC,QAAQ,kBAChCC,eAAgB,KAChBC,YAAa3C,KAAKwC,YAAYC,QAAQ,0BACpChB,cAAc,wBAGjB,MAAMmB,EAAmB,IAAIhE,EAAOoB,KAAKkC,QAAU,iBAAkB,CACpEW,KAAM7C,KAAKwC,YAAYC,QAAQ,mBAC/B/B,KAAM,aACNoC,MAAOA,UACA9C,KAAK+C,aAAwBC,oBAAoB,IAGzDf,EAAmBgB,wBAAwBL,EAAkB,GAG7D,MAAMM,EAAU,IAAIlE,EAAKgB,KAAKkC,QAAU,iBAAkB,CACzDiB,WAAY,SACZC,eAAgB,SAChBC,WAAY,OACZC,MAAO,CAACrB,GACRsB,QAAS,OAIV,MAAMC,EAAe,IAAI3D,EAAmB,GAAGG,KAAKkC,yBACpDsB,EAAaC,YAAYP,GAGzBlD,KAAK0D,WAAWF,EACjB,IAAC,OA/GmBtD,CAAe","ignoreList":[],"sourceRoot":""}},{"offset":{"line":226,"column":0},"map":{"version":3,"names":["sap","ui","define","Element","Container","Page","extend","metadata","library","properties","title","type","group","defaultValue","icon","subTitle","bgColor","pageId","spaceId","spaceTitle","url","events","press","constructor","_constructor","id","settings","Element.prototype.constructor.call","this","onPageTilePress","_onPageTilePress","oPage","sPageId","getProperty","sSpaceId","Promise","resolve","getServiceAsync","then","navigationService","navigate","target","semanticObject","action","params","e","reject"],"sources":["Page.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Element, { MetadataOptions } from \"sap/ui/core/Element\";\nimport Container from \"sap/ushell/Container\";\nimport Navigation from \"sap/ushell/services/Navigation\";\nimport { $PageSettings } from \"./Page\";\nimport { IPage } from \"./interface/PageSpaceInterface\";\n\n/**\n *\n * Class for managing and storing Pages.\n *\n * @extends sap.ui.core.Element\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.Page\n */\n\nexport default class Page extends Element {\n\tconstructor(idOrSettings?: string | $PageSettings);\n\tconstructor(id?: string, settings?: $PageSettings);\n\tconstructor(id?: string, settings?: $PageSettings) {\n\t\tsuper(id, settings);\n\t}\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * Title for the  page\n\t\t\t * @since 1.120\n\t\t\t */\n\t\t\ttitle: { type: \"string\", group: \"Misc\", defaultValue: \"\" },\n\t\t\t/**\n\t\t\t * Icon for the  page\n\t\t\t * @since 1.120\n\t\t\t */\n\t\t\ticon: { type: \"string\", group: \"Misc\", defaultValue: \"\" },\n\t\t\t/**\n\t\t\t * Subtitle for the  page\n\t\t\t * @since 1.120\n\t\t\t */\n\t\t\tsubTitle: { type: \"string\", group: \"Misc\", defaultValue: \"\" },\n\t\t\t/**\n\t\t\t * Background color for the  page\n\t\t\t * @since 1.120\n\t\t\t */\n\t\t\tbgColor: { type: \"string\", group: \"Misc\", defaultValue: \"\" },\n\t\t\t/**\n\t\t\t * Id for the corresponding page\n\t\t\t * @since 1.120\n\t\t\t * @experimental Since 1.120\n\t\t\t */\n\t\t\tpageId: { type: \"string\", group: \"Misc\", defaultValue: \"\" },\n\t\t\t/**\n\t\t\t * Space id for the corresponding page\n\t\t\t * @since 1.120\n\t\t\t * @experimental Since 1.120\n\t\t\t */\n\t\t\tspaceId: { type: \"string\", group: \"Misc\", defaultValue: \"\" },\n\t\t\t/**\n\t\t\t * Space title for the corresponding page\n\t\t\t * @since 1.120\n\t\t\t * @experimental Since 1.120\n\t\t\t */\n\t\t\tspaceTitle: { type: \"string\", group: \"Misc\", defaultValue: \"\" },\n\t\t\t/**\n\t\t\t * Url to be launched for the corresponding page\n\t\t\t * @since 1.120\n\t\t\t * @experimental Since 1.120\n\t\t\t */\n\t\t\turl: { type: \"string\", group: \"Misc\", defaultValue: \"\" }\n\t\t},\n\t\tevents: {\n\t\t\t/**\n\t\t\t * Press event for the page\n\t\t\t */\n\t\t\tpress: {}\n\t\t}\n\t};\n\n\tpublic async onPageTilePress(oPage: IPage) {\n\t\tconst sPageId = oPage.getProperty?.(\"pageId\"),\n\t\t\tsSpaceId = oPage.getProperty?.(\"spaceId\");\n\t\tconst navigationService = await Container.getServiceAsync<Navigation>(\"Navigation\");\n\t\tawait navigationService.navigate({\n\t\t\ttarget: {\n\t\t\t\tsemanticObject: \"Launchpad\",\n\t\t\t\taction: \"openFLPPage\"\n\t\t\t},\n\t\t\tparams: {\n\t\t\t\tpageId: sPageId,\n\t\t\t\tspaceId: sSpaceId\n\t\t\t}\n\t\t});\n\t}\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,+BAAA,wDAAAC,EAAAC,GAAA,aAWA,MAiBqBC,EAAaF,EAAOG,OAAA,qBAMxBC,SAA4B,CAC3CC,QAAS,eACTC,WAAY,CAKXC,MAAO,CAAEC,KAAM,SAAUC,MAAO,OAAQC,aAAc,IAKtDC,KAAM,CAAEH,KAAM,SAAUC,MAAO,OAAQC,aAAc,IAKrDE,SAAU,CAAEJ,KAAM,SAAUC,MAAO,OAAQC,aAAc,IAKzDG,QAAS,CAAEL,KAAM,SAAUC,MAAO,OAAQC,aAAc,IAMxDI,OAAQ,CAAEN,KAAM,SAAUC,MAAO,OAAQC,aAAc,IAMvDK,QAAS,CAAEP,KAAM,SAAUC,MAAO,OAAQC,aAAc,IAMxDM,WAAY,CAAER,KAAM,SAAUC,MAAO,OAAQC,aAAc,IAM3DO,IAAK,CAAET,KAAM,SAAUC,MAAO,OAAQC,aAAc,KAErDQ,OAAQ,CAIPC,MAAO,CAAC,IAvDVC,YAAW,SAAAC,EAACC,EAAaC,GACxBC,6BAAAC,KAAMH,EAAIC,EACX,EAyDaG,gBAAe,SAAAC,EAACC,GAAY,IACxC,MAAMC,EAAUD,EAAME,cAAc,UACnCC,EAAWH,EAAME,cAAc,WAAW,OAAAE,QAAAC,QACXhC,EAAUiC,gBAA4B,eAAaC,KAAA,SAA7EC,GAAiB,OAAAJ,QAAAC,QACjBG,EAAkBC,SAAS,CAChCC,OAAQ,CACPC,eAAgB,YAChBC,OAAQ,eAETC,OAAQ,CACP3B,OAAQe,EACRd,QAASgB,MAETI,KAAA,eACH,CAAC,MAAAO,GAAA,OAAAV,QAAAW,OAAAD,EAAA,YA5EmBxC,CAAI","ignoreList":[],"sourceRoot":""}},{"offset":{"line":231,"column":0},"map":{"version":3,"names":["sap","ui","define","Button","FlexBox","GenericTile","IllustratedMessage","IllustratedMessageSize","IllustratedMessageType","VBox","sap_m_library","EventBus","__BasePagePanel","__MenuItem","__Page","___utils_Constants","___utils_DataFormatUtils","___utils_Device","___utils_DragDropUtils","___utils_FESRUtil","__PageManager","__PersonalisationUtils","__UShellPersonalizer","_interopRequireDefault","obj","__esModule","default","LoadState","BasePagePanel","MenuItem","Page","PAGE_SELECTION_LIMIT","SETTINGS_PANELS_KEYS","recycleId","DeviceType","attachKeyboardHandler","focusDraggedItem","addFESRId","addFESRSemanticStepName","PageManager","PersonalisationUtils","UShellPersonalizer","tileSizes","Mobile","maxWidth","minWidth","Tablet","Desktop","LargeDesktop","smallTabletMinWidth","mobileOneTileLimit","maxTileCOunt","maxRowCount","CustomFlexBox","extend","renderer","apiVersion","metadata","library","aggregations","items","type","multiple","singularName","dnd","draggable","droppable","constructor","_constructor","id","settings","FlexBox.prototype.constructor.call","this","PagePanel","properties","title","group","visibility","key","pages","_constructor2","BasePagePanel.prototype.constructor.call","init","_init","_this","BasePagePanel.prototype.init.call","_oWrapperFlexBox","getId","justifyContent","height","width","direction","renderType","wrap","getPlaceholderPageTiles","addStyleClass","addDragDropConfigTo","oEvent","_handlePageDnd","Promise","resolve","then","e","reject","_addContent","setProperty","_i18nBundle","getText","menuItem","icon","press","_handleEditPages","addAggregation","oEventBus","getInstance","subscribe","sChannelId","sEventId","oData","aFavPages","writeFavPagesIntoPers","_getInnerControls","_importdone","getData","stateData","status","publish","_getData","forceUpdate","arguments","length","undefined","_this2","_temp2","fireEvent","oPagePromise","_temp","_getPageManagerInstance","getFavoritePages","parent","getParent","_getLayout","openSettingsDialog","PAGES","_getPlaceholderPageTiles","placeholderArray","Array","fill","Loading","placeholderTiles","map","tileState","index","sizeBehavior","state","frameType","mode","visible","renderOnThemeChange","ariaRole","dropAreaOffset","attachResizeHandler","_attachResizeHandler","isNewsTileVisible","containerWidth","pagesContentWrapper","containerWrapper","favPagesCount","deviceType","getDeviceType","pagesWrapperDomRef","getDomRef","domRefClientWidth","clientWidth","tileWidth","hBoxWidth","finalTilesWidth","wrapperWidth","gap","setAlignItems","pagesPerRow","calculatePagesPerRow","maxTileWidth","minTileWidth","Math","min","max","_setPropertyValues","pagesTileWidth","setWidth","err","Error","getUserAvailablePages","_getUserAvailablePages","_this3","fetchAllAvailablePages","_calculatePagesPerRow","isNewsFeedVisible","ceil","myFavPage","oInnerControls","oParent","forEach","oPage","push","subTitle","spaceTitle","bgColor","BGColor","pageId","spaceId","url","oFav","index2","header","getTitle","subheader","getSubTitle","onPageTilePress","backgroundColor","getBgColor","tileIcon","getIcon","getProperty","panelLoadedFn","loaded","count","_setFavPagesContent","_setNoPageContent","removeAggregation","removeAllItems","removeStyleClass","oTile","addItem","_createNoPageContent","_oIllusMsg","illustrationSize","Small","illustrationType","NoSavedItems","description","oAddPageBtn","text","tooltip","oWrapperNoPageVBox","backgroundDesign","addAdditionalContent","oVal","propNames","Object","keys","sProperty","_this4","sInsertPosition","getParameter","oDragItem","oDropItem","iDragItemIndex","indexOfItem","iDropItemIndex","_temp3","_DragnDropPages","_this5","oItemMoved","splice","_writeFavPagesIntoPers","favPages","_this6","_temp5","oPersonalizer","read","oPersData","favouritePages","write","_temp4","persContainerId","getOwnerComponent","_UShellPersonalizer$g","applyColorPersonalizations","_applyColorPersonalizations","personalizations","applyIconPersonalizations","_applyIconPersonalizations","pageManagerInstance","newsAndPagesContainer","layout","getPersContainerId"],"sources":["PagePanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Button from \"sap/m/Button\";\nimport FlexBox, { $FlexBoxSettings } from \"sap/m/FlexBox\";\nimport GenericTile from \"sap/m/GenericTile\";\nimport IllustratedMessage from \"sap/m/IllustratedMessage\";\nimport IllustratedMessageSize from \"sap/m/IllustratedMessageSize\";\nimport IllustratedMessageType from \"sap/m/IllustratedMessageType\";\nimport VBox from \"sap/m/VBox\";\nimport { LoadState } from \"sap/m/library\";\nimport Event from \"sap/ui/base/Event\";\nimport Component from \"sap/ui/core/Component\";\nimport Control from \"sap/ui/core/Control\";\nimport { MetadataOptions } from \"sap/ui/core/Element\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport { DropInfo$DropEventParameters } from \"sap/ui/core/dnd/DropInfo\";\nimport type { $BasePagePanelSettings } from \"./BasePagePanel\";\nimport BasePagePanel from \"./BasePagePanel\";\nimport MenuItem from \"./MenuItem\";\nimport NewsAndPagesContainer from \"./NewsAndPagesContainer\";\nimport Page from \"./Page\";\nimport { ISpacePagePersonalization } from \"./interface/KeyUserInterface\";\nimport { IPage } from \"./interface/PageSpaceInterface\";\nimport { PAGE_SELECTION_LIMIT, SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\nimport { recycleId } from \"./utils/DataFormatUtils\";\nimport { DeviceType } from \"./utils/Device\";\nimport { attachKeyboardHandler, focusDraggedItem } from \"./utils/DragDropUtils\";\nimport { addFESRId, addFESRSemanticStepName } from \"./utils/FESRUtil\";\nimport PageManager from \"./utils/PageManager\";\nimport PersonalisationUtils from \"./utils/PersonalisationUtils\";\nimport UShellPersonalizer from \"./utils/UshellPersonalizer\";\n\nconst tileSizes = {\n\tMobile: {\n\t\tmaxWidth: 37.5,\n\t\tminWidth: 8\n\t},\n\tTablet: {\n\t\tmaxWidth: 37.5,\n\t\tminWidth: 10.625\n\t},\n\tDesktop: {\n\t\tmaxWidth: 18.75,\n\t\tminWidth: 7\n\t},\n\tLargeDesktop: {\n\t\tmaxWidth: 18.75,\n\t\tminWidth: 7\n\t},\n\tsmallTabletMinWidth: 8\n};\n\nconst mobileOneTileLimit = 3;\nconst maxTileCOunt = 8;\nconst maxRowCount = 4;\n\n/**\n *\n * CustomFlexBox extending FlexBox to enable drag & drop.\n *\n * @extends sap.m.FlexBox\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.122\n *\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.CustomFlexBox\n */\nclass CustomFlexBox extends FlexBox {\n\tconstructor(idOrSettings?: string | $FlexBoxSettings);\n\tconstructor(id?: string, settings?: $FlexBoxSettings);\n\tconstructor(id?: string, settings?: $FlexBoxSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\taggregations: {\n\t\t\titems: { type: \"sap.ui.core.Control\", multiple: true, singularName: \"item\", dnd: { draggable: true, droppable: true } }\n\t\t}\n\t};\n\tstatic renderer = {\n\t\tapiVersion: 2\n\t};\n}\n\n/**\n *\n * Panel class for managing and storing Pages.\n *\n * @extends sap.cux.home.BasePagePanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.122\n *\n * @internal\n * @experimental Since 1.121\n * @public\n *\n * @alias sap.cux.home.PagePanel\n */\n\nexport default class PagePanel extends BasePagePanel {\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * Title for the page panel\n\t\t\t */\n\t\t\ttitle: { type: \"string\", group: \"Misc\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Key for the page panel\n\t\t\t */\n\t\t\tkey: { type: \"string\", group: \"Misc\", visibility: \"hidden\" }\n\t\t},\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * Aggregation of pages available within the page panel\n\t\t\t */\n\t\t\tpages: { type: \"sap.cux.home.Page\", singularName: \"page\", multiple: true, visibility: \"hidden\" }\n\t\t}\n\t};\n\tprivate _oWrapperFlexBox!: CustomFlexBox;\n\tprivate oPagePromise!: Promise<IPage[]> | null;\n\tprivate persContainerId!: string;\n\tprivate pageManagerInstance!: PageManager;\n\tprivate aFavPages!: IPage[];\n\tprivate oInnerControls!: GenericTile[];\n\tprivate _oIllusMsg!: IllustratedMessage;\n\tprivate oWrapperNoPageVBox!: VBox;\n\tprivate oAddPageBtn!: Button;\n\tprivate oPersonalizer!: UShellPersonalizer;\n\tprivate oEventBus!: EventBus;\n\n\t/**\n\t * Constructor for a new Page panel.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $BasePagePanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tinit() {\n\t\tsuper.init();\n\n\t\tthis._oWrapperFlexBox = new CustomFlexBox(`${this.getId()}-pageWrapper`, {\n\t\t\tjustifyContent: \"Start\",\n\t\t\theight: \"100%\",\n\t\t\twidth: \"100%\",\n\t\t\tdirection: \"Row\",\n\t\t\trenderType: \"Bare\",\n\t\t\twrap: \"Wrap\",\n\t\t\titems: this.getPlaceholderPageTiles()\n\t\t}).addStyleClass(\"pagesFlexGap sapUiSmallMarginTop sapCuxPagesWrapper\");\n\t\tthis.addDragDropConfigTo(\n\t\t\tthis._oWrapperFlexBox,\n\t\t\t(oEvent) => void this._handlePageDnd(oEvent),\n\t\t\tasync (oEvent: KeyboardEvent) => {\n\t\t\t\tawait attachKeyboardHandler(oEvent, true);\n\t\t\t}\n\t\t);\n\n\t\tthis._addContent(this._oWrapperFlexBox);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"pageTitle\"));\n\n\t\tconst menuItem = new MenuItem(`${this.getId()}-managePages`, {\n\t\t\ttitle: this._i18nBundle.getText(\"mngPage\"),\n\t\t\ticon: \"sap-icon://edit\",\n\t\t\tpress: () => this._handleEditPages()\n\t\t});\n\t\tthis.addAggregation(\"menuItems\", menuItem);\n\t\taddFESRId(menuItem, \"managePages\");\n\t\tthis.oEventBus = EventBus.getInstance();\n\t\t// Subscribe to the event\n\t\tthis.oEventBus.subscribe(\n\t\t\t\"importChannel\",\n\t\t\t\"favPagesImport\",\n\t\t\tasync (sChannelId?: string, sEventId?: string, oData?) => {\n\t\t\t\tthis.aFavPages = oData as IPage[];\n\t\t\t\tawait this.writeFavPagesIntoPers(this.aFavPages);\n\t\t\t\tthis._getInnerControls();\n\t\t\t\tthis._importdone();\n\t\t\t},\n\t\t\tthis\n\t\t);\n\n\t\t// Subscribe to page changes from pageManager\n\t\tthis.oEventBus.subscribe(\n\t\t\t\"pageChannel\",\n\t\t\t\"pageUpdated\",\n\t\t\t() => {\n\t\t\t\tvoid this.getData(true);\n\t\t\t},\n\t\t\tthis\n\t\t);\n\t}\n\n\tprivate _importdone() {\n\t\tconst stateData = { status: true };\n\t\tthis.oEventBus.publish(\"importChannel\", \"favPagesImported\", stateData);\n\t}\n\n\tpublic async getData(forceUpdate: boolean = false) {\n\t\tif (this.oPagePromise === undefined || this.oPagePromise === null || forceUpdate) {\n\t\t\tthis.oPagePromise = this._getPageManagerInstance().getFavoritePages();\n\t\t\tconst aFavPages = await this.oPagePromise;\n\t\t\tthis.aFavPages = aFavPages;\n\t\t\tthis._getInnerControls();\n\t\t\tthis.oPagePromise = null;\n\t\t}\n\t\tthis.fireEvent(\"loaded\");\n\t\treturn this.oPagePromise;\n\t}\n\n\t/**\n\t * Handles the edit page event.\n\t * Opens the page dialog for managing page data.\n\t * @param {Event} oEvent - The event object.\n\t * @private\n\t */\n\tprivate _handleEditPages() {\n\t\tconst parent = this.getParent() as NewsAndPagesContainer;\n\t\tparent?._getLayout().openSettingsDialog(SETTINGS_PANELS_KEYS.PAGES);\n\t}\n\n\t/**\n\t * returns an array of placeholder generic tiles for pages\n\t * @private\n\t */\n\tprivate getPlaceholderPageTiles(): GenericTile[] {\n\t\tconst placeholderArray = new Array(PAGE_SELECTION_LIMIT).fill(LoadState.Loading) as LoadState[];\n\t\tconst placeholderTiles = placeholderArray.map((tileState: LoadState, index) => {\n\t\t\treturn new GenericTile(`${this.getId()}--${index}`, {\n\t\t\t\tsizeBehavior: \"Responsive\",\n\t\t\t\tstate: tileState,\n\t\t\t\tframeType: \"OneByOne\",\n\t\t\t\tmode: \"IconMode\",\n\t\t\t\tvisible: true,\n\t\t\t\trenderOnThemeChange: true,\n\t\t\t\tariaRole: \"listitem\",\n\t\t\t\tdropAreaOffset: 8\n\t\t\t}).addStyleClass(\"cuxPagesPlaceholder\");\n\t\t});\n\t\treturn placeholderTiles;\n\t}\n\n\tpublic attachResizeHandler(\n\t\tisNewsTileVisible: boolean,\n\t\tcontainerWidth: number,\n\t\tpagesContentWrapper: FlexBox,\n\t\tcontainerWrapper: FlexBox\n\t): void {\n\t\ttry {\n\t\t\tconst favPagesCount = this.aFavPages?.length,\n\t\t\t\tdeviceType = this.getDeviceType(),\n\t\t\t\tpagesWrapperDomRef = pagesContentWrapper.getDomRef() as Element;\n\n\t\t\tlet domRefClientWidth = isNewsTileVisible ? pagesWrapperDomRef.clientWidth : containerWidth;\n\n\t\t\tif (!domRefClientWidth) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet tileWidth,\n\t\t\t\thBoxWidth: string,\n\t\t\t\tfinalTilesWidth: string,\n\t\t\t\twrapperWidth = domRefClientWidth / 16; // Divide by 16 to convert to rem,\n\t\t\tconst gap = 1;\n\t\t\tcontainerWrapper.setAlignItems(\"Start\");\n\n\t\t\tif (favPagesCount > 0) {\n\t\t\t\tconst pagesPerRow = this.calculatePagesPerRow(favPagesCount, isNewsTileVisible);\n\t\t\t\tif (pagesPerRow) {\n\t\t\t\t\tconst maxTileWidth = tileSizes[deviceType].maxWidth;\n\t\t\t\t\tlet minTileWidth = tileSizes[deviceType].minWidth;\n\t\t\t\t\t// when tablet viewport width is below 800px, 46rem(736px) is the container width and 2 rem is paddings\n\t\t\t\t\tif (deviceType === DeviceType.Tablet && containerWidth < 736) {\n\t\t\t\t\t\tminTileWidth = tileSizes.smallTabletMinWidth;\n\t\t\t\t\t}\n\t\t\t\t\ttileWidth = (wrapperWidth - (pagesPerRow - 1) * gap) / pagesPerRow;\n\t\t\t\t\ttileWidth = Math.min(tileWidth, maxTileWidth);\n\t\t\t\t\ttileWidth = Math.max(tileWidth, minTileWidth);\n\t\t\t\t\tfinalTilesWidth = `${tileWidth}rem`;\n\t\t\t\t\thBoxWidth = `${pagesPerRow * tileWidth + (pagesPerRow - 1) * gap}rem`;\n\t\t\t\t} else {\n\t\t\t\t\tfinalTilesWidth = \"auto\";\n\t\t\t\t\thBoxWidth = \"100%\";\n\t\t\t\t}\n\n\t\t\t\tthis._setPropertyValues({ hBoxWidth: hBoxWidth, pagesTileWidth: finalTilesWidth });\n\t\t\t\tpagesContentWrapper.setWidth(hBoxWidth);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn;\n\t\t} catch (err) {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tconsole.error(err.message);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async getUserAvailablePages() {\n\t\treturn await this._getPageManagerInstance().fetchAllAvailablePages();\n\t}\n\n\tprivate calculatePagesPerRow(favPagesCount: number, isNewsFeedVisible: boolean): number {\n\t\tlet pagesPerRow = 0;\n\t\tconst deviceType = this.getDeviceType();\n\t\tif (deviceType === DeviceType.Desktop || deviceType === DeviceType.LargeDesktop) {\n\t\t\tif (isNewsFeedVisible) {\n\t\t\t\t// halves the tiles in 2 rows\n\t\t\t\tpagesPerRow = Math.ceil(favPagesCount >= maxTileCOunt ? maxRowCount : favPagesCount / 2);\n\t\t\t} else {\n\t\t\t\tpagesPerRow = favPagesCount > maxRowCount ? Math.ceil(favPagesCount / 2) : maxRowCount;\n\t\t\t}\n\t\t} else if (deviceType === DeviceType.Mobile) {\n\t\t\t// decides number of columns to either 1 or 2\n\t\t\tpagesPerRow = favPagesCount <= mobileOneTileLimit ? 1 : 2;\n\t\t} else if (deviceType === DeviceType.Tablet) {\n\t\t\t// upto 4 in a Row, otherwise halves the tiles in 2 rows\n\t\t\tpagesPerRow = favPagesCount <= maxRowCount ? favPagesCount : Math.ceil(favPagesCount / 2);\n\t\t}\n\t\treturn pagesPerRow;\n\t}\n\n\tprivate _getInnerControls() {\n\t\tconst myFavPage: Page[] = [];\n\t\tthis.oInnerControls = [];\n\t\tconst oParent = this.getParent() as NewsAndPagesContainer;\n\t\tif (this.aFavPages) {\n\t\t\tthis.aFavPages.forEach((oPage: IPage, index: number) => {\n\t\t\t\tmyFavPage.push(\n\t\t\t\t\tnew Page(recycleId(`${this.getId()}-favPage-${index}`), {\n\t\t\t\t\t\ttitle: oPage.title,\n\t\t\t\t\t\tsubTitle: oPage.title === oPage.spaceTitle ? \"\" : oPage.spaceTitle,\n\t\t\t\t\t\ticon: oPage.icon,\n\t\t\t\t\t\tbgColor: oPage.BGColor as string,\n\t\t\t\t\t\tpageId: oPage.pageId,\n\t\t\t\t\t\tspaceId: oPage.spaceId,\n\t\t\t\t\t\tspaceTitle: oPage.spaceTitle,\n\t\t\t\t\t\turl: \"#Launchpad-openFLPPage?pageId=\" + oPage.pageId + \"&spaceId=\" + oPage.spaceId\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t});\n\t\t\tmyFavPage.forEach((oFav: Page, index2: number) => {\n\t\t\t\tthis.oInnerControls.push(\n\t\t\t\t\tnew GenericTile(recycleId(`${oFav.getId()}--genericTile--${index2}`), {\n\t\t\t\t\t\t// width: \"10rem\",\n\t\t\t\t\t\theader: oFav.getTitle(),\n\t\t\t\t\t\tsubheader: oFav.getSubTitle(),\n\t\t\t\t\t\tpress: () => void oFav.onPageTilePress(oFav),\n\t\t\t\t\t\tsizeBehavior: \"Responsive\",\n\t\t\t\t\t\tstate: \"Loaded\",\n\t\t\t\t\t\tframeType: \"OneByOne\",\n\t\t\t\t\t\tmode: \"IconMode\",\n\t\t\t\t\t\tbackgroundColor: oFav.getBgColor(),\n\t\t\t\t\t\ttileIcon: oFav.getIcon(),\n\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\trenderOnThemeChange: true,\n\t\t\t\t\t\tariaRole: \"listitem\",\n\t\t\t\t\t\tdropAreaOffset: 8,\n\t\t\t\t\t\turl: oFav.getProperty(\"url\") as string\n\t\t\t\t\t}).addStyleClass(\"sapCuxPageTile\")\n\t\t\t\t);\n\t\t\t\tthis.addAggregation(\"pages\", oFav, true);\n\t\t\t});\n\n\t\t\tthis._oWrapperFlexBox.setAlignItems(this.aFavPages.length == 1 ? \"Start\" : \"Center\");\n\n\t\t\tif (this.aFavPages.length) {\n\t\t\t\toParent?.panelLoadedFn(\"Page\", { loaded: true, count: this.aFavPages.length });\n\t\t\t\tthis._setFavPagesContent();\n\t\t\t} else {\n\t\t\t\toParent?.panelLoadedFn(\"Page\", { loaded: true, count: 0 });\n\t\t\t\tthis._setNoPageContent();\n\t\t\t}\n\t\t} else {\n\t\t\toParent?.panelLoadedFn(\"Page\", { loaded: false, count: 0 });\n\t\t\tthis.removeAggregation(\"content\", this._oWrapperFlexBox);\n\t\t}\n\t}\n\n\tprivate _setFavPagesContent() {\n\t\tthis._oWrapperFlexBox.removeAllItems();\n\t\tthis._oWrapperFlexBox.removeStyleClass(\"pagesFlexBox\");\n\t\tthis.oInnerControls.forEach((oTile: GenericTile) => {\n\t\t\tthis._oWrapperFlexBox.addItem(oTile);\n\t\t});\n\t}\n\n\tprivate _createNoPageContent() {\n\t\tif (!this._oIllusMsg) {\n\t\t\tthis._oIllusMsg = new IllustratedMessage(this.getId() + \"--idNoPages\", {\n\t\t\t\tillustrationSize: IllustratedMessageSize.Small,\n\t\t\t\tillustrationType: IllustratedMessageType.NoSavedItems,\n\t\t\t\ttitle: this._i18nBundle.getText(\"noDataPageTitle\"),\n\t\t\t\tdescription: this._i18nBundle.getText(\"noPageDescription\")\n\t\t\t}).addStyleClass(\"myHomeIllustratedMsg myHomeIllustratedMessageAlign\");\n\t\t\tthis.oAddPageBtn = new Button(this.getId() + \"--idAddPageBtn\", {\n\t\t\t\ttext: this._i18nBundle.getText(\"addPage\"),\n\t\t\t\ttooltip: this._i18nBundle.getText(\"addPage\"),\n\t\t\t\ttype: \"Emphasized\",\n\t\t\t\tpress: () => this._handleEditPages()\n\t\t\t});\n\t\t\taddFESRSemanticStepName(this.oAddPageBtn, \"press\", \"addPages\");\n\t\t}\n\t}\n\n\tprivate _setNoPageContent() {\n\t\tif (!this.oWrapperNoPageVBox) {\n\t\t\tthis.oWrapperNoPageVBox = new VBox(`${this.getId()}--wrapperNoPageVBox`, {\n\t\t\t\twidth: \"100%\",\n\t\t\t\theight: \"17rem\",\n\t\t\t\tbackgroundDesign: \"Solid\",\n\t\t\t\tjustifyContent: \"Center\"\n\t\t\t}).addStyleClass(\"sapUiRoundedBorder noCardsBorder\");\n\t\t\tthis._createNoPageContent();\n\t\t\tthis._oIllusMsg.addAdditionalContent(this.oAddPageBtn);\n\t\t\tthis._oWrapperFlexBox.removeAllItems();\n\t\t\tthis._oWrapperFlexBox.addStyleClass(\"pagesFlexBox\");\n\t\t\tthis.oWrapperNoPageVBox.addItem(this._oIllusMsg);\n\t\t\tthis._oWrapperFlexBox.addItem(this.oWrapperNoPageVBox);\n\t\t}\n\t}\n\n\tprivate _setPropertyValues(oVal: { hBoxWidth: string; pagesTileWidth: string }) {\n\t\tconst propNames = Object.keys(oVal);\n\t\tpropNames.forEach((sProperty: string) => {\n\t\t\tif (sProperty === \"hBoxWidth\") {\n\t\t\t\tthis._oWrapperFlexBox.setProperty(\"width\", oVal[sProperty]);\n\t\t\t} else if (sProperty === \"pagesTileWidth\" && this.oInnerControls.length) {\n\t\t\t\tthis.oInnerControls.forEach(function (oTile) {\n\t\t\t\t\toTile.setProperty(\"width\", oVal[sProperty]);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async _handlePageDnd(oEvent: Event<DropInfo$DropEventParameters>) {\n\t\tconst sInsertPosition = oEvent.getParameter?.(\"dropPosition\"),\n\t\t\toDragItem = oEvent?.getParameter?.(\"draggedControl\") as Control,\n\t\t\toDropItem = oEvent.getParameter(\"droppedControl\") as Control,\n\t\t\tiDragItemIndex = (oDragItem.getParent() as FlexBox)?.indexOfItem(oDragItem);\n\t\tlet iDropItemIndex = (oDragItem.getParent() as FlexBox)?.indexOfItem(oDropItem);\n\n\t\tif (sInsertPosition === \"Before\" && iDragItemIndex === iDropItemIndex - 1) {\n\t\t\tiDropItemIndex--;\n\t\t} else if (sInsertPosition === \"After\" && iDragItemIndex === iDropItemIndex + 1) {\n\t\t\tiDropItemIndex++;\n\t\t}\n\n\t\tif (iDragItemIndex !== iDropItemIndex) {\n\t\t\tawait this._DragnDropPages(iDragItemIndex, iDropItemIndex, sInsertPosition as string);\n\t\t}\n\t}\n\n\tprivate async _DragnDropPages(iDragItemIndex: number, iDropItemIndex: number, sInsertPosition: string) {\n\t\tif (sInsertPosition === \"Before\" && iDragItemIndex < iDropItemIndex) {\n\t\t\tiDropItemIndex--;\n\t\t} else if (sInsertPosition === \"After\" && iDragItemIndex > iDropItemIndex) {\n\t\t\tiDropItemIndex++;\n\t\t}\n\t\t// take the moved item from dragIndex and add to dropindex\n\t\tconst oItemMoved = this.aFavPages.splice(iDragItemIndex, 1)[0];\n\t\tthis.aFavPages.splice(iDropItemIndex, 0, oItemMoved);\n\t\tthis._getInnerControls();\n\n\t\tawait this.writeFavPagesIntoPers(this.aFavPages);\n\t\tfocusDraggedItem(this._oWrapperFlexBox, iDropItemIndex);\n\t}\n\n\t/**\n\t * Writes the favourite pages data into personalizer\n\t *\n\t * @private\n\t * @async\n\t * @param {IPage[]} favPages\n\t * @returns {*}\n\t */\n\tprivate async writeFavPagesIntoPers(favPages: IPage[]) {\n\t\tif (this.oPersonalizer === undefined) {\n\t\t\tthis.oPersonalizer = await UShellPersonalizer.getInstance(\n\t\t\t\tthis.persContainerId,\n\t\t\t\tPersonalisationUtils.getOwnerComponent(this) as Component\n\t\t\t);\n\t\t}\n\n\t\tlet oPersData = await this.oPersonalizer.read();\n\t\tif (!oPersData) oPersData = { favouritePages: [] };\n\t\toPersData.favouritePages = favPages;\n\t\tawait this.oPersonalizer.write(oPersData);\n\t}\n\n\tpublic applyColorPersonalizations(personalizations: Array<ISpacePagePersonalization>) {\n\t\tvoid this._getPageManagerInstance()?.applyColorPersonalizations(personalizations);\n\t}\n\n\tpublic applyIconPersonalizations(personalizations: Array<ISpacePagePersonalization>) {\n\t\tvoid this._getPageManagerInstance()?.applyIconPersonalizations(personalizations);\n\t}\n\n\tprivate _getPageManagerInstance() {\n\t\tif (!this.pageManagerInstance) {\n\t\t\tconst newsAndPagesContainer = this.getParent();\n\t\t\tconst layout = newsAndPagesContainer?.getParent();\n\t\t\tthis.persContainerId = (layout?.getProperty(\"persContainerId\") as string) || PersonalisationUtils.getPersContainerId(this);\n\t\t\tthis.pageManagerInstance = PageManager.getInstance(\n\t\t\t\tthis.persContainerId,\n\t\t\t\tPersonalisationUtils.getOwnerComponent(this) as Component\n\t\t\t);\n\t\t}\n\t\treturn this.pageManagerInstance;\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":236,"column":0},"map":{"version":3,"names":["sap","ui","define","CustomListItem","HBox","List","Panel","SearchField","Text","Title","ToggleButton","Toolbar","ToolbarSpacer","VBox","__BaseSettingsPanel","___utils_Accessibility","___utils_Constants","___utils_DataFormatUtils","__PageManager","__PersonalisationUtils","_interopRequireDefault","obj","__esModule","default","BaseSettingsPanel","getInvisibleText","PAGE_SELECTION_LIMIT","SETTINGS_PANELS_KEYS","recycleId","PageManager","PersonalisationUtils","PageSettingsPanel","extend","constructor","prototype","apply","this","arguments","_initialNavigation","init","_init","BaseSettingsPanel.prototype.init.call","setProperty","PAGES","_i18nBundle","getText","oWrapperVBox","getId","width","addStyleClass","addAggregation","attachPanelNavigated","onPanelNavigated","_onPanelNavigated","_this","_temp2","oSearchField","getValue","setValue","sSearchQuery","_renderPages","aSpaces","_temp","Promise","resolve","_initializePanel","then","e","reject","_this2","PageManagerInstance","getInstance","getPersContainerId","_getPanel","getOwnerComponent","fetchAllAvailablePages","_this2$PageManagerIns","aAllPages","getFavoritePages","_this2$PageManagerIns2","aFavPages","fetchAllAvailableSpaces","_this2$PageManagerIns3","_showMessageStrip","_showToolbar","_showPagesList","oMessageStripVBox","oMessage","_seHeaderMessage","addItem","_setInvisibleSubHeaderText","subHeaderText","length","oSubHeaderText","setText","oPageTitleText","oTitle","text","titleStyle","liveChange","oEvent","_onPagesSearch","ariaLabelledBy","oToolbar","height","design","content","oPagesListVBox","_createPagesList","oPage","spaceIndex","pageIndex","oText","label","oToggleBtn","tooltip","selected","icon","type","pressed","enabled","press","_pageSelectHandler","id","oHBox","justifyContent","alignItems","items","oCustomListItem","pageSettingsPage","getParent","scrollContainerDomRef","getDomRef","childNodes","currentScrollPosition","scrollTop","removeAllItems","oNoDataHBox","setVisible","forEach","oSpace","aPagesList","children","find","oFavPage","pageId","push","oHeaderToolbar","_createHeaderToolbar","oPanel","expandable","expanded","headerToolbar","setTimeout","scrollTo","wrapping","sPageId","_this3","bIsCheckBoxSelected","getSource","getPressed","oPageObj","iIndex","findIndex","splice","getFavPages","aFilteredSpaces","_filterSpacesPages","getData","toLowerCase","spaceLabel","includes"],"sources":["PageSettingsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport HBox from \"sap/m/HBox\";\nimport List from \"sap/m/List\";\nimport Page from \"sap/m/Page\";\nimport Panel from \"sap/m/Panel\";\nimport SearchField from \"sap/m/SearchField\";\nimport Text from \"sap/m/Text\";\nimport Title from \"sap/m/Title\";\nimport ToggleButton from \"sap/m/ToggleButton\";\nimport Toolbar from \"sap/m/Toolbar\";\nimport ToolbarSpacer from \"sap/m/ToolbarSpacer\";\nimport VBox from \"sap/m/VBox\";\nimport Event from \"sap/ui/base/Event\";\nimport Component from \"sap/ui/core/Component\";\nimport InvisibleText from \"sap/ui/core/InvisibleText\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\nimport PagePanel from \"./PagePanel\";\nimport { IPage, ISpace } from \"./interface/PageSpaceInterface\";\nimport { getInvisibleText } from \"./utils/Accessibility\";\nimport { PAGE_SELECTION_LIMIT, SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\nimport { recycleId } from \"./utils/DataFormatUtils\";\nimport PageManager from \"./utils/PageManager\";\nimport PersonalisationUtils from \"./utils/PersonalisationUtils\";\n\n/**\n *\n * Class for My Home Page Settings Panel.\n *\n * @extends BaseSettingsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.PageSettingsPanel\n */\nexport default class PageSettingsPanel extends BaseSettingsPanel {\n\tprivate PageManagerInstance!: PageManager;\n\tprivate aAllPages!: IPage[];\n\tprivate aFavPages!: IPage[];\n\tprivate aSpaces!: ISpace[];\n\tprivate oWrapperVBox!: VBox;\n\tprivate oSearchField!: SearchField;\n\tprivate sSearchQuery!: string;\n\tprivate oMessage!: Text;\n\tprivate oPagesListVBox!: VBox;\n\tprivate oNoDataHBox!: HBox;\n\tprivate _initialNavigation: boolean = true;\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init() {\n\t\tsuper.init();\n\n\t\t//setup panel\n\t\tthis.setProperty(\"key\", SETTINGS_PANELS_KEYS.PAGES);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"pages\"));\n\t\tthis.setProperty(\"icon\", \"sap-icon://course-book\");\n\t\tthis.oWrapperVBox = new VBox(`${this.getId()}--pageSettingsWrapper`, {\n\t\t\twidth: \"100%\"\n\t\t}).addStyleClass(\"sapUiNoPadding sapUiNoMarginEnd\");\n\t\tthis.addAggregation(\"content\", this.oWrapperVBox);\n\n\t\t//fired every time on panel navigation\n\t\tthis.attachPanelNavigated(() => {\n\t\t\tvoid this.onPanelNavigated();\n\t\t});\n\t}\n\n\t/**\n\t * Handler for panel navigation event.\n\t * Initialize the Page Settings Panel on navigation, if it is not already initializaed.\n\t * @private\n\t */\n\tprivate async onPanelNavigated() {\n\t\tif (this._initialNavigation) {\n\t\t\tthis._initialNavigation = false;\n\t\t\tawait this._initializePanel();\n\t\t}\n\t\t// Clear Search field and search results\n\t\tif (this.oSearchField?.getValue()) {\n\t\t\tthis.oSearchField.setValue(\"\");\n\t\t\tthis.sSearchQuery = \"\";\n\t\t\tthis._renderPages(this.aSpaces);\n\t\t}\n\t}\n\n\t/**\n\t * Initialize the Page Settings Panel.\n\t * @private\n\t */\n\tprivate async _initializePanel() {\n\t\tif (!this.PageManagerInstance) {\n\t\t\t// initializing the page manager instance on panel navigation, as when on init is triggered, the panel assocation is not yet set\n\t\t\t// we are using this._getPanel() (i.e. corresponding panel) instead of this, as settings panel don't have an ownerId\n\t\t\tthis.PageManagerInstance = PageManager.getInstance(\n\t\t\t\tPersonalisationUtils.getPersContainerId(this._getPanel()),\n\t\t\t\tPersonalisationUtils.getOwnerComponent(this._getPanel()) as Component\n\t\t\t);\n\t\t}\n\t\tthis.aAllPages = await this.PageManagerInstance.fetchAllAvailablePages();\n\t\tthis.aFavPages = await this.PageManagerInstance.getFavoritePages();\n\t\tthis.aSpaces = await this.PageManagerInstance.fetchAllAvailableSpaces();\n\t\tthis._showMessageStrip();\n\t\tthis._showToolbar();\n\t\tthis._showPagesList();\n\t}\n\n\tprivate _showMessageStrip() {\n\t\tconst oMessageStripVBox = new VBox(`${this.getId()}--msgStripContainer`, {\n\t\t\twidth: \"100%\"\n\t\t}).addStyleClass(\"sapUiNoPadding sapUiNoMarginEnd\");\n\t\tthis.oMessage = new Text(`${this.getId()}--msgStripText`).addStyleClass(\"sapUiSmallMargin\");\n\t\tthis._seHeaderMessage();\n\t\toMessageStripVBox.addItem(this.oMessage);\n\t\tthis.oWrapperVBox.addItem(oMessageStripVBox);\n\t}\n\n\t/**\n\t * Creates and returns an `InvisibleText` control containing the Page Sub-header text.\n\t *\n\t * @private\n\t * @returns {InvisibleText} The created `InvisibleText` instance with the title text.\n\t */\n\tprivate _setInvisibleSubHeaderText(): InvisibleText {\n\t\t// Create a hidden Text control for the Sub header (to be read by screen readers)\n\t\tconst subHeaderText =\n\t\t\tthis.aFavPages.length >= PAGE_SELECTION_LIMIT\n\t\t\t\t? this._i18nBundle.getText(\"myInterestwarning\")\n\t\t\t\t: this._i18nBundle.getText(\"myInterestinfo\");\n\t\tconst oSubHeaderText = getInvisibleText(this.getId() + \"--pageSubHeaderText\", subHeaderText);\n\t\treturn oSubHeaderText;\n\t}\n\n\tprivate _seHeaderMessage() {\n\t\tthis.oMessage.setText(\n\t\t\tthis.aFavPages.length >= PAGE_SELECTION_LIMIT\n\t\t\t\t? this._i18nBundle.getText(\"myInterestwarning\")\n\t\t\t\t: this._i18nBundle.getText(\"myInterestinfo\")\n\t\t);\n\t}\n\n\tprivate _showToolbar() {\n\t\t// Create and store the invisible texts\n\t\tconst oPageTitleText = getInvisibleText(this.getId() + \"--pageTitleText\", this._i18nBundle.getText(\"pages\"));\n\t\tconst oSubHeaderText = this._setInvisibleSubHeaderText();\n\t\tconst oTitle = new Title(`${this.getId()}--pagesListTitle`, {\n\t\t\ttext: this._i18nBundle.getText(\"pageGroupHeader\"),\n\t\t\ttitleStyle: \"H5\"\n\t\t}).addStyleClass(\"sapUiSmallMarginBottom\");\n\n\t\tthis.oSearchField = new SearchField(`${this.getId()}--pagesListSearch`, {\n\t\t\tliveChange: (oEvent) => this._onPagesSearch(oEvent),\n\t\t\twidth: \"13.75rem\",\n\t\t\tariaLabelledBy: [oPageTitleText.getId(), oSubHeaderText.getId(), oTitle.getId()]\n\t\t}).addStyleClass(\"sapUiSmallMarginBottom pagesListSearch\");\n\n\t\tconst oToolbar = new Toolbar(`${this.getId()}--pagesListToolbar`, {\n\t\t\twidth: \"calc(100% - 2rem)\",\n\t\t\theight: \"3rem\",\n\t\t\tdesign: \"Solid\",\n\t\t\tcontent: [\n\t\t\t\toTitle,\n\t\t\t\tnew ToolbarSpacer(`${this.getId()}--pagesHeaderToolbarSpacer`),\n\t\t\t\tthis.oSearchField,\n\t\t\t\toPageTitleText,\n\t\t\t\toSubHeaderText\n\t\t\t]\n\t\t}).addStyleClass(\"sapUiSmallMarginBegin pagesToolbarNoPadding\");\n\t\tthis.oWrapperVBox.addItem(oToolbar);\n\t}\n\n\tprivate _showPagesList() {\n\t\tthis.oPagesListVBox = new VBox(`${this.getId()}--pagesListVBox`, {\n\t\t\twidth: \"calc(100% - 2rem)\"\n\t\t}).addStyleClass(\"sapUiSmallMarginBegin\");\n\t\tthis._renderPages(this.aSpaces);\n\t\tthis.oWrapperVBox.addItem(this.oPagesListVBox);\n\t}\n\n\tprivate _createPagesList(oPage: IPage, spaceIndex?: number, pageIndex?: number): CustomListItem {\n\t\tconst oText = new Text({\n\t\t\ttext: oPage.label\n\t\t});\n\t\tconst oToggleBtn = new ToggleButton(recycleId(`${this.getId()}-toggle-${spaceIndex}--${pageIndex}`), {\n\t\t\ttooltip: oPage.selected ? this._i18nBundle.getText(\"hideBtn\") : this._i18nBundle.getText(\"showBtn\"),\n\t\t\ticon: \"sap-icon://show\",\n\t\t\ttype: \"Emphasized\",\n\t\t\tpressed: !oPage.selected,\n\t\t\tenabled: oPage.selected || this.aFavPages.length < PAGE_SELECTION_LIMIT,\n\t\t\tpress: (oEvent) => void this._pageSelectHandler(oPage.id as string, oEvent)\n\t\t});\n\t\tconst oHBox = new HBox(recycleId(`${this.getId()}--customListBox--${spaceIndex}--${pageIndex}`), {\n\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\talignItems: \"Center\",\n\t\t\titems: [oText, oToggleBtn]\n\t\t});\n\t\tconst oCustomListItem = new CustomListItem(recycleId(`${this.getId()}--customList--${spaceIndex}--${pageIndex}`), {\n\t\t\tcontent: [oHBox]\n\t\t}).addStyleClass(\"pagesPanelItem\");\n\t\treturn oCustomListItem;\n\t}\n\n\tprivate _renderPages(aSpaces: ISpace[]) {\n\t\tconst pageSettingsPage = this.oPagesListVBox.getParent()?.getParent() as Page;\n\t\tconst scrollContainerDomRef = pageSettingsPage?.getDomRef()?.childNodes[1] as Element;\n\t\tconst currentScrollPosition = scrollContainerDomRef?.scrollTop || 0;\n\t\tthis.oPagesListVBox.removeAllItems();\n\t\tif (!aSpaces.length) {\n\t\t\tif (!this.oNoDataHBox) {\n\t\t\t\tthis.oNoDataHBox = new HBox(`${this.getId()}--noSpacePageHBox`, {\n\t\t\t\t\theight: \"3rem\",\n\t\t\t\t\tjustifyContent: \"Center\",\n\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\titems: [\n\t\t\t\t\t\tnew Text(`${this.getId()}--noSpacePageItem`, {\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"noData\")\n\t\t\t\t\t\t})\n\t\t\t\t\t]\n\t\t\t\t}).addStyleClass(\"pagesBottomBorder\");\n\t\t\t\tthis.oWrapperVBox.addItem(this.oNoDataHBox);\n\t\t\t}\n\t\t\tthis.oNoDataHBox.setVisible(true);\n\t\t} else if (this.oNoDataHBox) {\n\t\t\tthis.oNoDataHBox.setVisible(false);\n\t\t}\n\n\t\taSpaces.forEach((oSpace, spaceIndex) => {\n\t\t\tconst aPagesList: CustomListItem[] = [];\n\t\t\toSpace.children.forEach((oPage, pageIndex) => {\n\t\t\t\toPage.selected = this.aFavPages.find((oFavPage) => oFavPage.pageId === oPage.id) ? true : false;\n\t\t\t\taPagesList.push(this._createPagesList(oPage, spaceIndex, pageIndex));\n\t\t\t});\n\t\t\tconst oHeaderToolbar = this._createHeaderToolbar(oSpace, spaceIndex);\n\t\t\tconst oPanel = new Panel(recycleId(`${this.getId()}--panel--${spaceIndex}`), {\n\t\t\t\texpandable: true,\n\t\t\t\texpanded: true,\n\t\t\t\twidth: \"auto\",\n\t\t\t\theaderToolbar: oHeaderToolbar,\n\t\t\t\tcontent: new List(recycleId(`${this.getId()}--panelContent--${spaceIndex}`), {\n\t\t\t\t\titems: aPagesList\n\t\t\t\t})\n\t\t\t}).addStyleClass(\"pagesPanel\");\n\t\t\tthis.oPagesListVBox.addItem(oPanel);\n\t\t});\n\t\tif (currentScrollPosition >= 0 && pageSettingsPage) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tpageSettingsPage.scrollTo(currentScrollPosition);\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\tprivate _createHeaderToolbar(oSpace: ISpace, spaceIndex?: number) {\n\t\tconst oTitle = new Title(recycleId(`${this.getId()}--headerTitle--${spaceIndex}`), {\n\t\t\twrapping: true,\n\t\t\twidth: \"auto\",\n\t\t\ttext: oSpace.label\n\t\t}).addStyleClass(\"dialogPanelTitle\");\n\t\tconst oToolbar = new Toolbar(recycleId(`${this.getId()}--headerToolBar--${spaceIndex}`), {\n\t\t\tdesign: \"Solid\",\n\t\t\tcontent: [oTitle]\n\t\t});\n\t\treturn oToolbar;\n\t}\n\n\tprivate async _pageSelectHandler(sPageId: string, oEvent: { getSource: () => { getPressed: () => boolean } }) {\n\t\tconst bIsCheckBoxSelected = !oEvent.getSource().getPressed();\n\t\tconst oPageObj = this.aAllPages.find((oPage) => oPage.pageId === sPageId);\n\t\tif (!oPageObj) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (bIsCheckBoxSelected) {\n\t\t\tthis.aFavPages.push(oPageObj);\n\t\t} else {\n\t\t\tconst iIndex = this.aFavPages.findIndex((oPage) => oPage.pageId === sPageId);\n\t\t\tthis.aFavPages.splice(iIndex, 1);\n\t\t}\n\t\tthis._seHeaderMessage();\n\t\tawait this.PageManagerInstance.getFavPages(this.aFavPages, true);\n\t\tlet aFilteredSpaces;\n\t\tif (this.sSearchQuery?.length) {\n\t\t\taFilteredSpaces = this._filterSpacesPages();\n\t\t}\n\t\tthis._renderPages(aFilteredSpaces || this.aSpaces);\n\t\tvoid (this._getPanel() as PagePanel).getData();\n\t}\n\n\tprivate _onPagesSearch(oEvent: Event) {\n\t\tthis.sSearchQuery = oEvent.getSource<SearchField>().getValue().toLowerCase();\n\t\tconst aFilteredSpaces = this._filterSpacesPages();\n\t\tthis._renderPages(aFilteredSpaces);\n\t}\n\n\tprivate _filterSpacesPages() {\n\t\tconst aFilteredSpaces: ISpace[] = [];\n\t\tthis.aSpaces.forEach((oSpace) => {\n\t\t\tconst children: IPage[] = [];\n\t\t\tconst spaceLabel = oSpace.label;\n\t\t\toSpace.children.forEach((oPage) => {\n\t\t\t\tif (oPage.label?.toLowerCase().includes(this.sSearchQuery) || spaceLabel?.toLowerCase().includes(this.sSearchQuery)) {\n\t\t\t\t\tchildren.push(oPage);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (children.length) {\n\t\t\t\taFilteredSpaces.push({\n\t\t\t\t\t...oSpace,\n\t\t\t\t\tchildren\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn aFilteredSpaces;\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":241,"column":0},"map":{"version":3,"names":["sap","ui","define","Log","Button","CustomListItem","Dialog","GroupHeaderListItem","sap_m_library","List","OverflowToolbar","Select","StandardListItem","ToolbarSpacer","VBox","EventBus","DateFormat","Item","Container","EventHub","__BaseAppPersPanel","__MenuItem","___utils_FESRUtil","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","URLHelper","BaseAppPersPanel","MenuItem","addFESRId","DateFilterOption","GroupDateFormatter","getDateInstance","pattern","Constants","OLDER_DATE_TIMESTAMP","Number","MIN_SAFE_INTEGER","formatConstantTimeInDate","date","setHours","getWeekRangeValues","weekOffset","currentDate","Date","startDate","startDateTimeStamp","setDate","getDate","getDay","endDate","endDateTimeStamp","getDaysBefore","currentTimeStamp","days","newDateStamp","isDateWithinRange","appTimeStamp","startTimeStamp","endTimeStamp","RecentAppPanel","extend","metadata","library","defaultAggregation","aggregations","apps","type","singularName","multiple","visibility","constructor","_constructor","id","settings","BaseAppPersPanel.prototype.constructor.call","this","_recentApps","setSupported","init","_init","BaseAppPersPanel.prototype.init.call","setProperty","_i18nBundle","getText","_attachUserActivityTracking","on","do","refresh","showHistoryMenuItem","getId","title","icon","press","_openHistoryDialog","bind","insertAggregation","oEventBus","getInstance","subscribe","channelId","eventId","data","item","color","_applyUngroupedTileColor","loadApps","_loadApps","_this","Promise","resolve","_getRecentApps","recentApps","destroyAggregation","map","app","index","menuItems","_getAppActions","addedInFavorites","setApps","generateApps","reject","_this2","getServiceAsync","UserRecentsService","all","getRecentActivity","oRecentActivity","_getRecentActivitiesFromLoadedData","_ref","recentActivities","recentActivitiesUsageData","convertActivitiesToVisualizations","_this2$convertActivit","recentDate","recentDay","_recentDayTimeStamp","recentUsage","recentUsageArray","recentUsageMap","Map","forEach","oItem","appId","set","aUsageArray","dateStamp","timestamp","size","usageArray","get","orgAppId","error","isAppAddedInFavorite","arguments","length","undefined","resumeLastActivityItem","getKey","_resumeAppActivity","appActions","addToFavoritesItem","event","_addAppToFavorites","push","menuItem","getSource","getParent","url","getUrl","redirect","_generateHistoryDialog","_controlMap","content","height","items","_generateAppHistoryList","addStyleClass","escapeHandler","_closeHistoryDialog","contentHeight","contentWidth","buttons","text","growing","growingScrollToLoad","headerToolbar","style","_generateAppHistoryListFilter","selectedKey","ALL","change","_onDateFilterChange","key","TODAY","WEEK","TWO_WEEK","THREE_WEEK","_generateAppHistoryListItems","appHistoryItems","appHistoryList","destroyItems","appHistoryItem","addItem","_getGroupHeader","name","historyDialog","appHistory","_getAppHistory","open","close","getParameter","filteredAppHistory","_getFilteredAppHistory","sTitle","format","groupedAppHistory","thresholdTimeStamp","recentApp","appUsage","usage","usageDate","Object","values","sort","a","b","filter","currentWeekStartDate","currentWeekEndDate","secondWeekStartDate","thirdWeekStartDate","generateIllustratedMessage","_generateIllustratedMessage","illustratedMessage","BaseAppPersPanel.prototype.generateIllustratedMessage.call","setDescription"],"sources":["RecentAppPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport Button from \"sap/m/Button\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport Dialog from \"sap/m/Dialog\";\nimport GroupHeaderListItem from \"sap/m/GroupHeaderListItem\";\nimport { URLHelper } from \"sap/m/library\";\nimport List from \"sap/m/List\";\nimport OverflowToolbar from \"sap/m/OverflowToolbar\";\nimport Select, { Select$ChangeEvent } from \"sap/m/Select\";\nimport StandardListItem from \"sap/m/StandardListItem\";\nimport ToolbarSpacer from \"sap/m/ToolbarSpacer\";\nimport VBox from \"sap/m/VBox\";\nimport Event from \"sap/ui/base/Event\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport DateFormat from \"sap/ui/core/format/DateFormat\";\nimport Item from \"sap/ui/core/Item\";\nimport Container from \"sap/ushell/Container\";\nimport EventHub from \"sap/ushell/EventHub\";\nimport UserRecents from \"sap/ushell/services/UserRecents\";\nimport App from \"./App\";\nimport BaseAppPersPanel from \"./BaseAppPersPanel\";\nimport type { $BasePanelSettings } from \"./BasePanel\";\nimport Group from \"./Group\";\nimport { IActivity } from \"./interface/AppsInterface\";\nimport MenuItem from \"./MenuItem\";\nimport { addFESRId } from \"./utils/FESRUtil\";\n\ninterface IAppHistoryItem {\n\tname: string;\n}\n\ninterface IAppHistory {\n\tdateStamp: number;\n\tapps: IAppHistoryItem[];\n}\n\nenum DateFilterOption {\n\tALL = \"ALL\",\n\tTODAY = \"TODAY\",\n\tWEEK = \"WEEK\",\n\tTWO_WEEK = \"TWO_WEEK\",\n\tTHREE_WEEK = \"THREE_WEEK\"\n}\n\nconst GroupDateFormatter = DateFormat.getDateInstance({ pattern: \"MMMM d, yyyy\" });\n\nconst Constants = {\n\tOLDER_DATE_TIMESTAMP: Number.MIN_SAFE_INTEGER\n};\n\nconst formatConstantTimeInDate = (date: Date): number => {\n\treturn date.setHours(12, 0, 0, 0);\n};\n\n/**\n * Calculates the start and end dates of a week based on the given week offset.\n * @param weekOffset - The offset from the current week.\n * @returns An object containing the start and end dates of the week.\n */\nconst getWeekRangeValues = (weekOffset: number) => {\n\tconst currentDate = new Date();\n\n\t// Calculate the start of the current week (with sunday as the first day of the week)\n\tconst startDate = new Date(currentDate);\n\tconst startDateTimeStamp = startDate.setDate(currentDate.getDate() - currentDate.getDay() - 7 * weekOffset);\n\n\t// Calculate the end of the week\n\tconst endDate = new Date(startDate);\n\tconst endDateTimeStamp = endDate.setDate(startDate.getDate() + 6);\n\n\treturn {\n\t\tstartDate: startDateTimeStamp,\n\t\tendDate: endDateTimeStamp\n\t};\n};\n\n/**\n * Calculates the timestamp of a date, that is a specified number of days before a given current date.\n *\n * @param {Date} currentTimeStamp - The current date to calculate days before.\n * @param {number} days - The number of days before the current date.\n * @returns {number} The timestamp of the date `days` before `currentDate`.\n */\nconst getDaysBefore = (currentTimeStamp: number, days: number): number => {\n\tconst currentDate = new Date(currentTimeStamp);\n\tconst newDateStamp = currentDate.setDate(currentDate.getDate() - days);\n\treturn formatConstantTimeInDate(new Date(newDateStamp));\n};\n\n/**\n * Filters an app by date.\n * @private\n * @param {number} appTimeStamp - The timestamp of the app.\n * @param {number} startTimeStamp - The start timestamp for filtering.\n * @param {number} endTimeStamp - The end timestamp for filtering.\n * @returns A boolean indicating whether the app falls within the specified date range.\n */\nconst isDateWithinRange = (appTimeStamp: number, startTimeStamp: number, endTimeStamp: number) => {\n\treturn appTimeStamp >= startTimeStamp && appTimeStamp <= endTimeStamp;\n};\n\n/**\n *\n * Provides class for managing Recently Used apps.\n *\n * @extends sap.cux.home.BaseAppPersPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121.0\n *\n * @internal\n * @experimental Since 1.121\n * @public\n *\n * @alias sap.cux.home.RecentAppPanel\n */\nexport default class RecentAppPanel extends BaseAppPersPanel {\n\tprivate oEventBus!: EventBus;\n\tprivate _recentDayTimeStamp!: number;\n\tprivate _recentApps: IActivity[] = [];\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tdefaultAggregation: \"apps\",\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * Apps aggregation for Recent apps\n\t\t\t */\n\t\t\tapps: { type: \"sap.cux.home.App\", singularName: \"app\", multiple: true, visibility: \"hidden\" }\n\t\t}\n\t};\n\n\t/**\n\t * Constructor for a new Recently Used apps Panel.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $BasePanelSettings) {\n\t\tsuper(id, settings);\n\t\tthis.setSupported(false);\n\t}\n\n\tpublic init() {\n\t\tsuper.init();\n\t\tthis.setProperty(\"key\", \"recentApps\");\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"recentlyUsedTab\"));\n\t\tthis.setProperty(\"tooltip\", this._i18nBundle.getText(\"recentAppsInfo\"));\n\t\tthis._attachUserActivityTracking();\n\t\tEventHub.on(\"userRecentsCleared\").do(() => {\n\t\t\tvoid this.refresh();\n\t\t});\n\n\t\t//Setup Menu Items\n\t\tconst showHistoryMenuItem = new MenuItem(`${this.getId()}-show-history-btn`, {\n\t\t\ttitle: this._i18nBundle.getText(\"showHistoryBtn\"),\n\t\t\ticon: \"sap-icon://history\",\n\t\t\tpress: this._openHistoryDialog.bind(this)\n\t\t});\n\t\taddFESRId(showHistoryMenuItem, \"showHistory\");\n\t\tthis.insertAggregation(\"menuItems\", showHistoryMenuItem, 0);\n\n\t\tthis.oEventBus = EventBus.getInstance();\n\t\tthis.oEventBus.subscribe(\n\t\t\t\"appsChannel\",\n\t\t\t\"favAppColorChanged\",\n\t\t\t(channelId?: string, eventId?: string, data?) => {\n\t\t\t\tconst { item, color } = data as { item: App | Group; color: string };\n\t\t\t\t//update color of the app in recent apps\n\t\t\t\tthis._applyUngroupedTileColor(item, color);\n\t\t\t},\n\t\t\tthis\n\t\t);\n\t}\n\n\t/**\n\t * Fetch recent apps and set apps aggregation\n\t * @private\n\t */\n\tpublic async loadApps() {\n\t\tlet recentApps = await this._getRecentApps();\n\t\tthis.destroyAggregation(\"apps\", true);\n\t\trecentApps = recentApps.map((app, index) => {\n\t\t\treturn {\n\t\t\t\t...app,\n\t\t\t\tmenuItems: this._getAppActions(app.addedInFavorites, index)\n\t\t\t};\n\t\t});\n\t\t//convert apps objects array to apps instances\n\t\tthis.setApps(this.generateApps(recentApps));\n\t}\n\n\t/**\n\t * Returns list of recent apps\n\t * @private\n\t * @returns {Promise<IActivity[]>} - Array of recent apps.\n\t */\n\tprivate async _getRecentApps(): Promise<IActivity[]> {\n\t\ttry {\n\t\t\tconst UserRecentsService = await Container.getServiceAsync<UserRecents>(\"UserRecents\");\n\t\t\tconst [recentActivities, recentActivitiesUsageData] = await Promise.all([\n\t\t\t\tUserRecentsService?.getRecentActivity().then((result) => result || []),\n\t\t\t\tUserRecentsService?.oRecentActivity._getRecentActivitiesFromLoadedData().then((result) => result || {})\n\t\t\t]);\n\t\t\t//convert activity to apps\n\t\t\tthis._recentApps = await this.convertActivitiesToVisualizations(recentActivities);\n\t\t\tlet recentDate = new Date(recentActivitiesUsageData?.recentDay);\n\t\t\t// add last used and usage info\n\t\t\tthis._recentDayTimeStamp = formatConstantTimeInDate(recentDate);\n\n\t\t\tconst recentUsage = recentActivitiesUsageData?.recentUsageArray || [];\n\t\t\tconst recentUsageMap = new Map<string, number[]>();\n\t\t\trecentUsage.forEach((app) => {\n\t\t\t\tif (app.oItem?.appId) {\n\t\t\t\t\trecentUsageMap.set(app.oItem.appId, app.aUsageArray);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis._recentApps.forEach((app) => {\n\t\t\t\t//isolate only date information by having common time information\n\t\t\t\tapp.dateStamp = formatConstantTimeInDate(new Date(app.timestamp));\n\t\t\t\tif (recentUsageMap.size) {\n\t\t\t\t\tapp.usageArray = recentUsageMap.get(app.orgAppId);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn this._recentApps || [];\n\t\t} catch (error) {\n\t\t\tLog.error(error as string);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Returns list of actions available for selected app\n\t * @private\n\t * @param {boolean} isAppAddedInFavorite - true if app is already present in favorite, false otherwise.\n\t * @returns {sap.cux.home.MenuItem[]} - Array of list items.\n\t */\n\tprivate _getAppActions(isAppAddedInFavorite: boolean = false, index?: number): MenuItem[] {\n\t\tconst resumeLastActivityItem = new MenuItem(`${this.getKey()}--${index}--resumeLastActivityItem`, {\n\t\t\ttitle: this._i18nBundle.getText(\"resumeLastActivity\"),\n\t\t\ticon: \"sap-icon://past\",\n\t\t\tpress: this._resumeAppActivity.bind(this)\n\t\t});\n\t\taddFESRId(resumeLastActivityItem, \"resumeActivity\");\n\t\tconst appActions = [resumeLastActivityItem];\n\t\tif (!isAppAddedInFavorite) {\n\t\t\tconst addToFavoritesItem = new MenuItem(`${this.getKey()}--${index}--addToFavoritesRecentItem`, {\n\t\t\t\ttitle: this._i18nBundle.getText(\"addToFavorites\"),\n\t\t\t\ticon: \"sap-icon://add-favorite\",\n\t\t\t\tpress: (event) => {\n\t\t\t\t\tvoid this._addAppToFavorites(event);\n\t\t\t\t}\n\t\t\t});\n\t\t\taddFESRId(addToFavoritesItem, \"addFavFromRecent\");\n\t\t\tappActions.push(addToFavoritesItem);\n\t\t}\n\t\treturn appActions;\n\t}\n\n\t/**\n\t * Redirects to the selected app url\n\t * @private\n\t * @param {sap.ui.base.Event} event - The event object.\n\t */\n\tprivate _resumeAppActivity(event: Event) {\n\t\tconst menuItem = event.getSource<MenuItem>();\n\t\tconst app = menuItem.getParent() as App;\n\t\tconst url = app.getUrl?.();\n\t\tURLHelper.redirect(url, false);\n\t}\n\n\t/**\n\t * Generates and returns a dialog for showing the history of recent applications.\n\t * @private\n\t * @returns The generated dialog for showing the history of recent applications.\n\t */\n\tprivate _generateHistoryDialog() {\n\t\tconst id = `${this.getId()}-history-dialog`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew Dialog(id, {\n\t\t\t\t\ttitle: this._i18nBundle.getText(\"showHistoryTitle\"),\n\t\t\t\t\tcontent: new VBox({\n\t\t\t\t\t\tid: `${id}-container`,\n\t\t\t\t\t\theight: \"100%\",\n\t\t\t\t\t\titems: [this._generateAppHistoryList()]\n\t\t\t\t\t}).addStyleClass(\"sapUiTinyMargin\"),\n\t\t\t\t\tescapeHandler: this._closeHistoryDialog.bind(this),\n\t\t\t\t\tcontentHeight: \"29rem\",\n\t\t\t\t\tcontentWidth: \"25rem\",\n\t\t\t\t\tbuttons: [\n\t\t\t\t\t\tnew Button({\n\t\t\t\t\t\t\tid: `${id}-cancel-btn`,\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"cancelBtn\"),\n\t\t\t\t\t\t\tpress: this._closeHistoryDialog.bind(this)\n\t\t\t\t\t\t})\n\t\t\t\t\t]\n\t\t\t\t}).addStyleClass(\"sapContrastPlus\")\n\t\t\t);\n\t\t}\n\t\treturn this._controlMap.get(id) as Dialog;\n\t}\n\n\t/**\n\t * Generates the app history list.\n\t * @private\n\t * @returns The generated app history list.\n\t */\n\tprivate _generateAppHistoryList() {\n\t\tconst id = `${this.getId()}-history-dialog-list`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew List({\n\t\t\t\t\tid,\n\t\t\t\t\tgrowing: true,\n\t\t\t\t\tgrowingScrollToLoad: true,\n\t\t\t\t\theaderToolbar: new OverflowToolbar({\n\t\t\t\t\t\tid: `${id}-header-toolbar`,\n\t\t\t\t\t\tstyle: \"Clear\",\n\t\t\t\t\t\theight: \"1.75rem\",\n\t\t\t\t\t\tcontent: [\n\t\t\t\t\t\t\tnew ToolbarSpacer({\n\t\t\t\t\t\t\t\tid: `${id}-header-toolbar-spacer`\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tthis._generateAppHistoryListFilter()\n\t\t\t\t\t\t]\n\t\t\t\t\t})\n\t\t\t\t}).addStyleClass(\"sapMListShowSeparatorsNone recentAppList\")\n\t\t\t);\n\t\t}\n\t\treturn this._controlMap.get(id) as List;\n\t}\n\n\t/**\n\t * Generates the app history list filter.\n\t * @private\n\t * @returns The Select control for the app history list filter.\n\t */\n\tprivate _generateAppHistoryListFilter() {\n\t\tconst id = `${this.getId()}-history-dialog-list-filter`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew Select({\n\t\t\t\t\tid,\n\t\t\t\t\tselectedKey: DateFilterOption.ALL,\n\t\t\t\t\tchange: (e) => this._onDateFilterChange(e),\n\t\t\t\t\titems: [\n\t\t\t\t\t\tnew Item({\n\t\t\t\t\t\t\tid: `${id}-month`,\n\t\t\t\t\t\t\tkey: DateFilterOption.ALL,\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"dateThirty\")\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tnew Item({\n\t\t\t\t\t\t\tid: `${id}-today`,\n\t\t\t\t\t\t\tkey: DateFilterOption.TODAY,\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"dateToday\")\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tnew Item({\n\t\t\t\t\t\t\tid: `${id}-week`,\n\t\t\t\t\t\t\tkey: DateFilterOption.WEEK,\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"dateWeek\")\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tnew Item({\n\t\t\t\t\t\t\tid: `${id}-twoWeek`,\n\t\t\t\t\t\t\tkey: DateFilterOption.TWO_WEEK,\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"dateTwoWeek\")\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tnew Item({\n\t\t\t\t\t\t\tid: `${id}-threeWeek`,\n\t\t\t\t\t\t\tkey: DateFilterOption.THREE_WEEK,\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"dateThreeWeek\")\n\t\t\t\t\t\t})\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\treturn this._controlMap.get(id) as Select;\n\t}\n\n\t/**\n\t * Generates and populates items in the app history list based on the provided list of items.\n\t * Clears existing items in the list before adding new items.\n\t *\n\t * @param {IAppHistory[]} appHistoryItems - Array of items to populate in the app history list.\n\t * @returns {void}\n\t * @private\n\t */\n\tprivate _generateAppHistoryListItems(appHistoryItems: IAppHistory[]): void {\n\t\tconst appHistoryList = this._generateAppHistoryList();\n\t\tappHistoryList?.destroyItems();\n\t\tappHistoryItems.forEach((appHistoryItem) => {\n\t\t\tappHistoryList.addItem(this._getGroupHeader(appHistoryItem.dateStamp));\n\t\t\tappHistoryList.addItem(\n\t\t\t\tnew CustomListItem({\n\t\t\t\t\tid: `date-${appHistoryItem.dateStamp}-lisItem`,\n\t\t\t\t\ttype: \"Inactive\",\n\t\t\t\t\tcontent: [\n\t\t\t\t\t\tnew List({\n\t\t\t\t\t\t\tid: `date-${appHistoryItem.dateStamp}-appList`,\n\t\t\t\t\t\t\titems: (appHistoryItem.apps || []).map((app, index) =>\n\t\t\t\t\t\t\t\tnew StandardListItem({\n\t\t\t\t\t\t\t\t\tid: `listItem--${appHistoryItem.dateStamp}--${index}`,\n\t\t\t\t\t\t\t\t\ttitle: app.name,\n\t\t\t\t\t\t\t\t\ttype: \"Inactive\"\n\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginBeginEnd recentAppList sapUiSmallMarginTop\")\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}).addStyleClass(\"sapMListShowSeparatorsNone sapUiTinyMarginBottom\")\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Opens the history dialog.\n\t * This method generates the show history dialog, retrieves the app history list,\n\t * generates the app history list items, and opens the dialog.\n\t * @private\n\t */\n\tprivate _openHistoryDialog() {\n\t\tconst historyDialog = this._generateHistoryDialog();\n\t\tconst appHistory = this._getAppHistory();\n\t\tthis._generateAppHistoryListItems(appHistory);\n\t\thistoryDialog.open();\n\t}\n\n\t/**\n\t * Closes the history dialog.\n\t * @private\n\t */\n\tprivate _closeHistoryDialog() {\n\t\tconst historyDialog = this._generateHistoryDialog();\n\t\thistoryDialog.close();\n\t}\n\n\t/**\n\t * Handles the change event of the date filter.\n\t * Updates the app history list based on the selected date filter.\n\t * @private\n\t * @param {Select$ChangeEvent} event - The select change event.\n\t */\n\tprivate _onDateFilterChange(event: Select$ChangeEvent) {\n\t\tconst selectedKey = event.getParameter(\"selectedItem\")?.getKey() as DateFilterOption;\n\t\tconst filteredAppHistory: IAppHistory[] = this._getFilteredAppHistory(selectedKey);\n\t\tthis._generateAppHistoryListItems(filteredAppHistory);\n\t}\n\n\t/**\n\t * Generates a group header for the given date timestamp.\n\t *\n\t * @param {number} dateStamp - The timestamp representing the date.\n\t * @returns {GroupHeaderListItem} The generated group header list item.\n\t * @private\n\t */\n\tprivate _getGroupHeader(dateStamp: number): GroupHeaderListItem {\n\t\tlet sTitle = \"\";\n\t\tswitch (dateStamp) {\n\t\t\tcase Constants.OLDER_DATE_TIMESTAMP:\n\t\t\t\tsTitle = this._i18nBundle.getText(\"dateLater\") as string;\n\t\t\t\tbreak;\n\t\t\tcase formatConstantTimeInDate(new Date()):\n\t\t\t\tsTitle = this._i18nBundle.getText(\"dateToday\") as string;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsTitle = GroupDateFormatter.format(new Date(dateStamp));\n\t\t\t\tbreak;\n\t\t}\n\t\treturn new GroupHeaderListItem({\n\t\t\ttitle: sTitle\n\t\t}).addStyleClass(\"sapUiTinyMarginBeginEnd recentAppListHeader\");\n\t}\n\n\t/**\n\t * Retrieves the application usage history based on recent app data.\n\t *\n\t * @returns {IAppHistory[]} Array of objects, where each object contains the date timestamp and the apps that are used on that date.\n\t * @private\n\t */\n\tprivate _getAppHistory(): IAppHistory[] {\n\t\tif (this._recentDayTimeStamp && this._recentApps?.length) {\n\t\t\tconst groupedAppHistory: Record<number, IAppHistory> = {};\n\t\t\tconst thresholdTimeStamp = getDaysBefore(this._recentDayTimeStamp, 30); // 30 days threshold\n\t\t\tthis._recentApps.forEach((recentApp) => {\n\t\t\t\tconst appTimeStamp = formatConstantTimeInDate(new Date(recentApp.dateStamp!));\n\t\t\t\tif (appTimeStamp < thresholdTimeStamp) {\n\t\t\t\t\tif (!groupedAppHistory[Constants.OLDER_DATE_TIMESTAMP]) {\n\t\t\t\t\t\tgroupedAppHistory[Constants.OLDER_DATE_TIMESTAMP] = { dateStamp: Constants.OLDER_DATE_TIMESTAMP, apps: [] };\n\t\t\t\t\t}\n\t\t\t\t\tgroupedAppHistory[Constants.OLDER_DATE_TIMESTAMP]?.apps.push({ name: recentApp.title });\n\t\t\t\t} else {\n\t\t\t\t\tconst appUsage = recentApp.usageArray || [];\n\t\t\t\t\tappUsage.forEach((usage, index) => {\n\t\t\t\t\t\tif (usage > 0) {\n\t\t\t\t\t\t\tconst usageDate = getDaysBefore(this._recentDayTimeStamp, appUsage.length - 1 - index);\n\t\t\t\t\t\t\tif (!groupedAppHistory[usageDate]) {\n\t\t\t\t\t\t\t\tgroupedAppHistory[usageDate] = { dateStamp: usageDate, apps: [] };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tgroupedAppHistory[usageDate]?.apps.push({ name: recentApp.title });\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst appHistory = Object.values(groupedAppHistory);\n\t\t\tappHistory.sort((a, b) => b.dateStamp - a.dateStamp);\n\t\t\treturn appHistory;\n\t\t}\n\t\treturn [];\n\t}\n\n\t/**\n\t * Retrieves the filtered app history based on the selected date filter option.\n\t * @private\n\t * @param {DateFilterOption} selectedKey - The selected date filter option.\n\t * @returns {IAppHistory[]} An array of filtered app history.\n\t */\n\tprivate _getFilteredAppHistory(selectedKey: DateFilterOption): IAppHistory[] {\n\t\tconst appHistory = this._getAppHistory();\n\t\tlet filteredAppHistory: IAppHistory[] = [];\n\t\tswitch (selectedKey) {\n\t\t\tcase DateFilterOption.TODAY: {\n\t\t\t\tfilteredAppHistory = appHistory.filter((app) => app.dateStamp === formatConstantTimeInDate(new Date()));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase DateFilterOption.WEEK: {\n\t\t\t\tconst { startDate: currentWeekStartDate, endDate: currentWeekEndDate } = getWeekRangeValues(0);\n\t\t\t\tfilteredAppHistory = appHistory.filter((app) => isDateWithinRange(app.dateStamp, currentWeekStartDate, currentWeekEndDate));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase DateFilterOption.TWO_WEEK: {\n\t\t\t\tconst { startDate: secondWeekStartDate } = getWeekRangeValues(1);\n\t\t\t\tconst { endDate: currentWeekEndDate } = getWeekRangeValues(0);\n\t\t\t\tfilteredAppHistory = appHistory.filter((app) => isDateWithinRange(app.dateStamp, secondWeekStartDate, currentWeekEndDate));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase DateFilterOption.THREE_WEEK: {\n\t\t\t\tconst { startDate: thirdWeekStartDate } = getWeekRangeValues(2);\n\t\t\t\tconst { endDate: currentWeekEndDate } = getWeekRangeValues(0);\n\t\t\t\tfilteredAppHistory = appHistory.filter((app) => isDateWithinRange(app.dateStamp, thirdWeekStartDate, currentWeekEndDate));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tfilteredAppHistory = [...appHistory];\n\t\t\t\tbreak;\n\t\t}\n\t\treturn filteredAppHistory;\n\t}\n\n\t/**\n\t * Generates illustrated message for recent apps panel.\n\t * @private\n\t * @override\n\t * @returns {sap.m.IllustratedMessage} Illustrated error message.\n\t */\n\tprotected generateIllustratedMessage() {\n\t\tconst illustratedMessage = super.generateIllustratedMessage();\n\t\t//override the default description\n\t\tillustratedMessage.setDescription(this._i18nBundle.getText(\"noRecentAppsDescription\"));\n\t\treturn illustratedMessage;\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":246,"column":0},"map":{"version":3,"names":["sap","ui","define","Log","GridContainer","GridContainerSettings","Button","Dialog","IllustratedMessageSize","IllustratedMessageType","sap_m_library","Link","MessageStrip","MessageToast","ScrollContainer","Text","Title","VBox","Element","EventBus","__BaseAppPersPanel","__MenuItem","___utils_Constants","___utils_FESRUtil","__HttpHelper","_interopRequireDefault","obj","__esModule","default","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","_forTo","array","body","check","i","reject","_cycle","length","BackgroundDesign","_forOf","target","step","next","done","return","_fixup","TypeError","values","push","BaseAppPersPanel","_catch","recover","MenuItem","_finallyRethrows","finalizer","REPO_BASE_URL","SETTINGS_PANELS_KEYS","addFESRId","HttpHelper","CONSTANTS","USER_PREFERENCE_SRVC_URL","KEY","RecommendedAppPanel","extend","metadata","library","defaultAggregation","aggregations","apps","type","singularName","multiple","visibility","constructor","_constructor","id","settings","BaseAppPersPanel.prototype.constructor.call","_selectedApps","setSupported","init","_init","BaseAppPersPanel.prototype.init.call","setProperty","_i18nBundle","getText","eventBus","getInstance","subscribe","channelId","eventId","data","showRecommendation","fireSupported","isSupported","_createAddToFavouritesMenuItem","addToFavouritesMenuItem","getId","title","icon","press","_openAddRecommendedDialog","visible","insertAggregation","dialogId","dialog","_generateAddRecommendedDialog","open","_controlMap","get","_createAddRecommendedDialogControls","appsWrapper","_generateAppsScrollContainer","getContent","destroyAggregation","getApps","tiles","map","app","_createAppTile","_setAggregation","_updateSelectedAppCount","set","text","level","addButton","Promise","resolve","_addSelectedApps","_closeAddRecommendedDialog","enabled","cancelButton","mainTitleText","content","items","justifyContent","alignItems","addStyleClass","contentHeight","contentWidth","buttons","escapeHandler","appCopy","clone","appTile","getParent","_getAppTile","_onPress","_highlightApp","layout","columnSize","gap","vertical","height","_updateAddButtonState","getElementById","setEnabled","toggleAppTileHighlight","close","_resetAddRecommendedDialog","_toggleAppTileHighlight","isAppSelected","appsScrollContainer","getItems","forEach","oTile","hasStyleClass","removeStyleClass","_this2","setBusy","_temp3","_refreshAllPanels","message","show","_temp2","vizId","getVizId","_temp","appManagerInstance","addVisualization","error","_wasThrown","_result","event","selectedApp","getSource","bIsSelected","splice","findIndex","oApp","getUrl","toggleStyleClass","selectedAppsTitle","selectedAppsCount","setText","_generateWrapper","wrapperId","_generateMessageStrip","BaseAppPersPanel.prototype._generateWrapper.call","backgroundDesign","Transparent","loadApps","_loadApps","_this3","getRecommendedVisualizations","recommendedVisualizations","visualization","index","menuItems","_getActions","recommendedApps","generateApps","setApps","setVisible","messageStripId","showIcon","showCloseButton","link","_getLayout","openSettingsDialog","ADVANCED","addToFavoritesItem","getKey","_addAppToFavorites","notRelevantItem","_rejectRecommendation","actions","_this4","_temp5","source","getTitle","find","viz","url","fioriId","_temp4","rejectPayload","AppId","Decision","Post","refresh","_wasThrown2","_result2","_isRecommendationEnabled","_this5","getPersonalization","personalisation","_enableRecommendationTab","_this6","generateIllustratedMessage","_generateIllustratedMessage","illustratedMessage","BaseAppPersPanel.prototype.generateIllustratedMessage.call","setIllustrationSize","Small","setIllustrationType","NoData","setTitle","setDescription","addAdditionalContent","tooltip"],"sources":["RecommendedAppPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport GridContainer from \"sap/f/GridContainer\";\nimport GridContainerSettings from \"sap/f/GridContainerSettings\";\nimport Button from \"sap/m/Button\";\nimport Dialog from \"sap/m/Dialog\";\nimport GenericTile from \"sap/m/GenericTile\";\nimport IllustratedMessageSize from \"sap/m/IllustratedMessageSize\";\nimport IllustratedMessageType from \"sap/m/IllustratedMessageType\";\nimport { BackgroundDesign } from \"sap/m/library\";\nimport Link from \"sap/m/Link\";\nimport MessageStrip from \"sap/m/MessageStrip\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport ScrollContainer from \"sap/m/ScrollContainer\";\nimport Text from \"sap/m/Text\";\nimport Title from \"sap/m/Title\";\nimport VBox from \"sap/m/VBox\";\nimport Event from \"sap/ui/base/Event\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport Element from \"sap/ui/core/Element\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport App from \"./App\";\nimport AppsContainer from \"./AppsContainer\";\nimport BaseAppPersPanel from \"./BaseAppPersPanel\";\nimport BaseContainer from \"./BaseContainer\";\nimport type { $BasePanelSettings } from \"./BasePanel\";\nimport MenuItem, { MenuItem$PressEvent } from \"./MenuItem\";\nimport { REPO_BASE_URL, SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\nimport { addFESRId } from \"./utils/FESRUtil\";\nimport HttpHelper from \"./utils/HttpHelper\";\n\nconst CONSTANTS = {\n\tUSER_PREFERENCE_SRVC_URL: `${REPO_BASE_URL}UserPreference`,\n\tKEY: \"recommendedApps\"\n};\n\n/**\n *\n * Provides the RecommendedAppPanel Class.\n *\n * @extends sap.cux.home.BaseAppPersPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.128.0\n *\n * @internal\n * @experimental Since 1.128.0\n * @public\n *\n * @alias sap.cux.home.RecommendedAppPanel\n */\nexport default class RecommendedAppPanel extends BaseAppPersPanel {\n\tprivate _selectedApps: App[] = [];\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tdefaultAggregation: \"apps\",\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * Apps aggregation for Recommended apps\n\t\t\t */\n\t\t\tapps: { type: \"sap.cux.home.App\", singularName: \"app\", multiple: true, visibility: \"hidden\" }\n\t\t}\n\t};\n\n\t/**\n\t * Constructor for a new Recommended Apps Panel.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $BasePanelSettings) {\n\t\tsuper(id, settings);\n\t\tthis.setSupported(false);\n\t}\n\n\tpublic init() {\n\t\tsuper.init();\n\t\tthis.setProperty(\"key\", CONSTANTS.KEY);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"recommendedAppsTab\"));\n\t\t//subscribe to recommendation setting change event\n\t\tconst eventBus = EventBus.getInstance();\n\t\teventBus.subscribe(\"importChannel\", \"recommendationSettingChanged\", (channelId?: string, eventId?: string, data?: object) => {\n\t\t\tconst showRecommendation = (data as { showRecommendation: boolean }).showRecommendation;\n\t\t\tthis.fireSupported({ isSupported: showRecommendation });\n\t\t});\n\t\tthis._createAddToFavouritesMenuItem();\n\t}\n\n\t/**\n\t * Creates and inserts the \"Add to Favourites\" menu item.\n\t * @private\n\t */\n\tprivate _createAddToFavouritesMenuItem(): void {\n\t\tconst addToFavouritesMenuItem = new MenuItem(`${this.getId()}-addtofavouritesmenuitem`, {\n\t\t\ttitle: this._i18nBundle.getText(\"addToFavoritesRecommended\"),\n\t\t\ticon: \"sap-icon://add-favorite\",\n\t\t\tpress: this._openAddRecommendedDialog.bind(this),\n\t\t\tvisible: false\n\t\t});\n\t\taddFESRId(addToFavouritesMenuItem, \"addToFavouritesMenuItem\");\n\t\tthis.insertAggregation(\"menuItems\", addToFavouritesMenuItem, 0);\n\t}\n\n\t/**\n\t * Opens the dialog for adding recommended apps.\n\t * @private\n\t */\n\tprivate _openAddRecommendedDialog(): void {\n\t\tconst dialogId = `${this.getId()}-addRecommendedDialog-appsPage`;\n\t\tconst dialog = this._generateAddRecommendedDialog(dialogId);\n\t\tdialog.open();\n\t}\n\n\t/**\n\t * Creates and returns the dialog for adding recommended apps.\n\t * @private\n\t * @param {string} dialogId - The unique ID for the dialog.\n\t * @returns {sap.m.Dialog} - The generated dialog control.\n\t */\n\tprivate _generateAddRecommendedDialog(dialogId: string): Dialog {\n\t\tif (!this._controlMap.get(dialogId)) {\n\t\t\tthis._createAddRecommendedDialogControls(dialogId);\n\t\t}\n\t\tconst appsWrapper = this._generateAppsScrollContainer()?.getContent()?.[0] as GridContainer;\n\t\tappsWrapper.destroyAggregation(\"items\");\n\t\tthis._selectedApps = [...this.getApps()];\n\t\tconst tiles = this._selectedApps.map((app) => this._createAppTile(app));\n\t\tthis._setAggregation(appsWrapper, tiles);\n\t\tthis._updateSelectedAppCount();\n\t\tconst dialog = this._controlMap.get(dialogId) as Dialog;\n\t\treturn dialog;\n\t}\n\n\t/**\n\t * Creates the controls for the dialog, including the title, subtitle, and buttons.\n\t * @private\n\t * @param {string} dialogId - The unique ID for the dialog.\n\t */\n\tprivate _createAddRecommendedDialogControls(dialogId: string): void {\n\t\tthis._selectedApps = [...this.getApps()];\n\t\tthis._controlMap.set(\n\t\t\t`${dialogId}-mainTitle`,\n\t\t\tnew Title({\n\t\t\t\tid: `${dialogId}-mainTitle`,\n\t\t\t\ttext: this._i18nBundle.getText(\"addToFavoritesRecommended\")\n\t\t\t})\n\t\t);\n\t\tthis._controlMap.set(\n\t\t\t`${dialogId}-headerContainer-count`,\n\t\t\tnew Text({\n\t\t\t\tid: `${dialogId}-headerContainer-count`\n\t\t\t})\n\t\t);\n\t\tthis._controlMap.set(\n\t\t\t`${dialogId}-selectedAppsTitle`,\n\t\t\tnew Title({\n\t\t\t\tid: `${dialogId}-selectedAppsTitle`,\n\t\t\t\ttext: `${this._i18nBundle.getText(\"recommendedAppsTab\")} (0 ${this._i18nBundle.getText(\"selected\")})`,\n\t\t\t\tlevel: \"H3\"\n\t\t\t})\n\t\t);\n\t\tthis._controlMap.set(\n\t\t\t`${dialogId}-subtitleText`,\n\t\t\tnew Text({\n\t\t\t\tid: `${dialogId}-subtitleText`,\n\t\t\t\ttext: this._i18nBundle.getText(\"selectAtLeastOneApp\")\n\t\t\t})\n\t\t);\n\t\tconst addButton = new Button({\n\t\t\tid: `${dialogId}-addBtn`,\n\t\t\ttext: this._i18nBundle.getText(\"addButton\"),\n\t\t\ttype: \"Emphasized\",\n\t\t\tpress: async () => {\n\t\t\t\tawait this._addSelectedApps();\n\t\t\t\tthis._closeAddRecommendedDialog(dialogId);\n\t\t\t},\n\t\t\tenabled: this._selectedApps.length > 0\n\t\t});\n\t\tconst cancelButton = new Button({\n\t\t\tid: `${dialogId}-cancelBtn`,\n\t\t\ttext: this._i18nBundle.getText(\"cancelBtn\"),\n\t\t\tpress: () => this._closeAddRecommendedDialog(dialogId)\n\t\t});\n\t\tconst mainTitleText = (this._controlMap.get(`${dialogId}-mainTitle`) as Title).getText();\n\t\tthis._controlMap.set(\n\t\t\tdialogId,\n\t\t\tnew Dialog(dialogId, {\n\t\t\t\ttitle: mainTitleText,\n\t\t\t\tcontent: [\n\t\t\t\t\tnew VBox({\n\t\t\t\t\t\tid: `${dialogId}-headerContainer`,\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\tthis._controlMap.get(`${dialogId}-selectedAppsTitle`) as Title,\n\t\t\t\t\t\t\tthis._controlMap.get(`${dialogId}-subtitleText`) as Text\n\t\t\t\t\t\t],\n\t\t\t\t\t\tjustifyContent: \"Start\",\n\t\t\t\t\t\talignItems: \"Start\"\n\t\t\t\t\t}).addStyleClass(\"sapUiSmallMarginTop sapUiSmallMarginBeginEnd sapUiTinyMarginBottom\"),\n\t\t\t\t\tthis._generateAppsScrollContainer()\n\t\t\t\t],\n\t\t\t\tcontentHeight: \"25rem\",\n\t\t\t\tcontentWidth: \"41.75rem\",\n\t\t\t\tbuttons: [addButton, cancelButton],\n\t\t\t\tescapeHandler: () => this._closeAddRecommendedDialog(dialogId)\n\t\t\t}).addStyleClass(\"sapCuxRecommendedAppsDialog sapContrastPlus\")\n\t\t);\n\t}\n\n\t/**\n\t * Creates and returns an app tile for the given app.\n\t * @private\n\t * @param {App} app - The app to create a tile for.\n\t * @returns {sap.m.GenericTile} - The created app tile.\n\t */\n\tprivate _createAppTile(app: App): GenericTile {\n\t\tconst appCopy = app.clone();\n\t\tconst appTile = (this.getParent() as AppsContainer)._getAppTile(appCopy);\n\t\tappTile.addStyleClass(\"sapCuxHighlightApp\");\n\t\tappCopy._onPress = (e) => this._highlightApp(e, appCopy);\n\t\treturn appTile;\n\t}\n\n\t/**\n\t * Generates and returns the scroll container for the dialog's apps list.\n\t * @private\n\t * @returns {sap.m.ScrollContainer} - The scroll container for the apps.\n\t */\n\tprivate _generateAppsScrollContainer(): ScrollContainer {\n\t\tconst id = `${this.getId()}-addRecommendedDialog-appsPage-scrollContainer`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${id}-apps`,\n\t\t\t\tnew GridContainer({\n\t\t\t\t\tid: `${id}-apps`,\n\t\t\t\t\tlayout: new GridContainerSettings(`${id}-apps-containerSettings`, {\n\t\t\t\t\t\tcolumnSize: \"19rem\",\n\t\t\t\t\t\tgap: \"0.5rem\"\n\t\t\t\t\t})\n\t\t\t\t}).addStyleClass(\"sapCuxAppsGridContainerPadding\")\n\t\t\t);\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew ScrollContainer(id, {\n\t\t\t\t\tid,\n\t\t\t\t\tvertical: true,\n\t\t\t\t\tvisible: true,\n\t\t\t\t\theight: \"20rem\",\n\t\t\t\t\tcontent: [this._controlMap.get(`${id}-apps`) as GridContainer]\n\t\t\t\t}).addStyleClass(\"sapUiSmallMarginBeginEnd sapUiTinyMarginTop\")\n\t\t\t);\n\t\t}\n\t\treturn this._controlMap.get(id) as ScrollContainer;\n\t}\n\n\t/**\n\t * Updates the state of the \"Add\" button in the dialog based on the selected apps.\n\t * @private\n\t */\n\tprivate _updateAddButtonState() {\n\t\tconst dialogId = `${this.getId()}-addRecommendedDialog-appsPage`;\n\t\tconst addButton = Element.getElementById(`${dialogId}-addBtn`) as Button;\n\t\tif (addButton) {\n\t\t\taddButton.setEnabled(this._selectedApps.length > 0);\n\t\t}\n\t}\n\n\t/**\n\t * Closes the dialog and resets the selected apps state.\n\t * @private\n\t * @param {string} dialogId - The unique ID of the dialog to close.\n\t */\n\tprivate _closeAddRecommendedDialog(dialogId: string): void {\n\t\tthis.toggleAppTileHighlight(true);\n\t\tconst dialog = this._controlMap.get(dialogId) as Dialog;\n\t\tif (dialog) {\n\t\t\tdialog.close();\n\t\t}\n\t\tthis._resetAddRecommendedDialog();\n\t}\n\n\t/**\n\t * Toggles the highlight style for app tiles based on the selection state.\n\t * @private\n\t * @param {boolean} isAppSelected - Flag indicating whether to add or remove the style class.\n\t */\n\tprivate toggleAppTileHighlight(isAppSelected: boolean): void {\n\t\tconst appsScrollContainer = this._generateAppsScrollContainer();\n\t\tconst appsWrapper = appsScrollContainer.getContent()[0] as GridContainer;\n\t\tif (appsWrapper) {\n\t\t\tappsWrapper.getItems().forEach((oTile) => {\n\t\t\t\tif (oTile) {\n\t\t\t\t\tif (isAppSelected) {\n\t\t\t\t\t\toTile.addStyleClass(\"sapCuxHighlightApp\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (oTile.hasStyleClass(\"sapCuxHighlightApp\")) {\n\t\t\t\t\t\t\toTile.removeStyleClass(\"sapCuxHighlightApp\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Resets the selected apps and updates the UI.\n\t * @private\n\t */\n\tprivate _resetAddRecommendedDialog(): void {\n\t\tthis._selectedApps = [...this.getApps()];\n\t\tthis._updateSelectedAppCount();\n\t\tthis._updateAddButtonState();\n\t}\n\n\t/**\n\t * Adds the selected apps to the user's favorites.\n\t * @private\n\t * @returns {Promise<void>} - A promise that resolves when the apps have been added.\n\t */\n\tprivate async _addSelectedApps(): Promise<void> {\n\t\tthis.setBusy(true);\n\t\ttry {\n\t\t\tfor (const app of this._selectedApps) {\n\t\t\t\tconst vizId = app.getVizId?.();\n\t\t\t\tif (vizId) {\n\t\t\t\t\tawait this.appManagerInstance.addVisualization(vizId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait (this.getParent?.() as AppsContainer)._refreshAllPanels();\n\t\t\tconst message = this._i18nBundle.getText(\"moveRecommendedMessage\") as string;\n\t\t\tMessageToast.show(message);\n\t\t} catch (error) {\n\t\t\tLog.error(error as string);\n\t\t} finally {\n\t\t\tthis.setBusy(false);\n\t\t\tthis._selectedApps = [];\n\t\t\tthis._closeAddRecommendedDialog(`${this.getId()}-addRecommendedDialog-appsPage`);\n\t\t}\n\t}\n\n\t/**\n\t * Highlights or un-highlights the selected app based on the user's action.\n\t * @private\n\t * @param {Event} event - The event triggered by the user's action.\n\t * @param {App} selectedApp - The selected app to highlight or un-highlight.\n\t */\n\tprivate _highlightApp(event: Event, selectedApp: App): void {\n\t\tconst oTile = event.getSource<GenericTile>();\n\t\tconst bIsSelected = !oTile.hasStyleClass(\"sapCuxHighlightApp\");\n\t\tthis._selectedApps = this._selectedApps || [];\n\t\tif (bIsSelected) {\n\t\t\tthis._selectedApps.push(selectedApp);\n\t\t} else {\n\t\t\tthis._selectedApps.splice(\n\t\t\t\tthis._selectedApps.findIndex((oApp) => selectedApp.getUrl() === oApp.getUrl()),\n\t\t\t\t1\n\t\t\t);\n\t\t}\n\t\toTile.toggleStyleClass(\"sapCuxHighlightApp\", bIsSelected);\n\t\tthis._updateSelectedAppCount();\n\t\tthis._updateAddButtonState();\n\t}\n\n\t/**\n\t * Updates the count of selected apps displayed in the dialog.\n\t * @private\n\t */\n\tprivate _updateSelectedAppCount(): void {\n\t\tconst dialogId = `${this.getId()}-addRecommendedDialog-appsPage`;\n\t\tconst selectedAppsTitle = this._controlMap.get(`${dialogId}-selectedAppsTitle`) as Title;\n\t\tconst selectedAppsCount = this._selectedApps.length;\n\t\tselectedAppsTitle.setText(\n\t\t\t`${this._i18nBundle.getText(\"recommendedAppsTab\")} (${selectedAppsCount} ${this._i18nBundle.getText(\"selected\")})`\n\t\t);\n\t}\n\n\t/**\n\t * Overrides the wrapper for the apps panel to add message strip.\n\t *\n\t * @private\n\t * @returns {sap.m.VBox} The apps panel wrapper.\n\t */\n\tprotected _generateWrapper() {\n\t\tconst wrapperId = `${this.getId()}-recommendedPanelWrapper`;\n\t\tif (!this._controlMap.get(wrapperId)) {\n\t\t\tthis._controlMap.set(\n\t\t\t\twrapperId,\n\t\t\t\tnew VBox(wrapperId, {\n\t\t\t\t\titems: [this._generateMessageStrip(), super._generateWrapper()],\n\t\t\t\t\tbackgroundDesign: BackgroundDesign.Transparent\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\treturn this._controlMap.get(wrapperId) as VBox;\n\t}\n\n\t/**\n\t * Fetch recommended apps and set apps aggregation\n\t * @private\n\t */\n\tpublic async loadApps() {\n\t\tlet recommendedVisualizations = await this.appManagerInstance.getRecommendedVisualizations(true);\n\t\tthis.destroyAggregation(\"apps\", true);\n\t\trecommendedVisualizations = recommendedVisualizations.map((visualization, index) => {\n\t\t\treturn {\n\t\t\t\t...visualization,\n\t\t\t\tmenuItems: this._getActions(index)\n\t\t\t};\n\t\t});\n\t\t//convert apps objects array to apps instances\n\t\tconst recommendedApps = this.generateApps(recommendedVisualizations);\n\t\tthis.setApps(recommendedApps);\n\t\tconst addToFavouritesMenuItem = Element.getElementById(`${this.getId()}-addtofavouritesmenuitem`) as MenuItem;\n\t\tif (addToFavouritesMenuItem) {\n\t\t\taddToFavouritesMenuItem.setVisible(recommendedApps.length > 0);\n\t\t}\n\t}\n\n\t/**\n\t * Returns message strip for recommended tab\n\t * @private\n\t * @returns {sap.cux.home.MessageStrip} - Message strip control.\n\t */\n\tprivate _generateMessageStrip() {\n\t\tconst messageStripId = `${this.getId()}-messageStrip`;\n\t\tif (!this._controlMap.get(messageStripId)) {\n\t\t\tthis._controlMap.set(\n\t\t\t\tmessageStripId,\n\t\t\t\tnew MessageStrip(messageStripId, {\n\t\t\t\t\ttext: this._i18nBundle.getText(\"recommendationMessageStrip\"),\n\t\t\t\t\tshowIcon: true,\n\t\t\t\t\tshowCloseButton: true,\n\t\t\t\t\tlink: new Link(`${messageStripId}-settings`, {\n\t\t\t\t\t\ttext: this._i18nBundle.getText(\"settings\"),\n\t\t\t\t\t\tpress: () => (this.getParent() as BaseContainer)?._getLayout()?.openSettingsDialog(SETTINGS_PANELS_KEYS.ADVANCED)\n\t\t\t\t\t}).addStyleClass(\"sapUiNoMargin\")\n\t\t\t\t}).addStyleClass(\"sapUiNoMarginBegin sapUiTinyMarginBottom\")\n\t\t\t);\n\t\t}\n\t\treturn this._controlMap.get(messageStripId) as MessageStrip;\n\t}\n\n\t/**\n\t * Returns list of actions available for selected app\n\t * @private\n\t * @returns {sap.cux.home.MenuItem[]} - Array of list items.\n\t */\n\tprivate _getActions(index?: number): MenuItem[] {\n\t\tconst addToFavoritesItem = new MenuItem(`${this.getKey()}--addToFavoritesItem--${index}`, {\n\t\t\ttitle: this._i18nBundle.getText(\"addToFavorites\"),\n\t\t\ticon: \"sap-icon://add-favorite\",\n\t\t\tpress: (event) => {\n\t\t\t\tvoid this._addAppToFavorites(event);\n\t\t\t}\n\t\t});\n\t\taddFESRId(addToFavoritesItem, \"acceptRecommendation\");\n\t\tconst notRelevantItem = new MenuItem(`${this.getKey()}--notRelevantItem--${index}`, {\n\t\t\ttitle: this._i18nBundle.getText(\"notRelevantRecommendation\"),\n\t\t\ticon: \"sap-icon://decline\",\n\t\t\tpress: (event) => {\n\t\t\t\tvoid this._rejectRecommendation(event);\n\t\t\t}\n\t\t});\n\t\taddFESRId(notRelevantItem, \"rejectRecommendation\");\n\t\tconst actions = [addToFavoritesItem, notRelevantItem];\n\t\treturn actions;\n\t}\n\n\t/**\n\t * Rejects the selected app as recommendation\n\t * @private\n\t * @param {sap.ui.base.MenuItem$PressEvent} event - Event object.\n\t */\n\tprivate async _rejectRecommendation(event: MenuItem$PressEvent) {\n\t\tthis.setBusy(true);\n\t\ttry {\n\t\t\tconst source = event.getSource<MenuItem>();\n\t\t\tconst app = source.getParent() as App;\n\t\t\tconst title = app.getTitle();\n\t\t\tconst recommendedVisualizations = await this.appManagerInstance.getRecommendedVisualizations();\n\t\t\tconst visualization = recommendedVisualizations.find((viz) => viz.url === app.getUrl());\n\t\t\tconst fioriId = visualization?.fioriId;\n\t\t\tif (fioriId) {\n\t\t\t\tconst rejectPayload = {\n\t\t\t\t\tAppId: fioriId,\n\t\t\t\t\tDecision: 1\n\t\t\t\t};\n\t\t\t\tawait HttpHelper.Post(CONSTANTS.USER_PREFERENCE_SRVC_URL, rejectPayload);\n\t\t\t\tawait this.refresh();\n\t\t\t\tconst message = this._i18nBundle.getText(\"rejectRecommendationMsg\", [title]) as string;\n\t\t\t\tMessageToast.show(message);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tLog.error(error as string);\n\t\t} finally {\n\t\t\tthis.setBusy(false);\n\t\t}\n\t}\n\n\t/**\n\t * Checks if recommendation is enabled based on recommendation feature toggle and user personalization.\n\t * @private\n\t * @returns {Boolean} - Returns true if recommendation is enabled otherwise false.\n\t */\n\tprivate async _isRecommendationEnabled() {\n\t\tconst personalisation = await this.getPersonalization();\n\t\treturn personalisation?.showRecommendation ?? true;\n\t}\n\n\t/**\n\t * Show recommendation tab if recommendation is enabled\n\t * @private\n\t */\n\tpublic async _enableRecommendationTab() {\n\t\tconst isSupported = await this._isRecommendationEnabled();\n\t\tthis.setSupported(isSupported);\n\t\tthis.fireSupported({ isSupported });\n\t}\n\n\t/**\n\t * Generates illustrated message for recommended apps panel.\n\t * @private\n\t * @override\n\t * @returns {sap.m.IllustratedMessage} Illustrated error message.\n\t */\n\tprotected generateIllustratedMessage() {\n\t\tconst illustratedMessage = super.generateIllustratedMessage();\n\t\t//overrride the default illustrated message, title, description and add additional content\n\t\tillustratedMessage.setIllustrationSize(IllustratedMessageSize.Small);\n\t\tillustratedMessage.setIllustrationType(IllustratedMessageType.NoData);\n\t\tillustratedMessage.setTitle(this._i18nBundle.getText(\"noRecommendationsTitle\"));\n\t\tillustratedMessage.setDescription(this._i18nBundle.getText(\"noRecommendationsDescription\"));\n\t\tillustratedMessage.addAdditionalContent(\n\t\t\tnew Button({\n\t\t\t\ttext: this._i18nBundle.getText(\"settings\"),\n\t\t\t\ttooltip: this._i18nBundle.getText(\"settings\"),\n\t\t\t\tpress: () => (this.getParent() as BaseContainer)?._getLayout()?.openSettingsDialog(SETTINGS_PANELS_KEYS.ADVANCED),\n\t\t\t\ttype: \"Emphasized\"\n\t\t\t})\n\t\t);\n\t\treturn illustratedMessage;\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":251,"column":0},"map":{"version":3,"names":["sap","ui","define","Bar","Button","sap_m_library","List","Page","SplitApp","StandardListItem","Title","Element","Device","__BaseSettingsDialog","___utils_Constants","___utils_Device","_interopRequireDefault","obj","__esModule","default","SplitAppMode","BaseSettingsDialog","DEFAULT_NEWS_URL","calculateDeviceType","DeviceType","SettingsDialog","extend","renderer","apiVersion","init","_init","BaseSettingsDialog.prototype.init.call","this","_controlMap","Map","setContentWidth","setStretch","setCustomHeader","_setCustomHeader","addButton","getId","text","_i18nBundle","getText","type","press","close","addContent","title","showHeader","content","_getPageContent","_attachResizeHandler","resize","attachHandler","deviceType","_splitApp","setMode","Desktop","LargeDesktop","isMasterShown","_updateHeaderButtonVisibility","_menuBtn","icon","tooltip","_toggleMasterPage","visible","contentLeft","contentMiddle","_deviceType","Tablet","toMaster","_masterPage","hideMaster","showMaster","Mobile","setVisible","orientation","portrait","tooltipText","setTooltip","_menuList","mode","itemPress","event","_navigateToDetailPage","addStyleClass","masterPages","masterButton","_hideNavigationButton","context","listItem","getParameter","firstPanel","getPanels","selectedKey","data","getProperty","setProperty","detailPage","getElementById","toDetail","getMode","ShowHideMode","selectedPanel","find","panel","firePanelNavigated","removeSelections","pageItem","setTimeout","setSelectedItem","focus","navigationButton","getSource","destroy","onBeforeRendering","_onBeforeRendering","BaseSettingsDialog.prototype.onBeforeRendering.call","forEach","addItem","_getPageListItem","addDetailPage","_getDetailPage","settingsPanel","id","panelId","getPanel","newsPanel","shouldHideNewsItem","getShowCustom","getUrl","get","iconDensityAware","set","page","backgroundDesign","getActionButtons","actionButton","addHeaderContent","getAggregation"],"sources":["SettingsDialog.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport { Event as JQueryEvent } from \"jquery\";\nimport Bar from \"sap/m/Bar\";\nimport Button from \"sap/m/Button\";\nimport { SplitAppMode } from \"sap/m/library\";\nimport List from \"sap/m/List\";\nimport Page from \"sap/m/Page\";\nimport SplitApp from \"sap/m/SplitApp\";\nimport StandardListItem from \"sap/m/StandardListItem\";\nimport Title from \"sap/m/Title\";\nimport Event from \"sap/ui/base/Event\";\nimport Control from \"sap/ui/core/Control\";\nimport Element from \"sap/ui/core/Element\";\nimport Device from \"sap/ui/Device\";\nimport BaseSettingsDialog from \"./BaseSettingsDialog\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\nimport NewsPanel from \"./NewsPanel\";\nimport { DEFAULT_NEWS_URL } from \"./utils/Constants\";\nimport { calculateDeviceType, DeviceType } from \"./utils/Device\";\n\n/**\n *\n * Dialog class for My Home Settings.\n *\n * @extends BaseSettingsDialog\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.SettingsDialog\n */\nexport default class SettingsDialog extends BaseSettingsDialog {\n\tprivate _controlMap!: Map<string, Control | Element>;\n\tprivate _menuBtn!: Button;\n\tprivate _menuList!: List;\n\tprivate _masterPage!: Page;\n\tprivate _splitApp!: SplitApp;\n\tprivate _deviceType!: DeviceType;\n\n\tstatic renderer = {\n\t\tapiVersion: 2\n\t};\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\t\tthis._controlMap = new Map();\n\n\t\t//setup dialog\n\t\tthis.setContentWidth(\"72rem\");\n\t\tthis.setStretch(false);\n\t\tthis.setCustomHeader(this._setCustomHeader());\n\n\t\t//setup dialog buttons\n\t\tthis.addButton(\n\t\t\tnew Button(`${this.getId()}-close-btn`, {\n\t\t\t\ttext: this._i18nBundle.getText(\"closeSettings\"),\n\t\t\t\ttype: \"Transparent\",\n\t\t\t\tpress: () => this.close()\n\t\t\t})\n\t\t);\n\n\t\t//setup dialog content\n\t\tthis.addContent(\n\t\t\tnew Page(`${this.getId()}-settingsPage`, {\n\t\t\t\ttitle: this._i18nBundle.getText(\"myHomeSettings\"),\n\t\t\t\tshowHeader: false,\n\t\t\t\tcontent: this._getPageContent()\n\t\t\t})\n\t\t);\n\t\tthis._attachResizeHandler();\n\t}\n\t/**\n\t * Attaches a resize event handler to dynamically adjust the split app mode and\n\t * header button visibility based on the current device type.\n\t *\n\t * @returns {void}\n\t */\n\n\tprivate _attachResizeHandler(): void {\n\t\tDevice.resize.attachHandler(() => {\n\t\t\tconst deviceType = calculateDeviceType();\n\t\t\tthis._splitApp.setMode(\n\t\t\t\tdeviceType === DeviceType.Desktop || deviceType === DeviceType.LargeDesktop ? \"ShowHideMode\" : \"HideMode\"\n\t\t\t);\n\t\t\tconst isMasterShown = this._splitApp.isMasterShown();\n\t\t\tthis._updateHeaderButtonVisibility(isMasterShown);\n\t\t});\n\t}\n\t/**\n\t * Creates and sets a custom header for the SettingsDialog.\n\t *\n\t * @private\n\t * @returns {Bar} The custom header bar for the SettingsDialog.\n\t */\n\tprivate _setCustomHeader(): Bar {\n\t\tthis._menuBtn = new Button(`${this.getId()}-menu-btn`, {\n\t\t\ticon: \"sap-icon://menu2\",\n\t\t\ttooltip: this._i18nBundle.getText(\"showMenu\"),\n\t\t\tpress: () => this._toggleMasterPage(),\n\t\t\tvisible: false\n\t\t});\n\t\treturn new Bar(`${this.getId()}-header`, {\n\t\t\tcontentLeft: [this._menuBtn],\n\t\t\tcontentMiddle: [\n\t\t\t\tnew Title(`${this.getId()}-dialog-title`, {\n\t\t\t\t\ttext: this._i18nBundle.getText(\"myHomeSettings\")\n\t\t\t\t})\n\t\t\t]\n\t\t});\n\t}\n\n\t/**\n\t * Toggles the visibility of the master page in the SettingsDialog based on the current device width.\n\t * If the device width is less than 600 pixels or equal to or greater than 1024 pixels, the master\n\t * page is always shown. Otherwise, it toggles the visibility of the master page.\n\t *\n\t * @private\n\t */\n\tprivate _toggleMasterPage(): void {\n\t\tconst isMasterShown = this._splitApp.isMasterShown();\n\t\tconst deviceType = this._deviceType || calculateDeviceType();\n\t\tif (deviceType !== DeviceType.Tablet) {\n\t\t\tthis._splitApp.toMaster(this._masterPage.getId(), \"slide\");\n\t\t} else {\n\t\t\tif (isMasterShown) {\n\t\t\t\tthis._splitApp.hideMaster();\n\t\t\t} else {\n\t\t\t\tthis._splitApp.showMaster();\n\t\t\t}\n\t\t}\n\t\tthis._updateHeaderButtonVisibility(!isMasterShown);\n\t}\n\n\t/**\n\t * Update header button\n\t *\n\t * @param {boolean} isMasterShown If master page is shown\n\t * @private\n\t */\n\tprivate _updateHeaderButtonVisibility(isMasterShown: boolean): void {\n\t\tconst deviceType = this._deviceType || calculateDeviceType();\n\t\tif (deviceType === DeviceType.Mobile) {\n\t\t\t// Hide or show the menu button on mobile\n\t\t\tthis._menuBtn.setVisible(!isMasterShown);\n\t\t} else if (deviceType === DeviceType.Tablet) {\n\t\t\tif (Device.orientation?.portrait) {\n\t\t\t\t// Show menu button in portrait mode with a tooltip\n\t\t\t\tconst tooltipText = this._i18nBundle.getText(isMasterShown ? \"ToggleButtonHide\" : \"ToggleButtonShow\");\n\t\t\t\tthis._menuBtn.setVisible(true);\n\t\t\t\tif (tooltipText) {\n\t\t\t\t\t// Only set the tooltip if a valid string is available\n\t\t\t\t\tthis._menuBtn.setTooltip(tooltipText);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Hide or show the menu button in other orientations\n\t\t\t\tthis._menuBtn.setVisible(isMasterShown);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._menuBtn.setVisible(false);\n\t\t}\n\t}\n\n\t/**\n\t * Generates the content for the SettingsDialog, including the master page and split app.\n\t *\n\t * @private\n\t * @returns {SplitApp} The split app containing the master page and detail pages for the SettingsDialog.\n\t */\n\tprivate _getPageContent(): SplitApp {\n\t\tthis._menuList = new List(`${this.getId()}-master-pages-list`, {\n\t\t\tmode: \"SingleSelectMaster\",\n\t\t\titemPress: (event: Event) => this._navigateToDetailPage(event)\n\t\t}).addStyleClass(\"sapCuxMasterPageList\");\n\t\tthis._masterPage = new Page(`${this.getId()}-master-page`, {\n\t\t\ttitle: this._i18nBundle.getText(\"myHomeSettings\"),\n\t\t\tshowHeader: false,\n\t\t\tcontent: [this._menuList]\n\t\t});\n\t\tthis._splitApp = new SplitApp(`${this.getId()}-settingsApp`, {\n\t\t\tmode: \"ShowHideMode\",\n\t\t\tmasterPages: [this._masterPage],\n\t\t\tmasterButton: (event: Event) => this._hideNavigationButton(event)\n\t\t});\n\n\t\treturn this._splitApp;\n\t}\n\n\t/**\n\t * Navigates to the detail page associated with the selected item in the master page list.\n\t *\n\t * @private\n\t * @param {Event} event The item press event from the master page list.\n\t */\n\tprivate _navigateToDetailPage(event: Event<{ listItem?: StandardListItem }> | string, context?: object): void {\n\t\t//update selected key\n\t\tconst listItem = typeof event === \"string\" ? event : event.getParameter?.(\"listItem\");\n\t\tconst firstPanel = this.getPanels()[0];\n\t\tconst selectedKey = ((listItem as StandardListItem)?.data?.(\"key\") || event || firstPanel?.getProperty(\"key\")) as string;\n\t\tthis.setProperty(\"selectedKey\", selectedKey, true);\n\n\t\t//navigate to detail page\n\t\tconst detailPage = Element.getElementById(`${selectedKey}-detail-page`) as Page;\n\t\tthis._splitApp.toDetail(detailPage.getId(), \"slide\");\n\t\tthis._splitApp.hideMaster();\n\t\tif (this._splitApp.getMode() === SplitAppMode.ShowHideMode) {\n\t\t\tthis._updateHeaderButtonVisibility(false);\n\t\t}\n\n\t\t//fire panel navigated event\n\t\tconst selectedPanel = this.getPanels().find(\n\t\t\t(panel: BaseSettingsPanel) => panel.getProperty(\"key\") === selectedKey\n\t\t) as BaseSettingsPanel;\n\t\tselectedPanel?.firePanelNavigated({ context });\n\n\t\t//select list item\n\t\tthis._menuList.removeSelections(true);\n\t\tconst pageItem = Element.getElementById(`${selectedKey}-page-item`) as StandardListItem;\n\t\tsetTimeout(() => {\n\t\t\tthis._menuList.setSelectedItem(pageItem);\n\t\t\tpageItem.focus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Hides the navigation button associated with the provided event.\n\t *\n\t * @private\n\t * @param {Event} event The event triggering the hide action.\n\t */\n\tprivate _hideNavigationButton(event: Event): void {\n\t\tconst navigationButton = Element.getElementById(`${event.getSource<SplitApp>().getId()}-MasterBtn`) as Button;\n\t\tnavigationButton?.destroy();\n\t}\n\n\t/**\n\t * onBeforeRendering lifecycle method.\n\t * Prepares the SettingsDialog content and navigate to the selected detail page.\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic onBeforeRendering(event: JQueryEvent): void {\n\t\tsuper.onBeforeRendering(event);\n\n\t\t//setup master and detail page content\n\t\tthis.getPanels().forEach((panel: BaseSettingsPanel) => {\n\t\t\tthis._menuList.addItem(this._getPageListItem(panel));\n\t\t\tthis._splitApp.addDetailPage(this._getDetailPage(panel));\n\t\t});\n\n\t\t//navigate to detail page\n\t\tconst selectedKey = this.getProperty(\"selectedKey\") as string;\n\t\tconst context = this.getProperty(\"context\") as object;\n\t\tthis._navigateToDetailPage(selectedKey, context);\n\t}\n\n\t/**\n\t * Generates a list item for the master page list based on the settings panel.\n\t * The list item displays the title and icon of the settings panel.\n\t *\n\t * @private\n\t * @param {BaseSettingsPanel} settingsPanel The settings panel for which to generate the list item.\n\t * @returns {StandardListItem} The list item control representing the settings panel in the master page list.\n\t */\n\tprivate _getPageListItem(settingsPanel: BaseSettingsPanel): StandardListItem {\n\t\tconst id = `${settingsPanel.getProperty(\"key\")}-page-item`;\n\t\tconst panelId = settingsPanel.getPanel();\n\t\tconst newsPanel = panelId ? (Element.getElementById(panelId) as NewsPanel | null) : null;\n\t\tconst shouldHideNewsItem =\n\t\t\tid === \"NEWS-page-item\" && newsPanel?.getShowCustom() === false && newsPanel?.getUrl() !== DEFAULT_NEWS_URL;\n\t\tlet listItem = this._controlMap.get(id) as StandardListItem;\n\t\tif (!listItem) {\n\t\t\tlistItem = new StandardListItem(id, {\n\t\t\t\ttitle: settingsPanel.getProperty(\"title\") as string,\n\t\t\t\ticon: settingsPanel.getProperty(\"icon\") as string,\n\t\t\t\ttype: \"Navigation\",\n\t\t\t\ticonDensityAware: false,\n\t\t\t\tvisible: !shouldHideNewsItem\n\t\t\t});\n\t\t\tlistItem.data(\"key\", settingsPanel.getProperty(\"key\"));\n\t\t\tthis._controlMap.set(id, listItem);\n\t\t} else if (shouldHideNewsItem) {\n\t\t\tlistItem.setVisible(false);\n\t\t}\n\t\treturn listItem;\n\t}\n\n\t/**\n\t * Generates a detail page for the SettingsDialog based on the provided settings panel.\n\t *\n\t * @private\n\t * @param {BaseSettingsPanel} settingsPanel The settings panel for which to generate the detail page.\n\t * @returns {Page} The detail page control representing the settings panel.\n\t */\n\tprivate _getDetailPage(settingsPanel: BaseSettingsPanel): Page {\n\t\tconst id = `${settingsPanel.getProperty(\"key\")}-detail-page`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tconst page = new Page(id, {\n\t\t\t\ttitle: settingsPanel.getProperty(\"title\") as string,\n\t\t\t\tbackgroundDesign: \"List\",\n\t\t\t\tshowHeader: settingsPanel.getProperty(\"showHeader\") as boolean\n\t\t\t});\n\n\t\t\t//add settings panel action buttons\n\t\t\tsettingsPanel.getActionButtons().forEach((actionButton) => {\n\t\t\t\tpage.addHeaderContent(actionButton);\n\t\t\t});\n\n\t\t\tthis._controlMap.set(id, page);\n\t\t}\n\n\t\t//add settings panel content\n\t\t(settingsPanel.getAggregation(\"content\") as Control[]).forEach((content) => (this._controlMap.get(id) as Page).addContent(content));\n\n\t\treturn this._controlMap.get(id) as Page;\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":256,"column":0},"map":{"version":3,"names":["sap","ui","define","Formatting","GenericTile","Text","TileContent","sap_m_library","Component","S4MyHome","__ToDoPanel","___utils_SituationUtils","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","LoadState","URLHelper","ValueColor","ToDoPanel","executeNavigation","fetchNavigationTargetData","getSituationMessage","SituationPanel","extend","constructor","_constructor","id","settings","ToDoPanel.prototype.constructor.call","this","init","_init","ToDoPanel.prototype.init.call","setProperty","_i18nBundle","getText","generateRequestUrls","_generateRequestUrls","cardCount","language","getLanguageTag","getCountUrl","getDataUrl","toUpperCase","generateCardTemplate","_generateCardTemplate","context","mode","frameType","pressEnabled","header","getProperty","headerImage","valueColor","Critical","state","press","event","_onPressSituation","tileContent","content","text","footer","formatDate","_this","control","getSource","getBindingContext","loadState","SitnInstceKey","SitnEngineType","getObject","url","getTargetAppUrl","_temp3","Loading","_temp2","_temp","Promise","resolve","_fetchNavigationTarge","navigationTargetData","getOwnerComponentFor","getParent","error","_sErrorCode","redirect","reject","getNoDataText","_getNoDataText"],"sources":["SituationPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Formatting from \"sap/base/i18n/Formatting\";\nimport GenericTile from \"sap/m/GenericTile\";\nimport Text from \"sap/m/Text\";\nimport TileContent from \"sap/m/TileContent\";\nimport { LoadState, URLHelper, ValueColor } from \"sap/m/library\";\nimport Event from \"sap/ui/base/Event\";\nimport Component from \"sap/ui/core/Component\";\nimport Control from \"sap/ui/core/Control\";\nimport Context from \"sap/ui/model/Context\";\nimport S4MyHome from \"sap/ushell/api/S4MyHome\";\nimport type { $ToDoPanelSettings } from \"./ToDoPanel\";\nimport ToDoPanel from \"./ToDoPanel\";\nimport ToDosContainer from \"./ToDosContainer\";\nimport {\n\texecuteNavigation,\n\tfetchNavigationTargetData,\n\tgetSituationMessage,\n\tInstanceAttribute,\n\tNavigationData\n} from \"./utils/SituationUtils\";\n\ninterface Situation {\n\tSitnInstceKey: string;\n\tSitnInstceCreatedAtDateTime: string;\n\tSitnEngineType: string;\n\t_InstanceAttribute: InstanceAttribute[];\n\t_InstanceText: InstanceText;\n\tloadState?: LoadState;\n}\n\ninterface InstanceText {\n\tSituationTitle: string;\n\tSituationText: string;\n}\n\ninterface NavigationHelperError {\n\t_sErrorCode: string;\n}\n\n/**\n *\n * Panel class for managing and storing Situation cards.\n *\n * @extends ToDoPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @public\n *\n * @alias sap.cux.home.SituationPanel\n */\nexport default class SituationPanel extends ToDoPanel {\n\t/**\n\t * Constructor for a new Situation Panel.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $ToDoPanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\t//Configure Header\n\t\tthis.setProperty(\"key\", \"situations\");\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"situationsTabTitle\"));\n\t}\n\n\t/**\n\t * Generates request URLs for fetching data based on the specified card count.\n\t * Overridden method to provide situation-specific URLs.\n\t *\n\t * @private\n\t * @override\n\t * @param {number} cardCount - The number of cards to retrieve.\n\t * @returns {string[]} An array of request URLs.\n\t */\n\tpublic generateRequestUrls(cardCount: number): string[] {\n\t\tconst language = Formatting.getLanguageTag().language || \"\";\n\t\treturn [\n\t\t\tthis.getCountUrl(),\n\t\t\t`${this.getDataUrl()}&$expand=_InstanceAttribute($expand=_InstanceAttributeValue($filter=(Language eq '${language.toUpperCase()}' or Language eq ''))),_InstanceText($filter=(Language eq '${language.toUpperCase()}' or Language eq ''))&$skip=0&$top=${cardCount}`\n\t\t];\n\t}\n\n\t/**\n\t * Generates a card template for situations.\n\t * Overridden method from To-Do panel to generate situation-specific card template.\n\t *\n\t * @private\n\t * @override\n\t * @param {string} id The ID for the template card.\n\t * @param {Context} context The context object.\n\t * @returns {Control} The generated card control template.\n\t */\n\tpublic generateCardTemplate(id: string, context: Context): Control {\n\t\treturn new GenericTile(`${id}-actionTile`, {\n\t\t\tmode: \"ActionMode\",\n\t\t\tframeType: \"TwoByOne\",\n\t\t\tpressEnabled: true,\n\t\t\theader: getSituationMessage(\n\t\t\t\tcontext.getProperty(\"_InstanceText/0/SituationTitle\") as string,\n\t\t\t\tcontext.getProperty(\"_InstanceAttribute\") as InstanceAttribute[]\n\t\t\t),\n\t\t\theaderImage: \"sap-icon://alert\",\n\t\t\tvalueColor: ValueColor.Critical,\n\t\t\tstate: context.getProperty(\"loadState\") as LoadState,\n\t\t\tpress: (event: Event) => {\n\t\t\t\tvoid this._onPressSituation(event);\n\t\t\t},\n\t\t\ttileContent: [\n\t\t\t\tnew TileContent(`${id}-actionTileContent`, {\n\t\t\t\t\tcontent: new Text(`${id}-text`, {\n\t\t\t\t\t\ttext: getSituationMessage(\n\t\t\t\t\t\t\tcontext.getProperty(\"_InstanceText/0/SituationText\") as string,\n\t\t\t\t\t\t\tcontext.getProperty(\"_InstanceAttribute\") as InstanceAttribute[]\n\t\t\t\t\t\t)\n\t\t\t\t\t}),\n\t\t\t\t\tfooter: S4MyHome.formatDate(context.getProperty(\"SitnInstceCreatedAtDateTime\") as string)\n\t\t\t\t})\n\t\t\t]\n\t\t});\n\t}\n\n\t/**\n\t * Handle the press event for a situation.\n\t *\n\t * @private\n\t * @param {Event} event - The event object.\n\t */\n\tprivate async _onPressSituation(event: Event): Promise<void> {\n\t\tconst control = event.getSource<GenericTile>();\n\t\tconst context = control.getBindingContext();\n\t\tconst { loadState, SitnInstceKey: id, SitnEngineType } = context?.getObject() as Situation;\n\t\tconst url = this.getTargetAppUrl();\n\n\t\tif (loadState !== LoadState.Loading && url) {\n\t\t\tif (id) {\n\t\t\t\ttry {\n\t\t\t\t\tconst navigationTargetData = (await fetchNavigationTargetData(id, SitnEngineType)) as NavigationData;\n\t\t\t\t\tawait executeNavigation(\n\t\t\t\t\t\tnavigationTargetData,\n\t\t\t\t\t\tComponent.getOwnerComponentFor(this.getParent() as ToDosContainer) as Component\n\t\t\t\t\t);\n\t\t\t\t} catch (error: unknown) {\n\t\t\t\t\tif (\n\t\t\t\t\t\terror &&\n\t\t\t\t\t\tSitnEngineType === \"1\" &&\n\t\t\t\t\t\t(error as NavigationHelperError)._sErrorCode === \"NavigationHandler.isIntentSupported.notSupported\"\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Navigate to the situations app\n\t\t\t\t\t\tURLHelper.redirect(this.getTargetAppUrl(), false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tURLHelper.redirect(url, false);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get the text for the \"No Data\" message.\n\t *\n\t * @private\n\t * @returns {string} The text for the \"No Data\" message.\n\t */\n\tpublic getNoDataText(): string {\n\t\treturn this._i18nBundle.getText(\"noSituationTitle\") as string;\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":261,"column":0},"map":{"version":3,"names":["sap","ui","define","Log","ActionTile","ActionTileContent","Button","ContentConfig","Link","List","MessageBox","Popover","StandardListItem","TileAttribute","sap_m_library","NumberFormat","__MenuItem","__ToDoPanel","__DecisionDialog","___utils_Device","___utils_FESRUtil","___utils_TaskUtils","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","ButtonType","ContentConfigType","LoadState","PlacementType","URLHelper","MenuItem","ToDoPanel","DecisionDialog","getIconFrameBadge","getIconFrameBadgeValueState","calculateDeviceType","DeviceType","fetchElementProperties","addFESRId","addFESRSemanticStepName","FESR_EVENTS","fetchUserDetails","formatDate","getPriority","getTaskUrl","Format","TextArrangement","Constants","GRID_VIEW_MIN_ROWS","GRID_VIEW_MAX_ROWS","GRID_VIEW_MIN_WIDTH","GRID_VIEW_TWO_COL_MIN_WIDTH","GRID_VIEW_MAX_WIDTH","CARD_HEIGHT","splitCards","cards","maxLength","cardSet","i","length","push","slice","TaskPanel","extend","metadata","library","properties","enableActions","type","group","defaultValue","visibility","customAttributeUrl","constructor","_constructor","id","settings","ToDoPanel.prototype.constructor.call","this","init","_init","ToDoPanel.prototype.init.call","_customAttributeMap","_taskDefinitionMap","setProperty","_i18nBundle","getText","_viewAllTasksMenuItem","getId","title","icon","visible","press","_onPressViewAll","bind","insertAggregation","generateRequestUrls","_generateRequestUrls","cardCount","urls","getCountUrl","getDataUrl","getCustomAttributeUrl","generateCardTemplate","_generateCardTemplate","context","attributes","getObject","map","attribute","index","label","contentConfig","text","href","mode","frameType","pressEnabled","enableIconFrame","enableDynamicHeight","enableNavigationButton","headerImage","badgeIcon","getProperty","badgeValueState","header","state","priority","priorityText","_toPriorityText","event","_onPressTask","tileContent","headerLink","createdByLink","_onClickCreatedBy","PRESS","actionButtons","viewButton","getSource","getParent","firePress","approveButton","_onActionButtonPress","undefined","addStyleClass","rejectButton","overflowButton","Transparent","_onOverflowButtonPress","overflowButtons","_getOverflowButtonPopover","openBy","_overflowPopover","_overflowList","showHeader","content","placement","VerticalPreferredBottom","_setupOverflowList","destroyItems","forEach","actionButton","listItem","pressHandler","addItem","_loadCards","_getCustomAttributes","task","finalAttributes","maximumAttributeCount","customAttributes","TaskDefinitionID","custom_attribute","customAttribute","taskCustomAttributes","CustomAttributeData","results","existingAttribute","find","taskAttribute","Name","name","value","referenced","Text","format","_formatCustomAttribute","textArrangement","_arrangeText","Value","_addCommonAttributes","trim","description","ValueText","formattedValue","TextFirst","TextLast","TextOnly","TextSeparate","taskAttributes","arguments","findAttribute","attributeName","oAttribute","toUpperCase","currentAttribute","CURRENCYVALUE","reference","referencedAttribute","currencyFormatter","getCurrencyInstance","parseFloat","USER","FormattedValue","CompletionDeadline","CreatedOn","getTargetAppUrl","control","getBindingContext","loadState","url","Loading","redirect","_this","sourceControl","SAP__Origin","originId","CreatedBy","userId","TaskTitle","subject","CreatedByName","createdBy","InstanceID","link","triggerEmail","email","_ref","URL","window","location","hash","toString","Promise","resolve","userData","Email","require","serviceContainer","getServiceAsync","teamsHelper","_temp2","enableContactsCollaboration","_temp","encodeURIComponent","_teamsHelper$enableCo","popover","error","Error","message","String","reject","warning","onDataReceived","_onDataReceived","options","_this2","tasks","taskDefinitions","_extractCustomAttributes","_temp3","onlyCount","_updateTasks","updatedTasks","_oData","displayTiles","tiles","_this3","_addCustomAttributes","_temp4","getEnableActions","_getTaskDefintions","_downloadDecisionOptions","_addActions","key","actions","getTaskActions","getBaseUrl","_this4","decisionKeys","decisionURLs","Object","keys","reduce","includes","_temp5","_clearRequests","requests","baseURL","requestURLs","success","decisionOptions","_submitBatch","taskDefinition","CustomAttributeDefinitionData","filter","Rank","sort","attr1","attr2","Label","Type","Reference","Referenced","getNoDataText","_getNoDataText","getVerticalCardCount","_getVerticalCardCount","domRef","calculationProperties","domProperties","parentDomProperties","parentElement","titleHeight","calculateTitleHeight","availableHeight","height","horizontalCardCount","getHorizontalCardCount","isPlaceholder","gap","verticalCardCount","_isLoaded","rowHeights","maxAttributes","attributeCount","card","visibleRowCount","Math","min","_isGridLayoutAllowed","rowHeight","floor","max","_adjustLayout","ToDoPanel.prototype._adjustLayout.call","toDosWrapper","_getContent","hasStyleClass","Mobile","deviceType","LargeDesktop","setTargetAppUrl","_setTargetAppUrl","targetAppUrl","setVisible"],"sources":["TaskPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport ActionTile from \"sap/m/ActionTile\";\nimport ActionTileContent from \"sap/m/ActionTileContent\";\nimport Button from \"sap/m/Button\";\nimport ContentConfig from \"sap/m/ContentConfig\";\nimport Link, { Link$PressEvent } from \"sap/m/Link\";\nimport List from \"sap/m/List\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport Popover from \"sap/m/Popover\";\nimport StandardListItem from \"sap/m/StandardListItem\";\nimport TileAttribute from \"sap/m/TileAttribute\";\nimport { ButtonType, ContentConfigType, LoadState, PlacementType, URLHelper } from \"sap/m/library\";\nimport ServiceContainer from \"sap/suite/ui/commons/collaboration/ServiceContainer\";\nimport Event from \"sap/ui/base/Event\";\nimport Control from \"sap/ui/core/Control\";\nimport { MetadataOptions } from \"sap/ui/core/Element\";\nimport NumberFormat from \"sap/ui/core/format/NumberFormat\";\nimport Context from \"sap/ui/model/Context\";\nimport MenuItem from \"./MenuItem\";\nimport { $TaskPanelSettings } from \"./TaskPanel\";\nimport type { CalculationProperties, RequestOptions } from \"./ToDoPanel\";\nimport ToDoPanel from \"./ToDoPanel\";\nimport DecisionDialog, { ActionButton, DecisionOption, getIconFrameBadge, getIconFrameBadgeValueState } from \"./utils/DecisionDialog\";\nimport { calculateDeviceType, DeviceType, fetchElementProperties } from \"./utils/Device\";\nimport { addFESRId, addFESRSemanticStepName, FESR_EVENTS } from \"./utils/FESRUtil\";\nimport { fetchUserDetails, formatDate, getPriority, getTaskUrl, TaskPriority } from \"./utils/TaskUtils\";\n\ninterface CustomAttribute {\n\tname?: string;\n\tlabel?: string;\n\ttext?: string;\n\ttype?: string;\n\thref?: string;\n\tformat?: string;\n\treference?: string;\n\treferenced?: string;\n\ttextArrangement?: TextArrangement;\n}\n\ninterface TaskCustomAttribute {\n\tName: string;\n\tValue: string;\n\tValueText: string;\n\tLabel: string;\n\tType: string;\n\tRank: number;\n\tFormat: string;\n\tFormattedValue: string;\n\tReference: string;\n\tReferenced: string;\n\tTextArrangement: TextArrangement;\n}\n\nexport interface Task {\n\tSAP__Origin: string;\n\tCreatedBy: string;\n\tTaskTitle: string;\n\tCreatedByName: string;\n\tInstanceID: string;\n\tTaskDefinitionID: string;\n\tCompletionDeadline: string;\n\tCreatedOn: string;\n\tactions: ActionButton[];\n\tPriority: TaskPriority;\n\tCustomAttributeData: {\n\t\tresults: TaskCustomAttribute[];\n\t};\n\tattributes: CustomAttribute[];\n}\n\ninterface TaskDefintion {\n\tSAP__Origin: string;\n\tInstanceID: string;\n\tTaskDefinitionID: string;\n}\n\ninterface TaskDefinitionCollection {\n\tTaskDefinitionID: string;\n\tCustomAttributeDefinitionData: {\n\t\tresults: TaskCustomAttribute[];\n\t};\n}\n\nenum Format {\n\tCURRENCYVALUE = \"CURRENCYVALUE\",\n\tCURRENCYCODE = \"CURRENCYCODE\",\n\tUSER = \"USER\"\n}\n\nenum TextArrangement {\n\tTextFirst = \"TextFirst\",\n\tTextLast = \"TextLast\",\n\tTextOnly = \"TextOnly\",\n\tTextSeparate = \"TextSeparate\"\n}\n\nconst Constants = {\n\tGRID_VIEW_MIN_ROWS: 1,\n\tGRID_VIEW_MAX_ROWS: 2,\n\tGRID_VIEW_MIN_WIDTH: 304,\n\tGRID_VIEW_TWO_COL_MIN_WIDTH: 374,\n\tGRID_VIEW_MAX_WIDTH: 583,\n\tCARD_HEIGHT: {\n\t\t// Cozy - Compact\n\t\t1: 220, // 214  - 226\n\t\t2: 272, // 265  - 278\n\t\t3: 324, // 318  - 330\n\t\t4: 376 // 370  - 382\n\t}\n};\n\n/**\n * Splits an array of task cards into smaller arrays, each with a maximum specified length.\n *\n * @param {Task[]} cards - The array of task cards to be split.\n * @param {number} maxLength - The maximum length of each sub-array.\n * @returns {Task[][]} - An array of sub-arrays, each containing a maximum of `maxLength` task cards.\n */\nfunction splitCards(cards: Task[], maxLength: number): Task[][] {\n\tconst cardSet = [];\n\tfor (let i = 0; i < cards.length; i += maxLength) {\n\t\tcardSet.push(cards.slice(i, i + maxLength));\n\t}\n\n\treturn cardSet;\n}\n\n/**\n *\n * Panel class for managing and storing Task cards.\n *\n * @extends ToDoPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @public\n *\n * @alias sap.cux.home.TaskPanel\n */\nexport default class TaskPanel extends ToDoPanel {\n\tprivate _customAttributeMap!: Record<string, CustomAttribute[]>;\n\tprivate _taskDefinitionMap!: Record<string, DecisionOption[]>;\n\tprivate _viewAllTasksMenuItem!: MenuItem;\n\tprivate _overflowPopover!: Popover;\n\tprivate _overflowList!: List;\n\n\tconstructor(id?: string | $TaskPanelSettings);\n\tconstructor(id?: string, settings?: $TaskPanelSettings);\n\t/**\n\t * Constructor for a new Task Panel.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $TaskPanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * Specifies if actions should be enabled for the task cards.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\tenableActions: { type: \"boolean\", group: \"Data\", defaultValue: false, visibility: \"public\" },\n\t\t\t/**\n\t\t\t * Specifies the URL that fetches the custom attributes to be displayed along with the task cards.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\tcustomAttributeUrl: { type: \"string\", group: \"Data\", defaultValue: \"\", visibility: \"public\" }\n\t\t}\n\t};\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\t\tthis._customAttributeMap = {};\n\t\tthis._taskDefinitionMap = {};\n\n\t\t//Configure Header\n\t\tthis.setProperty(\"key\", \"tasks\");\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"tasksTabTitle\"));\n\n\t\t//Setup Menu Items - ensure that 'View All Tasks' item is the first item in the list\n\t\tthis._viewAllTasksMenuItem = new MenuItem(`${this.getId()}-view-tasks-btn`, {\n\t\t\ttitle: this._i18nBundle.getText(\"viewAllTasksTitle\"),\n\t\t\ticon: \"sap-icon://inbox\",\n\t\t\tvisible: false,\n\t\t\tpress: this._onPressViewAll.bind(this)\n\t\t});\n\t\tthis.insertAggregation(\"menuItems\", this._viewAllTasksMenuItem, 0);\n\t\taddFESRId(this._viewAllTasksMenuItem, \"goToTaskSitution\");\n\t}\n\n\t/**\n\t * Generates request URLs for fetching data based on the specified card count.\n\t * Overridden method to provide task-specific URLs.\n\t *\n\t * @private\n\t * @override\n\t * @param {number} cardCount - The number of cards to retrieve.\n\t * @returns {string[]} An array of request URLs.\n\t */\n\tpublic generateRequestUrls(cardCount: number): string[] {\n\t\tconst urls = [this.getCountUrl(), `${this.getDataUrl()},CustomAttributeData&$expand=CustomAttributeData&$skip=0&$top=${cardCount}`];\n\n\t\tconst customAttributeUrl = this.getCustomAttributeUrl();\n\t\tif (customAttributeUrl) {\n\t\t\turls.push(customAttributeUrl);\n\t\t}\n\n\t\treturn urls;\n\t}\n\n\t/**\n\t * Generates a card template for tasks.\n\t * Overridden method from To-Do panel to generate task-specific card template.\n\t *\n\t * @private\n\t * @override\n\t * @param {string} id The ID for the template card.\n\t * @param {Context} context The context object.\n\t * @returns {Control} The generated card control template.\n\t */\n\tpublic generateCardTemplate(id: string, context: Context): Control {\n\t\tconst attributes = (context.getObject() as Task).attributes?.map((attribute, index) => {\n\t\t\treturn new TileAttribute(`${id}-${index}-attribute`, {\n\t\t\t\tlabel: attribute.label as string,\n\t\t\t\tcontentConfig: new ContentConfig(`${id}-${index}-contentConfig`, {\n\t\t\t\t\ttype: attribute.type as ContentConfigType,\n\t\t\t\t\ttext: attribute.text as string,\n\t\t\t\t\thref: attribute.href as string\n\t\t\t\t})\n\t\t\t});\n\t\t});\n\n\t\treturn new ActionTile(`${id}-actionTile`, {\n\t\t\tmode: \"ActionMode\",\n\t\t\tframeType: \"TwoByOne\",\n\t\t\tpressEnabled: true,\n\t\t\tenableIconFrame: true,\n\t\t\tenableDynamicHeight: true,\n\t\t\tenableNavigationButton: true,\n\t\t\theaderImage: \"sap-icon://workflow-tasks\",\n\t\t\tbadgeIcon: getIconFrameBadge(context.getProperty(\"Priority\") as TaskPriority),\n\t\t\tbadgeValueState: getIconFrameBadgeValueState(context.getProperty(\"Priority\") as TaskPriority),\n\t\t\theader: context.getProperty(\"TaskTitle\") as string,\n\t\t\tstate: context.getProperty(\"loadState\") as LoadState,\n\t\t\tpriority: getPriority(context.getProperty(\"Priority\") as TaskPriority),\n\t\t\tpriorityText: this._toPriorityText(getPriority(context.getProperty(\"Priority\") as TaskPriority)),\n\t\t\tpress: (event: Event) => this._onPressTask(event),\n\t\t\ttileContent: [\n\t\t\t\tnew ActionTileContent(`${id}-actionTileContent`, {\n\t\t\t\t\theaderLink: (() => {\n\t\t\t\t\t\tconst createdByLink = new Link(`${id}-actionTileContentLink`, {\n\t\t\t\t\t\t\ttext: context.getProperty(\"CreatedByName\") as string,\n\t\t\t\t\t\t\tpress: (event: Link$PressEvent): void => {\n\t\t\t\t\t\t\t\tvoid this._onClickCreatedBy(event);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\taddFESRSemanticStepName(createdByLink, FESR_EVENTS.PRESS, \"MST:ContactDetails\");\n\t\t\t\t\t\treturn createdByLink;\n\t\t\t\t\t})(),\n\t\t\t\t\tattributes\n\t\t\t\t})\n\t\t\t],\n\t\t\tactionButtons: [\n\t\t\t\t(() => {\n\t\t\t\t\tconst viewButton = new Button(`${id}-view-btn`, {\n\t\t\t\t\t\ttext: this._i18nBundle.getText(\"viewButton\"),\n\t\t\t\t\t\tpress: (event: Event) => (event.getSource<Button>().getParent() as ActionTile).firePress(),\n\t\t\t\t\t\tvisible: context.getProperty(\"actions/length\") === 0\n\t\t\t\t\t});\n\t\t\t\t\taddFESRSemanticStepName(viewButton, FESR_EVENTS.PRESS, \"todoActionBtn\");\n\t\t\t\t\treturn viewButton;\n\t\t\t\t})(),\n\t\t\t\t(() => {\n\t\t\t\t\tconst approveButton = new Button(`${id}-approve-btn`, {\n\t\t\t\t\t\ttext: context.getProperty(\"actions/0/text\") as string,\n\t\t\t\t\t\ttype: context.getProperty(\"actions/0/type\") as ButtonType,\n\t\t\t\t\t\tpress: () => this._onActionButtonPress(context.getProperty(\"actions/0/pressHandler\") as () => void),\n\t\t\t\t\t\tvisible: context.getProperty(\"actions/0\") !== undefined\n\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginEnd\");\n\t\t\t\t\taddFESRSemanticStepName(approveButton, FESR_EVENTS.PRESS, \"todoActionBtn\");\n\t\t\t\t\treturn approveButton;\n\t\t\t\t})(),\n\t\t\t\t(() => {\n\t\t\t\t\tconst rejectButton = new Button(`${id}-reject-btn`, {\n\t\t\t\t\t\ttext: context.getProperty(\"actions/1/text\") as string,\n\t\t\t\t\t\ttype: context.getProperty(\"actions/1/type\") as ButtonType,\n\t\t\t\t\t\tpress: () => this._onActionButtonPress(context.getProperty(\"actions/1/pressHandler\") as () => void),\n\t\t\t\t\t\tvisible: context.getProperty(\"actions/1\") !== undefined\n\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginEnd\");\n\t\t\t\t\taddFESRSemanticStepName(rejectButton, FESR_EVENTS.PRESS, \"todoActionBtn\");\n\t\t\t\t\treturn rejectButton;\n\t\t\t\t})(),\n\t\t\t\t(() => {\n\t\t\t\t\tconst overflowButton = new Button(`${id}-overflow-btn`, {\n\t\t\t\t\t\ticon: \"sap-icon://overflow\",\n\t\t\t\t\t\ttype: ButtonType.Transparent,\n\t\t\t\t\t\tpress: (event: Event) => this._onOverflowButtonPress(event, context),\n\t\t\t\t\t\tvisible: context.getProperty(\"actions/length\") >= 3\n\t\t\t\t\t});\n\t\t\t\t\taddFESRSemanticStepName(overflowButton, FESR_EVENTS.PRESS, \"todoActBtnOverflow\");\n\t\t\t\t\treturn overflowButton;\n\t\t\t\t})()\n\t\t\t]\n\t\t});\n\t}\n\n\t/**\n\t * Handles the press event of the overflow button.\n\t * Opens a Popover containing overflow actions.\n\t *\n\t * @private\n\t * @param {Event} event - The press event triggered by the overflow button.\n\t * @param {Context} context - The context containing all actions.\n\t * @returns {void}\n\t */\n\tprivate _onOverflowButtonPress(event: Event, context: Context): void {\n\t\tconst overflowButtons = (context.getProperty(\"actions\") as ActionButton[]).slice(2);\n\t\tthis._getOverflowButtonPopover(overflowButtons).openBy(event.getSource<Button>());\n\t}\n\n\t/**\n\t * Creates or retrieves the overflow button Popover.\n\t *\n\t * @private\n\t * @param {ActionButton[]} actionButtons - The array of overflow actions.\n\t * @returns {Popover} The overflow button Popover.\n\t */\n\tprivate _getOverflowButtonPopover(actionButtons: ActionButton[]): Popover {\n\t\tif (!this._overflowPopover) {\n\t\t\tthis._overflowList = new List(`${this.getId()}-overflowList`);\n\t\t\tthis._overflowPopover = new Popover(`${this.getId()}-overflowPopover`, {\n\t\t\t\tshowHeader: false,\n\t\t\t\tcontent: this._overflowList,\n\t\t\t\tplacement: PlacementType.VerticalPreferredBottom\n\t\t\t});\n\t\t}\n\n\t\t//setup task-specific with task-specific actions\n\t\tthis._setupOverflowList(actionButtons);\n\t\treturn this._overflowPopover;\n\t}\n\n\t/**\n\t * Sets up the overflow button list with the provided task-specific actions.\n\t *\n\t * @private\n\t * @param {ActionButton[]} actionButtons - The array of overflow actions.\n\t * @returns {void}\n\t */\n\tprivate _setupOverflowList(actionButtons: ActionButton[]): void {\n\t\tthis._overflowList.destroyItems();\n\t\tactionButtons.forEach((actionButton, index) => {\n\t\t\tconst listItem = new StandardListItem(`action-${index}`, {\n\t\t\t\ttitle: actionButton.text,\n\t\t\t\ttype: \"Active\",\n\t\t\t\tpress: () => this._onActionButtonPress(actionButton.pressHandler as () => void)\n\t\t\t});\n\t\t\taddFESRSemanticStepName(listItem, FESR_EVENTS.PRESS, \"todoActionBtn\");\n\t\t\tthis._overflowList.addItem(listItem);\n\t\t});\n\t}\n\n\t/**\n\t * Handles the button press event and executes the provided press handler function,\n\t * which refreshes the UI after the button press action.\n\t *\n\t * @private\n\t * @param {Function} pressHandler - The function to be executed when the button is pressed.\n\t * @returns {void}\n\t */\n\tprivate _onActionButtonPress(pressHandler: (refreshFn: () => Promise<void>) => void): void {\n\t\tpressHandler(this._loadCards.bind(this));\n\t}\n\n\t/**\n\t * Retrieves custom attributes for a given task and formats them for display.\n\t * If the task has completion deadline and creation date, those attributes are also included.\n\t * If the task has a creator, the creator's name is included as well.\n\t *\n\t * @param {Task} task - The task object for which custom attributes are retrieved.\n\t * @returns {CustomAttribute[]} - An array of formatted custom attributes.\n\t */\n\tprivate _getCustomAttributes(task: Task): CustomAttribute[] {\n\t\tconst finalAttributes = [];\n\t\tconst maximumAttributeCount = 4;\n\t\tconst customAttributes = this._customAttributeMap[task.TaskDefinitionID] || [];\n\n\t\tfor (let custom_attribute of customAttributes) {\n\t\t\tconst customAttribute = custom_attribute;\n\t\t\tconst taskCustomAttributes = task.CustomAttributeData?.results;\n\t\t\tconst existingAttribute = taskCustomAttributes.find((taskAttribute) => {\n\t\t\t\treturn taskAttribute.Name === customAttribute.name;\n\t\t\t});\n\t\t\tlet value = \"\";\n\n\t\t\tif (existingAttribute && !customAttribute.referenced) {\n\t\t\t\tconst attribute: CustomAttribute = {\n\t\t\t\t\tlabel: customAttribute.label + \":\",\n\t\t\t\t\ttype: ContentConfigType.Text\n\t\t\t\t};\n\n\t\t\t\tif (customAttribute.format) {\n\t\t\t\t\tvalue = this._formatCustomAttribute(customAttribute, taskCustomAttributes);\n\t\t\t\t} else if (customAttribute.textArrangement) {\n\t\t\t\t\tvalue = this._arrangeText(existingAttribute, customAttribute.textArrangement);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = customAttribute.type === \"Edm.DateTime\" ? formatDate(existingAttribute.Value) : existingAttribute.Value;\n\t\t\t\t}\n\t\t\t\tattribute.text = value || \"-\";\n\t\t\t\tfinalAttributes.push(attribute);\n\t\t\t}\n\t\t}\n\n\t\t// add common attributes\n\t\tthis._addCommonAttributes(finalAttributes, task);\n\n\t\treturn finalAttributes.slice(0, maximumAttributeCount);\n\t}\n\n\t/**\n\t * Formats the given unit of measure value and description based on the specified text arrangement.\n\t *\n\t * @private\n\t * @param {TaskCustomAttribute} customAttribute The custom attribute object.\n\t * @param {TextArrangement} textArrangement The text arrangement option.\n\t * @returns {string} The formatted value.\n\t */\n\tprivate _arrangeText(customAttribute: TaskCustomAttribute, textArrangement: TextArrangement): string {\n\t\tconst value = customAttribute.Value.trim();\n\t\tconst description = customAttribute.ValueText.trim();\n\t\tlet formattedValue = \"\";\n\n\t\tswitch (textArrangement) {\n\t\t\tcase TextArrangement.TextFirst:\n\t\t\t\tformattedValue = `${description} (${value})`;\n\t\t\t\tbreak;\n\t\t\tcase TextArrangement.TextLast:\n\t\t\t\tformattedValue = `${value} (${description})`;\n\t\t\t\tbreak;\n\t\t\tcase TextArrangement.TextOnly:\n\t\t\t\tformattedValue = `${description}`;\n\t\t\t\tbreak;\n\t\t\tcase TextArrangement.TextSeparate:\n\t\t\t\tformattedValue = `${value}`;\n\t\t\t\tbreak;\n\t\t\tdefault: // TextFirst\n\t\t\t\tformattedValue = `${description} ${value})`;\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn formattedValue;\n\t}\n\n\t/**\n\t * Formats a custom attribute value based on its format type.\n\t *\n\t * @param {CustomAttribute} customAttribute - The custom attribute object.\n\t * @param {TaskCustomAttribute[]} taskAttributes - The array of task attributes.\n\t * @returns {string} - The formatted value.\n\t */\n\tprivate _formatCustomAttribute(customAttribute: CustomAttribute, taskAttributes: TaskCustomAttribute[] = []): string {\n\t\tconst findAttribute = (attributeName: string) => {\n\t\t\treturn taskAttributes.find((oAttribute) => {\n\t\t\t\treturn oAttribute.Name === attributeName;\n\t\t\t});\n\t\t};\n\t\tconst format = customAttribute.format?.toUpperCase();\n\t\tconst currentAttribute = findAttribute(customAttribute.name as string);\n\t\tlet formattedValue = currentAttribute?.Value;\n\n\t\t// Format = CurrencyValue\n\t\tif (format === Format.CURRENCYVALUE && customAttribute.reference) {\n\t\t\tconst referencedAttribute = findAttribute(customAttribute.reference);\n\n\t\t\tif (referencedAttribute) {\n\t\t\t\tconst currencyFormatter = NumberFormat.getCurrencyInstance();\n\t\t\t\tformattedValue = currencyFormatter.format(parseFloat(currentAttribute?.Value as string), referencedAttribute.Value);\n\t\t\t}\n\t\t} else if (format === Format.USER) {\n\t\t\tformattedValue = currentAttribute?.FormattedValue || currentAttribute?.Value;\n\t\t}\n\n\t\treturn formattedValue as string;\n\t}\n\n\t/**\n\t * Adds common attributes to the final attributes list based on the provided task.\n\t * Common attributes include completion deadline, creation date, and creator's name.\n\t *\n\t * @param {CustomAttribute[]} finalAttributes - The array of custom attributes to which the common attributes will be added.\n\t * @param {Task} task - The task object containing data for common attributes.\n\t */\n\tprivate _addCommonAttributes(finalAttributes: CustomAttribute[], task: Task): void {\n\t\tif (task.CompletionDeadline) {\n\t\t\tfinalAttributes.push({\n\t\t\t\tlabel: this._i18nBundle.getText(\"dueDate\") + \":\",\n\t\t\t\ttext: formatDate(task.CompletionDeadline, \"MMM dd, YYYY hh:mm a\"),\n\t\t\t\ttype: ContentConfigType.Text\n\t\t\t});\n\t\t}\n\n\t\tif (task.CreatedOn) {\n\t\t\tfinalAttributes.push({\n\t\t\t\tlabel: this._i18nBundle.getText(\"createdOn\") + \":\",\n\t\t\t\ttext: formatDate(task.CreatedOn),\n\t\t\t\ttype: ContentConfigType.Text\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Handles the press event of a task.\n\t *\n\t * @private\n\t * @param {Event} event - The press event.\n\t */\n\tprivate _onPressTask(event: Event) {\n\t\tif (this.getTargetAppUrl()) {\n\t\t\tconst control = event.getSource<ActionTile>();\n\t\t\tconst context = control.getBindingContext();\n\t\t\tconst loadState = context?.getProperty(\"loadState\") as LoadState;\n\t\t\tconst url = getTaskUrl(\n\t\t\t\tcontext?.getProperty(\"SAP__Origin\") as string,\n\t\t\t\tcontext?.getProperty(\"InstanceID\") as string,\n\t\t\t\tthis.getTargetAppUrl()\n\t\t\t);\n\n\t\t\tif (loadState !== LoadState.Loading) {\n\t\t\t\tURLHelper.redirect(url, false);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Handles the click event on the \"Created By\" link.\n\t * Triggers email or opens a contact card if configuration is enabled\n\t *\n\t * @private\n\t * @param {Event} event - The event object.\n\t */\n\tprivate async _onClickCreatedBy(event: Link$PressEvent): Promise<void> {\n\t\tconst sourceControl = event.getSource();\n\t\tconst {\n\t\t\tSAP__Origin: originId,\n\t\t\tCreatedBy: userId,\n\t\t\tTaskTitle: subject,\n\t\t\tCreatedByName: createdBy,\n\t\t\tInstanceID\n\t\t} = event.getSource().getBindingContext()?.getObject() as Task;\n\t\tconst link = getTaskUrl(originId, InstanceID, this.getTargetAppUrl());\n\t\tconst triggerEmail = (email: string, { subject, body }: { subject: string; body: string }) => {\n\t\t\tURLHelper.triggerEmail(email, subject, body);\n\t\t};\n\t\tconst url = new URL(window.location.href);\n\t\turl.hash = link;\n\t\tconst body = url.toString();\n\n\t\tconst userData = await fetchUserDetails(originId, userId);\n\t\tif (userData.Email) {\n\t\t\tsap.ui.require([\"sap/suite/ui/commons/collaboration/ServiceContainer\"], async (serviceContainer: ServiceContainer) => {\n\t\t\t\tconst teamsHelper = await serviceContainer.getServiceAsync();\n\n\t\t\t\tif (teamsHelper.enableContactsCollaboration) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst popover = (await teamsHelper.enableContactsCollaboration(userData.Email as string, {\n\t\t\t\t\t\t\tsubject,\n\t\t\t\t\t\t\tbody: encodeURIComponent(body)\n\t\t\t\t\t\t})) as Popover;\n\t\t\t\t\t\tpopover.openBy(sourceControl);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tLog.error(error instanceof Error ? error.message : String(error));\n\t\t\t\t\t\ttriggerEmail(userData.Email as string, { subject, body });\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttriggerEmail(userData.Email as string, { subject, body });\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tMessageBox.warning(this._i18nBundle.getText(\"noEmail\", [createdBy]) as string);\n\t\t}\n\t}\n\n\t/**\n\t * Hook for processing data fetched from a batch call.\n\t * This method can be overridden to perform additional data processing operations.\n\t * In this implementation, it is consumed to handle task-related data, particularly\n\t * for extracting custom attributes if action cards are enabled.\n\t *\n\t * @private\n\t * @async\n\t * @param {unknown[]} results - Data retrieved from the batch call. Structure may vary based on the backend service.\n\t * @param {RequestOptions} options - Additional options for parsing the data.\n\t * @returns {Promise<void>} A Promise that resolves when the data processing is complete.\n\t */\n\tpublic async onDataReceived(results: unknown[], options: RequestOptions): Promise<void> {\n\t\tconst [tasks, taskDefinitions] = results;\n\t\tthis._extractCustomAttributes(taskDefinitions as TaskDefinitionCollection[]);\n\n\t\tif (!options || (options && !options.onlyCount)) {\n\t\t\tconst updatedTasks = await this._updateTasks(tasks as Task[]);\n\t\t\tthis._oData.displayTiles = this._oData.tiles = updatedTasks;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the tasks with attributes and actions.\n\t *\n\t * @private\n\t * @param {Task[]} tasks - The array of tasks to update.\n\t * @returns {Promise<Task[]>} A promise that resolves with the updated array of tasks.\n\t */\n\tprivate async _updateTasks(tasks: Task[] = []): Promise<Task[]> {\n\t\t//add custom attributes to tasks\n\t\tlet updatedTasks = this._addCustomAttributes(tasks);\n\n\t\t//add actions to tasks\n\t\tif (this.getEnableActions()) {\n\t\t\t//calculate unique task definitions\n\t\t\tconst taskDefinitions = this._getTaskDefintions(updatedTasks);\n\n\t\t\t//download decision options for task defintions\n\t\t\tawait this._downloadDecisionOptions(taskDefinitions);\n\n\t\t\t//append actions\n\t\t\tupdatedTasks = this._addActions(updatedTasks);\n\t\t}\n\n\t\treturn updatedTasks;\n\t}\n\n\t/**\n\t * Adds custom attributes to each task in the provided array.\n\t *\n\t * @private\n\t * @param {Task[]} tasks - The array of tasks to which custom attributes will be added.\n\t * @returns {Task[]} - A new array of tasks, each with added custom attributes.\n\t */\n\tprivate _addCustomAttributes(tasks: Task[]): Task[] {\n\t\treturn tasks.map((task) => ({\n\t\t\t...task,\n\t\t\tattributes: this._getCustomAttributes(task)\n\t\t}));\n\t}\n\n\t/**\n\t * Adds actions to the tasks based on their task definitions.\n\t *\n\t * @private\n\t * @param {Task[]} tasks - The array of tasks to which actions will be added.\n\t * @returns {Task[]} The array of tasks with actions added.\n\t */\n\tprivate _addActions(tasks: Task[]): Task[] {\n\t\treturn tasks.map((task) => {\n\t\t\tconst key = task.SAP__Origin + task.TaskDefinitionID;\n\t\t\treturn {\n\t\t\t\t...task,\n\t\t\t\tactions: this._taskDefinitionMap[key]\n\t\t\t\t\t? DecisionDialog.getTaskActions(task, this.getBaseUrl(), this._taskDefinitionMap, this._i18nBundle)\n\t\t\t\t\t: []\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t * Downloads decision options for the provided task definitions.\n\t *\n\t * @private\n\t * @param {Record<string, TaskDefinition>} taskDefinitions - The task definitions for which decision options will be downloaded.\n\t * @returns {Promise<void>} A promise that resolves when all decision options are downloaded and processed.\n\t */\n\tprivate async _downloadDecisionOptions(taskDefinitions: Record<string, TaskDefintion>): Promise<void> {\n\t\tconst decisionKeys: string[] = [];\n\t\tconst decisionURLs = Object.keys(taskDefinitions).reduce((urls: string[], key) => {\n\t\t\tif (!Object.keys(this._taskDefinitionMap).includes(key)) {\n\t\t\t\tdecisionKeys.push(key);\n\t\t\t\tthis._taskDefinitionMap[key] = [];\n\n\t\t\t\tconst { SAP__Origin, InstanceID } = taskDefinitions[key];\n\t\t\t\turls.push(`DecisionOptions?SAP__Origin='${SAP__Origin}'&InstanceID='${InstanceID}'`);\n\t\t\t}\n\t\t\treturn urls;\n\t\t}, []);\n\n\t\tif (decisionURLs.length) {\n\t\t\tthis._clearRequests();\n\t\t\tthis.requests.push({\n\t\t\t\tbaseURL: this.getBaseUrl(),\n\t\t\t\trequestURLs: decisionURLs,\n\t\t\t\tsuccess: (results: DecisionOption[][]): Promise<void> => {\n\t\t\t\t\tresults.forEach((decisionOptions: DecisionOption[], index) => {\n\t\t\t\t\t\tthis._taskDefinitionMap[decisionKeys[index]] = decisionOptions;\n\t\t\t\t\t});\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tawait this._submitBatch();\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves unique task definitions from the provided array of tasks.\n\t *\n\t * @private\n\t * @param {Task[]} tasks - The array of tasks from which to retrieve task definitions.\n\t * @returns {Record<string, TaskDefintion>} An object containing unique task definitions.\n\t */\n\tprivate _getTaskDefintions(tasks: Task[] = []): Record<string, TaskDefintion> {\n\t\tconst taskDefinitions: Record<string, TaskDefintion> = {};\n\t\ttasks.forEach((task) => {\n\t\t\tconst key = task.SAP__Origin + task.TaskDefinitionID;\n\t\t\tif (!taskDefinitions[key]) {\n\t\t\t\ttaskDefinitions[key] = {\n\t\t\t\t\tSAP__Origin: task.SAP__Origin,\n\t\t\t\t\tInstanceID: task.InstanceID,\n\t\t\t\t\tTaskDefinitionID: task.TaskDefinitionID\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\treturn taskDefinitions;\n\t}\n\n\t/**\n\t * Extracts Custom Attribute Information to create an attribute map from raw attribute data\n\t * received from call, which is used while task processing\n\t *\n\t * @private\n\t * @param {TaskDefinitionCollection[]} taskDefinitions - array of raw tasks definitions\n\t */\n\tprivate _extractCustomAttributes(taskDefinitions: TaskDefinitionCollection[] = []): void {\n\t\ttaskDefinitions.forEach((taskDefinition: TaskDefinitionCollection) => {\n\t\t\tconst customAttributes = taskDefinition.CustomAttributeDefinitionData?.results || [];\n\t\t\tthis._customAttributeMap[taskDefinition.TaskDefinitionID] = customAttributes\n\t\t\t\t.filter((oAttribute) => oAttribute.Rank > 0)\n\t\t\t\t.sort((attr1, attr2) => attr2.Rank - attr1.Rank)\n\t\t\t\t.map((oAttribute) => ({\n\t\t\t\t\tname: oAttribute.Name,\n\t\t\t\t\tlabel: oAttribute.Label,\n\t\t\t\t\ttype: oAttribute.Type,\n\t\t\t\t\tformat: oAttribute.Format,\n\t\t\t\t\treference: oAttribute.Reference,\n\t\t\t\t\treferenced: oAttribute.Referenced,\n\t\t\t\t\ttextArrangement: oAttribute.TextArrangement\n\t\t\t\t}));\n\t\t});\n\t}\n\n\t/**\n\t * Get the text for the \"No Data\" message.\n\t *\n\t * @private\n\t * @returns {string} The text for the \"No Data\" message.\n\t */\n\tpublic getNoDataText(): string {\n\t\treturn this._i18nBundle.getText(\"noTaskTitle\") as string;\n\t}\n\n\t/**\n\t * Calculates the number of vertical cards that can fit within the available height of the given DOM element.\n\t *\n\t * @private\n\t * @override\n\t * @param {Element} domRef - The DOM element to calculate the vertical card count for.\n\t * @returns {number} - The number of vertical cards that can fit within the available height.\n\t */\n\tpublic getVerticalCardCount(domRef: Element, calculationProperties?: CalculationProperties): number {\n\t\tconst domProperties = fetchElementProperties(domRef, [\"padding-top\"]);\n\t\tconst parentDomProperties = fetchElementProperties(domRef.parentElement as Element, [\"height\"]);\n\t\tconst titleHeight = this.calculateTitleHeight();\n\t\tconst availableHeight = parentDomProperties.height - domProperties[\"padding-top\"] * 2 - titleHeight;\n\t\tconst horizontalCardCount = this.getHorizontalCardCount(domRef);\n\t\tconst isPlaceholder = calculationProperties?.isPlaceholder;\n\t\tconst gap = 16;\n\t\tlet height = 0;\n\t\tlet verticalCardCount = 0;\n\n\t\tif (this._isLoaded()) {\n\t\t\tconst cardSet = splitCards(this._oData.tiles as Task[], horizontalCardCount);\n\t\t\tconst rowHeights = cardSet.map((cards: Task[]) => {\n\t\t\t\tconst maxAttributes = cards.reduce(function (attributeCount: number, card: Task) {\n\t\t\t\t\tcard.attributes = card.attributes || [];\n\t\t\t\t\treturn card.attributes.length > attributeCount ? card.attributes.length : attributeCount;\n\t\t\t\t}, 1);\n\n\t\t\t\tlet visibleRowCount = Math.min(maxAttributes, 4);\n\t\t\t\tif (this._isGridLayoutAllowed()) {\n\t\t\t\t\t// If grid view is enabled, restrict the card height to 2 rows\n\t\t\t\t\tvisibleRowCount =\n\t\t\t\t\t\tvisibleRowCount > Constants.GRID_VIEW_MAX_ROWS ? Constants.GRID_VIEW_MAX_ROWS : Constants.GRID_VIEW_MIN_ROWS;\n\t\t\t\t}\n\n\t\t\t\treturn Constants.CARD_HEIGHT[visibleRowCount as keyof typeof Constants.CARD_HEIGHT] + gap;\n\t\t\t});\n\n\t\t\tfor (let rowHeight of rowHeights) {\n\t\t\t\tif (height + rowHeight < availableHeight) {\n\t\t\t\t\theight += rowHeight;\n\t\t\t\t\tverticalCardCount++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tverticalCardCount = Math.floor(availableHeight / Constants.CARD_HEIGHT[isPlaceholder ? \"4\" : \"1\"]);\n\t\t}\n\n\t\treturn Math.max(verticalCardCount, 2);\n\t}\n\n\t/**\n\t * Adjusts the layout based on card count and device type.\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic _adjustLayout(): void {\n\t\tsuper._adjustLayout();\n\n\t\tthis.setProperty(\n\t\t\t\"minCardWidth\",\n\t\t\tthis._isGridLayoutAllowed() ? Constants.GRID_VIEW_TWO_COL_MIN_WIDTH : Constants.GRID_VIEW_MIN_WIDTH\n\t\t);\n\t\tthis.setProperty(\"maxCardWidth\", Constants.GRID_VIEW_MAX_WIDTH);\n\t\t/**\n\t\t * sapUiGridTaskLayout class is only required in case of Loading view of Desktop & Tablet and Content View of all devices.\n\t\t * Hence initially skip adding it for Mobile and later add the class once contents are loaded.\n\t\t * */\n\t\tconst toDosWrapper = this._getContent()?.[0];\n\t\tif (toDosWrapper && !toDosWrapper.hasStyleClass(\"sapUiGridTaskLayout\") && calculateDeviceType() !== DeviceType.Mobile) {\n\t\t\ttoDosWrapper.addStyleClass(\"sapUiGridTaskLayout\");\n\t\t}\n\t}\n\n\t/**\n\t * Determines if grid view is allowed for displaying card content based on the device type.\n\t *\n\t * @returns {boolean} `true` if the device type is either Desktop or LargeDesktop, otherwise `false`.\n\t */\n\tprotected _isGridLayoutAllowed(): boolean {\n\t\tconst deviceType = calculateDeviceType();\n\t\treturn deviceType === DeviceType.LargeDesktop;\n\t}\n\n\t/**\n\t * Sets the target application URL and updates the visibility of the \"View All Tasks\" menu item.\n\t *\n\t * @param {string} targetAppUrl - The URL of the target application.\n\t * @returns {this} The current instance of the TaskPanel for method chaining.\n\t */\n\tpublic setTargetAppUrl(targetAppUrl: string): this {\n\t\tthis._viewAllTasksMenuItem.setVisible(!!targetAppUrl);\n\t\tthis.setProperty(\"targetAppUrl\", targetAppUrl);\n\t\treturn this;\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":266,"column":0},"map":{"version":3,"names":["sap","ui","define","Log","GridContainer","GridContainerItemLayoutData","Button","CustomListItem","Dialog","GenericTile","HBox","HeaderContainer","IllustratedMessage","IllustratedMessageSize","IllustratedMessageType","Label","List","ObjectIdentifier","Title","VBox","sap_m_library","EventBus","Icon","Lib","JSONModel","Config","Container","S4MyHome","__BasePanel","__MenuItem","___utils_Accessibility","__AppManager","___utils_Constants","___utils_DataFormatUtils","___utils_Device","___utils_DragDropUtils","___utils_FESRUtil","___utils_InsightsUtils","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","ButtonType","_finallyRethrows","finalizer","bind","LoadState","BasePanel","MenuItem","checkPanelExists","AppManager","DEFAULT_BG_COLOR","END_USER_COLORS","MYHOME_PAGE_ID","MYINSIGHT_SECTION_ID","SETTINGS_PANELS_KEYS","recycleId","DeviceType","fetchElementProperties","focusDraggedItem","addFESRId","addFESRSemanticStepName","FESR_EVENTS","createShowMoreActionButton","createShowMoreMenuItem","getAssociatedFullScreenMenuItem","sortMenuItems","tilesMenuItems","tilesContainerMenuItems","tilesActionButtons","tilesContainerActionButtons","DisplayFormat","favAppPanelName","appsConatinerlName","sortedMenuItems","REFRESH","ADD_APPS","EDIT_TILES","_showAddApps","last","StandardTileWidth","StandardWideTileWidth","Gap","TilesPanel","extend","metadata","library","properties","title","type","group","defaultValue","visibility","key","fullScreenName","defaultAggregation","aggregations","tiles","multiple","singularName","events","handleHidePanel","parameters","handleUnhidePanel","constructor","_constructor","id","settings","BasePanel.prototype.constructor.call","this","_insightsSectionTitle","_i18nBundle","getText","_addFromFavDialogId","getId","_headerVisible","init","_init","_this","BasePanel.prototype.init.call","_controlMap","Map","_oData","activateInsightsTiles","activateInsightsTilesOnPhone","activateInsightsTilesOnDesktop","_controlModel","appManagerInstance","getInstance","setProperty","refreshMenuItem","_createRefreshMenuItem","editTilesMenuItem","_createEditTilesMenuItem","menuItems","forEach","menuItem","addAggregation","_sortMenuItems","addTilesButton","_createAddTilesButton","ADD_TILES","actionButtons","actionButton","_createTilesFlexWrapper","getServiceAsync","VizInstantiationService","catch","error","Error","message","String","oEventBus","subscribe","sChannelId","sEventId","oData","Promise","resolve","createInsightSection","_addSectionViz","refreshData","_adjustLayout","_importdone","reject","_toggleTileActivity","_this2","toggleUserActions","event","show","getParameter","_temp2","_temp","_appSwitched","attachRouteMatched","warning","aSectionViz","sSectionId","reduce","promiseChain","oViz","isBookmark","addBookMark","addVisualization","vizId","stateData","status","publish","_showPlaceHolders","placeholderArray","Array","_calculatePlaceholderTileCount","fill","Loading","aInsightsApps","map","tileState","index","sizeBehavior","state","frameType","mode","visible","renderOnThemeChange","ariaRole","dropAreaOffset","setLayoutData","columns","_clearPlaceHolders","renderPanel","_renderPanel","_exit","_this3","_temp4","_result","_temp3","container","getParent","addFromFavAppMenuItem","_createAddFromFavMenuItem","_await$_this3$refresh","fireHandleHidePanel","_wasThrown","fireEvent","panelMenuItems","getAggregation","removeAllAggregation","_refreshData","refreshTiles","arguments","length","undefined","_this4","panelName","getMetadata","getName","fetchInsightApps","_this4$appManagerInst","_temp6","fireHandleUnhidePanel","isMobile","getDeviceType","Mobile","tilesMobileContainer","tilesContainer","sDefaultAggreName","getDefaultAggregationName","dynamicTiles","refresh","_getInsightsContainer","updatePanelsItemCount","bIsSmartBusinessTilePresent","some","oApp","isSmartBusinessTile","_temp5","load","name","_tilesWrapper","renderType","width","items","_createMobileFlexWrapper","_createWrapperFlexBox","setModel","_addContent","scrollStep","scrollStepByItem","gridLayout","scrollTime","showDividers","addStyleClass","_attachAggregationToContainer","_updateTilesActivity","isPhoneScreen","bActivateInsightsTiles","Boolean","getProperty","bindAggregation","path","factory","context","getObject","oVisualization","instantiateVisualization","visualization","minRows","getDisplayFormat","Standard","bindProperty","_setDropAreaRectFunction","addDragDropConfigTo","oEvent","_handleTilesDnd","tilesDropAreaOffset","Object","defineProperty","value","domRef","getDomRef","mDropRect","getBoundingClientRect","left","right","top","bottom","height","sInsertPosition","oDragItem","oDropItem","iDragItemIndex","indexOfItem","iDropItemIndex","_DragnDropTiles","_this5","oDisplacedItem","oItemMoved","splice","moveConfigs","pageId","sourceSectionIndex","persConfig","sectionIndex","sourceVisualizationIndex","visualizationIndex","targetSectionIndex","targetVisualizationIndex","moveVisualization","setTimeout","handleEditTiles","_handleEditTiles","parent","getSource","isA","_getLayout","openSettingsDialog","INSIGHTS_TILES","handleHideHeader","_handleHideHeader","_toggleHeaderActions","handleAddHeader","_handleAddHeader","_closeAddFromFavDialog","list","get","removeSelections","close","navigateToAppFinder","_navigateToAppFinder","groupId","navigationService","navigationObject","pageID","sectionID","navigate","target","shellHash","JSON","stringify","_getLegendColor","color","find","oColor","_handleAddFromFavApps","_this6","_getFavToAdd","appsToAdd","dialog","_generateAddFromFavAppsDialog","setVisible","_generateAddFromFavAppsListItems","open","_this7","fetchFavVizs","aFavApps","aDynamicApps","filter","oDynApp","isCount","aFilteredFavApps","iAppIndex","findIndex","oInsightApps","targetURL","_getSelectedInsights","getSelectedItems","destroyItems","listItems","app","content","alignItems","src","icon","backgroundColor","BGColor","size","text","subtitle","tooltip","data","item","addItem","setAddBtnEnabled","selectedItems","setEnabled","getAppFinderBtn","btnType","appFinderBtn","press","Default","PRESS","set","selectionChange","addButton","_addFromFavApps","enabled","illustrationSize","Small","illustrationType","AddDimensions","description","wrapping","justifyContent","Transparent","contentWidth","contentHeight","endButton","escapeHandler","buttons","_this8","setBusy","promise","oMovingConfig","insightsSectionIndex","displayFormatHint","supportedDisplayFormats","includes","_temp7","_calculateVisibleTileCount","insightsApps","layout","layoutDomRef","apps","count","isHeaderVisible","sectionNodeIndex","sectionDomRef","childNodes","domProperties","availableWidth","widthMap","StandardWide","nextTileWidth","Math","floor","isMobileDevice","visibleTileCount","isElementExpanded","_getCurrentExpandedElementName","slice","showFullScreenButton","toggleActionButton","toggleFullScreenElements","fullScreenButton","fullScreenText","getTitle","updateMenuItem","SHOW_MORE","updateActionButton","insightsContainer","getContainerMenuItems","_getContainerMenuItems","_containerMenuItems","containerRefresh","containerEditTiles","containerShowMore","containerAddFromFav","getContainerActionButtons","_getContainerActionButtons","_containerActionButtons","push","containerFullScreenActionButton","fesrId","_this9","_temp8","bShow","toggleMenuListItem"],"sources":["TilesPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport GridContainer from \"sap/f/GridContainer\";\nimport GridContainerItemLayoutData from \"sap/f/GridContainerItemLayoutData\";\nimport Button from \"sap/m/Button\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport Dialog from \"sap/m/Dialog\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport GenericTile from \"sap/m/GenericTile\";\nimport HBox from \"sap/m/HBox\";\nimport HeaderContainer from \"sap/m/HeaderContainer\";\nimport IllustratedMessage from \"sap/m/IllustratedMessage\";\nimport IllustratedMessageSize from \"sap/m/IllustratedMessageSize\";\nimport IllustratedMessageType from \"sap/m/IllustratedMessageType\";\nimport Label from \"sap/m/Label\";\nimport List from \"sap/m/List\";\nimport ObjectIdentifier from \"sap/m/ObjectIdentifier\";\nimport Title from \"sap/m/Title\";\nimport VBox from \"sap/m/VBox\";\nimport { ButtonType, LoadState } from \"sap/m/library\";\nimport Event from \"sap/ui/base/Event\";\nimport ManagedObject from \"sap/ui/base/ManagedObject\";\nimport Control from \"sap/ui/core/Control\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport Icon from \"sap/ui/core/Icon\";\nimport Lib from \"sap/ui/core/Lib\";\nimport { DropInfo$DropEventParameters } from \"sap/ui/core/dnd/DropInfo\";\nimport Context from \"sap/ui/model/Context\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport Config from \"sap/ushell/Config\";\nimport Container from \"sap/ushell/Container\";\nimport S4MyHome from \"sap/ushell/api/S4MyHome\";\nimport Navigation from \"sap/ushell/services/Navigation\";\nimport VisualizationInstantiation from \"sap/ushell/services/VisualizationInstantiation\";\nimport BaseContainer from \"./BaseContainer\";\nimport BasePanel from \"./BasePanel\";\nimport InsightsContainer from \"./InsightsContainer\";\nimport MenuItem from \"./MenuItem\";\nimport { $TilesPanelSettings } from \"./TilesPanel\";\nimport { ICustomVisualization, ISectionAndVisualization, IVisualization } from \"./interface/AppsInterface\";\nimport { checkPanelExists } from \"./utils/Accessibility\";\nimport AppManager from \"./utils/AppManager\";\nimport { DEFAULT_BG_COLOR, END_USER_COLORS, MYHOME_PAGE_ID, MYINSIGHT_SECTION_ID, SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\nimport { recycleId } from \"./utils/DataFormatUtils\";\nimport { DeviceType, fetchElementProperties } from \"./utils/Device\";\nimport { focusDraggedItem } from \"./utils/DragDropUtils\";\nimport { addFESRId, addFESRSemanticStepName, FESR_EVENTS } from \"./utils/FESRUtil\";\nimport { createShowMoreActionButton, createShowMoreMenuItem, getAssociatedFullScreenMenuItem, sortMenuItems } from \"./utils/InsightsUtils\";\n\nexport enum tilesMenuItems {\n\tREFRESH = \"tiles-refresh\",\n\tADD_APPS = \"tiles-addSmartApps\",\n\tEDIT_TILES = \"tiles-editTiles\"\n}\n\nexport enum tilesContainerMenuItems {\n\tREFRESH = \"container-tiles-refresh\",\n\tADD_APPS = \"container-tiles-addSmartApps\",\n\tEDIT_TILES = \"container-tiles-editTiles\",\n\tSHOW_MORE = \"tilesContainerFullScreenMenuItem\"\n}\n\nexport enum tilesActionButtons {\n\tADD_TILES = \"tiles-addTilesButton\"\n}\n\nexport enum tilesContainerActionButtons {\n\tADD_TILES = \"container-tiles-addTilesButton\",\n\tSHOW_MORE = \"tilesContanerFullScreenActionButton\"\n}\n\nexport enum DisplayFormat {\n\tStandard = \"standard\",\n\tStandardWide = \"standardWide\"\n}\n\nconst favAppPanelName: string = \"sap.cux.home.FavAppPanel\";\nconst appsConatinerlName: string = \"sap.cux.home.AppsContainer\";\n\nconst sortedMenuItems: (tilesMenuItems | string)[] = [\n\ttilesMenuItems.REFRESH,\n\ttilesMenuItems.ADD_APPS,\n\ttilesMenuItems.EDIT_TILES,\n\t\"showMore\",\n\t\"settings\"\n];\n\nconst _showAddApps = () => {\n\treturn (Config.last(\"/core/shell/enablePersonalization\") || Config.last(\"/core/catalog/enabled\")) as boolean;\n};\n\nconst StandardTileWidth = 176;\nconst StandardWideTileWidth = 368;\nconst Gap = 16;\n\n/**\n *\n * Tiles Panel class for managing and storing Insights Tiles.\n *\n * @extends sap.cux.home.BasePanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.122.0\n *\n * @internal\n * @experimental Since 1.122\n * @public\n *\n * @alias sap.cux.home.TilesPanel\n */\n\nexport default class TilesPanel extends BasePanel {\n\tconstructor(idOrSettings?: string | $TilesPanelSettings);\n\tconstructor(id?: string, settings?: $TilesPanelSettings);\n\t/**\n\t * Constructor for a new Tiles Panel.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $TilesPanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\tprivate _oData!: Record<string, unknown>;\n\tprivate readonly _insightsSectionTitle: string = this._i18nBundle.getText(\"insights\") as string;\n\tprivate readonly _addFromFavDialogId: string = `${this.getId()}-addFromFavDialog`;\n\tprivate appManagerInstance!: AppManager;\n\tprivate VizInstantiationService!: VisualizationInstantiation;\n\tprivate tilesContainer!: GridContainer;\n\tprivate tilesMobileContainer!: HeaderContainer;\n\tprivate _tilesWrapper!: VBox;\n\tprivate aInsightsApps!: ICustomVisualization[] | GenericTile[];\n\tprivate _controlModel!: JSONModel;\n\tpublic _controlMap!: Map<string, Control | Element | UI5Element>;\n\tprivate _containerMenuItems!: MenuItem[];\n\tprivate _containerActionButtons!: Button[];\n\tprivate oEventBus!: EventBus;\n\tprivate insightsContainer!: InsightsContainer;\n\tprivate _appSwitched!: boolean;\n\tprivate _headerVisible: boolean = false;\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * Title for the tiles panel\n\t\t\t */\n\t\t\ttitle: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Key for the tiles panel\n\t\t\t */\n\t\t\tkey: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * The name of the URL parameter used to expand the container into full-screen mode.\n\t\t\t */\n\t\t\tfullScreenName: { type: \"string\", group: \"Misc\", defaultValue: \"SI1\", visibility: \"hidden\" }\n\t\t},\n\t\tdefaultAggregation: \"tiles\",\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * Aggregation of tiles available within the tiles Panel\n\t\t\t */\n\t\t\ttiles: { type: \"sap.cux.home.App\", multiple: true, singularName: \"tile\", visibility: \"hidden\" }\n\t\t},\n\t\tevents: {\n\t\t\thandleHidePanel: {\n\t\t\t\tparameters: {}\n\t\t\t},\n\t\t\thandleUnhidePanel: {\n\t\t\t\tparameters: {}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Initializes the Tiles Panel.\n\t *\n\t * @private\n\t * @override\n\t */\n\tinit() {\n\t\tsuper.init();\n\t\tthis._controlMap = new Map();\n\t\t//Initialise Tiles Model\n\t\tthis._oData = {\n\t\t\ttiles: [] as ICustomVisualization[],\n\t\t\tactivateInsightsTiles: true,\n\t\t\tactivateInsightsTilesOnPhone: false,\n\t\t\tactivateInsightsTilesOnDesktop: false\n\t\t};\n\t\tthis._controlModel = new JSONModel(this._oData);\n\t\tthis.appManagerInstance = AppManager.getInstance();\n\t\tthis.setProperty(\"key\", \"tiles\");\n\t\tthis.setProperty(\"enableFullScreen\", true);\n\t\tconst refreshMenuItem = this._createRefreshMenuItem(tilesMenuItems.REFRESH, \"tilesRefresh\");\n\t\tconst editTilesMenuItem = this._createEditTilesMenuItem(tilesMenuItems.EDIT_TILES, \"manageTiles\");\n\n\t\tconst menuItems = [refreshMenuItem, editTilesMenuItem];\n\t\tmenuItems.forEach((menuItem) => this.addAggregation(\"menuItems\", menuItem));\n\t\tthis._sortMenuItems(sortedMenuItems);\n\n\t\tconst addTilesButton = this._createAddTilesButton(tilesActionButtons.ADD_TILES, \"addTiles\");\n\n\t\tconst actionButtons = [addTilesButton];\n\t\tactionButtons.forEach((actionButton) => this.addAggregation(\"actionButtons\", actionButton));\n\n\t\tthis._createTilesFlexWrapper();\n\t\tContainer.getServiceAsync<VisualizationInstantiation>(\"VisualizationInstantiation\")\n\t\t\t.then((VizInstantiationService) => {\n\t\t\t\tthis.VizInstantiationService = VizInstantiationService;\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tLog.error(error instanceof Error ? error.message : String(error));\n\t\t\t});\n\n\t\tthis.oEventBus = EventBus.getInstance();\n\t\t// Subscribe to the event\n\t\tthis.oEventBus.subscribe(\n\t\t\t\"importChannel\",\n\t\t\t\"tilesImport\",\n\t\t\tasync (sChannelId?: string, sEventId?: string, oData?) => {\n\t\t\t\tawait this.appManagerInstance.createInsightSection(this._i18nBundle.getText(\"insightsTiles\") as string);\n\t\t\t\tawait this._addSectionViz(oData as IVisualization[], MYINSIGHT_SECTION_ID);\n\t\t\t\tawait this.refreshData();\n\t\t\t\tthis._adjustLayout();\n\t\t\t\tthis._importdone();\n\t\t\t},\n\t\t\tthis\n\t\t);\n\n\t\t// Toggles the activity of tiles\n\t\tthis._toggleTileActivity();\n\t}\n\n\t/**\n\t * Toggles the activity of tiles on route change.\n\t *\n\t * @private\n\t * @returns {void}\n\t */\n\tprivate _toggleTileActivity(): void {\n\t\tconst toggleUserActions = async (event: Event<{ isMyHomeRoute: boolean }>) => {\n\t\t\tconst show = event.getParameter(\"isMyHomeRoute\");\n\t\t\tthis._controlModel.setProperty(\"/activateInsightsTiles\", show);\n\t\t\tif (show) {\n\t\t\t\tif (this._appSwitched) {\n\t\t\t\t\tawait this.refreshData(true);\n\t\t\t\t\tthis._appSwitched = false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._appSwitched = true;\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\tS4MyHome.attachRouteMatched({}, toggleUserActions, this);\n\t\t} catch (error) {\n\t\t\tLog.warning(error instanceof Error ? error.message : String(error));\n\t\t}\n\t}\n\n\t/**\n\t * Takes the visualizations and add it to the provided section id\n\t * @param {IVisualization[]} aSectionViz - array of visualizations\n\t * @param {string} sSectionId - section id where the visualizations to be added\n\t * @returns {any}\n\t */\n\tprivate _addSectionViz(aSectionViz: IVisualization[], sSectionId: string) {\n\t\treturn aSectionViz.reduce((promiseChain, oViz) => {\n\t\t\treturn promiseChain.then(() => {\n\t\t\t\tif (oViz.isBookmark) {\n\t\t\t\t\treturn this.appManagerInstance.addBookMark(oViz);\n\t\t\t\t} else {\n\t\t\t\t\treturn sSectionId\n\t\t\t\t\t\t? this.appManagerInstance.addVisualization(oViz.vizId, sSectionId)\n\t\t\t\t\t\t: this.appManagerInstance.addVisualization(oViz.vizId);\n\t\t\t\t}\n\t\t\t});\n\t\t}, Promise.resolve());\n\t}\n\n\t/**\n\t * Handles the completion of the import process.\n\t *\n\t * @private\n\t * @returns {void}\n\t */\n\tprivate _importdone() {\n\t\tconst stateData = { status: true };\n\t\tthis.oEventBus.publish(\"importChannel\", \"tilesImported\", stateData);\n\t}\n\n\t/**\n\t * Displays placeholder tiles while loading.\n\t *\n\t * @private\n\t * @returns {void}\n\t */\n\tprivate _showPlaceHolders() {\n\t\tconst placeholderArray = new Array(this._calculatePlaceholderTileCount()).fill(LoadState.Loading) as LoadState[];\n\t\tthis.aInsightsApps = placeholderArray.map((tileState: LoadState, index: number) => {\n\t\t\treturn new GenericTile(recycleId(`${this.getId()}--placeHolderTile--${index}`), {\n\t\t\t\tsizeBehavior: \"Responsive\",\n\t\t\t\tstate: tileState,\n\t\t\t\tframeType: \"OneByOne\",\n\t\t\t\tmode: \"IconMode\",\n\t\t\t\tvisible: true,\n\t\t\t\trenderOnThemeChange: true,\n\t\t\t\tariaRole: \"listitem\",\n\t\t\t\tdropAreaOffset: 8\n\t\t\t}).setLayoutData?.(\n\t\t\t\tnew GridContainerItemLayoutData(recycleId(`${this.getId()}--placeHolderTileLayoutData--${index}`), {\n\t\t\t\t\tcolumns: 2\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t\tthis._controlModel.setProperty(\"/tiles\", this.aInsightsApps);\n\t}\n\n\t/**\n\t * Clears the placeholder tiles.\n\t *\n\t * @private\n\t * @returns {void}\n\t */\n\tprivate _clearPlaceHolders() {\n\t\tthis._controlModel.setProperty(\"/tiles\", []);\n\t}\n\n\t/**\n\t * Renders the panel.\n\t *\n\t * @private\n\t * @returns {Promise<void>} A promise that resolves when the panel is rendered.\n\t */\n\tpublic async renderPanel(): Promise<void> {\n\t\ttry {\n\t\t\tconst container = this.getParent() as BaseContainer;\n\t\t\tif (checkPanelExists(container, appsConatinerlName, favAppPanelName)) {\n\t\t\t\tconst addFromFavAppMenuItem = this._createAddFromFavMenuItem(tilesMenuItems.ADD_APPS, \"smartAppsDialog\");\n\t\t\t\tthis.addAggregation(\"menuItems\", addFromFavAppMenuItem);\n\t\t\t\tthis._sortMenuItems(sortedMenuItems);\n\t\t\t}\n\t\t\treturn await this.refreshData();\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t\tthis.fireHandleHidePanel();\n\t\t} finally {\n\t\t\tthis.fireEvent(\"loaded\");\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Sorts the menu items based on the provided order.\n\t *\n\t * @private\n\t * @param {string[]} menuItems - The order of the menu items.\n\t */\n\tprivate _sortMenuItems(menuItems: string[]) {\n\t\tconst panelMenuItems = this.getAggregation(\"menuItems\") as MenuItem[];\n\t\tlet sortedMenuItems = sortMenuItems(menuItems, panelMenuItems);\n\t\tthis.removeAllAggregation(\"menuItems\");\n\t\tsortedMenuItems?.forEach((menuItem) => this.addAggregation(\"menuItems\", menuItem));\n\t}\n\n\t/**\n\t * Refreshes the data in the panel.\n\t *\n\t * @private\n\t * @param {boolean} [refreshTiles=false] - Whether to refresh the tiles.\n\t * @returns {Promise<void>} A promise that resolves when the data is refreshed.\n\t */\n\tpublic async refreshData(refreshTiles: boolean = false) {\n\t\tconst panelName = this.getMetadata().getName();\n\t\tthis.aInsightsApps = await this.appManagerInstance.fetchInsightApps(true, this._insightsSectionTitle);\n\t\tconst bIsSmartBusinessTilePresent = this.aInsightsApps.some((oApp) => oApp.isSmartBusinessTile);\n\t\tif (bIsSmartBusinessTilePresent) {\n\t\t\tawait Lib.load({ name: \"sap.cloudfnd.smartbusiness.lib.reusetiles\" });\n\t\t}\n\t\tthis._clearPlaceHolders();\n\t\tthis._controlModel.setProperty(\"/tiles\", this.aInsightsApps);\n\t\tif (this.aInsightsApps?.length) {\n\t\t\tthis.fireHandleUnhidePanel();\n\t\t\tif (refreshTiles) {\n\t\t\t\tconst isMobile = this.getDeviceType() === DeviceType.Mobile;\n\t\t\t\tconst container = isMobile ? this.tilesMobileContainer : this.tilesContainer;\n\t\t\t\tconst sDefaultAggreName = container.getMetadata().getDefaultAggregationName();\n\t\t\t\tconst dynamicTiles = (container.getAggregation(sDefaultAggreName) as ManagedObject[]) || [];\n\t\t\t\tdynamicTiles.forEach((tiles) => (tiles as ICustomVisualization).refresh?.());\n\t\t\t}\n\t\t\tthis._getInsightsContainer().updatePanelsItemCount(this.aInsightsApps.length, panelName);\n\t\t\tif (this._headerVisible) {\n\t\t\t\tthis.setProperty(\n\t\t\t\t\t\"title\",\n\t\t\t\t\t`${this._i18nBundle?.getText(\"insights\")} ${this._i18nBundle.getText(\"insightsTilesTitle\")} (${this.aInsightsApps.length})`\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.fireHandleHidePanel();\n\t\t}\n\t}\n\n\t/**\n\t * Generates the wrapper for the tiles container, if it doesn't already exist\n\t *\n\t * @private\n\t * @override\n\t * @returns {sap.m.VBox} The tiles Vbox wrapper.\n\t */\n\tprivate _createTilesFlexWrapper() {\n\t\tif (!this._tilesWrapper) {\n\t\t\tthis._tilesWrapper = new VBox(`${this.getId()}-tilesWrapper`, {\n\t\t\t\trenderType: \"Bare\",\n\t\t\t\twidth: \"100%\",\n\t\t\t\titems: [this._createMobileFlexWrapper(), this._createWrapperFlexBox()]\n\t\t\t});\n\t\t\tthis._showPlaceHolders();\n\t\t\tthis._tilesWrapper.setModel(this._controlModel);\n\t\t\tthis._addContent(this._tilesWrapper);\n\t\t}\n\t}\n\n\t/**\n\t * Generates wrapper for displaying tiles in mobile mode.\n\t * @private\n\t * @returns {sap.m.HeaderContainer} The generated tiles wrapper.\n\t */\n\n\tprivate _createMobileFlexWrapper(): HeaderContainer {\n\t\t// Check if the mobile container already exists\n\t\tif (!this.tilesMobileContainer) {\n\t\t\t// Create the HeaderContainer with required properties\n\t\t\tthis.tilesMobileContainer = new HeaderContainer(`${this.getId()}-insightsTilesMobileContainer`, {\n\t\t\t\tscrollStep: 0,\n\t\t\t\tscrollStepByItem: 1,\n\t\t\t\tgridLayout: true,\n\t\t\t\tscrollTime: 1000,\n\t\t\t\tshowDividers: false,\n\t\t\t\tvisible: \"{/isPhone}\"\n\t\t\t}).addStyleClass(\"sectionMarginTopTilesInsight sapMHeaderContainerAlign sapMHeaderContainerMarginBottom tilesBoxShadow\");\n\n\t\t\t// Attach aggregation to the container\n\t\t\tthis._attachAggregationToContainer(this.tilesMobileContainer);\n\t\t}\n\t\t// Return the existing or newly created container\n\t\treturn this.tilesMobileContainer;\n\t}\n\n\t/**\n\t * Generates app wrapper (GridContainer) for displaying tiles.\n\t * @private\n\t * @returns {sap.m.GridContainer} The generated tiles wrapper.\n\t */\n\n\tprivate _createWrapperFlexBox(): GridContainer {\n\t\t// Check if the tilesContainer already exists\n\t\tif (!this.tilesContainer) {\n\t\t\t// Create the GridContainer with required properties\n\t\t\tthis.tilesContainer = new GridContainer(`${this.getId()}-insightsTilesContainer`, {\n\t\t\t\tvisible: \"{= !${/isPhone}}\"\n\t\t\t}).addStyleClass(\"insightTiles sapUiSmallMarginTop sapUiSmallMarginBottom\");\n\t\t\t// Attach aggregation to the container\n\t\t\tthis._attachAggregationToContainer(this.tilesContainer);\n\t\t}\n\t\t// Return the existing or newly created container\n\t\treturn this.tilesContainer;\n\t}\n\n\t/**\n\t * Updates the activation flags for Insights Tiles based on the device type and viewport.\n\t *\n\t *\n\t * @private\n\t * @returns {void}\n\t */\n\tprivate _updateTilesActivity(): void {\n\t\t// Activate Insights Tiles based on container in viewport\n\t\tconst isPhoneScreen: boolean = this.getDeviceType() === DeviceType.Mobile;\n\t\t// Explicitly type the property being retrieved\n\t\tconst bActivateInsightsTiles: boolean = Boolean(this._controlModel.getProperty(\"/activateInsightsTiles\"));\n\t\tthis._controlModel.setProperty(\"/activateInsightsTilesOnPhone\", bActivateInsightsTiles && isPhoneScreen);\n\t\tthis._controlModel.setProperty(\"/activateInsightsTilesOnDesktop\", bActivateInsightsTiles && !isPhoneScreen);\n\t}\n\t/**\n\t * Attaches necessary aggregations and configurations to the provided container.\n\t *\n\t * @private\n\t * @param {GridContainer | HeaderContainer} tilesContainer - The container to which the aggregation and events are to be attached.\n\t * @returns {void}\n\t *\n\t */\n\tprivate _attachAggregationToContainer(tilesContainer: GridContainer | HeaderContainer) {\n\t\ttilesContainer.setModel(this._controlModel);\n\t\tconst sDefaultAggreName = tilesContainer.getMetadata().getDefaultAggregationName();\n\t\tconst isPhoneScreen = this.getDeviceType() === DeviceType.Mobile;\n\t\ttilesContainer.bindAggregation(sDefaultAggreName, {\n\t\t\tpath: \"/tiles\",\n\t\t\tfactory: (id: string, context: Context): ManagedObject => {\n\t\t\t\tconst oApp = context.getObject() as ICustomVisualization;\n\t\t\t\tif (oApp instanceof GenericTile) {\n\t\t\t\t\treturn oApp;\n\t\t\t\t}\n\t\t\t\tconst oVisualization = this.VizInstantiationService.instantiateVisualization(oApp.visualization) as ICustomVisualization;\n\t\t\t\toVisualization.setLayoutData?.(\n\t\t\t\t\tnew GridContainerItemLayoutData(`${this.getId()}-itemLayoutData-${id}`, {\n\t\t\t\t\t\tminRows: 2,\n\t\t\t\t\t\tcolumns: oVisualization.getDisplayFormat?.() === DisplayFormat.Standard ? 2 : 4\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\toVisualization?.bindProperty?.(\n\t\t\t\t\t\"active\",\n\t\t\t\t\tisPhoneScreen ? \"/activateInsightsTilesOnPhone\" : \"/activateInsightsTilesOnDesktop\"\n\t\t\t\t);\n\t\t\t\tthis._setDropAreaRectFunction(oVisualization as ManagedObject);\n\t\t\t\treturn oVisualization as ManagedObject;\n\t\t\t}\n\t\t});\n\t\tthis.addDragDropConfigTo(tilesContainer, (oEvent) => this._handleTilesDnd(oEvent));\n\t}\n\n\t/**\n\t * Sets the drop area rectangle function for the given visualization.\n\t *\n\t * @private\n\t * @param {ManagedObject} oVisualization - The visualization object to set the drop area rectangle function.\n\t */\n\tprivate _setDropAreaRectFunction(oVisualization: ManagedObject) {\n\t\tconst tilesDropAreaOffset = 8;\n\t\tObject.defineProperty(oVisualization, \"getDropAreaRect\", {\n\t\t\tvalue: function (this: Control) {\n\t\t\t\tconst domRef = this.getDomRef();\n\t\t\t\tif (!domRef) return null;\n\t\t\t\tconst mDropRect = domRef.getBoundingClientRect();\n\t\t\t\treturn {\n\t\t\t\t\tleft: mDropRect.left - tilesDropAreaOffset,\n\t\t\t\t\tright: mDropRect.right + tilesDropAreaOffset,\n\t\t\t\t\ttop: mDropRect.top,\n\t\t\t\t\tbottom: mDropRect.bottom,\n\t\t\t\t\twidth: mDropRect.width,\n\t\t\t\t\theight: mDropRect.height\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Handles the drag and drop of tiles.\n\t *\n\t * @private\n\t * @param {Event<DropInfo$DropEventParameters>} oEvent - The drop event parameters.\n\t */\n\tprivate _handleTilesDnd(oEvent: Event<DropInfo$DropEventParameters>) {\n\t\tconst sInsertPosition = oEvent.getParameter?.(\"dropPosition\"),\n\t\t\toDragItem = oEvent?.getParameter?.(\"draggedControl\") as Control,\n\t\t\toDropItem = oEvent.getParameter(\"droppedControl\") as Control,\n\t\t\tiDragItemIndex = (oDragItem.getParent() as FlexBox)?.indexOfItem(oDragItem);\n\t\tlet iDropItemIndex = (oDragItem.getParent() as FlexBox)?.indexOfItem(oDropItem);\n\n\t\tif (sInsertPosition === \"Before\" && iDragItemIndex === iDropItemIndex - 1) {\n\t\t\tiDropItemIndex--;\n\t\t} else if (sInsertPosition === \"After\" && iDragItemIndex === iDropItemIndex + 1) {\n\t\t\tiDropItemIndex++;\n\t\t}\n\n\t\tif (iDragItemIndex !== iDropItemIndex) {\n\t\t\tvoid this._DragnDropTiles(iDragItemIndex, iDropItemIndex, sInsertPosition as string);\n\t\t}\n\t}\n\n\t/**\n\t * Handles the drag and drop of tiles asynchronously.\n\t *\n\t * @private\n\t * @param {number} iDragItemIndex - The index of the dragged item.\n\t * @param {number} iDropItemIndex - The index of the dropped item.\n\t * @param {string} sInsertPosition - The position to insert the item.\n\t * @returns {Promise<void>} A promise that resolves when the drag and drop operation is complete.\n\t */\n\tprivate async _DragnDropTiles(iDragItemIndex: number, iDropItemIndex: number, sInsertPosition: string) {\n\t\tif (sInsertPosition === \"Before\" && iDragItemIndex < iDropItemIndex) {\n\t\t\tiDropItemIndex--;\n\t\t} else if (sInsertPosition === \"After\" && iDragItemIndex > iDropItemIndex) {\n\t\t\tiDropItemIndex++;\n\t\t}\n\t\tconst oDisplacedItem = this.aInsightsApps[iDropItemIndex] as ICustomVisualization,\n\t\t\toItemMoved = this.aInsightsApps.splice(iDragItemIndex, 1)[0] as ICustomVisualization;\n\t\tthis.aInsightsApps.splice(iDropItemIndex, 0, oItemMoved);\n\t\tconst moveConfigs = {\n\t\t\tpageId: MYHOME_PAGE_ID,\n\t\t\tsourceSectionIndex: oItemMoved.persConfig?.sectionIndex as number,\n\t\t\tsourceVisualizationIndex: oItemMoved.persConfig?.visualizationIndex as number,\n\t\t\ttargetSectionIndex: oDisplacedItem.persConfig?.sectionIndex as number,\n\t\t\ttargetVisualizationIndex: oDisplacedItem.persConfig?.visualizationIndex as number\n\t\t};\n\t\tthis._controlModel.setProperty(\"/tiles\", this.aInsightsApps);\n\t\tawait this.appManagerInstance.moveVisualization(moveConfigs);\n\t\tawait this.refreshData(true);\n\t\t// Ensures focus on tile after Panel refresh during DnD.\n\t\tsetTimeout(() => {\n\t\t\tfocusDraggedItem(this.tilesContainer, iDropItemIndex);\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Handles the edit tiles event.\n\t *\n\t * @param {Event} event - The event object.\n\t */\n\tprivate handleEditTiles(event: Event) {\n\t\t/* If called from Panel Header event.source() will return TilesPanel, if called from Insights Container event.source() will return InsightsContainer.\n\t\t_getLayout is available at Container Level*/\n\t\tlet parent: ManagedObject = event.getSource<TilesPanel>().getParent() || this;\n\t\tif (parent?.isA(\"sap.cux.home.TilesPanel\")) {\n\t\t\tparent = parent.getParent() as ManagedObject;\n\t\t}\n\t\t(parent as InsightsContainer)?._getLayout().openSettingsDialog(SETTINGS_PANELS_KEYS.INSIGHTS_TILES);\n\t}\n\n\t/**\n\t * Hides the header of the tiles panel.\n\t * @private\n\t */\n\tpublic handleHideHeader() {\n\t\tthis._headerVisible = false;\n\t\tthis.setProperty(\"title\", \"\");\n\t\tthis._toggleHeaderActions(false);\n\t}\n\n\t/**\n\t * Adds the header to the tiles panel.\n\t * @private\n\t */\n\tpublic handleAddHeader() {\n\t\tthis._headerVisible = true;\n\t\tthis.setProperty(\n\t\t\t\"title\",\n\t\t\t`${this._i18nBundle?.getText(\"insights\")} ${this._i18nBundle.getText(\"insightsTilesTitle\")} (${this.aInsightsApps.length})`\n\t\t);\n\t\tthis._toggleHeaderActions(true);\n\t}\n\n\t/**\n\t * Closes the \"Add from Favorites\" dialog.\n\t *\n\t * @private\n\t */\n\tprivate _closeAddFromFavDialog() {\n\t\tconst list = this._controlMap.get(`${this._addFromFavDialogId}-list`) as List;\n\t\tlist?.removeSelections();\n\t\t(this._controlMap.get(this._addFromFavDialogId) as Dialog)?.close();\n\t}\n\n\t/**\n\t * Navigates to the App Finder with optional group Id.\n\t * @async\n\t * @private\n\t * @param {string} [groupId] - Optional group Id\n\t */\n\tprivate async navigateToAppFinder(groupId?: string) {\n\t\tconst navigationService = await Container.getServiceAsync<Navigation>(\"Navigation\");\n\t\tconst navigationObject: { pageID: string; sectionID?: string } = {\n\t\t\tpageID: MYHOME_PAGE_ID,\n\t\t\tsectionID: MYINSIGHT_SECTION_ID\n\t\t};\n\t\tif (groupId) {\n\t\t\tnavigationObject.sectionID = groupId;\n\t\t}\n\t\tawait navigationService.navigate({\n\t\t\ttarget: {\n\t\t\t\tshellHash: `Shell-appfinder?&/catalog/${JSON.stringify(navigationObject)}`\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves the key of the legend color based on the provided color value.\n\t * @param {string} color - The color value for which to retrieve the legend color key.\n\t * @returns {string} The legend color key corresponding to the provided color value, or the default background color key if not found.\n\t * @private\n\t */\n\tprivate _getLegendColor(color: string) {\n\t\treturn END_USER_COLORS().find((oColor) => oColor.value === color) || DEFAULT_BG_COLOR();\n\t}\n\n\t/**\n\t * Handles the addition of tiles from favorite apps.\n\t * @returns {Promise<void>} A Promise that resolves when the operation is complete.\n\t * @private\n\t */\n\tprivate async _handleAddFromFavApps() {\n\t\tconst appsToAdd = await this._getFavToAdd();\n\t\tconst dialog = this._generateAddFromFavAppsDialog();\n\t\t(this._controlMap.get(`${this._addFromFavDialogId}-errorMessage`) as IllustratedMessage)?.setVisible(appsToAdd.length === 0);\n\t\tthis._generateAddFromFavAppsListItems(appsToAdd);\n\t\tdialog.open();\n\t}\n\n\t/**\n\t * Retrieves the favorite visualizations to be added.\n\t *\n\t * @private\n\t * @async\n\t * @returns {Promise<ISectionAndVisualization[]>} A promise that resolves to an array of favorite visualizations to be added.\n\t */\n\tprivate async _getFavToAdd(): Promise<ISectionAndVisualization[]> {\n\t\tconst aFavApps: ISectionAndVisualization[] = await this.appManagerInstance.fetchFavVizs(false, true);\n\t\tconst aDynamicApps = aFavApps.filter(function (oDynApp) {\n\t\t\treturn oDynApp.isCount || oDynApp.isSmartBusinessTile;\n\t\t});\n\n\t\tconst aFilteredFavApps = aDynamicApps.filter((oDynApp) => {\n\t\t\tconst iAppIndex = this.aInsightsApps.findIndex(function (oInsightApps) {\n\t\t\t\treturn (\n\t\t\t\t\t(!oDynApp.visualization?.isBookmark &&\n\t\t\t\t\t\t(oInsightApps as ICustomVisualization).visualization?.vizId === oDynApp.visualization?.vizId) ||\n\t\t\t\t\t(oDynApp.visualization?.isBookmark &&\n\t\t\t\t\t\t(oInsightApps as ICustomVisualization).visualization?.targetURL === oDynApp.visualization?.targetURL)\n\t\t\t\t);\n\t\t\t});\n\t\t\treturn iAppIndex === -1;\n\t\t});\n\n\t\treturn aFilteredFavApps;\n\t}\n\n\t/**\n\t * Retrieves the selected Apps from the dialog.\n\t * @returns {sap.m.ListItemBase[]} An array of selected Apps.\n\t * @private\n\t */\n\tprivate _getSelectedInsights() {\n\t\tconst list = this._controlMap.get(`${this._addFromFavDialogId}-list`) as List;\n\t\treturn list.getSelectedItems() || [];\n\t}\n\n\t/**\n\t * Generates list items for the \"Add from Favorites\" dialog.\n\t *\n\t * @private\n\t * @param {ISectionAndVisualization[]} appsToAdd - An array of favorite visualizations to be added.\n\t */\n\tprivate _generateAddFromFavAppsListItems(appsToAdd: ISectionAndVisualization[]) {\n\t\tconst id = this._addFromFavDialogId;\n\t\tconst list = this._controlMap.get(`${id}-list`) as List;\n\t\tif (appsToAdd.length) {\n\t\t\tlist.destroyItems();\n\t\t\tconst listItems = appsToAdd.map(\n\t\t\t\t(app, index) =>\n\t\t\t\t\tnew CustomListItem({\n\t\t\t\t\t\tid: `${id}-listItem-${index}`,\n\t\t\t\t\t\tcontent: [\n\t\t\t\t\t\t\tnew HBox({\n\t\t\t\t\t\t\t\tid: `${id}-listItem-${index}-content`,\n\t\t\t\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\tnew Icon({\n\t\t\t\t\t\t\t\t\t\tid: `${id}-listItem-${index}-content-icon`,\n\t\t\t\t\t\t\t\t\t\tsrc: app.icon,\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: this._getLegendColor(\n\t\t\t\t\t\t\t\t\t\t\ttypeof app.BGColor === \"object\" ? app.BGColor.key : (app.BGColor ?? \"\")\n\t\t\t\t\t\t\t\t\t\t).value,\n\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\twidth: \"2.25rem\",\n\t\t\t\t\t\t\t\t\t\theight: \"2.25rem\",\n\t\t\t\t\t\t\t\t\t\tsize: \"1.25rem\"\n\t\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiRoundedBorder sapUiTinyMargin\"),\n\t\t\t\t\t\t\t\t\tnew ObjectIdentifier({\n\t\t\t\t\t\t\t\t\t\tid: `${id}-listItem-${index}-content-identifier`,\n\t\t\t\t\t\t\t\t\t\ttitle: app.title,\n\t\t\t\t\t\t\t\t\t\ttext: app.subtitle,\n\t\t\t\t\t\t\t\t\t\ttooltip: app.title\n\t\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMargin\")\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t]\n\t\t\t\t\t})\n\t\t\t\t\t\t.addStyleClass(\"sapUiContentPadding\")\n\t\t\t\t\t\t.data(\"app\", app) as CustomListItem\n\t\t\t);\n\t\t\tlistItems.forEach((item) => list.addItem(item));\n\t\t}\n\t\tlist?.setVisible(appsToAdd.length !== 0);\n\t}\n\n\t/**\n\t * Generates the \"Add from Favorites\" dialog.\n\t *\n\t * @private\n\t * @returns {Dialog} The generated dialog.\n\t */\n\tprivate _generateAddFromFavAppsDialog(): Dialog {\n\t\tconst id = this._addFromFavDialogId;\n\t\tconst setAddBtnEnabled = () => {\n\t\t\tconst selectedItems = this._getSelectedInsights();\n\t\t\t(this._controlMap.get(`${id}-addBtn`) as Button).setEnabled(selectedItems.length > 0);\n\t\t};\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tconst getAppFinderBtn = (id: string, btnType?: ButtonType) => {\n\t\t\t\tconst appFinderBtn = new Button(id, {\n\t\t\t\t\ticon: \"sap-icon://action\",\n\t\t\t\t\ttext: this._i18nBundle.getText(\"appFinderBtn\"),\n\t\t\t\t\tpress: () => {\n\t\t\t\t\t\tthis._closeAddFromFavDialog();\n\t\t\t\t\t\tvoid this.navigateToAppFinder();\n\t\t\t\t\t},\n\t\t\t\t\tvisible: _showAddApps(),\n\t\t\t\t\ttype: btnType ?? ButtonType.Default\n\t\t\t\t});\n\t\t\t\taddFESRSemanticStepName(appFinderBtn, FESR_EVENTS.PRESS, \"tilesAppFinder\");\n\t\t\t\treturn appFinderBtn;\n\t\t\t};\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${id}-list`,\n\t\t\t\tnew List({\n\t\t\t\t\tid: `${id}-list`,\n\t\t\t\t\tmode: \"MultiSelect\",\n\t\t\t\t\tselectionChange: setAddBtnEnabled\n\t\t\t\t})\n\t\t\t);\n\t\t\tconst addButton = new Button({\n\t\t\t\tid: `${id}-addBtn`,\n\t\t\t\ttext: this._i18nBundle.getText(\"addBtn\"),\n\t\t\t\ttype: \"Emphasized\",\n\t\t\t\tpress: () => {\n\t\t\t\t\tvoid this._addFromFavApps();\n\t\t\t\t},\n\t\t\t\tenabled: false\n\t\t\t});\n\t\t\taddFESRSemanticStepName(addButton, FESR_EVENTS.PRESS, \"addSmartApps\");\n\t\t\tthis._controlMap.set(`${id}-addBtn`, addButton);\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${id}-errorMessage`,\n\t\t\t\tnew IllustratedMessage({\n\t\t\t\t\tid: `${id}-errorMessage`,\n\t\t\t\t\tillustrationSize: IllustratedMessageSize.Small,\n\t\t\t\t\tillustrationType: IllustratedMessageType.AddDimensions,\n\t\t\t\t\ttitle: this._i18nBundle.getText(\"noAppsTitle\"),\n\t\t\t\t\tdescription: this._i18nBundle.getText(\"tilesSectionNoDataDescription\"),\n\t\t\t\t\tvisible: true\n\t\t\t\t}).addStyleClass(\"sapUiLargeMarginTop\")\n\t\t\t);\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew Dialog(id, {\n\t\t\t\t\ttitle: this._i18nBundle.getText(\"addSmartApps\"),\n\t\t\t\t\tcontent: [\n\t\t\t\t\t\tnew Label({\n\t\t\t\t\t\t\tid: `${id}-label`,\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"suggTileDialogLabel\"),\n\t\t\t\t\t\t\twrapping: true\n\t\t\t\t\t\t}).addStyleClass(\"sapMTitleAlign sapUiTinyMarginTopBottom sapUiSmallMarginBeginEnd\"),\n\t\t\t\t\t\tnew HBox({\n\t\t\t\t\t\t\tid: `${id}-textContainer`,\n\t\t\t\t\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\tnew Title({\n\t\t\t\t\t\t\t\t\tid: `${id}-text`,\n\t\t\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"suggTileDialogTitle\")\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tgetAppFinderBtn(`${id}-addAppsBtn`, ButtonType.Transparent)\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginTop dialogHeader sapUiSmallMarginBeginEnd\"),\n\t\t\t\t\t\tthis._controlMap.get(`${id}-list`) as List,\n\t\t\t\t\t\tthis._controlMap.get(`${id}-errorMessage`) as IllustratedMessage\n\t\t\t\t\t],\n\t\t\t\t\tcontentWidth: \"42.75rem\",\n\t\t\t\t\tcontentHeight: \"32.5rem\",\n\t\t\t\t\tendButton: new Button({\n\t\t\t\t\t\tid: `${id}-addFromFavDialogCloseBtn`,\n\t\t\t\t\t\ttext: this._i18nBundle.getText(\"closeBtn\"),\n\t\t\t\t\t\tpress: this._closeAddFromFavDialog.bind(this)\n\t\t\t\t\t}),\n\t\t\t\t\tescapeHandler: this._closeAddFromFavDialog.bind(this),\n\t\t\t\t\tbuttons: [\n\t\t\t\t\t\tthis._controlMap.get(`${id}-addBtn`) as Button,\n\t\t\t\t\t\tnew Button({\n\t\t\t\t\t\t\tid: `${id}-cancelBtn`,\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"cancelBtn\"),\n\t\t\t\t\t\t\tpress: this._closeAddFromFavDialog.bind(this)\n\t\t\t\t\t\t})\n\t\t\t\t\t]\n\t\t\t\t}).addStyleClass(\"sapContrastPlus sapCuxAddFromInsightsDialog\")\n\t\t\t);\n\t\t}\n\t\tsetAddBtnEnabled();\n\t\treturn this._controlMap.get(id) as Dialog;\n\t}\n\n\t/**\n\t * Handles the addition of tiles from favorite apps.\n\t *\n\t * @private\n\t * @async\n\t * @returns {Promise<void>} A promise that resolves when the operation is complete.\n\t */\n\tprivate async _addFromFavApps() {\n\t\tconst dialog = this._controlMap.get(this._addFromFavDialogId) as Dialog;\n\t\tdialog.setBusy(true);\n\t\tconst selectedItems = this._getSelectedInsights();\n\t\tawait selectedItems.reduce(async (promise, oApp) => {\n\t\t\tawait promise;\n\t\t\tconst app = oApp.data(\"app\") as ISectionAndVisualization;\n\t\t\tconst oMovingConfig = {\n\t\t\t\tpageId: MYHOME_PAGE_ID,\n\t\t\t\tsourceSectionIndex: app.persConfig?.sectionIndex as number,\n\t\t\t\tsourceVisualizationIndex: app.persConfig?.visualizationIndex as number,\n\t\t\t\ttargetSectionIndex: this.appManagerInstance.insightsSectionIndex,\n\t\t\t\ttargetVisualizationIndex: -1\n\t\t\t};\n\t\t\tif (app.visualization?.displayFormatHint !== \"standard\" && app.visualization?.displayFormatHint !== \"standardWide\") {\n\t\t\t\tif (app.visualization?.supportedDisplayFormats?.includes(\"standard\")) {\n\t\t\t\t\tapp.visualization.displayFormatHint = \"standard\";\n\t\t\t\t} else if (app.visualization?.supportedDisplayFormats?.includes(\"standardWide\")) {\n\t\t\t\t\tapp.visualization.displayFormatHint = \"standardWide\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Add Selected App to Insights Section\n\t\t\tif (!app.visualization?.vizId) {\n\t\t\t\t(app.visualization as IVisualization).vizId = app.visualization?.targetURL ?? \"\";\n\t\t\t}\n\t\t\tif (app.visualization?.isBookmark === true) {\n\t\t\t\tawait this.appManagerInstance.addBookMark(app.visualization, oMovingConfig);\n\t\t\t} else {\n\t\t\t\tawait this.appManagerInstance.addVisualization(app.visualization?.vizId as string, MYINSIGHT_SECTION_ID);\n\t\t\t}\n\t\t}, Promise.resolve());\n\n\t\tawait this.refreshData();\n\t\tdialog.setBusy(false);\n\t\tdialog.close();\n\t}\n\n\t/**\n\t * Calculates the number of visible tiles that can fit within the available width of the parent container.\n\t *\n\t * @private\n\t * @param {ICustomVisualization[]} insightsApps - An array of custom visualizations to be displayed as tiles.\n\t * @returns {number} - The number of visible tiles.\n\t */\n\tprivate _calculateVisibleTileCount(insightsApps: ICustomVisualization[]): number {\n\t\tconst layout = this._getInsightsContainer()?._getLayout();\n\t\tconst layoutDomRef = layout?.getDomRef();\n\t\tconst apps = insightsApps || [];\n\t\tlet count = 0;\n\n\t\tif (layoutDomRef && apps.length) {\n\t\t\tconst isHeaderVisible = layout.getProperty(\"showHeader\") as boolean;\n\t\t\tconst sectionNodeIndex = isHeaderVisible ? 1 : 0;\n\t\t\tconst sectionDomRef = layoutDomRef.childNodes[sectionNodeIndex] as Element;\n\t\t\tconst domProperties = fetchElementProperties(sectionDomRef, [\"width\", \"padding-left\", \"padding-right\"]);\n\t\t\tlet availableWidth = domProperties.width - domProperties[\"padding-left\"] - domProperties[\"padding-right\"];\n\t\t\tconst widthMap = {} as Record<DisplayFormat, number>;\n\n\t\t\twidthMap[DisplayFormat.Standard] = StandardTileWidth + Gap;\n\t\t\twidthMap[DisplayFormat.StandardWide] = StandardWideTileWidth + Gap;\n\n\t\t\tlet nextTileWidth = widthMap[(apps[count].visualization?.displayFormatHint ?? DisplayFormat.Standard) as DisplayFormat];\n\t\t\tdo {\n\t\t\t\tavailableWidth -= nextTileWidth;\n\t\t\t\t++count;\n\t\t\t\tnextTileWidth = widthMap[(apps[count]?.visualization?.displayFormatHint ?? DisplayFormat.Standard) as DisplayFormat];\n\t\t\t} while (availableWidth > nextTileWidth);\n\t\t}\n\n\t\treturn count || 1;\n\t}\n\n\tprivate _calculatePlaceholderTileCount(): number {\n\t\tconst layoutDomRef = this._getInsightsContainer()?._getLayout()?.getDomRef();\n\t\tlet count = 0;\n\t\tif (layoutDomRef) {\n\t\t\tconst sectionDomRef = layoutDomRef.childNodes[0] as Element;\n\t\t\tconst domProperties = fetchElementProperties(sectionDomRef, [\"width\", \"padding-left\", \"padding-right\"]);\n\t\t\tlet availableWidth = domProperties.width - domProperties[\"padding-left\"] - domProperties[\"padding-right\"];\n\t\t\tconst width = StandardTileWidth + Gap;\n\n\t\t\tcount = Math.floor(availableWidth / width);\n\t\t}\n\n\t\treturn count || 1;\n\t}\n\n\t/**\n\t * Adjusts the layout of the tiles panel based on the current layout and device type.\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic _adjustLayout() {\n\t\tconst layout = this._getInsightsContainer()?._getLayout();\n\t\tconst isMobileDevice = this.getDeviceType() === DeviceType.Mobile;\n\n\t\tif (layout) {\n\t\t\tconst visibleTileCount = isMobileDevice\n\t\t\t\t? this.aInsightsApps?.length\n\t\t\t\t: this._calculateVisibleTileCount(this.aInsightsApps as ICustomVisualization[]);\n\t\t\tconst isElementExpanded = layout._getCurrentExpandedElementName() === this.getProperty(\"fullScreenName\");\n\t\t\tthis._controlModel.setProperty(\n\t\t\t\t\"/tiles\",\n\t\t\t\tisElementExpanded ? this.aInsightsApps : this.aInsightsApps?.slice(0, visibleTileCount)\n\t\t\t);\n\t\t\tthis._controlModel.setProperty(\"/isPhone\", isMobileDevice);\n\t\t\tthis._updateTilesActivity();\n\t\t\t//Show/Hide Full Screen Button if panel header is visible otherwise update visibility of container Full Screen Button\n\t\t\tconst showFullScreenButton = isElementExpanded || this.aInsightsApps.length > visibleTileCount;\n\t\t\tif (this._headerVisible) {\n\t\t\t\tif (!isMobileDevice) {\n\t\t\t\t\t(this.getAggregation(\"actionButtons\") as Button[])?.forEach((actionButton) => {\n\t\t\t\t\t\tif (actionButton.getId().includes(tilesActionButtons.ADD_TILES)) {\n\t\t\t\t\t\t\tthis._getInsightsContainer().toggleActionButton(actionButton, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis._getInsightsContainer()?.toggleFullScreenElements(this, showFullScreenButton);\n\t\t\t} else {\n\t\t\t\tconst fullScreenButton = getAssociatedFullScreenMenuItem(this);\n\t\t\t\tconst fullScreenText = fullScreenButton?.getTitle() ?? \"\";\n\t\t\t\tthis._getInsightsContainer()?.updateMenuItem(\n\t\t\t\t\tthis._controlMap.get(`${this.getId()}-${tilesContainerMenuItems.SHOW_MORE}`) as MenuItem,\n\t\t\t\t\tshowFullScreenButton,\n\t\t\t\t\tfullScreenText\n\t\t\t\t);\n\t\t\t\tthis._getInsightsContainer()?.updateActionButton(\n\t\t\t\t\tthis._controlMap.get(`${this.getId()}-${tilesContainerActionButtons.SHOW_MORE}`) as Button,\n\t\t\t\t\tshowFullScreenButton,\n\t\t\t\t\tfullScreenText\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the InsightsContainer instance associated with this TilesPanel.\n\t *\n\t * @private\n\t * @returns {InsightsContainer} The InsightsContainer instance.\n\t */\n\tprivate _getInsightsContainer(): InsightsContainer {\n\t\tif (!this.insightsContainer) {\n\t\t\tthis.insightsContainer = this.getParent() as InsightsContainer;\n\t\t}\n\t\treturn this.insightsContainer;\n\t}\n\n\t/**\n\t * Retrieves the menu items for the container.\n\t *\n\t * @private\n\t * @returns {MenuItem[]} An array of MenuItem instances.\n\t */\n\tpublic getContainerMenuItems(): MenuItem[] {\n\t\tif (!this._containerMenuItems) {\n\t\t\tconst containerRefresh = this._createRefreshMenuItem(tilesContainerMenuItems.REFRESH, \"containerTilesRefresh\");\n\t\t\tconst containerEditTiles = this._createEditTilesMenuItem(tilesContainerMenuItems.EDIT_TILES, \"containerManageTiles\");\n\t\t\tconst containerShowMore = createShowMoreMenuItem(this, tilesContainerMenuItems.SHOW_MORE, \"containerTilesShowMore\");\n\t\t\tconst container = this.getParent() as BaseContainer;\n\t\t\tthis._controlMap.set(`${this.getId()}-${tilesContainerMenuItems.SHOW_MORE}`, containerShowMore);\n\t\t\tthis._containerMenuItems = [containerRefresh, containerEditTiles, containerShowMore];\n\t\t\tif (checkPanelExists(container, appsConatinerlName, favAppPanelName)) {\n\t\t\t\tconst containerAddFromFav = this._createAddFromFavMenuItem(tilesContainerMenuItems.ADD_APPS, \"containerSmartAppsDialog\");\n\t\t\t\tthis._containerMenuItems.splice(1, 0, containerAddFromFav);\n\t\t\t}\n\t\t}\n\t\treturn this._containerMenuItems;\n\t}\n\n\t/**\n\t * Retrieves the action buttons for the container.\n\t *\n\t * @private\n\t * @returns {Button[]} An array of Button instances.\n\t */\n\tpublic getContainerActionButtons(): Button[] {\n\t\tif (!this._containerActionButtons) {\n\t\t\tthis._containerActionButtons = [];\n\t\t\tthis._containerActionButtons.push(\n\t\t\t\tthis._createAddTilesButton(tilesContainerActionButtons.ADD_TILES, \"containerSmartAppsDialog\")\n\t\t\t);\n\n\t\t\tconst containerFullScreenActionButton = createShowMoreActionButton(\n\t\t\t\tthis,\n\t\t\t\ttilesContainerActionButtons.SHOW_MORE,\n\t\t\t\t\"containerTilesShowMore\"\n\t\t\t);\n\t\t\tif (containerFullScreenActionButton) {\n\t\t\t\tthis._controlMap.set(`${this.getId()}-${tilesContainerActionButtons.SHOW_MORE}`, containerFullScreenActionButton);\n\t\t\t\tthis._containerActionButtons.push(containerFullScreenActionButton);\n\t\t\t}\n\t\t}\n\t\treturn this._containerActionButtons;\n\t}\n\n\t/**\n\t * Creates a refresh menu item.\n\t *\n\t * @private\n\t * @param {string} id - The ID of the menu item.\n\t * @param {string} [fesrId] - The FESR ID for the menu item.\n\t * @returns {MenuItem} The created MenuItem instance.\n\t */\n\tprivate _createRefreshMenuItem(id: string, fesrId?: string): MenuItem {\n\t\tconst menuItem = new MenuItem(`${this.getId()}-${id}`, {\n\t\t\ttitle: this._i18nBundle.getText(\"refresh\"),\n\t\t\ticon: \"sap-icon://refresh\",\n\t\t\tvisible: false,\n\t\t\tpress: () => void this.refreshData(true)\n\t\t});\n\t\tthis._controlMap.set(`${this.getId()}-${id}`, menuItem);\n\t\tif (fesrId) {\n\t\t\taddFESRId(menuItem, fesrId);\n\t\t}\n\n\t\treturn menuItem;\n\t}\n\n\t/**\n\t * Creates an \"Add from Favorites\" menu item.\n\t *\n\t * @private\n\t * @param {string} id - The ID of the menu item.\n\t * @param {string} [fesrId] - The FESR ID for the menu item.\n\t * @returns {MenuItem} The created MenuItem instance.\n\t */\n\tprivate _createAddFromFavMenuItem(id: string, fesrId?: string): MenuItem {\n\t\tif (!this._controlMap.get(`${this.getId()}-${id}`)) {\n\t\t\tconst menuItem = new MenuItem(`${this.getId()}-${id}`, {\n\t\t\t\ttitle: this._i18nBundle.getText(\"addSmartApps\"),\n\t\t\t\ticon: \"sap-icon://duplicate\",\n\t\t\t\tvisible: false,\n\t\t\t\tpress: () => void this._handleAddFromFavApps()\n\t\t\t});\n\t\t\tthis._controlMap.set(`${this.getId()}-${id}`, menuItem);\n\t\t\tif (fesrId) {\n\t\t\t\taddFESRId(menuItem, fesrId);\n\t\t\t}\n\t\t}\n\t\treturn this._controlMap.get(`${this.getId()}-${id}`) as MenuItem;\n\t}\n\n\t/**\n\t * Creates an \"Edit Tiles\" menu item.\n\t *\n\t * @private\n\t * @param {string} id - The ID of the menu item.\n\t * @param {string} [fesrId] - The FESR ID for the menu item.\n\t * @returns {MenuItem} The created MenuItem instance.\n\t */\n\tprivate _createEditTilesMenuItem(id: string, fesrId?: string): MenuItem {\n\t\tconst menuItem = new MenuItem(`${this.getId()}-${id}`, {\n\t\t\ttitle: this._i18nBundle.getText(\"editLinkTiles\"),\n\t\t\ticon: \"sap-icon://edit\",\n\t\t\tvisible: false,\n\t\t\tpress: (event: Event) => this.handleEditTiles(event)\n\t\t});\n\t\tthis._controlMap.set(`${this.getId()}-${id}`, menuItem);\n\t\tif (fesrId) {\n\t\t\taddFESRId(menuItem, fesrId);\n\t\t}\n\n\t\treturn menuItem;\n\t}\n\n\t/**\n\t * Creates an \"Add Tiles\" button.\n\t *\n\t * @private\n\t * @param {string} id - The ID of the button.\n\t * @param {string} [fesrId] - The FESR ID for the button.\n\t * @returns {Button} The created Button instance.\n\t */\n\tprivate _createAddTilesButton(id: string, fesrId?: string): Button {\n\t\tconst actionButton = new Button(`${this.getId()}-${id}`, {\n\t\t\ttext: this._i18nBundle.getText(\"appFinderLink\"),\n\t\t\tpress: async () => {\n\t\t\t\tconst container = this.getParent() as BaseContainer;\n\t\t\t\tif (checkPanelExists(container, appsConatinerlName, favAppPanelName)) {\n\t\t\t\t\t// Favorite App Panel is visible, proceed as usual\n\t\t\t\t\tvoid this._handleAddFromFavApps();\n\t\t\t\t} else {\n\t\t\t\t\t// Favorite App Panel is NOT visible, navigate to App Finder\n\t\t\t\t\tawait this.navigateToAppFinder();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis._controlMap.set(`${this.getId()}-${id}`, actionButton);\n\t\tif (fesrId) {\n\t\t\taddFESRId(actionButton, fesrId);\n\t\t}\n\n\t\treturn actionButton;\n\t}\n\n\t/**\n\t * Toggles the visibility of the header actions.\n\t *\n\t * @param {boolean} bShow - Whether to show or hide the header actions.\n\t * @private\n\t */\n\tprivate _toggleHeaderActions(bShow: boolean) {\n\t\t(this.getAggregation(\"menuItems\") as MenuItem[])?.forEach((menuItem) => {\n\t\t\tthis._getInsightsContainer()?.toggleMenuListItem(menuItem, bShow);\n\t\t});\n\t\t(this.getAggregation(\"actionButtons\") as Button[])?.forEach((actionButton) =>\n\t\t\tthis._getInsightsContainer()?.toggleActionButton(actionButton, bShow)\n\t\t);\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":271,"column":0},"map":{"version":3,"names":["sap","ui","define","Log","Card","GridContainer","GridContainerSettings","Button","GenericTile","HeaderContainer","IllustratedMessage","Text","TileContent","VBox","sap_m_library","Device","UI5Element","DateFormat","JSONModel","__BasePanel","__MenuItem","__ToDosContainer","__BatchHelper","___utils_Device","___utils_FESRUtil","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","Priority","_finallyRethrows","finalizer","bind","URLHelper","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","observer","prototype","onFulfilled","onRejected","this","callback","_this","_isSettledPact","thenable","_forTo","array","check","i","reject","_cycle","length","BasePanel","_forOf","target","step","next","done","return","_fixup","TypeError","values","push","MenuItem","ToDosContainer","BatchHelper","calculateCardWidth","DeviceType","fetchElementProperties","addFESRId","Constants","SITUATION_ICON","PLACEHOLDER_ITEMS_COUNT","TODO_CARDS_LIMIT","TODO_SECTION_LIMIT","TODOS_REFRESH_INTERVAL","MOBILE_DEVICE_MAX_WIDTH","DEFAULT_TITLE_HEIGHT","DEFAULT_CARD_HEIGHT","DEFAULT_TAB_HEADER_HEIGHT","ToDoPanel","extend","metadata","library","properties","baseUrl","type","group","defaultValue","visibility","countUrl","dataUrl","targetAppUrl","minCardWidth","maxCardWidth","constructor","_constructor","id","settings","BasePanel.prototype.constructor.call","batchHelper","init","_init","BasePanel.prototype.init.call","_oData","isLoaded","hasError","cardWidth","getSupported","isExpandedOnce","isCountCalledOnce","illustrationType","refreshInfo","_toRelativeDateTime","Date","horizontalCardCount","illustrationTitle","_i18nBundle","getText","illustrationDescription","isPhone","resize","width","system","phone","tiles","Array","fill","loadState","displayTiles","_controlModel","requests","_toDoWrapper","getId","renderType","items","_generateCardContainer","_generateMobileCardContainer","_generateErrorMessage","setModel","_addContent","menuItem","title","icon","press","_onPressRefresh","addAggregation","_refreshBtn","text","setProperty","attachEvent","Promise","resolve","_beforePanelExpand","_cardContainer","inlineBlockLayout","snapToRow","visible","layout","columns","columnSize","gap","addStyleClass","_mobileCardContainer","scrollStep","gridLayout","scrollTime","showDividers","_errorCard","_errorMessage","illustrationSize","description","content","getParent","_getSelectedPanel","_loadCards","forceRefresh","_this2","_loadToDos","undefined","_bindInnerControls","selectedKey","getProperty","_isElementExpanded","_setCount","_getSupported","setTimeout","_generatePlaceHolderTiles","_generateRequestObject","onlyCount","concat","_submitBatch","fireEvent","_setSectionRefreshInterval","lastRefreshedTime","_updateRefreshInformation","_switchTabIfRequired","_updateHeaderIfExclusive","catch","error","Error","message","finally","refresh","_adjustLayout","toDosWrapper","_getContent","hasStyleClass","_handleError","getTargetAppUrl","removeContent","_isExclusivePanel","_setTitle","String","_innerControlsBound","bindAggregation","path","factory","context","generateCardTemplate","bindProperty","_generateCardTemplate","mode","frameType","pressEnabled","header","tileContent","priority","priorityText","_toPriorityText","footer","key","VeryHigh","High","Medium","Low","_cardCount","_getVisibleCardCount","isPlaceholder","calculationProperties","_getLayout","isElementExpanded","targetDomRef","getDomRef","isHeaderVisible","containerDomRef","_getFullScreenContainer","sectionNodeIndex","childNodes","isMobileDevice","cardCount","getHorizontalCardCount","getVerticalCardCount","toDosContainer","_getCurrentExpandedElementName","_getHorizontalCardCount","domRef","domProperties","availableWidth","Object","slice","reduce","propertyValue","actualCardCount","minWidth","maxWidth","cardLayoutConfig","containerWidth","totalCards","Math","max","floor","_getVerticalCardCount","sectionDomProperties","parentDomProperties","parentElement","titleHeight","calculateTitleHeight","availableHeight","height","margin","cardHeight","verticalCardCount","_calculateTitleHeight","container","containerHeaderRef","getElementById","iconTabBarHeaderRef","_getInnerControl","defaultHeight","clientHeight","options","_this3","urls","generateRequestUrls","splice","baseURL","getBaseUrl","requestURLs","success","args","onDataReceived","Number","_handleEmptyCards","_generateRequestUrls","queryString","getDataUrl","includes","getCountUrl","_onDataReceived","results","arguments","_this4","getNoDataText","allPanels","getContent","supportedPanels","filter","panel","clearInterval","refreshFn","setInterval","_updateContainerHeader","displayCards","getDeviceType","Mobile","toggleFullScreenElements","date","inputDate","isNaN","relativeDateFormatter","format","_getNoDataText","_parseResponse","response","d","numericD","numericResponse","_this5","all","map","request","createMultipartRequest","responses","processedResponses","JSON","parse","_temp","_wasThrown","_result","_clearRequests","_isLoaded","parentContainer","isContainerExpanded","_setLoaded","_setSupported","isSupported","_getAppIntent","pattern","match","semanticObject","action","params","paramsArray","split","param","_this6","_interrupt","_temp5","_temp3","nextAvailablePanel","panels","getAggregation","_temp4","_temp2","_getCardCount","_onPressViewAll","redirect","_this7","_temp6","getDateTimeInstance","style","relative","relativeStyle"],"sources":["ToDoPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport Card from \"sap/f/Card\";\nimport GridContainer from \"sap/f/GridContainer\";\nimport GridContainerSettings from \"sap/f/GridContainerSettings\";\nimport Button from \"sap/m/Button\";\nimport GenericTile from \"sap/m/GenericTile\";\nimport HeaderContainer from \"sap/m/HeaderContainer\";\nimport IllustratedMessage from \"sap/m/IllustratedMessage\";\nimport Text from \"sap/m/Text\";\nimport TileContent from \"sap/m/TileContent\";\nimport VBox from \"sap/m/VBox\";\nimport { LoadState, Priority, URLHelper } from \"sap/m/library\";\nimport Device from \"sap/ui/Device\";\nimport Control from \"sap/ui/core/Control\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport DateFormat from \"sap/ui/core/format/DateFormat\";\nimport Context from \"sap/ui/model/Context\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport BaseContainer from \"./BaseContainer\";\nimport BasePanel from \"./BasePanel\";\nimport IToDoPanel from \"./IToDoPanel\";\nimport MenuItem from \"./MenuItem\";\nimport { $ToDoPanelSettings } from \"./ToDoPanel\";\nimport ToDosContainer from \"./ToDosContainer\";\nimport BatchHelper from \"./utils/BatchHelper\";\nimport { calculateCardWidth, DeviceType, fetchElementProperties } from \"./utils/Device\";\nimport { addFESRId } from \"./utils/FESRUtil\";\n\ninterface Request {\n\tbaseURL: string;\n\trequestURLs: string[];\n\tsuccess(args: unknown[]): Promise<void>;\n}\n\nexport interface CalculationProperties {\n\tisPlaceholder?: boolean;\n}\n\nexport interface Intent {\n\ttarget: {\n\t\tsemanticObject: string;\n\t\taction: string;\n\t};\n\tparams: {\n\t\t[key: string]: string;\n\t};\n}\n\nexport interface RequestOptions {\n\ttype: string;\n\tonlyCount?: boolean;\n}\n\nexport interface Response {\n\td?: {\n\t\tresults?: unknown[];\n\t};\n\tresults?: unknown[];\n\tvalue?: unknown[];\n}\n\nconst Constants = {\n\tSITUATION_ICON: \"sap-icon://message-warning\",\n\tPLACEHOLDER_ITEMS_COUNT: 5,\n\tTODO_CARDS_LIMIT: 100,\n\tTODO_SECTION_LIMIT: 6,\n\tTODOS_REFRESH_INTERVAL: 65000,\n\tMOBILE_DEVICE_MAX_WIDTH: 600,\n\tDEFAULT_TITLE_HEIGHT: 33,\n\tDEFAULT_CARD_HEIGHT: 168,\n\tDEFAULT_TAB_HEADER_HEIGHT: 44\n};\n\n/**\n *\n * Abstract Panel class for managing and storing To-Do cards.\n *\n * @extends BasePanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @abstract\n * @internal\n * @experimental Since 1.121\n * @public\n *\n * @alias sap.cux.home.ToDoPanel\n */\nexport default abstract class ToDoPanel extends BasePanel implements IToDoPanel {\n\tprotected _oData!: Record<string, unknown>;\n\tprotected requests!: Request[];\n\tprivate _controlModel!: JSONModel;\n\tprivate _toDoWrapper!: VBox;\n\tprivate _cardContainer!: GridContainer;\n\tprivate _mobileCardContainer!: HeaderContainer;\n\tprivate _errorCard!: Card;\n\tprivate _errorMessage!: IllustratedMessage;\n\tprivate _refreshBtn!: Button;\n\tprivate _loadToDos!: Promise<void> | undefined;\n\tprivate _innerControlsBound!: boolean;\n\tprivate _cardCount!: number;\n\tprivate batchHelper!: BatchHelper;\n\n\tconstructor(id?: string | $ToDoPanelSettings);\n\tconstructor(id?: string, settings?: $ToDoPanelSettings);\n\t/**\n\t * Constructor for a new To-Dos Panel.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $ToDoPanelSettings) {\n\t\tsuper(id, settings);\n\t\tthis.batchHelper = new BatchHelper();\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * Specifies the base URL for batching requests sent from the panel.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\tbaseUrl: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * Specifies the URL for fetching the count of requested to-do cards.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\tcountUrl: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * Specifies the URL from where the to-do cards should be fetched.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\tdataUrl: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * Specifies the URL of the target application associated with the to-do cards.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\ttargetAppUrl: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * Specifies the minimum width of the card in pixels.\n\t\t\t *\n\t\t\t * @private\n\t\t\t */\n\t\t\tminCardWidth: { type: \"int\", group: \"Misc\", defaultValue: 304, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Specifies the maximum width of the card in pixels.\n\t\t\t *\n\t\t\t * @private\n\t\t\t */\n\t\t\tmaxCardWidth: { type: \"int\", group: \"Misc\", defaultValue: 583, visibility: \"hidden\" }\n\t\t}\n\t};\n\n\tstatic relativeDateFormatter = DateFormat.getDateTimeInstance({\n\t\tstyle: \"medium\",\n\t\trelative: true,\n\t\trelativeStyle: \"short\"\n\t});\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\t//Initialise ToDos Model\n\t\tthis._oData = {\n\t\t\tlength: 0,\n\t\t\tisLoaded: false,\n\t\t\thasError: false,\n\t\t\tcardWidth: \"20rem\",\n\t\t\tgetSupported: false,\n\t\t\tisExpandedOnce: false,\n\t\t\tisCountCalledOnce: false,\n\t\t\tillustrationType: \"sapIllus-NoTasks\",\n\t\t\trefreshInfo: this._toRelativeDateTime(new Date()),\n\t\t\thorizontalCardCount: Constants.PLACEHOLDER_ITEMS_COUNT,\n\t\t\tillustrationTitle: this._i18nBundle.getText(\"noToDoTitle\"),\n\t\t\tillustrationDescription: this._i18nBundle.getText(\"noToDoDesc\"),\n\t\t\tisPhone: Device.resize.width < Constants.MOBILE_DEVICE_MAX_WIDTH || Device.system.phone,\n\t\t\ttiles: new Array(Constants.PLACEHOLDER_ITEMS_COUNT).fill({ loadState: \"Loading\" }),\n\t\t\tdisplayTiles: new Array(Constants.PLACEHOLDER_ITEMS_COUNT).fill({ loadState: \"Loading\" })\n\t\t};\n\t\tthis._controlModel = new JSONModel(this._oData);\n\n\t\t//Initialize Request Queue\n\t\tthis.requests = [];\n\n\t\t//Add Wrapper Container to Panel\n\t\tthis._toDoWrapper = new VBox(`${this.getId()}-toDosWrapper`, {\n\t\t\trenderType: \"Bare\",\n\t\t\titems: [this._generateCardContainer(), this._generateMobileCardContainer(), this._generateErrorMessage()]\n\t\t});\n\t\tthis._toDoWrapper.setModel(this._controlModel);\n\t\tthis._addContent(this._toDoWrapper);\n\n\t\t//Setup Common Menu Items\n\t\tconst menuItem = new MenuItem(`${this.getId()}-refresh`, {\n\t\t\ttitle: this._i18nBundle.getText(\"refresh\"),\n\t\t\ticon: \"sap-icon://refresh\",\n\t\t\tpress: () => this._onPressRefresh()\n\t\t});\n\t\tthis.addAggregation(\"menuItems\", menuItem);\n\t\taddFESRId(menuItem, \"todosRefresh\");\n\n\t\t//Setup Common Action Buttons\n\t\tthis._refreshBtn = new Button(`${this.getId()}-refreshBtn`, {\n\t\t\ticon: \"sap-icon://refresh\",\n\t\t\ttext: this._toRelativeDateTime(new Date()),\n\t\t\tpress: () => this._onPressRefresh()\n\t\t});\n\t\taddFESRId(this._refreshBtn, \"manualTodoRefresh\");\n\t\tthis.addAggregation(\"actionButtons\", this._refreshBtn);\n\n\t\t//Configure Full Screen and Expand Event handlers\n\t\tthis.setProperty(\"enableFullScreen\", true);\n\t\tthis.attachEvent(\"onExpand\", async () => {\n\t\t\tawait this._beforePanelExpand();\n\t\t});\n\t}\n\n\t/**\n\t * Generates the card container (GridContainer) for displaying cards.\n\t *\n\t * @private\n\t * @returns {GridContainer} The generated card container.\n\t */\n\tprivate _generateCardContainer(): GridContainer {\n\t\t//create container\n\t\tif (!this._cardContainer) {\n\t\t\tthis._cardContainer = new GridContainer(`${this.getId()}-flexContainer`, {\n\t\t\t\tinlineBlockLayout: true,\n\t\t\t\tsnapToRow: true,\n\t\t\t\tvisible: \"{= !${/isPhone} && !${/hasError} && (!${/isLoaded} || ${/length} > 0) }\",\n\t\t\t\tlayout: new GridContainerSettings(`${this.getId()}-layout`, {\n\t\t\t\t\tcolumns: \"{/horizontalCardCount}\",\n\t\t\t\t\tcolumnSize: \"{/cardWidth}\",\n\t\t\t\t\tgap: \"1rem\"\n\t\t\t\t})\n\t\t\t}).addStyleClass(\"sapCuxToDoCardsContainer\");\n\t\t}\n\n\t\treturn this._cardContainer;\n\t}\n\n\t/**\n\t * Generates the mobile card container (HeaderContainer) for displaying cards on mobile devices.\n\t *\n\t * @private\n\t * @returns {HeaderContainer} The generated mobile card container.\n\t */\n\tprivate _generateMobileCardContainer(): HeaderContainer {\n\t\t// Create a HeaderContainer for mobile devices\n\t\tif (!this._mobileCardContainer) {\n\t\t\tthis._mobileCardContainer = new HeaderContainer(`${this.getId()}-headerContainer`, {\n\t\t\t\tvisible: \"{/isPhone}\",\n\t\t\t\tscrollStep: 0,\n\t\t\t\tgridLayout: true,\n\t\t\t\tscrollTime: 1000,\n\t\t\t\tshowDividers: false,\n\t\t\t\tsnapToRow: true\n\t\t\t});\n\n\t\t\tthis._mobileCardContainer.addStyleClass(\"sapMHeaderContainerAlign sapMHeaderContainerToDoAlign toDoCardHeight\");\n\t\t}\n\n\t\treturn this._mobileCardContainer;\n\t}\n\n\t/**\n\t * Generates the error message card for displaying error messages.\n\t *\n\t * @private\n\t * @returns {Card} The generated error message card.\n\t */\n\tprivate _generateErrorMessage(): Card {\n\t\tif (!this._errorCard) {\n\t\t\tthis._errorMessage = new IllustratedMessage(`${this.getId()}-errorMessage`, {\n\t\t\t\tillustrationSize: \"Base\",\n\t\t\t\ttitle: \"{/illustrationTitle}\",\n\t\t\t\tdescription: \"{/illustrationDescription}\",\n\t\t\t\tillustrationType: \"{/illustrationType}\"\n\t\t\t});\n\t\t\tthis._errorCard = new Card(`${this.getId()}-errorCard`, {\n\t\t\t\tcontent: this._errorMessage,\n\t\t\t\tvisible: \"{= ${/tiles/length} === 0 || ${/hasError} === true }\"\n\t\t\t});\n\t\t}\n\n\t\treturn this._errorCard;\n\t}\n\n\t/**\n\t * Handler for the Refresh button for each panel.\n\t * Reloads the selected panel\n\t *\n\t * @async\n\t * @private\n\t */\n\tprivate _onPressRefresh(): void {\n\t\tvoid ((this.getParent() as ToDosContainer)?._getSelectedPanel() as ToDoPanel)?._loadCards(true);\n\t}\n\n\t/**\n\t * Loads the To-Do cards for the panel.\n\t *\n\t * @private\n\t * @param {boolean} forceRefresh - force refresh cards\n\t * @returns {Promise<void>} A promise that resolves when the cards are loaded.\n\t */\n\tpublic async _loadCards(forceRefresh?: boolean): Promise<void> {\n\t\tif (this._loadToDos !== undefined && !forceRefresh) {\n\t\t\treturn this._loadToDos;\n\t\t} else {\n\t\t\tthis._bindInnerControls();\n\t\t\tthis._loadToDos = new Promise((resolve) => {\n\t\t\t\tconst selectedKey = (this.getParent() as BaseContainer)?._getSelectedPanel()?.getProperty(\"key\") as string;\n\t\t\t\tconst requests: Request[] = [];\n\n\t\t\t\tthis._oData.isLoaded = false;\n\t\t\t\tthis._oData.isCountCalledOnce = false;\n\t\t\t\tthis._oData.isExpandedOnce = this._isElementExpanded();\n\t\t\t\tthis._setCount();\n\n\t\t\t\tif (this._getSupported()) {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t// Load Placeholder Cards\n\t\t\t\t\t\tthis._generatePlaceHolderTiles();\n\n\t\t\t\t\t\t// Add Initial Batch Requests\n\t\t\t\t\t\trequests.push(\n\t\t\t\t\t\t\tthis._generateRequestObject({ type: selectedKey, onlyCount: selectedKey !== this.getProperty(\"key\") })\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.requests = this.requests.concat(requests);\n\n\t\t\t\t\t\t//Submit Batch Requests\n\t\t\t\t\t\tthis._submitBatch()\n\t\t\t\t\t\t\t.then(async () => {\n\t\t\t\t\t\t\t\tthis._oData.isLoaded = selectedKey === this.getProperty(\"key\");\n\t\t\t\t\t\t\t\tthis.fireEvent(\"loaded\");\n\n\t\t\t\t\t\t\t\tthis._oData.isCountCalledOnce = true;\n\t\t\t\t\t\t\t\tthis._setCount(this._oData.length as string);\n\n\t\t\t\t\t\t\t\tthis._setSectionRefreshInterval();\n\t\t\t\t\t\t\t\tthis._oData.refreshInfo = this._toRelativeDateTime(new Date());\n\t\t\t\t\t\t\t\tthis._oData.lastRefreshedTime = new Date();\n\t\t\t\t\t\t\t\tthis._updateRefreshInformation();\n\n\t\t\t\t\t\t\t\tawait this._switchTabIfRequired();\n\t\t\t\t\t\t\t\tthis._updateHeaderIfExclusive();\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch((error: unknown) => {\n\t\t\t\t\t\t\t\tLog.error(error instanceof Error ? error.message : \"\");\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\t\t\tthis._controlModel.refresh();\n\t\t\t\t\t\t\t\tthis._adjustLayout();\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * This class is initially added for Desktop and Tablet. If not added (In case of Mobile) add it.\n\t\t\t\t\t\t\t\t * This is temporary code (to be removed later), this will be handled by GenericTile.\n\t\t\t\t\t\t\t\t * */\n\t\t\t\t\t\t\t\tconst toDosWrapper = this._getContent()?.[0];\n\t\t\t\t\t\t\t\tif (toDosWrapper && !toDosWrapper.hasStyleClass(\"sapUiGridTaskLayout\")) {\n\t\t\t\t\t\t\t\t\ttoDosWrapper.addStyleClass(\"sapUiGridTaskLayout\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis._handleError(`User not authorized to access: + ${this.getTargetAppUrl()}`);\n\n\t\t\t\t\t// Remove Item from IconTabBar\n\t\t\t\t\t(this.getParent() as ToDosContainer)?.removeContent(this);\n\n\t\t\t\t\t//resolve the promise\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn this._loadToDos;\n\t}\n\n\t/**\n\t * Update Container Header if the panel is exclusive\n\t *\n\t * @private\n\t */\n\tprivate _updateHeaderIfExclusive() {\n\t\tif (this._isExclusivePanel()) {\n\t\t\t(this.getParent() as ToDosContainer)._setTitle(`${this._i18nBundle.getText(\"toDosTitle\")} (${String(this._oData.length)})`);\n\t\t}\n\t}\n\n\t/**\n\t * Creates a one-time binding of inner controls for the ToDoPanel.\n\t * @private\n\t */\n\tprivate _bindInnerControls(): void {\n\t\tif (!this._innerControlsBound) {\n\t\t\t//bind card container\n\t\t\tthis._cardContainer.bindAggregation(\"items\", {\n\t\t\t\tpath: \"/displayTiles\",\n\t\t\t\tlength: Constants.TODO_CARDS_LIMIT,\n\t\t\t\tfactory: (id, context) => this.generateCardTemplate(id, context)?.bindProperty?.(\"width\", { path: \"/cardWidth\" })\n\t\t\t});\n\n\t\t\t//bind mobile card container\n\t\t\tthis._mobileCardContainer.bindAggregation(\"content\", {\n\t\t\t\tpath: \"/displayTiles\",\n\t\t\t\tlength: Constants.TODO_CARDS_LIMIT,\n\t\t\t\tfactory: (id, context) => this.generateCardTemplate(id, context)?.bindProperty?.(\"width\", { path: \"/cardWidth\" })\n\t\t\t});\n\n\t\t\tthis._innerControlsBound = true;\n\t\t}\n\t}\n\n\t/**\n\t * Generates the card template for the Current Panel.\n\t *\n\t * @public\n\t * @param {string} id The ID for the template.\n\t * @param {object} context The context for the template.\n\t * @returns {object} The generated card template.\n\t */\n\tpublic generateCardTemplate(id: string, context: Context): Control {\n\t\treturn new GenericTile(`${id}-tile`, {\n\t\t\tmode: \"ActionMode\",\n\t\t\tframeType: \"TwoByOne\",\n\t\t\tpressEnabled: true,\n\t\t\theader: context.getProperty(\"title\") as string,\n\t\t\twidth: context.getProperty(\"/cardWidth\") as string,\n\t\t\tstate: context.getProperty(\"loadState\") as LoadState,\n\t\t\ttileContent: [\n\t\t\t\tnew TileContent(`${id}-tileContent`, {\n\t\t\t\t\tpriority: context.getProperty(\"priority\") as Priority,\n\t\t\t\t\tpriorityText: this._toPriorityText(context.getProperty(\"priority\") as Priority),\n\t\t\t\t\tfooter: context.getProperty(\"footerText\") as string,\n\t\t\t\t\tcontent: new Text(`${id}-situationContent`, {\n\t\t\t\t\t\ttext: context.getProperty(\"message\") as string\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t]\n\t\t});\n\t}\n\n\t/**\n\t * Convert a priority string to a corresponding priority text.\n\t *\n\t * @private\n\t * @param {Priority} priority - The priority string.\n\t * @returns {string} The corresponding priority text.\n\t */\n\tpublic _toPriorityText(priority: Priority): string {\n\t\tlet key;\n\t\tif (priority === Priority.VeryHigh) {\n\t\t\tkey = \"veryHighPriority\";\n\t\t} else if (priority === Priority.High) {\n\t\t\tkey = \"highPriority\";\n\t\t} else if (priority === Priority.Medium) {\n\t\t\tkey = \"mediumPriority\";\n\t\t} else if (priority === Priority.Low) {\n\t\t\tkey = \"lowPriority\";\n\t\t} else {\n\t\t\tkey = \"nonePriority\";\n\t\t}\n\n\t\treturn this._i18nBundle.getText(key) as string;\n\t}\n\n\t/**\n\t * Generates placeholder tiles for the panel.\n\t *\n\t * @private\n\t */\n\tprivate _generatePlaceHolderTiles(): void {\n\t\tthis._cardCount = this._getVisibleCardCount({ isPlaceholder: true });\n\t\tthis._oData.displayTiles = this._oData.tiles = new Array(this._cardCount).fill({ loadState: \"Loading\" });\n\t\tthis._oData.isLoaded = this._oData.hasError = false;\n\t\tthis._controlModel.refresh();\n\t}\n\n\t/**\n\t * Calculates the number of visible cards that can fit within the available space of the To-Dos panel.\n\t *\n\t * @private\n\t * @param {CalculationProperties} [calculationProperties] - Optional properties to assist in the calculation.\n\t * @returns {number} - The number of visible cards.\n\t */\n\tprivate _getVisibleCardCount(calculationProperties?: CalculationProperties): number {\n\t\tconst layout = (this.getParent() as ToDosContainer)?._getLayout();\n\t\tlet isElementExpanded = false;\n\t\tlet targetDomRef = this._toDoWrapper?.getDomRef();\n\n\t\tif (layout) {\n\t\t\tisElementExpanded = this._isElementExpanded();\n\t\t\tconst isHeaderVisible = layout.getProperty(\"showHeader\") as boolean;\n\t\t\tconst containerDomRef = (isElementExpanded ? layout._getFullScreenContainer() : layout).getDomRef();\n\t\t\tconst sectionNodeIndex = isHeaderVisible && !isElementExpanded ? 1 : 0;\n\t\t\ttargetDomRef = containerDomRef?.childNodes[sectionNodeIndex] as Element;\n\t\t}\n\n\t\tconst isMobileDevice = this._controlModel.getProperty(\"/isPhone\") as boolean;\n\t\tlet cardCount = isMobileDevice ? Constants.TODO_SECTION_LIMIT : 1;\n\n\t\tif (targetDomRef) {\n\t\t\t// @ts-expect-error Calculate Horizontal Card Count\n\t\t\tcardCount = this.getHorizontalCardCount(targetDomRef, calculationProperties);\n\n\t\t\tif (isElementExpanded) {\n\t\t\t\t// @ts-expect-error Calculate Vertical Card Count\n\t\t\t\tcardCount *= this.getVerticalCardCount(targetDomRef, calculationProperties);\n\t\t\t}\n\n\t\t\t//Restrict cards to the maximum limit\n\t\t\tcardCount = cardCount > Constants.TODO_CARDS_LIMIT ? Constants.TODO_CARDS_LIMIT : cardCount;\n\t\t}\n\n\t\treturn cardCount;\n\t}\n\n\t/**\n\t * Checks if the current element is expanded to full screen.\n\t *\n\t * @private\n\t * @returns {boolean} - True if the element is expanded, otherwise false.\n\t */\n\tprivate _isElementExpanded(): boolean {\n\t\tconst toDosContainer = this.getParent() as ToDosContainer;\n\t\tconst layout = toDosContainer._getLayout();\n\t\treturn layout?._getCurrentExpandedElementName() === toDosContainer.getProperty(\"fullScreenName\");\n\t}\n\n\t/**\n\t * Calculates the number of horizontal cards that can fit within the available width of the given DOM element.\n\t *\n\t * @private\n\t * @param {Element} domRef - The DOM element to calculate the horizontal card count for.\n\t * @returns {number} - The number of horizontal cards that can fit within the available width.\n\t */\n\tprotected getHorizontalCardCount(domRef: Element): number {\n\t\tconst domProperties = fetchElementProperties(domRef, [\"width\", \"padding-left\", \"padding-right\", \"margin-left\", \"margin-right\"]);\n\t\tconst availableWidth = Object.values(domProperties)\n\t\t\t.slice(1)\n\t\t\t.reduce((width, propertyValue) => width - propertyValue, domProperties[\"width\"]);\n\t\tconst actualCardCount = this._oData.length as number;\n\t\tconst isMobileDevice = this._controlModel.getProperty(\"/isPhone\") as boolean;\n\t\tlet horizontalCardCount;\n\t\tconst minWidth = this.getProperty(\"minCardWidth\") as number;\n\t\tconst maxWidth = this.getProperty(\"maxCardWidth\") as number;\n\t\tconst cardLayoutConfig = { containerWidth: availableWidth, totalCards: actualCardCount, minWidth: minWidth, maxWidth: maxWidth };\n\t\tconst cardWidth = calculateCardWidth(cardLayoutConfig);\n\t\tif (isMobileDevice) {\n\t\t\thorizontalCardCount = Constants.TODO_SECTION_LIMIT;\n\t\t} else {\n\t\t\thorizontalCardCount = Math.max(Math.floor(availableWidth / cardWidth), 1);\n\t\t}\n\n\t\t// Calculate Horizontal Card Count\n\t\tthis._controlModel.setProperty(\"/cardWidth\", `${cardWidth / 16}rem`);\n\t\tthis._controlModel.setProperty(\"/horizontalCardCount\", horizontalCardCount);\n\n\t\treturn horizontalCardCount;\n\t}\n\n\t/**\n\t * Calculates the number of vertical cards that can fit within the available height of the given DOM element.\n\t *\n\t * @private\n\t * @param {Element} domRef - The DOM element to calculate the vertical card count for.\n\t * @returns {number} - The number of vertical cards that can fit within the available height.\n\t */\n\tprotected getVerticalCardCount(domRef: Element): number {\n\t\tconst sectionDomProperties = fetchElementProperties(domRef, [\"padding-top\"]);\n\t\tconst parentDomProperties = fetchElementProperties(domRef.parentElement as Element, [\"height\"]);\n\t\tconst titleHeight = this.calculateTitleHeight();\n\t\tconst availableHeight = parentDomProperties.height - sectionDomProperties[\"padding-top\"] * 2 - titleHeight;\n\t\tconst margin = 14;\n\t\tconst cardHeight = Constants.DEFAULT_CARD_HEIGHT + margin;\n\t\tconst verticalCardCount = Math.max(Math.floor(availableHeight / cardHeight), 2); //minimum of 2 rows should be displayed\n\n\t\treturn verticalCardCount;\n\t}\n\n\t/**\n\t * Calculates the combined height of the title and tab header for the To-Dos panel.\n\t *\n\t * @private\n\t * @returns {number} - The combined height of the title and tab header.\n\t */\n\tprotected calculateTitleHeight(): number {\n\t\tconst container = this.getParent() as ToDosContainer;\n\t\tconst containerHeaderRef = UI5Element.getElementById(`${container.getId()}-header`)?.getDomRef();\n\t\tconst iconTabBarHeaderRef = UI5Element.getElementById(`${container._getInnerControl().getId()}--header`)?.getDomRef();\n\t\tconst defaultHeight = Constants.DEFAULT_TITLE_HEIGHT + Constants.DEFAULT_TAB_HEADER_HEIGHT;\n\t\tlet titleHeight = 0;\n\n\t\tif (containerHeaderRef && iconTabBarHeaderRef) {\n\t\t\ttitleHeight = containerHeaderRef.clientHeight + iconTabBarHeaderRef.clientHeight;\n\t\t}\n\n\t\treturn Math.max(titleHeight, defaultHeight);\n\t}\n\n\t/**\n\t * Generates a request object for batch requests.\n\t *\n\t * @private\n\t * @param {RequestOptions} options - Additional properties for generating the request object.\n\t * @param {boolean} [options.onlyCount] - Whether to include only the count in the request.\n\t * @returns {Object} The generated request object.\n\t */\n\tprivate _generateRequestObject(options: RequestOptions): Request {\n\t\tconst cardCount = this._getVisibleCardCount();\n\t\tconst urls = this.generateRequestUrls?.(cardCount);\n\n\t\tif (options?.onlyCount) {\n\t\t\turls.splice(1);\n\t\t}\n\n\t\treturn {\n\t\t\tbaseURL: this.getBaseUrl(),\n\t\t\trequestURLs: urls,\n\t\t\tsuccess: async (args: unknown[]): Promise<void> => {\n\t\t\t\t//data process extension for panels\n\t\t\t\tawait this.onDataReceived(args.splice(1), options);\n\n\t\t\t\t//set card count and handle empty cards\n\t\t\t\tthis._oData.length = Number(args[0]);\n\t\t\t\tthis._handleEmptyCards();\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Generates request URLs for fetching data based on the specified card count.\n\t *\n\t * @public\n\t * @param {number} cardCount - The number of cards to retrieve.\n\t * @returns {string[]} An array of request URLs.\n\t */\n\tpublic generateRequestUrls(cardCount: number): string[] {\n\t\tconst queryString = `$skip=0&$top=${cardCount}`;\n\t\tlet dataUrl = this.getDataUrl();\n\t\tdataUrl = dataUrl.includes(\"?\") ? `${dataUrl}&${queryString}` : `${dataUrl}?${queryString}`;\n\n\t\treturn [this.getCountUrl(), dataUrl];\n\t}\n\n\t/**\n\t * A promise that resolves when the data has been processed.\n\t * This method can be overridden to perform additional data processing operations.\n\t *\n\t * @public\n\t * @async\n\t * @param {unknown[]} results - Data retrieved from the batch call.\n\t * @param {RequestOptions} options - Additional options for parsing the data.\n\t * Structure may vary based on the backend service.\n\t */\n\tpublic async onDataReceived(results: unknown[] = [], options?: RequestOptions): Promise<void> {\n\t\tif (!options || (options && !options.onlyCount)) {\n\t\t\tthis._oData.displayTiles = this._oData.tiles = results[0] || [];\n\t\t}\n\n\t\tawait Promise.resolve();\n\t}\n\n\t/**\n\t * Handles the scenario when there are no cards to display.\n\t * Updates the illustration and description based on the selected panel and card count.\n\t *\n\t * @private\n\t */\n\tprivate _handleEmptyCards() {\n\t\tif (Number(this._oData.length) === 0) {\n\t\t\tthis._oData.illustrationType = \"sapIllus-EmptyPlanningCalendar\";\n\t\t\tthis._oData.illustrationTitle = this._isExclusivePanel()\n\t\t\t\t? this._i18nBundle.getText(\"noToDoTitle\")\n\t\t\t\t: this._i18nBundle.getText(this.getNoDataText());\n\t\t\tthis._oData.illustrationDescription = this._isExclusivePanel()\n\t\t\t\t? this._i18nBundle.getText(\"noToDoDesc\")\n\t\t\t\t: this._i18nBundle.getText(\"emptyToDoDesc\");\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the panel is exclusive based on support and the number of panels.\n\t *\n\t * @private\n\t * @returns {boolean} True if the panel is exclusive, otherwise false.\n\t */\n\tprivate _isExclusivePanel(): boolean {\n\t\tconst allPanels = (this.getParent() as ToDosContainer).getContent() as ToDoPanel[];\n\t\tconst supportedPanels = allPanels.filter((panel) => panel._getSupported());\n\n\t\treturn supportedPanels.length === 1 || (allPanels.length === 1 && this._getSupported());\n\t}\n\n\t/**\n\t * Sets the interval for refreshing the section.\n\t *\n\t * @private\n\t */\n\tprivate _setSectionRefreshInterval(): void {\n\t\tclearInterval(this._oData.refreshFn as number);\n\t\tthis._oData.refreshFn = setInterval(() => {\n\t\t\tthis._oData.lastRefreshedTime = this._oData.lastRefreshedTime || new Date();\n\t\t\tthis._oData.refreshInfo = this._toRelativeDateTime(this._oData.lastRefreshedTime as Date);\n\t\t\tthis._updateRefreshInformation();\n\t\t}, Constants.TODOS_REFRESH_INTERVAL);\n\t}\n\n\t/**\n\t * Updates the refresh information and adjusts the layout.\n\t *\n\t * @private\n\t */\n\tpublic _updateRefreshInformation(): void {\n\t\tconst container = this.getParent() as ToDosContainer;\n\t\tif (container.getProperty(\"selectedKey\") === this.getProperty(\"key\")) {\n\t\t\tthis._refreshBtn.setProperty(\"text\", this._oData.refreshInfo, true);\n\t\t\tcontainer._updateContainerHeader(this);\n\t\t}\n\n\t\tthis._adjustLayout();\n\t}\n\n\t/**\n\t * Adjusts the layout based on card count and device type.\n\t *\n\t * @private\n\t */\n\tpublic _adjustLayout() {\n\t\t// Update visible cards\n\t\tconst cardCount = this._getVisibleCardCount();\n\t\tif ((this._oData.tiles as object[]).length && !this._oData.hasError) {\n\t\t\tconst displayCards = (this._oData.tiles as object[]).slice(0, cardCount);\n\t\t\tthis._controlModel.setProperty(\"/displayTiles\", displayCards);\n\t\t}\n\n\t\t// Update if device type is phone\n\t\tthis._controlModel.setProperty(\"/isPhone\", this.getDeviceType() === DeviceType.Mobile);\n\n\t\t// Show/Hide Full Screen Button if available\n\t\t(this.getParent() as ToDosContainer)?.toggleFullScreenElements(\n\t\t\tthis,\n\t\t\tthis._isElementExpanded() || Number(this._oData.length) > cardCount\n\t\t);\n\t}\n\n\t/**\n\t * Formats the given date to a relative date.\n\t *\n\t * @private\n\t * @param {Date} date Date object or Date String\n\t * @returns {string} Formatted Date\n\t */\n\tpublic _toRelativeDateTime(date: Date): string {\n\t\tconst inputDate = new Date(date);\n\t\treturn isNaN(Number(inputDate)) ? \"\" : ToDoPanel.relativeDateFormatter.format(inputDate);\n\t}\n\n\t/**\n\t * Get the text for the \"No Data\" message.\n\t *\n\t * @public\n\t * @returns {string} The text for the \"No Data\" message.\n\t */\n\tpublic getNoDataText(): string {\n\t\treturn this._i18nBundle.getText(\"noData\") as string;\n\t}\n\n\t/**\n\t * Parses the response object and returns the appropriate value.\n\t *\n\t * @private\n\t * @param {Object} response - The response object.\n\t * @param {Object} [response.d] - The 'd' property of the response object.\n\t * @param {Array} [response.d.results] - The results array.\n\t * @param {string|number} [response.d] - The 'd' property of the response object which may contain a numeric value.\n\t * @param {string|number} [response] - The response object which may contain a numeric value.\n\t * @param {string|number} [response.value] - The 'value' property of the response object which may contain a numeric value.\n\t * @returns {Response} - The parsed value extracted from the response object.\n\t */\n\tprivate _parseResponse(response: Response): Response {\n\t\tconst { d = {}, value } = response || {};\n\t\tconst results = d?.results;\n\t\tconst numericD = !isNaN(+d) && +d;\n\t\tconst numericResponse = !isNaN(+response) && +response;\n\n\t\treturn (results || numericD || numericResponse || value || 0) as Response;\n\t}\n\n\t/**\n\t * Submits a batch request for multiple URLs and processes the responses.\n\t *\n\t * @private\n\t * @returns {Promise} A Promise that resolves when all batch requests are completed.\n\t */\n\tprotected _submitBatch(): Promise<unknown[]> {\n\t\treturn Promise.all(\n\t\t\tthis.requests.map(async (request: Request) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst responses = await this.batchHelper.createMultipartRequest(request.baseURL, request.requestURLs);\n\n\t\t\t\t\tif (responses.length) {\n\t\t\t\t\t\tconst processedResponses = responses.map((response: string | Response) => {\n\t\t\t\t\t\t\tif (typeof response === \"string\") {\n\t\t\t\t\t\t\t\tresponse = JSON.parse(response) as Response;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn this._parseResponse(response);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Call success callback, if any\n\t\t\t\t\t\tif (request.success && typeof request.success === \"function\") {\n\t\t\t\t\t\t\tawait request.success(processedResponses);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn processedResponses;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"Invalid response\");\n\t\t\t\t\t}\n\t\t\t\t} catch (error: unknown) {\n\t\t\t\t\tthis._handleError(error);\n\t\t\t\t} finally {\n\t\t\t\t\tthis._clearRequests();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t * Handles errors by updating the data and logging the error.\n\t *\n\t * @private\n\t * @param {Error} error - The error object to handle.\n\t */\n\tprivate _handleError(error: unknown) {\n\t\tthis._oData.displayTiles = this._oData.tiles = [];\n\t\tthis._oData.getSupported = this._oData.isLoaded = this._oData.hasError = true;\n\t\tthis._oData.illustrationType = \"sapIllus-UnableToLoad\";\n\t\tthis._oData.illustrationTitle = this._oData.illustrationDescription = \"\";\n\n\t\tLog.error(error as string);\n\t\tthis._controlModel.refresh();\n\t}\n\n\t/**\n\t * Clears the list of requests.\n\t *\n\t * @private\n\t */\n\tprotected _clearRequests() {\n\t\tthis.requests = [];\n\t}\n\n\t/**\n\t * Checks if the panel is loaded.\n\t *\n\t * @private\n\t * @returns {boolean} true if the panel is loaded, false otherwise.\n\t */\n\tpublic _isLoaded(): boolean {\n\t\tconst parentContainer = this.getParent() as ToDosContainer;\n\t\tconst isContainerExpanded = parentContainer?._getLayout()?.getProperty(\"expanded\") as boolean;\n\n\t\tconst { isLoaded, isExpandedOnce } = this._oData;\n\n\t\tif (!isContainerExpanded) {\n\t\t\treturn isLoaded as boolean;\n\t\t}\n\n\t\treturn (isExpandedOnce && isLoaded) as boolean;\n\t}\n\n\t/**\n\t * Set the loaded status of the ToDoPanel.\n\t *\n\t * @private\n\t * @param {boolean} isLoaded - The new loaded status to set for the ToDoPanel.\n\t */\n\tpublic _setLoaded(isLoaded: boolean): void {\n\t\tthis._oData.isLoaded = isLoaded;\n\t}\n\n\t/**\n\t * Gets the supported status of the panel.\n\t *\n\t * @private\n\t * @returns {boolean} The supported status of the panel.\n\t */\n\tpublic _getSupported(): boolean {\n\t\treturn this._oData.getSupported as boolean;\n\t}\n\n\t/**\n\t * Sets the supported status of the panel.\n\t *\n\t * @private\n\t * @param {boolean} value - The value to set for supported status.\n\t */\n\tpublic _setSupported(isSupported: boolean): void {\n\t\tthis._oData.getSupported = isSupported;\n\t}\n\n\t/**\n\t * Extracts the app intent from the target app URL.\n\t *\n\t * @private\n\t * @returns {Intent | null} The app intent object with target and parameters, or null if not found.\n\t */\n\tpublic _getAppIntent(): Intent | null {\n\t\tconst pattern = /#([^?-]+)-([^?#]+)(?:\\?([^#]+))?(?:#.*)?/;\n\t\tconst match = this.getTargetAppUrl().match(pattern);\n\n\t\tif (match) {\n\t\t\tconst target = {\n\t\t\t\tsemanticObject: match[1],\n\t\t\t\taction: match[2]\n\t\t\t};\n\t\t\tconst params = {} as Record<string, string>;\n\n\t\t\tif (match[3]) {\n\t\t\t\tconst paramsArray = match[3].split(\"&\");\n\t\t\t\tfor (const param of paramsArray) {\n\t\t\t\t\tconst [key, value] = param.split(\"=\");\n\t\t\t\t\tparams[key] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttarget,\n\t\t\t\tparams\n\t\t\t};\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Switch to available tab if current panel has empty cards or has error\n\t *\n\t * @private\n\t * @async\n\t */\n\tprivate async _switchTabIfRequired() {\n\t\tconst container = this.getParent() as ToDosContainer;\n\t\tconst selectedKey = container?.getProperty(\"selectedKey\") as string;\n\n\t\tif (selectedKey === this.getProperty(\"key\") && (this._oData.length === 0 || this._oData.hasError)) {\n\t\t\tlet nextAvailablePanel;\n\t\t\tconst panels = container?.getAggregation(\"content\") as ToDoPanel[];\n\n\t\t\tfor (const panel of panels) {\n\t\t\t\tif (panel !== this) {\n\t\t\t\t\t//ensure that panel is loaded first\n\t\t\t\t\tawait panel._loadCards();\n\n\t\t\t\t\tif (panel._getSupported() && !panel._isLoaded() && panel._getCardCount() > 0) {\n\t\t\t\t\t\tnextAvailablePanel = panel;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nextAvailablePanel) {\n\t\t\t\tcontainer?.setProperty(\"selectedKey\", nextAvailablePanel.getProperty(\"key\"));\n\t\t\t\tToDosContainer.cardCount = this._cardCount;\n\t\t\t\tawait nextAvailablePanel._loadCards(true);\n\t\t\t\tToDosContainer.cardCount = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Handles the press event to view all items.\n\t *\n\t * @private\n\t */\n\tpublic _onPressViewAll() {\n\t\tURLHelper.redirect(this.getTargetAppUrl(), false);\n\t}\n\n\t/**\n\t * Retrieves the count of cards in the panel.\n\t *\n\t * @private\n\t * @returns {number} The number of cards.\n\t */\n\tpublic _getCardCount(): number {\n\t\treturn Number(this._oData.length);\n\t}\n\n\t/**\n\t * Handles actions to be performed before the To-Dos panel is expanded.\n\t * If the panel has not been expanded before in full screen, the cards will be loaded once.\n\t *\n\t * @private\n\t */\n\tprivate async _beforePanelExpand() {\n\t\tif (!this._oData.isExpandedOnce) {\n\t\t\tthis._oData.isExpandedOnce = true;\n\t\t\tawait this._loadCards(true);\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":276,"column":0},"map":{"version":3,"names":["sap","ui","define","Log","Container","__BaseContainer","___ToDosContainerGenericPlaceholder","___utils_Device","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","BaseContainer","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","bind","observer","prototype","onFulfilled","onRejected","this","callback","_this","_isSettledPact","thenable","_forTo","array","check","i","reject","_cycle","length","getTodosPlaceholder","_forOf","target","step","next","done","return","_fixup","TypeError","values","push","DeviceType","ToDosContainer","extend","renderer","apiVersion","metadata","library","properties","fullScreenName","type","group","defaultValue","visibility","constructor","_constructor","id","settings","BaseContainer.prototype.constructor.call","init","_init","BaseContainer.prototype.init.call","setProperty","_i18nBundle","getText","addStyleClass","_isAuthCheckRequired","addCustomSetting","load","_load","_iconTabBarControl","_getInnerControl","_temp2","Promise","resolve","_performAuthCheck","panels","getContent","unsupportedPanels","filter","panel","_getSupported","_temp","_handleToDoUnauthorizedAccess","isOnePanelSupported","toggleStyleClass","_loadAllPanels","error","_this2","getServiceAsync","navigationService","intents","map","getTargetAppUrl","_getAppIntent","isNavigationSupported","_navigationService$is","responses","forEach","index","_setSupported","supported","oError","message","fireEvent","removeContent","setVisible","forceRefresh","_this3","selectedKey","getProperty","sortedPanels","sort","firstPanel","secondPanel","_temp3","_isLoaded","_loadCards","_onPanelSelect","event","_this4","_temp5","selectedPanel","_updateRefreshInformation","BaseContainer.prototype._onPanelSelect.call","_getSelectedPanel","_temp4","refreshData","_refreshData","_this5","_setLoaded","getSelectedKey","_getSelectedKey","_getDefaultKey","adjustLayout","_adjustLayout","toggleActionButtons","getDeviceType","Mobile","getGenericPlaceholderContent","_getGenericPlaceholderContent"],"sources":["ToDosContainer.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport IconTabBar from \"sap/m/IconTabBar\";\nimport Event from \"sap/ui/base/Event\";\nimport { MetadataOptions } from \"sap/ui/core/Element\";\nimport Container from \"sap/ushell/Container\";\nimport Navigation from \"sap/ushell/services/Navigation\";\nimport type { $BaseContainerSettings } from \"./BaseContainer\";\nimport BaseContainer from \"./BaseContainer\";\nimport ToDoPanel, { Intent } from \"./ToDoPanel\";\nimport { getTodosPlaceholder } from \"./ToDosContainerGenericPlaceholder\";\nimport { DeviceType } from \"./utils/Device\";\n\n/**\n *\n * Container class for managing and storing To-Do cards.\n *\n * @extends BaseContainer\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @public\n *\n * @alias sap.cux.home.ToDosContainer\n */\nexport default class ToDosContainer extends BaseContainer {\n\tprivate _isAuthCheckRequired!: boolean;\n\tprivate _iconTabBarControl!: IconTabBar;\n\n\tstatic cardCount: number | undefined;\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\tfullScreenName: { type: \"string\", group: \"Misc\", defaultValue: \"ST1\", visibility: \"hidden\" }\n\t\t}\n\t};\n\tstatic renderer = {\n\t\t...BaseContainer.renderer,\n\t\tapiVersion: 2\n\t};\n\n\tconstructor(id?: string | $BaseContainerSettings);\n\tconstructor(id?: string, settings?: $BaseContainerSettings);\n\t/**\n\t * Constructor for a new To-Dos container.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: object) {\n\t\tsuper(id, settings);\n\t}\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\t//Update Container Title\n\t\tthis.setProperty(\"title\", this._i18nBundle?.getText(\"toDosTitle\"));\n\t\tthis.addStyleClass(\"sapCuxToDosContainer\");\n\t\tthis._isAuthCheckRequired = true;\n\t\tthis.addCustomSetting(\"title\", this._i18nBundle.getText(\"toDosTitle\") as string);\n\t\tthis.addCustomSetting(\"text\", this._i18nBundle.getText(\"forMeTodayMsg\") as string);\n\t}\n\n\t/**\n\t * Loads the ToDos section.\n\t * Overrides the load method of the BaseContainer.\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic async load(): Promise<void> {\n\t\tthis._iconTabBarControl = this._getInnerControl() as IconTabBar;\n\n\t\t//initiate loading of all cards after auth check\n\t\ttry {\n\t\t\tawait this._performAuthCheck();\n\n\t\t\tconst panels = (this.getContent() as ToDoPanel[]) || [];\n\t\t\tconst unsupportedPanels = panels.filter((panel) => !panel._getSupported());\n\n\t\t\tif (unsupportedPanels.length === panels.length) {\n\t\t\t\tthis._handleToDoUnauthorizedAccess();\n\t\t\t} else {\n\t\t\t\t// Hide IconTabBar header if only one panel is accessible\n\t\t\t\tconst isOnePanelSupported = panels.length - unsupportedPanels.length === 1;\n\t\t\t\tthis._iconTabBarControl?.toggleStyleClass(\"sapUiITBHide\", isOnePanelSupported);\n\t\t\t\tawait this._loadAllPanels();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis._handleToDoUnauthorizedAccess(error as Error);\n\t\t}\n\t}\n\n\t/**\n\t * Performs an authorization check for the ToDosContainer.\n\t * Checks if the authorization check is required and updates panel support accordingly.\n\t *\n\t * @private\n\t * @async\n\t * @returns {Promise<void>} A Promise that resolves when the authorization check is completed.\n\t * @throws {Error} If an error occurs during the authorization check.\n\t */\n\tprivate async _performAuthCheck(): Promise<void> {\n\t\ttry {\n\t\t\tif (!this._isAuthCheckRequired) {\n\t\t\t\treturn Promise.resolve();\n\t\t\t} else {\n\t\t\t\tconst navigationService = await Container.getServiceAsync<Navigation>(\"Navigation\");\n\t\t\t\tconst panels = (this.getContent() as ToDoPanel[]) || [];\n\t\t\t\tconst intents = panels.map((panel) => (panel.getTargetAppUrl() ? panel._getAppIntent() : \"#\")) as Intent[];\n\t\t\t\tconst responses = (await navigationService.isNavigationSupported(intents)) as { supported: boolean }[];\n\n\t\t\t\t//Update panel support information\n\t\t\t\tpanels.forEach((panel, index) => panel._setSupported(responses[index].supported));\n\t\t\t\tthis._isAuthCheckRequired = false;\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\t\t} catch (oError) {\n\t\t\treturn Promise.reject(oError as Error);\n\t\t}\n\t}\n\n\t/**\n\t * Handles unauthorized access to the ToDosContainer by hiding all inner controls\n\t *\n\t * @private\n\t * @param {Error} error - An optional custom error message or an Error object.\n\t */\n\tprivate _handleToDoUnauthorizedAccess(error?: Error): void {\n\t\t//Remove all Inner Controls\n\t\tLog.error(error?.message || \"User has no access to any available panels\");\n\t\t(this.getContent() as ToDoPanel[])?.forEach((panel) => {\n\t\t\tpanel.fireEvent(\"loaded\");\n\t\t\tthis.removeContent(panel);\n\t\t});\n\t\tthis.setVisible(false);\n\t}\n\n\t/**\n\t * Asynchronously loads all panels, ensuring the currently selected panel is loaded first.\n\t *\n\t * @private\n\t * @async\n\t * @param {boolean} forceRefresh - force refresh cards\n\t * @returns {Promise<void>} A promise that resolves when all panels are loaded.\n\t */\n\tprivate async _loadAllPanels(forceRefresh?: boolean): Promise<void> {\n\t\t//Sort panels so that the current panel is always loaded first\n\t\tconst selectedKey = this.getProperty(\"selectedKey\") as string;\n\t\tconst panels = (this.getContent() as ToDoPanel[]) || [];\n\t\tconst sortedPanels = [...panels].sort((firstPanel, secondPanel) => {\n\t\t\tif (firstPanel.getProperty(\"key\") === selectedKey) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (secondPanel.getProperty(\"key\") === selectedKey) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\n\t\tfor (const panel of sortedPanels) {\n\t\t\tif (!panel._isLoaded?.()) {\n\t\t\t\tawait panel._loadCards(forceRefresh);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Overridden method for selection of panel in the IconTabBar.\n\t * Loads the selected panel and updates the header elements as well\n\t *\n\t * @private\n\t * @async\n\t * @override\n\t */\n\tprotected async _onPanelSelect(event: Event): Promise<void> {\n\t\tsuper._onPanelSelect(event);\n\n\t\t//load panel if not loaded already\n\t\tconst selectedPanel = this._getSelectedPanel() as ToDoPanel;\n\t\tif (!selectedPanel._isLoaded()) {\n\t\t\tawait selectedPanel._loadCards(true);\n\t\t}\n\n\t\t//updates refresh information of the selected panel\n\t\tselectedPanel._updateRefreshInformation();\n\t}\n\n\t/**\n\t * Asynchronously refreshes the section by forcing all inner panels to be reloaded.\n\t *\n\t * @public\n\t * @async\n\t * @returns {Promise<void>} A promise that resolves when the section is successfully refreshed.\n\t */\n\tpublic async refreshData(): Promise<void> {\n\t\t//Force all inner panels to be reloaded\n\t\t(this.getContent() as ToDoPanel[])?.forEach((panel) => panel._setLoaded(false));\n\t\treturn await this._loadAllPanels(true);\n\t}\n\n\t/**\n\t * Gets the selected key of the To-Dos container.\n\t * If no selected key is set, it defaults to the first item.\n\t *\n\t * @public\n\t * @returns {string} The selected key.\n\t */\n\tpublic getSelectedKey(): string {\n\t\t//Default selected key to first item, if null\n\t\tif (!this.getProperty(\"selectedKey\")) {\n\t\t\tthis.setProperty(\"selectedKey\", this._getDefaultKey());\n\t\t}\n\n\t\treturn this.getProperty(\"selectedKey\") as string;\n\t}\n\n\t/**\n\t * Gets the default key for the ToDosContainer by returning the key of the first panel\n\t *\n\t * @private\n\t * @returns {string} The default key if it exists, or null if there are no panels\n\t */\n\tprivate _getDefaultKey(): string {\n\t\treturn this.getContent()?.[0]?.getProperty(\"key\") as string;\n\t}\n\n\t/**\n\t * Adjusts the layout of the all panels in the container.\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic adjustLayout() {\n\t\t//hide actions if the device is a phone\n\t\tthis.toggleActionButtons(this.getDeviceType() !== DeviceType.Mobile);\n\n\t\t//adjust layout of all panels\n\t\t(this.getContent() as ToDoPanel[])?.forEach((panel) => panel._adjustLayout());\n\t}\n\n\t/**\n\t * Retrieves the generic placeholder content for the Todos container.\n\t *\n\t * @returns {string} The HTML string representing the Todos container's placeholder content.\n\t */\n\tprotected getGenericPlaceholderContent(): string {\n\t\treturn getTodosPlaceholder();\n\t}\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,yCAAA,yHAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,sBAAAC,EAAAC,GAAA,OAAAA,KAAAC,mBAAAD,EAAAE,UAAA,YAAAF,EAAAE,QAAAF,CAAA,CAkjBO,SAAAG,EAAgBC,EAAMC,GAC5B,IACC,IAAIC,EAASF,GACd,CAAE,MAAMG,GACP,OAAOF,EAAQE,EAChB,CACA,GAAID,GAAUA,EAAOE,KAAM,CAC1B,OAAOF,EAAOE,UAAU,EAAGH,EAC5B,CACA,OAAOC,CACR,CAAC,MAhjBMG,EAAaV,EAAAH,GAAA,MAwJPc,SAAuCC,SAAW,YAAeA,OAAOC,WAAaD,OAAOC,SAAWD,OAAO,oBAAuB,aA7H3I,SAASE,EAAQC,EAAMC,EAAOC,GACpC,IAAKF,EAAKG,EAAG,CACZ,GAAID,aAAiBE,EAAO,CAC3B,GAAIF,EAAMC,EAAG,CACZ,GAAIF,EAAQ,EAAG,CACdA,EAAQC,EAAMC,CACf,CACAD,EAAQA,EAAMG,CACf,KAAO,CACNH,EAAMI,EAAIP,EAAQQ,KAAK,KAAMP,EAAMC,GACnC,MACD,CACD,CACA,GAAIC,GAASA,EAAMR,KAAM,CACxBQ,EAAMR,KAAKK,EAAQQ,KAAK,KAAMP,EAAMC,GAAQF,EAAQQ,KAAK,KAAMP,EAAM,IACrE,MACD,CACAA,EAAKG,EAAIF,EACTD,EAAKK,EAAIH,EACT,MAAMM,EAAWR,EAAKM,EACtB,GAAIE,EAAU,CACbA,EAASR,EACV,CACD,CACD,CAAC,MA9DYI,EAAsB,WAClC,SAAAA,IAAkB,CAClBA,EAAMK,UAAUf,KAAO,SAASgB,EAAaC,GAC5C,MAAMnB,EAAS,IAAAY,EACf,MAAMH,EAAQW,KAAKT,EACnB,GAAIF,EAAO,CACV,MAAMY,EAAWZ,EAAQ,EAAIS,EAAcC,EAC3C,GAAIE,EAAU,CACb,IACCd,EAAQP,EAAQ,EAAGqB,EAASD,KAAKP,GAClC,CAAE,MAAOZ,GACRM,EAAQP,EAAQ,EAAGC,EACpB,CACA,OAAOD,CACR,KAAO,CACN,OAAOoB,IACR,CACD,CACAA,KAAKN,EAAI,SAASQ,GACjB,IACC,MAAMZ,EAAQY,EAAMT,EACpB,GAAIS,EAAMX,EAAI,EAAG,CAChBJ,EAAQP,EAAQ,EAAGkB,EAAcA,EAAYR,GAASA,EACvD,MAAO,GAAIS,EAAY,CACtBZ,EAAQP,EAAQ,EAAGmB,EAAWT,GAC/B,KAAO,CACNH,EAAQP,EAAQ,EAAGU,EACpB,CACD,CAAE,MAAOT,GACRM,EAAQP,EAAQ,EAAGC,EACpB,CACD,EACA,OAAOD,CACR,EACA,OAAAY,CACD,CAnCmC,GAgE5B,SAASW,EAAeC,GAC9B,OAAOA,aAAoBZ,GAASY,EAASb,EAAI,CAClD,CA+CO,SAASc,EAAOC,EAAO5B,EAAM6B,GACnC,IAAIC,GAAK,EAAGpB,EAAMqB,EAClB,SAASC,EAAO9B,GACf,IACC,QAAS4B,EAAIF,EAAMK,UAAYJ,IAAUA,KAAU,CAClD3B,EAASF,EAAK8B,GACd,GAAI5B,GAAUA,EAAOE,KAAM,CAC1B,GAAIqB,EAAevB,GAAS,CAC3BA,EAASA,EAAOa,CACjB,KAAO,CACNb,EAAOE,KAAK4B,EAAQD,IAAWA,EAAStB,EAAQQ,KAAK,KAAMP,EAAO,IAAII,EAAS,KAC/E,MACD,CACD,CACD,CACA,GAAIJ,EAAM,CACTD,EAAQC,EAAM,EAAGR,EAClB,KAAO,CACNQ,EAAOR,CACR,CACD,CAAE,MAAOC,GACRM,EAAQC,IAASA,EAAO,IAAII,GAAU,EAAGX,EAC1C,CACD,CACA6B,IACA,OAAOtB,CACR,CAAC,MA9HQwB,EAAmBzC,EAAA,uBA0JrB,SAAS0C,EAAOC,EAAQpC,EAAM6B,GACpC,UAAWO,EAAO9B,KAAqB,WAAY,CAClD,IAAIE,EAAW4B,EAAO9B,KAAoB+B,EAAM3B,EAAMqB,EACtD,SAASC,EAAO9B,GACf,IACC,QAASmC,EAAO7B,EAAS8B,QAAQC,QAAUV,IAAUA,KAAU,CAC9D3B,EAASF,EAAKqC,EAAKzB,OACnB,GAAIV,GAAUA,EAAOE,KAAM,CAC1B,GAAIqB,EAAevB,GAAS,CAC3BA,EAASA,EAAOa,CACjB,KAAO,CACNb,EAAOE,KAAK4B,EAAQD,IAAWA,EAAStB,EAAQQ,KAAK,KAAMP,EAAO,IAAII,EAAS,KAC/E,MACD,CACD,CACD,CACA,GAAIJ,EAAM,CACTD,EAAQC,EAAM,EAAGR,EAClB,KAAO,CACNQ,EAAOR,CACR,CACD,CAAE,MAAOC,GACRM,EAAQC,IAASA,EAAO,IAAII,GAAU,EAAGX,EAC1C,CACD,CACA6B,IACA,GAAIxB,EAASgC,OAAQ,CACpB,IAAIC,EAAS,SAAS7B,GACrB,IACC,IAAKyB,EAAKE,KAAM,CACf/B,EAASgC,QACV,CACD,CAAE,MAAMrC,GACR,CACA,OAAOS,CACR,EACA,GAAIF,GAAQA,EAAKN,KAAM,CACtB,OAAOM,EAAKN,KAAKqC,EAAQ,SAAStC,GACjC,MAAMsC,EAAOtC,EACd,EACD,CACAsC,GACD,CACA,OAAO/B,CACR,CAEA,KAAM,WAAY0B,GAAS,CAC1B,MAAM,IAAIM,UAAU,yBACrB,CAEA,IAAIC,EAAS,GACb,IAAK,IAAIb,EAAI,EAAGA,EAAIM,EAAOH,OAAQH,IAAK,CACvCa,EAAOC,KAAKR,EAAON,GACpB,CACA,OAAOH,EAAOgB,EAAQ,SAASb,GAAK,OAAO9B,EAAK2C,EAAOb,GAAK,EAAGD,EAChE,CAAC,MAhNQgB,EAAUnD,EAAA,cAEnB,MAgBqBoD,EAAuBzC,EAAa0C,OAAA,+BAWjDC,SAAW,IACd3C,EAAc2C,SACjBC,WAAY,GARGC,SAA4B,CAC3CC,QAAS,eACTC,WAAY,CACXC,eAAgB,CAAEC,KAAM,SAAUC,MAAO,OAAQC,aAAc,MAAOC,WAAY,YAgB7EC,YAAW,SAAAC,EAACC,EAAaC,GAC/BC,6BAAAxC,KAAMsC,EAAIC,EACX,EAQOE,KAAI,SAAAC,IACVC,sBAAA3C,MAGAA,KAAK4C,YAAY,QAAS5C,KAAK6C,aAAaC,QAAQ,eACpD9C,KAAK+C,cAAc,wBACnB/C,KAAKgD,qBAAuB,KAC5BhD,KAAKiD,iBAAiB,QAASjD,KAAK6C,YAAYC,QAAQ,eACxD9C,KAAKiD,iBAAiB,OAAQjD,KAAK6C,YAAYC,QAAQ,iBACxD,EASaI,KAAI,SAAAC,IAAA,IAAkB,MAAAjD,EAClCF,KAAAE,EAAKkD,mBAAqBlD,EAAKmD,mBAE/B,MAAAC,EAAA7E,EAAA,WACI,OAAA8E,QAAAC,QACGtD,EAAKuD,qBAAmB3E,KAAA,WAE9B,MAAM4E,EAAUxD,EAAKyD,cAAgC,GACrD,MAAMC,EAAoBF,EAAOG,OAAQC,IAAWA,EAAMC,iBAAiB,MAAAC,EAAA,cAEvEJ,EAAkBjD,SAAW+C,EAAO/C,OAAM,CAC7CT,EAAK+D,+BAAgC,MAGrC,MAAMC,EAAsBR,EAAO/C,OAASiD,EAAkBjD,SAAW,EACzET,EAAKkD,oBAAoBe,iBAAiB,eAAgBD,GAAqB,OAAAX,QAAAC,QACzEtD,EAAKkE,kBAAgBtF,KAAA,eAR+C,GAQ/C,GAAAkF,KAAAlF,KAAA,OAAAkF,EAAAlF,KAAA,eAE7B,EAAC,SAAQuF,GACRnE,EAAK+D,8BAA8BI,EACpC,GAAC,OAAAd,QAAAC,QAAAF,KAAAxE,KAAAwE,EAAAxE,KAAA,qBACF,CAAC,MAAAD,GAAA,OAAA0E,QAAA9C,OAAA5B,EAAA,GAWa4E,kBAAiB,SAAAA,IAAA,IAAkB,MAAAa,EAE1CtE,KAAI,OAAAuD,QAAAC,QAAA/E,EAAA,WADN,IACE6F,EAAKtB,qBAAoB,CAC7B,OAAOO,QAAQC,SAAU,aAAAD,QAAAC,QAEOvF,EAAUsG,gBAA4B,eAAazF,KAAA,SAA7E0F,GACN,MAAMd,EAAUY,EAAKX,cAAgC,GACrD,MAAMc,EAAUf,EAAOgB,IAAKZ,GAAWA,EAAMa,kBAAoBb,EAAMc,gBAAkB,KAAkB,OAAArB,QAAAC,QAClFgB,EAAkBK,sBAAsBJ,IAAQ3F,KAAA,SAAAgG,GAAzE,MAAMC,EAASD,EAGfpB,EAAOsB,QAAQ,CAAClB,EAAOmB,IAAUnB,EAAMoB,cAAcH,EAAUE,GAAOE,YACtEb,EAAKtB,qBAAuB,MAC5B,OAAOO,QAAQC,SAAU,KAE3B,EAAC,SAAQ4B,GACR,OAAO7B,QAAQ9C,OAAO2E,EACvB,GACD,CAAC,MAAAvG,GAAA,OAAA0E,QAAA9C,OAAA5B,EAAA,GAQOoF,8BAA6B,SAAAA,EAACI,GAErCrG,EAAIqG,MAAMA,GAAOgB,SAAW,8CAC3BrF,KAAK2D,cAA8BqB,QAASlB,IAC5CA,EAAMwB,UAAU,UAChBtF,KAAKuF,cAAczB,EAAM,GAE1B9D,KAAKwF,WAAW,MACjB,EAUcpB,eAAc,SAAAA,EAACqB,GAAsB,IAAiB,MAAAC,EAE/C1F,KAApB,MAAM2F,EAAcD,EAAKE,YAAY,eACrC,MAAMlC,EAAUgC,EAAK/B,cAAgC,GACrD,MAAMkC,EAAe,IAAInC,GAAQoC,KAAK,CAACC,EAAYC,KAClD,GAAID,EAAWH,YAAY,SAAWD,EAAa,CAClD,OAAQ,CACT,CACA,GAAIK,EAAYJ,YAAY,SAAWD,EAAa,CACnD,OAAO,CACR,CACA,OAAO,CAAC,GACN,OAAApC,QAAAC,QAAA3C,EAEiBgF,EAAY,SAArB/B,GAAuB,MAAAmC,EAAA,eAC5BnC,EAAMoC,cAAa,QAAA3C,QAAAC,QACjBM,EAAMqC,WAAWV,IAAa3G,KAAA,eAFJ,GAEI,GAAAmH,KAAAnH,KAAA,OAAAmH,EAAAnH,KAAA,aAEtC,GACD,CAAC,MAAAD,GAAA,OAAA0E,QAAA9C,OAAA5B,EAAA,GAUeuH,eAAc,SAAAA,EAACC,GAAY,IAAiB,MAAAC,EAAAtG,KAAA,SAAAuG,IAU3DC,EAAcC,2BAA4B,CAT1CC,gCAAAJ,EAAqBD,GAGrB,MAAMG,EAAgBF,EAAKK,oBAAiC,MAAAC,EAAA,eACvDJ,EAAcN,YAAW,QAAA3C,QAAAC,QACvBgD,EAAcL,WAAW,OAAKrH,KAAA,eAFuB,GAEvB,OAAAyE,QAAAC,QAAAoD,KAAA9H,KAAA8H,EAAA9H,KAAAyH,KAAAK,GAKtC,CAAC,MAAA/H,GAAA,OAAA0E,QAAA9C,OAAA5B,EAAA,GASYgI,YAAW,SAAAC,IAAA,IAAkB,MAAAC,EAExC/G,KAAA+G,EAAKpD,cAA8BqB,QAASlB,GAAUA,EAAMkD,WAAW,QAAQ,OAAAzD,QAAAC,QACnEuD,EAAK3C,eAAe,MAClC,CAAC,MAAAvF,GAAA,OAAA0E,QAAA9C,OAAA5B,EAAA,GASMoI,eAAc,SAAAC,IAEpB,IAAKlH,KAAK4F,YAAY,eAAgB,CACrC5F,KAAK4C,YAAY,cAAe5C,KAAKmH,iBACtC,CAEA,OAAOnH,KAAK4F,YAAY,cACzB,EAQQuB,eAAc,SAAAA,IACrB,OAAOnH,KAAK2D,eAAe,IAAIiC,YAAY,MAC5C,EAQOwB,aAAY,SAAAC,IAElBrH,KAAKsH,oBAAoBtH,KAAKuH,kBAAoBhG,EAAWiG,QAG5DxH,KAAK2D,cAA8BqB,QAASlB,GAAUA,EAAMuD,gBAC9D,EAOUI,6BAA4B,SAAAC,IACrC,OAAO9G,GACR,IAAC,OAtOmBY,CAAc","ignoreList":[],"sourceRoot":""}},{"offset":{"line":281,"column":0},"map":{"version":3,"names":["sap","ui","define","getTodosPlaceholder","__exports","__esModule"],"sources":["ToDosContainerGenericPlaceholder.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nexport function getTodosPlaceholder(): string {\n\treturn `\n        <div class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plContent plResponsivePadding\" style=\"background-color:transparent\">\n            <div class=\"plText sapMGTLoadingShimmer plTextWeightL plTextWidthM plPHPCardHeaderText\" style=\"width: 225px;\">\n            </div>\n            <div class=\"plPHPCardContainer plPHPCardContainerOverflowHidden plSectionMarginBottom\">\n                <div class=\"plPHPCard plPHPCardVersion1 PHPContentCard1\" style=\"background-color:white\">\n                    <div class=\"plPHPCardHeader\">\n                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardHeaderText\"\n                            style=\"width: 100%;\"></div>\n                    </div>\n                    <div class=\"plPHPCardContent\">\n                        <div style=\"vertical-align: inherit;\">\n                            <div\n                                class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plVerticalRepeater plPHPCardContentContainer\">\n                                <div class=\"plText sapMGTLoadingShimmer plTextWeightS plTextWidthM plPHPCardContentText plVerticalRepeaterItem\"\n                                    style=\"width: 80%;\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"plPHPCard plPHPCardVersion1 PHPContentCard2\" style=\"background-color:white\">\n                    <div class=\"plPHPCardHeader\">\n                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardHeaderText\"\n                            style=\"width: 100%;\"></div>\n                    </div>\n                    <div class=\"plPHPCardContent\">\n                        <div style=\"vertical-align: inherit;\">\n                            <div\n                                class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plVerticalRepeater plPHPCardContentContainer\">\n                                <div class=\"plText sapMGTLoadingShimmer plTextWeightS plTextWidthM plPHPCardContentText plVerticalRepeaterItem\"\n                                    style=\"width: 80%;\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"plPHPCard plPHPCardVersion1 PHPContentCard3 plSmallestVisibleSizeL\" style=\"background-color:white\">\n                    <div class=\"plPHPCardHeader\">\n                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardHeaderText\"\n                            style=\"width: 100%;\"></div>\n                    </div>\n                    <div class=\"plPHPCardContent\">\n                        <div style=\"vertical-align: inherit;\">\n                            <div\n                                class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plVerticalRepeater plPHPCardContentContainer\">\n                                <div class=\"plText sapMGTLoadingShimmer plTextWeightS plTextWidthM plPHPCardContentText plVerticalRepeaterItem\"\n                                    style=\"width: 80%;\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"plPHPCard plPHPCardVersion1 PHPContentCard4 plSmallestVisibleSizeXL\" style=\"background-color:white\">\n                    <div class=\"plPHPCardHeader\">\n                        <div class=\"plText sapMGTLoadingShimmer plTextWeightM plTextWidthM plPHPCardHeaderText\"\n                            style=\"width: 100%;\"></div>\n                    </div>\n                    <div class=\"plPHPCardContent\">\n                        <div style=\"vertical-align: inherit;\">\n                            <div\n                                class=\"plVerticalLayout plVerticalContent plTextAlignStart plVerticalAlignTop plVerticalRepeater plPHPCardContentContainer\">\n                                <div class=\"plText sapMGTLoadingShimmer plTextWeightS plTextWidthM plPHPCardContentText plVerticalRepeaterItem\"\n                                    style=\"width: 80%;\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `;\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,2DAAA,2BAIO,SAASC,IACf,MAAO,i3IAoER,CAAC,IAAAC,EAAA,CAAAC,WAAA,MAAAD,EAAAD,sBAAA,OAAAC,CAAA","ignoreList":[],"sourceRoot":""}},{"offset":{"line":286,"column":0},"map":{"version":3,"names":["sap","ui","define","LayoutHandler","allChanges","loadPersonalizationDialog","oWrapperControl","mPropertyBag","Promise","resolve","this","persDialogResolve","keyuserPersDialog","getAggregation","addStyleClass","styleClass","open","onCancelDialog","close","addChanges","aChanges","push","clearChanges","layoutHandler"],"sources":["LayoutHandler.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Dialog from \"sap/m/Dialog\";\nimport Control from \"sap/ui/core/Control\";\n\nclass LayoutHandler {\n\tprivate keyuserPersDialog!: Dialog;\n\tprivate persDialogResolve!: (value: unknown) => void;\n\tprivate allChanges: Array<unknown> = [];\n\n\tpublic loadPersonalizationDialog(oWrapperControl: Control, mPropertyBag: Record<string, unknown>) {\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.persDialogResolve = resolve;\n\t\t\tthis.keyuserPersDialog = oWrapperControl.getAggregation(\"keyUserSettingsDialog\") as Dialog;\n\t\t\t// Add RTA Class and show dialog\n\t\t\tthis.keyuserPersDialog.addStyleClass(mPropertyBag.styleClass as string);\n\n\t\t\t// Open the dialog\n\t\t\tthis.keyuserPersDialog.open();\n\t\t});\n\t}\n\n\tpublic onCancelDialog() {\n\t\tthis.keyuserPersDialog.close();\n\t}\n\n\tpublic addChanges(aChanges: Array<unknown>) {\n\t\tthis.allChanges.push(...aChanges);\n\t}\n\n\tpublic clearChanges() {\n\t\tthis.allChanges = [];\n\t}\n\n\tpublic resolve() {\n\t\tthis.persDialogResolve(this.allChanges);\n\t}\n}\n\nconst layoutHandler = new LayoutHandler();\n\nexport default layoutHandler;\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,sDAAA,2BAQA,MAAMC,EAGGC,WAA6B,GAE9BC,0BAA0BC,EAA0BC,GAC1D,OAAO,IAAIC,QAASC,IACnBC,KAAKC,kBAAoBF,EACzBC,KAAKE,kBAAoBN,EAAgBO,eAAe,yBAExDH,KAAKE,kBAAkBE,cAAcP,EAAaQ,YAGlDL,KAAKE,kBAAkBI,MAAM,EAE/B,CAEOC,iBACNP,KAAKE,kBAAkBM,OACxB,CAEOC,WAAWC,GACjBV,KAAKN,WAAWiB,QAAQD,EACzB,CAEOE,eACNZ,KAAKN,WAAa,EACnB,CAEOK,UACNC,KAAKC,kBAAkBD,KAAKN,WAC7B,EAGD,MAAMmB,EAAgB,IAAIpB,EAAgB,OAE3BoB,CAAa","ignoreList":[],"sourceRoot":"changeHandler"}},{"offset":{"line":291,"column":0},"map":{"version":3,"names":["sap","ui","define","CondenserClassification","getContainer","control","getMetadata","getName","getItems","find","item","debounceTimeout","NewsFeedVisibilityChange","applyChange","change","container","clearTimeout","setTimeout","newsVisibilityChangeHandler","getContent","revertChange","isNewsFeedVisible","completeChangeContent","getCondenserInfo","affectedControl","getSelector","classification","LastOneWins","uniqueKey"],"sources":["NewsFeedVisibilityChange.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Control from \"sap/ui/core/Control\";\nimport CondenserClassification from \"sap/ui/fl/changeHandler/condenser/Classification\";\nimport BaseLayout from \"../BaseLayout\";\nimport { IKeyUserChangeObject, INewsFeedVisibiliyChange } from \"../interface/KeyUserInterface\";\nimport NewsAndPagesContainer from \"../NewsAndPagesContainer\";\n\nfunction getContainer(control: Control): NewsAndPagesContainer {\n\tif (control.getMetadata().getName() === \"sap.cux.home.NewsAndPagesContainer\") {\n\t\treturn control as NewsAndPagesContainer;\n\t}\n\treturn (control as BaseLayout)\n\t\t.getItems()\n\t\t.find((item) => item.getMetadata().getName() === \"sap.cux.home.NewsAndPagesContainer\") as NewsAndPagesContainer;\n}\nlet debounceTimeout: ReturnType<typeof setTimeout> | null = null;\n\nconst NewsFeedVisibilityChange = {\n\tapplyChange: (change: IKeyUserChangeObject, control: Control) => {\n\t\tconst container = getContainer(control);\n\n\t\t// Debounce the newsPersonalization call\n\t\tif (debounceTimeout) {\n\t\t\tclearTimeout(debounceTimeout);\n\t\t}\n\n\t\tdebounceTimeout = setTimeout(() => {\n\t\t\tcontainer?.newsVisibilityChangeHandler(change.getContent());\n\t\t}, 0);\n\n\t\treturn true;\n\t},\n\trevertChange: (change: IKeyUserChangeObject, control: Control) => {\n\t\tconst container = getContainer(control);\n\t\tlet revertChange = change.getContent() as INewsFeedVisibiliyChange;\n\t\trevertChange.isNewsFeedVisible = !revertChange.isNewsFeedVisible;\n\t\tcontainer?.newsVisibilityChangeHandler(revertChange);\n\t},\n\tcompleteChangeContent: () => {\n\t\treturn;\n\t},\n\tgetCondenserInfo: (change: IKeyUserChangeObject) => {\n\t\treturn {\n\t\t\taffectedControl: change.getSelector(),\n\t\t\tclassification: (CondenserClassification as { LastOneWins: string }).LastOneWins,\n\t\t\tuniqueKey: \"newsFeedVisibility\"\n\t\t};\n\t}\n};\n\nexport default NewsFeedVisibilityChange;\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,iEAAA,8DAAAC,GAAA,aAWA,SAASC,EAAaC,GACrB,GAAIA,EAAQC,cAAcC,YAAc,qCAAsC,CAC7E,OAAOF,CACR,CACA,OAAQA,EACNG,WACAC,KAAMC,GAASA,EAAKJ,cAAcC,YAAc,qCACnD,CACA,IAAII,EAAwD,KAE5D,MAAMC,EAA2B,CAChCC,YAAaA,CAACC,EAA8BT,KAC3C,MAAMU,EAAYX,EAAaC,GAG/B,GAAIM,EAAiB,CACpBK,aAAaL,EACd,CAEAA,EAAkBM,WAAW,KAC5BF,GAAWG,4BAA4BJ,EAAOK,aAAa,EACzD,GAEH,OAAO,IAAI,EAEZC,aAAcA,CAACN,EAA8BT,KAC5C,MAAMU,EAAYX,EAAaC,GAC/B,IAAIe,EAAeN,EAAOK,aAC1BC,EAAaC,mBAAqBD,EAAaC,kBAC/CN,GAAWG,4BAA4BE,EAAa,EAErDE,sBAAuBA,OAGvBC,iBAAmBT,IACX,CACNU,gBAAiBV,EAAOW,cACxBC,eAAiBvB,EAAoDwB,YACrEC,UAAW,wBAGZ,OAEahB,CAAwB","ignoreList":[],"sourceRoot":"changeHandler"}},{"offset":{"line":296,"column":0},"map":{"version":3,"names":["sap","ui","define","CondenserClassification","getContainer","control","getMetadata","getName","getItems","find","item","debounceTimeout","SetNewsFeedUrl","applyChange","change","container","clearTimeout","setTimeout","newsPersonalization","getContent","revertChange","revertChanges","newsFeedURL","oldNewsFeedUrl","showCustomNewsFeed","oldShowCustomNewsFeed","customNewsFeedKey","oldCustomNewsFeedKey","completeChangeContent","getCondenserInfo","affectedControl","getSelector","classification","LastOneWins","uniqueKey"],"sources":["SetNewsFeedUrl.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Control from \"sap/ui/core/Control\";\nimport CondenserClassification from \"sap/ui/fl/changeHandler/condenser/Classification\";\nimport BaseLayout from \"../BaseLayout\";\nimport { IKeyUserChangeObject, INewsPersData } from \"../interface/KeyUserInterface\";\nimport NewsAndPagesContainer from \"../NewsAndPagesContainer\";\n\nfunction getContainer(control: Control): NewsAndPagesContainer {\n\tif (control.getMetadata().getName() === \"sap.cux.home.NewsAndPagesContainer\") {\n\t\treturn control as NewsAndPagesContainer;\n\t}\n\treturn (control as BaseLayout)\n\t\t.getItems()\n\t\t.find((item) => item.getMetadata().getName() === \"sap.cux.home.NewsAndPagesContainer\") as NewsAndPagesContainer;\n}\nlet debounceTimeout: ReturnType<typeof setTimeout> | null = null;\n\nconst SetNewsFeedUrl = {\n\tapplyChange: (change: IKeyUserChangeObject, control: Control) => {\n\t\tconst container = getContainer(control);\n\n\t\t// Debounce the newsPersonalization call\n\t\tif (debounceTimeout) {\n\t\t\tclearTimeout(debounceTimeout);\n\t\t}\n\n\t\tdebounceTimeout = setTimeout(() => {\n\t\t\tcontainer?.newsPersonalization(change.getContent());\n\t\t}, 0);\n\n\t\treturn true;\n\t},\n\trevertChange: (change: IKeyUserChangeObject, control: Control) => {\n\t\tconst container = getContainer(control);\n\t\tlet revertChanges = change.getContent() as INewsPersData;\n\t\trevertChanges.newsFeedURL = revertChanges.oldNewsFeedUrl;\n\t\trevertChanges.showCustomNewsFeed = revertChanges.oldShowCustomNewsFeed;\n\t\trevertChanges.customNewsFeedKey = revertChanges.oldCustomNewsFeedKey;\n\t\tcontainer?.newsPersonalization(revertChanges);\n\t},\n\tcompleteChangeContent: () => {\n\t\treturn;\n\t},\n\tgetCondenserInfo: (change: IKeyUserChangeObject) => {\n\t\treturn {\n\t\t\taffectedControl: change.getSelector(),\n\t\t\tclassification: (CondenserClassification as { LastOneWins: string }).LastOneWins,\n\t\t\tuniqueKey: \"newsFeedUrl\"\n\t\t};\n\t}\n};\n\nexport default SetNewsFeedUrl;\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,uDAAA,8DAAAC,GAAA,aAWA,SAASC,EAAaC,GACrB,GAAIA,EAAQC,cAAcC,YAAc,qCAAsC,CAC7E,OAAOF,CACR,CACA,OAAQA,EACNG,WACAC,KAAMC,GAASA,EAAKJ,cAAcC,YAAc,qCACnD,CACA,IAAII,EAAwD,KAE5D,MAAMC,EAAiB,CACtBC,YAAaA,CAACC,EAA8BT,KAC3C,MAAMU,EAAYX,EAAaC,GAG/B,GAAIM,EAAiB,CACpBK,aAAaL,EACd,CAEAA,EAAkBM,WAAW,KAC5BF,GAAWG,oBAAoBJ,EAAOK,aAAa,EACjD,GAEH,OAAO,IAAI,EAEZC,aAAcA,CAACN,EAA8BT,KAC5C,MAAMU,EAAYX,EAAaC,GAC/B,IAAIgB,EAAgBP,EAAOK,aAC3BE,EAAcC,YAAcD,EAAcE,eAC1CF,EAAcG,mBAAqBH,EAAcI,sBACjDJ,EAAcK,kBAAoBL,EAAcM,qBAChDZ,GAAWG,oBAAoBG,EAAc,EAE9CO,sBAAuBA,OAGvBC,iBAAmBf,IACX,CACNgB,gBAAiBhB,EAAOiB,cACxBC,eAAiB7B,EAAoD8B,YACrEC,UAAW,iBAGZ,OAEatB,CAAc","ignoreList":[],"sourceRoot":"changeHandler"}},{"offset":{"line":301,"column":0},"map":{"version":3,"names":["sap","ui","define","CondenserClassification","getNewsPageContainer","control","getItems","find","item","getMetadata","getName","SpacePageColorHandler","applyChange","change","container","setColorPersonalizations","getContent","revertChange","forEach","changeContent","BGColor","oldColor","applyColorToAllPages","oldApplyColorToAllPages","completeChangeContent","getCondenserInfo","affectedControl","getSelector","classification","LastOneWins","uniqueKey","spaceId","pageId"],"sources":["SpacePageColorHandler.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Control from \"sap/ui/core/Control\";\nimport CondenserClassification from \"sap/ui/fl/changeHandler/condenser/Classification\";\nimport BaseLayout from \"../BaseLayout\";\nimport { IKeyUserChangeObject, ISpacePagePersonalization } from \"../interface/KeyUserInterface\";\nimport NewsAndPagesContainer from \"../NewsAndPagesContainer\";\n\nfunction getNewsPageContainer(control: Control): NewsAndPagesContainer {\n\treturn (control as BaseLayout)\n\t\t.getItems()\n\t\t.find((item) => item.getMetadata().getName() === \"sap.cux.home.NewsAndPagesContainer\") as NewsAndPagesContainer;\n}\n\nconst SpacePageColorHandler = {\n\tapplyChange: (change: IKeyUserChangeObject, control: Control) => {\n\t\tconst container = getNewsPageContainer(control);\n\t\tcontainer?.setColorPersonalizations(change.getContent());\n\t\treturn true;\n\t},\n\trevertChange: (change: IKeyUserChangeObject, control: Control) => {\n\t\tconst revertChange = change.getContent() as ISpacePagePersonalization[];\n\t\trevertChange.forEach((changeContent) => {\n\t\t\tchangeContent.BGColor = changeContent.oldColor;\n\t\t\tchangeContent.applyColorToAllPages = changeContent.oldApplyColorToAllPages;\n\t\t});\n\t\tconst container = getNewsPageContainer(control);\n\t\tcontainer?.setColorPersonalizations(revertChange);\n\t},\n\tcompleteChangeContent: () => {\n\t\treturn;\n\t},\n\tgetCondenserInfo: (change: IKeyUserChangeObject) => {\n\t\tconst changeContent = change.getContent() as ISpacePagePersonalization;\n\t\treturn {\n\t\t\taffectedControl: change.getSelector(),\n\t\t\tclassification: (CondenserClassification as { LastOneWins: string }).LastOneWins,\n\t\t\tuniqueKey: changeContent.spaceId + (changeContent.pageId || \"\") + \"_color\"\n\t\t};\n\t}\n};\n\nexport default SpacePageColorHandler;\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,8DAAA,8DAAAC,GAAA,aAWA,SAASC,EAAqBC,GAC7B,OAAQA,EACNC,WACAC,KAAMC,GAASA,EAAKC,cAAcC,YAAc,qCACnD,CAEA,MAAMC,EAAwB,CAC7BC,YAAaA,CAACC,EAA8BR,KAC3C,MAAMS,EAAYV,EAAqBC,GACvCS,GAAWC,yBAAyBF,EAAOG,cAC3C,OAAO,IAAI,EAEZC,aAAcA,CAACJ,EAA8BR,KAC5C,MAAMY,EAAeJ,EAAOG,aAC5BC,EAAaC,QAASC,IACrBA,EAAcC,QAAUD,EAAcE,SACtCF,EAAcG,qBAAuBH,EAAcI,uBAAuB,GAE3E,MAAMT,EAAYV,EAAqBC,GACvCS,GAAWC,yBAAyBE,EAAa,EAElDO,sBAAuBA,OAGvBC,iBAAmBZ,IAClB,MAAMM,EAAgBN,EAAOG,aAC7B,MAAO,CACNU,gBAAiBb,EAAOc,cACxBC,eAAiBzB,EAAoD0B,YACrEC,UAAWX,EAAcY,SAAWZ,EAAca,QAAU,IAAM,SAClE,GAED,OAEarB,CAAqB","ignoreList":[],"sourceRoot":"changeHandler"}},{"offset":{"line":306,"column":0},"map":{"version":3,"names":["sap","ui","define","CondenserClassification","getContainer","control","getMetadata","getName","getItems","find","item","SpacePageIconHandler","applyChange","change","container","setIconPersonalizations","getContent","revertChange","forEach","changeContent","icon","oldIcon","completeChangeContent","getCondenserInfo","affectedControl","getSelector","classification","LastOneWins","uniqueKey","spaceId","pageId"],"sources":["SpacePageIconHandler.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Control from \"sap/ui/core/Control\";\nimport CondenserClassification from \"sap/ui/fl/changeHandler/condenser/Classification\";\nimport BaseLayout from \"../BaseLayout\";\nimport { IKeyUserChangeObject, ISpacePagePersonalization } from \"../interface/KeyUserInterface\";\nimport NewsAndPagesContainer from \"../NewsAndPagesContainer\";\n\nfunction getContainer(control: Control): NewsAndPagesContainer {\n\tif (control.getMetadata().getName() === \"sap.cux.home.NewsAndPagesContainer\") {\n\t\treturn control as NewsAndPagesContainer;\n\t}\n\treturn (control as BaseLayout)\n\t\t.getItems()\n\t\t.find((item) => item.getMetadata().getName() === \"sap.cux.home.NewsAndPagesContainer\") as NewsAndPagesContainer;\n}\n\nconst SpacePageIconHandler = {\n\tapplyChange: (change: IKeyUserChangeObject, control: Control) => {\n\t\tconst container = getContainer(control);\n\t\tcontainer?.setIconPersonalizations(change.getContent());\n\t\treturn true;\n\t},\n\trevertChange: (change: IKeyUserChangeObject, control: Control) => {\n\t\tconst revertChange = change.getContent() as ISpacePagePersonalization[];\n\t\trevertChange.forEach((changeContent) => {\n\t\t\tchangeContent.icon = changeContent.oldIcon;\n\t\t});\n\t\tconst container = getContainer(control);\n\t\tcontainer?.setIconPersonalizations(revertChange);\n\t},\n\tcompleteChangeContent: () => {\n\t\treturn;\n\t},\n\tgetCondenserInfo: (change: IKeyUserChangeObject) => {\n\t\tconst changeContent = change.getContent() as ISpacePagePersonalization;\n\t\treturn {\n\t\t\taffectedControl: change.getSelector(),\n\t\t\tclassification: (CondenserClassification as { LastOneWins: string }).LastOneWins,\n\t\t\tuniqueKey: changeContent.spaceId + (changeContent.pageId || \"\") + \"_icon\"\n\t\t};\n\t}\n};\n\nexport default SpacePageIconHandler;\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,6DAAA,8DAAAC,GAAA,aAWA,SAASC,EAAaC,GACrB,GAAIA,EAAQC,cAAcC,YAAc,qCAAsC,CAC7E,OAAOF,CACR,CACA,OAAQA,EACNG,WACAC,KAAMC,GAASA,EAAKJ,cAAcC,YAAc,qCACnD,CAEA,MAAMI,EAAuB,CAC5BC,YAAaA,CAACC,EAA8BR,KAC3C,MAAMS,EAAYV,EAAaC,GAC/BS,GAAWC,wBAAwBF,EAAOG,cAC1C,OAAO,IAAI,EAEZC,aAAcA,CAACJ,EAA8BR,KAC5C,MAAMY,EAAeJ,EAAOG,aAC5BC,EAAaC,QAASC,IACrBA,EAAcC,KAAOD,EAAcE,OAAO,GAE3C,MAAMP,EAAYV,EAAaC,GAC/BS,GAAWC,wBAAwBE,EAAa,EAEjDK,sBAAuBA,OAGvBC,iBAAmBV,IAClB,MAAMM,EAAgBN,EAAOG,aAC7B,MAAO,CACNQ,gBAAiBX,EAAOY,cACxBC,eAAiBvB,EAAoDwB,YACrEC,UAAWT,EAAcU,SAAWV,EAAcW,QAAU,IAAM,QAClE,GAED,OAEanB,CAAoB","ignoreList":[],"sourceRoot":"changeHandler"}},{"offset":{"line":311,"column":0},"map":{"version":3,"names":["sap","ui","define","HideControl","UnHideControl","Action","resetLayoutSections","changeType","action","change","control","propertyBag","genericChange","Promise","resolve","then","getParent","resetSections","e","reject","__exports","hideControl","layers","USER","changeHandler","applyChange","revertChange","unhideControl"],"sources":["BaseContainer.flexibility.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport HideControl from \"sap/ui/fl/changeHandler/HideControl\";\nimport UnHideControl from \"sap/ui/fl/changeHandler/UnhideControl\";\nimport BaseContainer from \"../BaseContainer\";\nimport { IKeyUserChange } from \"../interface/KeyUserInterface\";\nimport Layout from \"../Layout\";\n\nenum Action {\n\tapplyChange = \"applyChange\",\n\trevertChange = \"revertChange\"\n}\n\ntype ChangeHandler = {\n\tapplyChange: (change: IKeyUserChange, control: BaseContainer, propertyBag: object) => Promise<void>;\n\trevertChange: (change: IKeyUserChange, control: BaseContainer, propertyBag: object) => Promise<void>;\n};\n\nconst resetLayoutSections = async (\n\tchangeType: ChangeHandler,\n\taction: Action,\n\tchange: IKeyUserChange,\n\tcontrol: BaseContainer,\n\tpropertyBag: object\n) => {\n\tconst genericChange: ChangeHandler = changeType;\n\tawait genericChange[action](change, control, propertyBag);\n\n\t// Reset sections to update the layout\n\t(control.getParent() as Layout).resetSections?.();\n};\n\nexport default {\n\thideControl: {\n\t\tlayers: {\n\t\t\tUSER: true\n\t\t},\n\t\tchangeHandler: {\n\t\t\t...HideControl,\n\t\t\tapplyChange: async (change: IKeyUserChange, control: BaseContainer, propertyBag: object) => {\n\t\t\t\tawait resetLayoutSections(HideControl as ChangeHandler, Action.applyChange, change, control, propertyBag);\n\t\t\t},\n\t\t\trevertChange: async (change: IKeyUserChange, control: BaseContainer, propertyBag: object) => {\n\t\t\t\tawait resetLayoutSections(HideControl as ChangeHandler, Action.revertChange, change, control, propertyBag);\n\t\t\t}\n\t\t} as ChangeHandler\n\t},\n\tunhideControl: {\n\t\tlayers: {\n\t\t\tUSER: true\n\t\t},\n\t\tchangeHandler: {\n\t\t\t...UnHideControl,\n\t\t\tapplyChange: async (change: IKeyUserChange, control: BaseContainer, propertyBag: object) => {\n\t\t\t\tawait resetLayoutSections(UnHideControl as ChangeHandler, Action.applyChange, change, control, propertyBag);\n\t\t\t},\n\t\t\trevertChange: async (change: IKeyUserChange, control: BaseContainer, propertyBag: object) => {\n\t\t\t\tawait resetLayoutSections(UnHideControl as ChangeHandler, Action.revertChange, change, control, propertyBag);\n\t\t\t}\n\t\t} as ChangeHandler\n\t}\n};\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,gEAAA,yFAAAC,EAAAC,GAAA,iBAWKC,EAAM,SAANA,KAAM,6BAANA,EAAM,sCAANA,CAAM,EAANA,GAAM,IAUX,MAAMC,EAAmB,SACxBC,EACAC,EACAC,EACAC,EACAC,GAAmB,IAEnB,MAAMC,EAA+BL,EAAW,OAAAM,QAAAC,QAC1CF,EAAcJ,GAAQC,EAAQC,EAASC,IAAYI,KAAA,WAGxDL,EAAQM,YAAuBC,iBAAkB,EACnD,CAAC,MAAAC,GAAA,OAAAL,QAAAM,OAAAD,EAAA,GAAC,IAAAE,EAEa,CACdC,YAAa,CACZC,OAAQ,CACPC,KAAM,MAEPC,cAAe,IACXrB,EACHsB,YAAW,SAAShB,EAAwBC,EAAwBC,GAAmB,IAAK,OAAAE,QAAAC,QACrFR,EAAoBH,EAA8BE,EAAOoB,YAAahB,EAAQC,EAASC,IAAYI,KAAA,aAC1G,CAAC,MAAAG,GAAA,OAAAL,QAAAM,OAAAD,EAAA,GACDQ,aAAY,SAASjB,EAAwBC,EAAwBC,GAAmB,IAAK,OAAAE,QAAAC,QACtFR,EAAoBH,EAA8BE,EAAOqB,aAAcjB,EAAQC,EAASC,IAAYI,KAAA,aAC3G,CAAC,MAAAG,GAAA,OAAAL,QAAAM,OAAAD,EAAA,KAGHS,cAAe,CACdL,OAAQ,CACPC,KAAM,MAEPC,cAAe,IACXpB,EACHqB,YAAW,SAAShB,EAAwBC,EAAwBC,GAAmB,IAAK,OAAAE,QAAAC,QACrFR,EAAoBF,EAAgCC,EAAOoB,YAAahB,EAAQC,EAASC,IAAYI,KAAA,aAC5G,CAAC,MAAAG,GAAA,OAAAL,QAAAM,OAAAD,EAAA,GACDQ,aAAY,SAASjB,EAAwBC,EAAwBC,GAAmB,IAAK,OAAAE,QAAAC,QACtFR,EAAoBF,EAAgCC,EAAOqB,aAAcjB,EAAQC,EAASC,IAAYI,KAAA,aAC7G,CAAC,MAAAG,GAAA,OAAAL,QAAAM,OAAAD,EAAA,MAGH,OAAAE,CAAA","ignoreList":[],"sourceRoot":"flexibility"}},{"offset":{"line":316,"column":0},"map":{"version":3,"names":["sap","ui","define","MoveControls","__newsFeedVisibilityChange","__setNewsFeedUrl","__spacePageColorHandler","__SpacePageIconHandler","_interopRequireDefault","obj","__esModule","default","newsFeedVisibilityChange","setNewsFeedUrl","spacePageColorHandler","SpacePageIconHandler","CHANGE_TYPES","__exports","MOVE","layers","USER","changeHandler","HIDE","UNHIDE","SPACE_COLOR","CUSTOMER","PAGE_COLOR","SPACE_ICON","PAGE_ICON","NEWS_FEED_URL","NEWS_FEED_VISIBILITY"],"sources":["Layout.flexibility.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport MoveControls from \"sap/ui/fl/changeHandler/MoveControls\";\nimport newsFeedVisibilityChange from \"../changeHandler/NewsFeedVisibilityChange\";\nimport setNewsFeedUrl from \"../changeHandler/SetNewsFeedUrl\";\nimport spacePageColorHandler from \"../changeHandler/SpacePageColorHandler\";\nimport SpacePageIconHandler from \"../changeHandler/SpacePageIconHandler\";\n\nexport enum CHANGE_TYPES {\n\tHIDE = \"hideControl\",\n\tUNHIDE = \"unhideControl\",\n\tMOVE = \"moveControls\",\n\tPAGE_COLOR = \"applyPageColor\",\n\tSPACE_COLOR = \"applySpaceColor\",\n\tPAGE_ICON = \"applyPageIcon\",\n\tSPACE_ICON = \"applySpaceIcon\",\n\tNEWS_FEED_URL = \"changeNewsFeedURL\",\n\tNEWS_FEED_VISIBILITY = \"setNewsFeedVisibility\"\n}\n\nexport default {\n\t[CHANGE_TYPES.MOVE]: {\n\t\tlayers: {\n\t\t\tUSER: true\n\t\t},\n\t\tchangeHandler: MoveControls as object\n\t},\n\t[CHANGE_TYPES.HIDE]: \"default\",\n\t[CHANGE_TYPES.UNHIDE]: \"default\",\n\t[CHANGE_TYPES.SPACE_COLOR]: {\n\t\tlayers: {\n\t\t\tCUSTOMER: true\n\t\t},\n\t\tchangeHandler: spacePageColorHandler\n\t},\n\t[CHANGE_TYPES.PAGE_COLOR]: {\n\t\tlayers: {\n\t\t\tCUSTOMER: true\n\t\t},\n\t\tchangeHandler: spacePageColorHandler\n\t},\n\t[CHANGE_TYPES.SPACE_ICON]: {\n\t\tlayers: {\n\t\t\tCUSTOMER: true\n\t\t},\n\t\tchangeHandler: SpacePageIconHandler\n\t},\n\t[CHANGE_TYPES.PAGE_ICON]: {\n\t\tlayers: {\n\t\t\tCUSTOMER: true\n\t\t},\n\t\tchangeHandler: SpacePageIconHandler\n\t},\n\t[CHANGE_TYPES.NEWS_FEED_URL]: {\n\t\tlayers: {\n\t\t\tCUSTOMER: true\n\t\t},\n\t\tchangeHandler: setNewsFeedUrl\n\t},\n\t[CHANGE_TYPES.NEWS_FEED_VISIBILITY]: {\n\t\tlayers: {\n\t\t\tCUSTOMER: true\n\t\t},\n\t\tchangeHandler: newsFeedVisibilityChange\n\t}\n};\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,yDAAA,iNAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,sBAAAC,EAAAC,GAAA,OAAAA,KAAAC,mBAAAD,EAAAE,UAAA,YAAAF,EAAAE,QAAAF,CAAA,OAMOG,EAAwBJ,EAAAJ,GAAA,MACxBS,EAAcL,EAAAH,GAAA,MACdS,EAAqBN,EAAAF,GAAA,MACrBS,EAAoBP,EAAAD,GAAA,IAEfS,EAAY,SAAZA,KAAY,sBAAZA,EAAY,0BAAZA,EAAY,uBAAZA,EAAY,+BAAZA,EAAY,iCAAZA,EAAY,6BAAZA,EAAY,+BAAZA,EAAY,qCAAZA,EAAY,uDAAZA,CAAY,EAAZA,GAAY,QAAAC,EAYT,CACd,CAACD,EAAaE,MAAO,CACpBC,OAAQ,CACPC,KAAM,MAEPC,cAAelB,GAEhB,CAACa,EAAaM,MAAO,UACrB,CAACN,EAAaO,QAAS,UACvB,CAACP,EAAaQ,aAAc,CAC3BL,OAAQ,CACPM,SAAU,MAEXJ,cAAeP,GAEhB,CAACE,EAAaU,YAAa,CAC1BP,OAAQ,CACPM,SAAU,MAEXJ,cAAeP,GAEhB,CAACE,EAAaW,YAAa,CAC1BR,OAAQ,CACPM,SAAU,MAEXJ,cAAeN,GAEhB,CAACC,EAAaY,WAAY,CACzBT,OAAQ,CACPM,SAAU,MAEXJ,cAAeN,GAEhB,CAACC,EAAaa,eAAgB,CAC7BV,OAAQ,CACPM,SAAU,MAEXJ,cAAeR,GAEhB,CAACG,EAAac,sBAAuB,CACpCX,OAAQ,CACPM,SAAU,MAEXJ,cAAeT,IAEhBK,EAAAD,eAAA,OAAAC,CAAA","ignoreList":[],"sourceRoot":"flexibility"}},{"offset":{"line":321,"column":0},"map":{"version":3,"names":["sap","ui","define","UIAnnotations","__exports","__esModule"],"sources":["CardsInterface.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport { TerminologyConfiguration } from \"sap/base/i18n/ResourceBundle\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport { EntitySet, EntityType, Property } from \"sap/ui/model/odata/ODataMetaModel\";\nimport { Intent } from \"sap/ushell/services/AppLifeCycle\";\n\nexport interface ICardHelper {\n\tgetServiceAsync: () => Promise<ICardHelperInstance>;\n}\n\nexport interface ICardHelperInstance {\n\t_getUserVisibleCardModel: () => Promise<JSONModel>;\n\t_getUserAllCardModel: () => Promise<JSONModel>;\n\thandleDndCardsRanking: (iDragItemIndex: number, iDropItemIndex: number, aCards: ICard[]) => ICard[];\n\t_updateMultipleCards: (aCards: ICard[], sRequestMethod: string) => Promise<void>;\n\t_createCards: (aManifests: ICardManifest[]) => Promise<void>;\n\tgetParentAppDetails: (oCard: ICard) => Promise<ICardParentAppDetails>;\n\tprocessSemanticDate: (oParameter: object, oIntegrationCardManifest: object) => unknown;\n\tshowAddCardWithSearchDialog(callback: () => Promise<void>): void;\n\t_updateCards: (aCards: (ICard | ICardManifest)[]) => Promise<void>;\n\t_refreshUserCards: (deleteAllCards: boolean) => Promise<void>;\n}\n\nexport interface ICardParentAppDetails {\n\tsemanticObject: string;\n\taction: string;\n\tsemanticURL: string;\n\ttitle: string;\n}\n\nexport interface ICard {\n\tid?: string;\n\tdescriptorContent: ICardManifest;\n\tvisibility?: boolean;\n\trank?: string;\n}\n\nexport interface ICardAction {\n\ttype?: string;\n\tparameters: ICardActionParameters | string;\n}\n\nexport interface ICardActionParameters {\n\tibnTarget?: {\n\t\tsemanticObject: string;\n\t\taction: string;\n\t};\n\tibnParams?: Record<string, unknown>;\n\tsensitiveProps?: string[];\n}\n\nexport interface ISapCardConfig {\n\tparameters?: {\n\t\t_semanticDateRangeSetting?: {\n\t\t\tvalue: string;\n\t\t};\n\t\t_relevantODataFilters: {\n\t\t\tvalue: unknown[];\n\t\t};\n\t\t_relevantODataParameters: {\n\t\t\tvalue: unknown[];\n\t\t};\n\t\tlineItemState?: {\n\t\t\tvalue: string;\n\t\t};\n\t\tstate?: {\n\t\t\tvalue: string;\n\t\t};\n\t\theaderState?: {\n\t\t\tvalue: string;\n\t\t};\n\t\tcontentState?: {\n\t\t\tvalue: string;\n\t\t};\n\t};\n\tcsrfTokens?: unknown;\n\t[key: string]: unknown;\n}\nexport interface ISapCard {\n\ttype?: string;\n\theader?: {\n\t\ttitle?: string;\n\t\tactions?: ICardAction[];\n\t\tsubTitle?: string;\n\t\ticon?: string;\n\t\tstatus?: {\n\t\t\ttext?: string;\n\t\t\tstate?: string;\n\t\t};\n\t\tdata?: Record<string, unknown>;\n\t};\n\tcontent?: {\n\t\titem?: {\n\t\t\tactions: ICardAction[];\n\t\t\tattributes: {\n\t\t\t\tvalue: string;\n\t\t\t\tvisible?: boolean;\n\t\t\t\tstate?: string;\n\t\t\t\tshowStateIcon?: string | boolean;\n\t\t\t}[];\n\t\t\t[key: string]: unknown;\n\t\t};\n\t\tdata?: Record<string, unknown>;\n\t\trow?: {\n\t\t\tactions: ICardAction[];\n\t\t};\n\t\tactions?: ICardAction[];\n\t\tmaxItems?: number;\n\t};\n\trec?: boolean;\n\tconfiguration?: ISapCardConfig;\n\textension?: string;\n\tdata?: unknown;\n}\n\nexport interface IRequestData {\n\trequest: {\n\t\turl: string;\n\t\tmethod: string;\n\t\theaders: Record<string, string>;\n\t\tbatch?: unknown;\n\t};\n}\n\nexport interface ISapApp {\n\tid: string;\n\ttitle: string;\n\tsubTitle: string;\n\ttype: string;\n\tdataSources?: {\n\t\t[key: string]: {\n\t\t\turi?: string;\n\t\t\ttype?: string;\n\t\t\tannotations?: string[];\n\t\t\tsettings?: {\n\t\t\t\todataVersion: string;\n\t\t\t\tlocalUri: string;\n\t\t\t\tannotations?: string[];\n\t\t\t};\n\t\t};\n\t};\n\ti18n?: {\n\t\tbundleUrl: string;\n\t\tterminologies?: Record<string, TerminologyConfiguration>;\n\t};\n\tcrossNavigation?: Record<string, unknown>;\n}\n\nexport interface IResolutionResult {\n\tui5ComponentName: string;\n\tapplicationDependencies?: {\n\t\tmanifest: string;\n\t\t[key: string]: unknown;\n\t};\n\t[key: string]: unknown;\n}\n\nexport type IAppInfo = Record<string, IAppInfoData[]>;\n\nexport interface IAppInfoData {\n\tsemanticObject?: string;\n\taction?: string;\n\tresolutionResult?: IResolutionResult;\n\tfioriId?: string;\n}\n\nexport interface ICardManifest {\n\t\"sap.card\"?: ISapCard;\n\t\"sap.app\"?: ISapApp;\n\t\"sap.insights\"?: {\n\t\tranking?: string;\n\t\tparentAppId?: string;\n\t\t[key: string]: unknown;\n\t};\n\t\"sap.ui5\"?: ISapUI5App;\n\t\"sap.ui\"?: Record<string, unknown>;\n\tcacheType?: string;\n}\n\ntype LineItemAnnotationType =\n\t| \"SemanticObject\"\n\t| \"Action\"\n\t| \"Criticality\"\n\t| \"CriticalityRepresentation\"\n\t| \"com.sap.vocabularies.Common.v1.FieldControl\"\n\t| \"com.sap.vocabularies.UI.v1.Hidden\"\n\t| \"Target\";\n\ntype LineItemObject = {\n\t[key in LineItemAnnotationType]?: {\n\t\tString?: string;\n\t\tPath?: string;\n\t\tEnumMember?: string;\n\t\tAnnotationPath?: string;\n\t\tBool?: boolean | string;\n\t};\n};\n\nexport interface ILineItemContextValue {\n\tPath?: string;\n\tApply?: {\n\t\tParameters: {\n\t\t\tValue?: Record<string, string>;\n\t\t\t[key: string]: unknown;\n\t\t}[];\n\t};\n\t[key: string]: unknown;\n}\n\nexport interface ILineItemContext extends LineItemObject {\n\tValue?: ILineItemContextValue;\n\tUrl?: ILineItemContextValue;\n\tPath?: string;\n\tEnumMember?: string;\n\t[key: string]: unknown;\n}\n\nexport interface ILineItem extends LineItemObject {\n\tValue?: ILineItemContext;\n\tRecordType?: string;\n\t[key: string]: unknown;\n}\nexport interface IVariantSetting {\n\tannotationPath?: string;\n\tentitySet?: string;\n\tisSmartChart?: boolean;\n\ttableSettings?: ITableSettings;\n\t[key: string]: unknown;\n}\n\nexport interface ILrSettings {\n\tquickVariantSelectionX?: {\n\t\tvariants?: Record<string, IVariantSetting>;\n\t};\n\trequestAtLeastFields?: string[] | { String?: string; PropertyPath?: string }[];\n\ttableSettings?: ITableSettings;\n\tisResponsiveTable?: boolean;\n\tbSupressCardRowNavigation?: boolean;\n\ttableType?: string;\n\tgridTable?: string;\n\ttreeTable?: string;\n\t[key: string]: unknown;\n}\n\nexport interface ITableSettings {\n\ttype?: string;\n\theaderInfo?: Record<string, unknown> | string;\n\taddCardtoInsightsHidden?: boolean;\n}\n\nexport interface IPresentationVariant {\n\tRequestAtLeast?: string[];\n\trequestAtLeastFields?: Record<string, unknown> | { Path: string } | string[] | { String?: string; PropertyPath?: string }[];\n\tVisualizations?: IUIVisualizations[];\n\tPath?: string;\n\tPresentationVariant?: IPresentationVariant;\n\t[key: string]: unknown;\n}\n\nexport interface IHeaderInfo {\n\tTypeNamePlural?: {\n\t\tString: string;\n\t};\n\t[key: string]: unknown;\n}\n\nexport interface ILineItemDetails {\n\tquickVariant: Record<string, unknown>;\n\tlrSettings: ILrSettings;\n\tlineItem: ILineItem[] | string | undefined;\n\tentitySet: string;\n\theaderInfo: IHeaderInfo | string;\n\t[key: string]: unknown;\n}\n\nexport type IUIVisualizations = {\n\tlineItem: ILineItem[];\n\tannotationPath?: string;\n\tAnnotationPath?: string;\n\tsQualifier?: string;\n\t[key: string]: unknown;\n};\n\nexport interface IVersionInfo {\n\tversion: string;\n\tbuildTimestamp: string;\n}\nexport interface IPageType {\n\tcomponent?: {\n\t\tname?: string;\n\t\tsettings?: Partial<Pick<ILrSettings, \"tableSettings\" | \"quickVariantSelectionX\">>;\n\t};\n\tentitySet?: string | undefined;\n\tpages: IPageType[] | PageRecord;\n\t[key: string]: unknown;\n}\n\nexport type PageRecord = {\n\t[key: string]: IPageType | string | boolean;\n};\n\nexport interface IAppManifest {\n\t\"sap.ui.generic.app\"?: {\n\t\tpages: IPageType[] | PageRecord;\n\t\t[key: string]: unknown;\n\t};\n\t\"sap.app\"?: ISapApp;\n\t\"sap.ui\"?: Record<string, unknown>;\n\t[key: string]: unknown;\n}\n\nexport interface ISapUI5App {\n\t_version?: string;\n\tcomponentName?: string;\n\tdependencies?: {\n\t\tminUI5Version?: string;\n\t\tlibs: {\n\t\t\t[key: string]: {\n\t\t\t\tlazy?: boolean;\n\t\t\t};\n\t\t};\n\t};\n\tcontentDensities?: {\n\t\tcompact: boolean;\n\t\tcozy: boolean;\n\t};\n\t[key: string]: unknown;\n}\n\nexport interface IManifestCardData {\n\tcardTitle?: string;\n\tsubTitle: string;\n\turl: string;\n\tsemanticObject: string;\n\taction: string;\n\tid?: string;\n\tcolumns: IColumnData[];\n\tentitySet: string;\n}\n\nexport interface IColumnData {\n\tpath: string;\n\ttype: string;\n\tvalue: string;\n\tidentifier: string | boolean;\n\tstate: string;\n\tshowStateIcon: string | boolean;\n\t[key: string]: unknown;\n}\n\nexport interface IRegeneratedCard {\n\tid: string;\n\tdescriptorContent: ICardManifest;\n}\n\nexport interface ICardDetails {\n\tcardId: string;\n\trank?: string;\n\tid: string;\n\ttarget?: Partial<Intent>;\n\tindex?: number;\n\tnewManifest?: IRegeneratedCard;\n}\n\nexport interface IEntitySet extends EntitySet {\n\t\"Org.OData.Capabilities.V1.FilterRestrictions\"?: {\n\t\tRequiredProperties?: unknown[];\n\t};\n}\n\nexport enum UIAnnotations {\n\tSapSemantics = \"sap:semantics\",\n\tUITextArrangement = \"com.sap.vocabularies.UI.v1.TextArrangement\",\n\tUIHidden = \"com.sap.vocabularies.UI.v1.Hidden\",\n\tCommonLabel = \"com.sap.vocabularies.Common.v1.Label\",\n\tUIHeaderInfo = \"com.sap.vocabularies.UI.v1.HeaderInfo\",\n\tUISelectionPresentationVariant = \"com.sap.vocabularies.UI.v1.SelectionPresentationVariant\",\n\tUILineItem = \"com.sap.vocabularies.UI.v1.LineItem\",\n\tUIPresentationVariant = \"com.sap.vocabularies.UI.v1.PresentationVariant\",\n\tUIChart = \"com.sap.vocabularies.UI.v1.Chart\",\n\tMeasuresISOCurrency = \"Org.OData.Measures.V1.ISOCurrency\",\n\tMeasuresUnit = \"Org.OData.Measures.V1.Unit\",\n\tCommonFieldControl = \"com.sap.vocabularies.Common.v1.FieldControl\",\n\tUIIsImageURL = \"com.sap.vocabularies.UI.v1.IsImageURL\",\n\tCommonText = \"com.sap.vocabularies.Common.v1.Text\",\n\tCommonSemanticKey = \"com.sap.vocabularies.Common.v1.SemanticKey\"\n}\n\n// UI Text annotation type for Common.Text\ninterface UITextAnnotation {\n\t[UIAnnotations.UITextArrangement]?: Record<\"EnumMember\", string>;\n}\n\ntype UIAnnotationValueBase = {\n\t[K in UIAnnotations]?: K extends UIAnnotations.CommonText ? StandardUIAnnotationValue & UITextAnnotation : StandardUIAnnotationValue;\n};\n\nexport interface UIAnnotationValue extends UIAnnotationValueBase {\n\t\"sap:text\"?: string;\n\ttype?: string;\n\tname?: string;\n\t[key: string]: unknown;\n}\n\n// Define special case annotations with their specific types\ninterface SpecialUIAnnotationValue {\n\t[UIAnnotations.UILineItem]?: Array<ILineItemContext>;\n\t[UIAnnotations.CommonSemanticKey]?: Array<{ PropertyPath: string }>;\n\t[UIAnnotations.UIPresentationVariant]?: IPresentationVariant;\n\t[UIAnnotations.UITextArrangement]?: Record<\"EnumMember\", string>;\n\t[UIAnnotations.SapSemantics]?: string;\n}\n\n// Create a type for standard annotations (excluding special cases)\ntype StandardUIAnnotations = {\n\t[K in Exclude<\n\t\tUIAnnotations,\n\t\t| UIAnnotations.UILineItem\n\t\t| UIAnnotations.CommonSemanticKey\n\t\t| UIAnnotations.UIPresentationVariant\n\t\t| UIAnnotations.SapSemantics\n\t\t| UIAnnotations.UITextArrangement\n\t>]?: StandardUIAnnotationValue;\n};\n\ninterface StandardUIAnnotationValue {\n\tBool?: string | boolean;\n\tPath?: string;\n\tPropertyPath?: string;\n\tString?: string;\n\tEnumMember?: string;\n\t[key: string]: unknown;\n}\n\nexport interface IEntityType extends EntityType, SpecialUIAnnotationValue, StandardUIAnnotations {\n\tproperty?: Property[];\n\t[key: string]: unknown;\n}\n\nexport interface InsightsCacheData {\n\tgetInstance: () => {\n\t\tclearCache: (id: string) => void;\n\t};\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,mDAAA,+BAsXYC,EAAa,SAAbA,KAAa,gCAAbA,EAAa,kEAAbA,EAAa,gDAAbA,EAAa,sDAAbA,EAAa,wDAAbA,EAAa,4FAAbA,EAAa,oDAAbA,EAAa,0EAAbA,EAAa,8CAAbA,EAAa,2DAAbA,EAAa,6CAAbA,EAAa,oEAAbA,EAAa,wDAAbA,EAAa,oDAAbA,EAAa,yEAAbA,CAAa,EAAbA,GAAa,IA2CzB,IAAAC,EAAA,CAAAC,WAAA,MAAAD,EAAAD,gBAAA,OAAAC,CAAA","ignoreList":[],"sourceRoot":"interface"}},{"offset":{"line":326,"column":0},"map":{"version":3,"names":["sap","ui","define","DataType","Lib","sap_ui_core_library","sap_ui_integration_library","cuxNamespace","cuxHomeNamespace","thisLib","init","apiVersion","name","version","dependencies","types","interfaces","controls","elements","noLibraryCSS","extensions","flChangeHandlers","OrientationType","registerEnum","NewsType"],"sources":["library.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport DataType from \"sap/ui/base/DataType\";\nimport Lib from \"sap/ui/core/Lib\";\nimport \"sap/ui/core/library\";\nimport \"sap/ui/integration/library\";\n\n/**\n * Root namespace for all the libraries related to Common User Experience.\n *\n * @namespace\n * @public\n * @since 1.121\n * @experimental Since 1.121\n */\nexport const cuxNamespace = \"sap.cux\";\n\n/**\n * This is an SAPUI5 library with controls specialized for common user experience.\n *\n * @namespace\n * @public\n * @since 1.121\n * @experimental Since 1.121\n */\nexport const cuxHomeNamespace = \"sap.cux.home\";\n\nconst thisLib = Lib.init({\n\tapiVersion: 2,\n\tname: \"sap.cux.home\",\n\tversion: \"0.0.1\",\n\tdependencies: [\"sap.ui.core\", \"sap.m\", \"sap.ui.integration\"],\n\ttypes: [\"sap.cux.home.OrientationType\", \"sap.cux.home.NewsType\"],\n\tinterfaces: [],\n\tcontrols: [\n\t\t\"sap.cux.home.Layout\",\n\t\t\"sap.cux.home.ToDosContainer\",\n\t\t\"sap.cux.home.NewsAndPagesContainer\",\n\t\t\"sap.cux.home.AppsContainer\",\n\t\t\"sap.cux.home.InsightsContainer\"\n\t],\n\telements: [\n\t\t\"sap.cux.home.MenuItem\",\n\t\t\"sap.cux.home.TaskPanel\",\n\t\t\"sap.cux.home.SituationPanel\",\n\t\t\"sap.cux.home.PagePanel\",\n\t\t\"sap.cux.home.NewsPanel\",\n\t\t\"sap.cux.home.FavAppPanel\",\n\t\t\"sap.cux.home.FrequentAppPanel\",\n\t\t\"sap.cux.home.RecentAppPanel\",\n\t\t\"sap.cux.home.RecommendedAppPanel\",\n\t\t\"sap.cux.home.TilesPanel\",\n\t\t\"sap.cux.home.CardsPanel\"\n\t],\n\tnoLibraryCSS: false,\n\textensions: {\n\t\tflChangeHandlers: {\n\t\t\t\"sap.cux.home.Layout\": \"sap/cux/home/flexibility/Layout\",\n\t\t\t\"sap.cux.home.ToDosContainer\": \"sap/cux/home/flexibility/BaseContainer\",\n\t\t\t\"sap.cux.home.NewsAndPagesContainer\": \"sap/cux/home/flexibility/BaseContainer\",\n\t\t\t\"sap.cux.home.InsightsContainer\": \"sap/cux/home/flexibility/BaseContainer\",\n\t\t\t\"sap.cux.home.AppsContainer\": \"sap/cux/home/flexibility/BaseContainer\"\n\t\t}\n\t}\n}) as { [key: string]: unknown };\n\n/**\n * Supported layout types for {@link sap.cux.home.BaseContainer}.\n *\n * @enum {string}\n * @private\n * @since 1.121\n * @experimental Since 1.121\n */\nexport enum OrientationType {\n\t/**\n\t * Panels are rendered side by side, for example To-Dos and Situaions, and Favorites, Recently Used and Frequently Used apps\n\t *\n\t * @public\n\t */\n\tSideBySide = \"SideBySide\",\n\n\t/**\n\t * Panels are rendered vertically, for example Insights Tiles and Insights Cards\n\t *\n\t * @public\n\t */\n\tVertical = \"Vertical\",\n\n\t/**\n\t * Panels are rendered horizontally, for example Pages and News\n\t *\n\t * @public\n\t */\n\tHorizontal = \"Horizontal\"\n}\nthisLib.OrientationType = OrientationType;\nDataType.registerEnum(\"sap.cux.home.OrientationType\", OrientationType);\n\n/**\n * Supported News Types for {@link sap.cux.home.NewsPanel}.\n *\n * @enum {string}\n * @public\n * @since 1.121\n * @experimental Since 1.121\n */\nexport enum NewsType {\n\t/**\n\t * Url is of type RSS\n\t * @public\n\t */\n\tRSS = \"rss\",\n\n\t/**\n\t * Url is of type ATOM\n\t * @public\n\t */\n\tATOM = \"atom\",\n\n\t/**\n\t * News is of type custom news feed\n\t *\n\t * @public\n\t */\n\tCustom = \"customFeed\"\n}\nthisLib.NewsType = NewsType;\nDataType.registerEnum(\"sap.cux.home.NewsType\", NewsType);\n\nexport default thisLib;\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,kCAAA,uGAAAC,EAAAC,EAAAC,EAAAC,GAAA,aAkBO,MAAMC,EAAe,UAUrB,MAAMC,EAAmB,eAEhC,MAAMC,EAAUL,EAAIM,KAAK,CACxBC,WAAY,EACZC,KAAM,eACNC,QAAS,QACTC,aAAc,CAAC,cAAe,QAAS,sBACvCC,MAAO,CAAC,+BAAgC,yBACxCC,WAAY,GACZC,SAAU,CACT,sBACA,8BACA,qCACA,6BACA,kCAEDC,SAAU,CACT,wBACA,yBACA,8BACA,yBACA,yBACA,2BACA,gCACA,8BACA,mCACA,0BACA,2BAEDC,aAAc,MACdC,WAAY,CACXC,iBAAkB,CACjB,sBAAuB,kCACvB,8BAA+B,yCAC/B,qCAAsC,yCACtC,iCAAkC,yCAClC,6BAA8B,6CAKjC,IAQYC,EAAe,SAAfA,KAAe,2BAAfA,EAAe,uBAAfA,EAAe,kCAAfA,CAAe,EAAfA,GAAe,IAsB3Bb,EAAQa,gBAAkBA,EAC1BnB,EAASoB,aAAa,+BAAgCD,GAEtD,IAQYE,EAAQ,SAARA,KAAQ,aAARA,EAAQ,eAARA,EAAQ,8BAARA,CAAQ,EAARA,GAAQ,IAoBpBf,EAAQe,SAAWA,EACnBrB,EAASoB,aAAa,wBAAyBC,GAAUf,EAAAF,eAAAE,EAAAD,mBAAA,OAE1CC,CAAO","ignoreList":[],"sourceRoot":""}},{"offset":{"line":331,"column":0},"map":{"version":3,"names":["sap","ui","define","InvisibleText","getInvisibleText","id","text","arguments","length","undefined","Error","checkPanelExists","parentContainer","containerTypeName","panelTypeName","layout","_getLayout","items","getAggregation","targetContainer","Array","find","control","isA","containerContents","normalizedItems","some","__exports","__esModule"],"sources":["Accessibility.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport InvisibleText from \"sap/ui/core/InvisibleText\";\nimport BaseContainer from \"../BaseContainer\";\nimport BaseLayout from \"../BaseLayout\";\nimport BasePanel from \"../BasePanel\";\n\n/**\n * Creates an instance of `InvisibleText` with the given ID and text.\n *\n * @param {string} id - The unique id for the `InvisibleText` instance.\n * @param {string} [text=\"\"] - The text content for the `InvisibleText` instance. Defaults to an empty string.\n * @returns {InvisibleText} A new `InvisibleText` instance.\n * @throws {Error} If the `id` is not provided.\n */\nexport function getInvisibleText(id: string, text: string = \"\"): InvisibleText {\n\tif (id) {\n\t\treturn new InvisibleText({\n\t\t\tid: id,\n\t\t\ttext: text || \"\"\n\t\t});\n\t} else {\n\t\tthrow new Error(\"ID is required for InvisibleText.\");\n\t}\n}\n\n/**\n * Checks whether a specific panel type exists within a given container in the layout.\n *\n * @param {BaseContainer} parentContainer - The parent container from where the from which the function is called.\n * @param {string} containerTypeName - The name of the container to look for.\n * @param {string} panelTypeName - The name of the panel to verify inside the container.\n * @returns {boolean} - Returns `true` if the specified panel exists, otherwise `false`.\n */\nexport function checkPanelExists(\n\tparentContainer: BaseContainer | BasePanel | BaseLayout,\n\tcontainerTypeName: string,\n\tpanelTypeName: string\n): boolean {\n\tconst layout = (parentContainer as BaseContainer)?._getLayout?.() ?? parentContainer;\n\tconst items = layout?.getAggregation(\"items\");\n\tconst targetContainer = items instanceof Array ? items.find((control) => control.isA(containerTypeName)) : null;\n\tconst containerContents = targetContainer?.getAggregation(\"content\");\n\tconst normalizedItems = (containerContents && (containerContents instanceof Array ? containerContents : [containerContents])) || [];\n\treturn normalizedItems.some((control) => control.isA(panelTypeName));\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,8CAAA,uCAAAC,GAAA,aAiBO,SAASC,EAAiBC,GAA8C,IAAlCC,EAAYC,UAAAC,OAAA,GAAAD,UAAA,KAAAE,UAAAF,UAAA,GAAG,GAC3D,GAAIF,EAAI,CACP,OAAO,IAAIF,EAAc,CACxBE,GAAIA,EACJC,KAAMA,GAAQ,IAEhB,KAAO,CACN,MAAM,IAAII,MAAM,oCACjB,CACD,CAUO,SAASC,EACfC,EACAC,EACAC,GAEA,MAAMC,EAAUH,GAAmCI,gBAAkBJ,EACrE,MAAMK,EAAQF,GAAQG,eAAe,SACrC,MAAMC,EAAkBF,aAAiBG,MAAQH,EAAMI,KAAMC,GAAYA,EAAQC,IAAIV,IAAsB,KAC3G,MAAMW,EAAoBL,GAAiBD,eAAe,WAC1D,MAAMO,EAAmBD,IAAsBA,aAA6BJ,MAAQI,EAAoB,CAACA,KAAwB,GACjI,OAAOC,EAAgBC,KAAMJ,GAAYA,EAAQC,IAAIT,GACtD,CAAC,IAAAa,EAAA,CAAAC,WAAA,MAAAD,EAAAvB,mBAAAuB,EAAAhB,mBAAA,OAAAgB,CAAA","ignoreList":[],"sourceRoot":"utils"}},{"offset":{"line":336,"column":0},"map":{"version":3,"names":["sap","ui","define","AnalyticalCardSkeleton","_version","id","type","title","subTitle","applicationVersion","version","shortTitle","info","description","tags","keywords","extension","header","content","data","request","url","method","parameters","$format","path","item","attributesOrientationType","attributes","value","maxItems","__exports","__esModule"],"sources":["AnalyticalCardSkeleton.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nexport const AnalyticalCardSkeleton = {\n\t_version: \"1.14.0\",\n\t\"sap.app\": {\n\t\tid: \"card.explorer.data.list.card\",\n\t\ttype: \"card\",\n\t\ttitle: \"\",\n\t\tsubTitle: \"\",\n\t\tapplicationVersion: {\n\t\t\tversion: \"1.0.0\"\n\t\t},\n\t\tshortTitle: \"A short title for this Card\",\n\t\tinfo: \"Additional information about this Card\",\n\t\tdescription: \"A long description for this Card\",\n\t\ttags: {\n\t\t\tkeywords: [\"Data\", \"Card\", \"Sample\"]\n\t\t}\n\t},\n\t\"sap.card\": {\n\t\textension: \"./sap/bc/ui5_ui5/sap/product_homes1/dataDump/CardExtension\",\n\t\ttype: \"Analytical\",\n\t\theader: {\n\t\t\ttitle: \"\",\n\t\t\tsubTitle: \"\"\n\t\t},\n\t\tcontent: {\n\t\t\tdata: {\n\t\t\t\trequest: {\n\t\t\t\t\turl: \"\",\n\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\tparameters: {\n\t\t\t\t\t\t$format: \"json\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tpath: \"/d/results\"\n\t\t\t},\n\t\t\titem: {\n\t\t\t\ttitle: \"{ProductName}\",\n\t\t\t\tdescription: \"{UnitsInStock} units in stock\",\n\t\t\t\tattributesOrientationType: \"OneColumn\",\n\t\t\t\tattributes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"{Processor}\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\tmaxItems: 5\n\t\t}\n\t}\n};\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,uDAAA,2BAIO,MAAMC,EAAyB,CACrCC,SAAU,SACV,UAAW,CACVC,GAAI,+BACJC,KAAM,OACNC,MAAO,GACPC,SAAU,GACVC,mBAAoB,CACnBC,QAAS,SAEVC,WAAY,8BACZC,KAAM,yCACNC,YAAa,mCACbC,KAAM,CACLC,SAAU,CAAC,OAAQ,OAAQ,YAG7B,WAAY,CACXC,UAAW,6DACXV,KAAM,aACNW,OAAQ,CACPV,MAAO,GACPC,SAAU,IAEXU,QAAS,CACRC,KAAM,CACLC,QAAS,CACRC,IAAK,GACLC,OAAQ,MACRC,WAAY,CACXC,QAAS,SAGXC,KAAM,cAEPC,KAAM,CACLnB,MAAO,gBACPM,YAAa,gCACbc,0BAA2B,YAC3BC,WAAY,CACX,CACCC,MAAO,iBAIVC,SAAU,KAGX,IAAAC,EAAA,CAAAC,WAAA,MAAAD,EAAA5B,yBAAA,OAAA4B,CAAA","ignoreList":[],"sourceRoot":"utils"}},{"offset":{"line":341,"column":0},"map":{"version":3,"names":["sap","ui","define","Log","ResourceBundle","VersionInfo","BaseObject","ODataModelV2","Config","Container","___AnalyticalCardSkeleton","___Constants","___DataFormatUtils","__HttpHelper","__RecommendedCardUtil","_interopRequireDefault","obj","__esModule","default","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","_forTo","array","body","check","i","reject","_cycle","length","AnalyticalCardSkeleton","_forOf","target","step","next","done","return","_fixup","TypeError","values","push","COLUMN_LENGTH","_catch","recover","DEFAULT_BG_COLOR","FALLBACK_ICON","FEATURE_TOGGLES","FEATURE_TOGGLE_SRVC_URL","MYHOME_PAGE_ID","MYHOME_SPACE_ID","MYINSIGHT_SECTION_ID","RECOMMENDATION_SRVC_URL","RECOMMENDED_CARD_LIMIT","createBookMarkData","getLeanURL","HttpHelper","RecommendedCardUtil","CONSTANTS","MUST_INCLUDE_RECOMMEDED_APPS","_parseSBParameters","oParam","oParsedParams","JSON","parse","oError","error","Error","message","String","undefined","_getTileProperties","vizConfigFLP","oTileProperties","_instantiationData","chip","configuration","oConfig","tileConfiguration","oTileConfig","TILE_PROPERTIES","_getAppId","sAppId","semanticObject","action","semanticAction","_getTargetUrl","sTargetURL","evaluationId","_isSmartBusinessTile","oVisualization","vizType","startsWith","_getAppTitleSubTitle","oApp","oAppTileInfo","bags","sb_tileProperties","texts","title","subtitle","description","_linkDuplicateVizs","aVizs","forEach","oDuplicateViz","filter","oViz","appId","visualization","id","persConfig","sectionIndex","duplicateApps","_isGUIVisualization","parameters","_isMustIncludeRecommendation","recViz","fioriId","includes","_isVisualizationAlreadyAdded","favoriteVisualizations","some","favViz","AppManager","aRequestQueue","bInsightsSectionPresent","vizDataModified","_oVizCacheData","_favPageVisualizations","componentData","fioriAppData","constructor","super","recommendedUtilInstance","getInstance","Instance","_fetchRequestFromQueue","bForceRefresh","Promise","resolve","getServiceAsync","oSpaceContentService","oPageLoadPromise","oRequestedPage","find","oRequest","pageId","getPage","pageLoadPromise","_fetchDynamicVizs","fetchFavVizs","aFavApps","oDynApp","isCount","isSmartBusinessTile","_getSections","arguments","_this2","oPage","aSections","sections","iRecentAppSectionIndex","findIndex","oSection","_temp2","_temp","_oMoveAppsPromise","moveSection","_fetchMyHomeVizs","_this3","oVizInstantiationService","iSectionIndex","visualizations","iVisualizationIndex","vizConfig","oVizInfo","oldAppId","targetURL","url","leanURL","BGColor","key","isFav","isSection","icon","icons","indicatorDataSource","path","contentProviderId","instantiateVisualization","setActive","vizInstance","sectionTitle","sectionId","visualizationIndex","isDefaultSection","isPresetSection","preset","_copyDynamicVizs","_this4","aDynamicVizs","all","map","oDynViz","addVisualization","vizId","bPreventGrouping","_this5","aMyHomeVizs","aVisibleFavVizs","_filterDuplicateVizs","_addGroupInformation","fetchInsightApps","sSectionTitle","_this6","_temp5","fnFetchInsightsApps","_temp4","insightsSectionIndex","_temp3","last","addSection","sectionProperties","visualizationId","spaceContentService","removeVisualizations","_ref","vizIds","_this7","_temp7","targetSection","_temp6","deleteVisualization","updateVisualizations","_ref2","sourceSectionIndex","sourceVisualizationIndex","oVisualizationData","updateVisualization","createInsightSection","_exit","_this8","_temp9","_result","_temp8","iMyInsightSectionIndex","_this8$addSection","visible","mProperties","getSectionVisualizations","forceRefresh","_this9","aApps","apps","addBookMark","bookmark","moveConfig","_this10","oBookmarkService","getContentNodes","aContentNodes","oMyHomeSpace","contentNode","children","addBookmark","moveVisualization","getVisualization","_this11","sectionVisualizations","sectionVisualization","_this12","targetSectionIndex","targetVisualizationIndex","aVisibleFavoriteVizs","bReturnDuplicateVizs","iVizIndex","iFirstIndex","oTempApp","aFavoriteVizs","aRecentVizs","oExistingSection","index","badge","toString","oPagesService","iPageIndex","getPageIndex","_getFeatureToggles","sFeatureToggleUrl","FEATURE_TOGGLE_KEYS","Object","keys","toggleFilter","sToggleKey","join","GetJSON","_HttpHelper$GetJSON","oResponse","isFeatureEnabled","sToggleId","_this13","aFeatureToggles","oToggle","oFeatureToggle","ToggleId","State","isURLParamEnabled","param","urlParams","URLSearchParams","window","location","search","get","toLowerCase","_getRecommenedFioriIds","_exit2","_this14","_temp11","_result3","recommendedFioriIds","_temp10","_HttpHelper$GetJSON2","response","app_id","_Promise$resolve","_getCatalogApps","_exit3","_this15","_temp14","_result4","catalogAppData","_temp13","SearchableContent","getApps","includeAppsWithoutVisualizations","_this15$catalogAppDat","_temp12","isAddCardToInsightsHidden","page","component","settings","tableSettings","addCardtoInsightsHidden","_checkValidManifests","manifest","dataSources","hasRequiredDataSource","mainService","pages","Array","isArray","_isListReport","pageValues","_getOdataModel","oManifest","datasource","annotationUrls","annotations","name","uri","Boolean","oDataModel","annotationURI","loadAnnotationsJoined","attachMetadataLoaded","attachMetadataFailed","_getEntitySet","entitySet","loadI18n","manifestUrl","_this16","_temp16","_RBManifestMap","absoluteUrl","i18nBundleUrl","URL","href","_temp15","create","bundleUrl","async","terminologies","oResourceBundle","getI18nValueOrDefaultString","sValue","oRB","sPath","substring","getText","_getAnalyticalCardManifest","stringify","getProcessedManifest","metaModel","manifestObj","parentApp","versionInfo","_this17","_temp19","_createCardManifest","cardInput","suppressRowNavigation","mainEntitySetName","mainEntitySet","getODataEntitySet","lineItemDetails","getLineItemDetails","lineItem","entitySetName","entityType","getODataEntityType","lrSettings","hasMandatoryProperties","property","parameterDetails","_getParametersisedEntitySetParams","paramEntitySet","_getManifestCardData","columns","headerInfo","cardTitle","TypeNamePlural","_temp18","i18n","appTitle","_temp17","i18nResourceBundle","fetchMetaModels","validManifests","_this18","odataPromises","_this18$_getOdataMode","getMetaModel","combineManifestsAndMetaModels","aMetaModel","reduce","combined","processManifests","combinedDetails","aCSTR","_this19","item","resolutionResult","ui5ComponentName","processAppList","aList","aAppComponentIds","aComponent","list","oComponent","oData","matchingData","entry","_getCardManifest","_this20","getFioriAppData","_ref3","aCatalog","aFioriData","load","_VersionInfo$load","flat","processedList","fetchManifests","manifests","cards","card","appIdList","fioriData","catalogData","appPromises","_exit4","aApp","_temp20","catalog","applicationDependencies","fetch","json","_response$json","_url$manifest","_result6","results","_removeDuplicateCards","aCards","oCardDict","aResult","oCard","sCardTitle","descriptorContent","header","getRecommenedCards","_this21","aAppIds","aManifests","aRecManifests","slice","aRecommendedCards","rec","getRecommendedVisualizations","_this22","_temp23","_recommendedVisualizations","_temp22","_temp21","finalRecommendations","mustIncludeRecommendations","_getVisualizationsByFioriIds","_ref4","recommendedVisualizations","concat","_getInboundApps","service","_oAdapter","_aInbounds","_this23","_temp25","_temp24","inbounds","oItem","signature","defaultValue","componentId","semanticData","combinedData","fioriIds","_this24","visitedVisualizations","Map","_ref5","catalogApps","authorizedApps","inbound","app","matchingVizualizations","catalogApp","guiVisualizations","matchingVizualization","nonGuiVisualizations","recommendedVisualization","has","set","_getAllFavPageApps","shouldReload","_exit5","_this25","_temp27","_result7","_temp26","loadedPages","pageIDs","pageIds","shouldLoadMissingApps","every","_this25$_favPageVisua","_loadAllPageVisualizations","_this25$_loadAllPageV","_this25$_favPageVisua2","shouldFetchDistinctApps","getBgColor","favPageVisualizations","getPages","pageData","aPages","section","oVizApp"],"sources":["AppManager.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport VersionInfo from \"sap/ui/VersionInfo\";\nimport BaseObject from \"sap/ui/base/Object\";\nimport ODataMetaModel, { Property } from \"sap/ui/model/odata/ODataMetaModel\";\nimport ODataModelV2 from \"sap/ui/model/odata/v2/ODataModel\";\nimport Config from \"sap/ushell/Config\";\nimport Container from \"sap/ushell/Container\";\nimport Bookmark from \"sap/ushell/services/BookmarkV2\";\nimport ClientSideTargetResolution from \"sap/ushell/services/ClientSideTargetResolution\";\nimport SearchableContent, { AppData } from \"sap/ushell/services/SearchableContent\";\nimport SpaceContent from \"sap/ushell/services/SpaceContent\";\nimport VisualizationInstantiation from \"sap/ushell/services/VisualizationInstantiation\";\nimport {\n\tICustomVisualization,\n\tICustomVizInstance,\n\tIParseSBParameters,\n\tISection,\n\tISectionAndVisualization,\n\tIVisualization\n} from \"../interface/AppsInterface\";\nimport {\n\tIAppInfo,\n\tIAppInfoData,\n\tIAppManifest,\n\tICard,\n\tICardDetails,\n\tICardManifest,\n\tIEntitySet,\n\tIEntityType,\n\tIHeaderInfo,\n\tIPageType,\n\tIVersionInfo,\n\tPageRecord\n} from \"../interface/CardsInterface\";\nimport { IPage } from \"../interface/PageSpaceInterface\";\nimport { AnalyticalCardSkeleton } from \"./AnalyticalCardSkeleton\";\nimport {\n\tCOLUMN_LENGTH,\n\tDEFAULT_BG_COLOR,\n\tFALLBACK_ICON,\n\tFEATURE_TOGGLES,\n\tFEATURE_TOGGLE_SRVC_URL,\n\tMYHOME_PAGE_ID,\n\tMYHOME_SPACE_ID,\n\tMYINSIGHT_SECTION_ID,\n\tRECOMMENDATION_SRVC_URL,\n\tRECOMMENDED_CARD_LIMIT\n} from \"./Constants\";\nimport { createBookMarkData, getLeanURL } from \"./DataFormatUtils\";\nimport HttpHelper from \"./HttpHelper\";\nimport RecommendedCardUtil from \"./RecommendedCardUtil\";\n\nconst CONSTANTS = {\n\tMUST_INCLUDE_RECOMMEDED_APPS: [\"F0862\", \"F1823\"] //My Inbox and Manage Timesheet apps\n};\n\ninterface IFeatureToggles {\n\tTASK_ACTIONS: string;\n}\n\ninterface ICombinedManifestDetails {\n\tmanifest: IValidManifest;\n\tmetaModel: ODataMetaModel;\n}\n\ninterface IValidManifest {\n\turl: string;\n\tmanifest: IAppManifest;\n}\n\nconst _parseSBParameters = (oParam: object | string | undefined): IParseSBParameters | undefined => {\n\tlet oParsedParams: IParseSBParameters | undefined = {};\n\tif (oParam) {\n\t\tif (typeof oParam === \"object\") {\n\t\t\toParsedParams = oParam;\n\t\t} else {\n\t\t\ttry {\n\t\t\t\toParsedParams = JSON.parse(oParam) as object;\n\t\t\t} catch (oError) {\n\t\t\t\tLog.error(oError instanceof Error ? oError.message : String(oError));\n\t\t\t\toParsedParams = undefined;\n\t\t\t}\n\t\t}\n\t}\n\treturn oParsedParams;\n};\n\nconst _getTileProperties = (vizConfigFLP?: IVisualization): IParseSBParameters | undefined => {\n\tlet oTileProperties: IParseSBParameters | undefined = {};\n\tif (vizConfigFLP?._instantiationData?.chip?.configuration) {\n\t\tconst oConfig: IParseSBParameters | undefined = _parseSBParameters(vizConfigFLP._instantiationData.chip.configuration);\n\t\tif (oConfig?.tileConfiguration) {\n\t\t\tconst oTileConfig: IParseSBParameters | undefined = _parseSBParameters(oConfig.tileConfiguration);\n\t\t\tif (oTileConfig) {\n\t\t\t\toTileProperties = _parseSBParameters(oTileConfig.TILE_PROPERTIES);\n\t\t\t}\n\t\t}\n\t}\n\treturn oTileProperties;\n};\n\nconst _getAppId = (vizConfigFLP: IVisualization | undefined): string => {\n\tlet sAppId = \"\";\n\tlet oTileProperties: IParseSBParameters | undefined = {};\n\tif (vizConfigFLP?.target?.semanticObject && vizConfigFLP?.target?.action) {\n\t\tsAppId = `#${vizConfigFLP.target.semanticObject}-${vizConfigFLP.target.action}`;\n\t} else if (vizConfigFLP?._instantiationData?.chip?.configuration) {\n\t\toTileProperties = _getTileProperties(vizConfigFLP);\n\t\tif (oTileProperties?.semanticObject && oTileProperties?.semanticAction) {\n\t\t\tsAppId = `#${oTileProperties?.semanticObject}-${oTileProperties?.semanticAction}`;\n\t\t}\n\t}\n\treturn sAppId;\n};\n\nconst _getTargetUrl = (vizConfigFLP: IVisualization | undefined) => {\n\tlet sTargetURL = _getAppId(vizConfigFLP) || \"\";\n\tconst oTileProperties = _getTileProperties(vizConfigFLP);\n\tif (oTileProperties?.evaluationId) {\n\t\tsTargetURL += \"?EvaluationId=\" + oTileProperties.evaluationId;\n\t}\n\treturn sTargetURL;\n};\n\nconst _isSmartBusinessTile = (oVisualization: IVisualization): boolean => {\n\treturn oVisualization.vizType?.startsWith(\"X-SAP-UI2-CHIP:SSB\");\n};\n\n// get App Title in case of value not present at root level\nconst _getAppTitleSubTitle = (oApp: IVisualization, vizConfigFLP: IVisualization): { title: string; subtitle: string } => {\n\tconst oAppTileInfo = vizConfigFLP?._instantiationData?.chip?.bags?.sb_tileProperties?.texts;\n\treturn {\n\t\ttitle: oApp.title ? oApp.title : oAppTileInfo?.title || \"\",\n\t\tsubtitle: oApp.subtitle ? oApp.subtitle : oAppTileInfo?.description || \"\"\n\t};\n};\n\n/**\n * Link Duplicate Visualizations to a single visualization\n *\n * @param {object[]} aVizs - array of visualizations\n * @returns {object[]} arry of visualizations after linking duplicate visualizations\n * @private\n */\nconst _linkDuplicateVizs = (aVizs: ICustomVisualization[]) => {\n\taVizs.forEach((oDuplicateViz) => {\n\t\taVizs\n\t\t\t.filter(\n\t\t\t\t(oViz) =>\n\t\t\t\t\toViz.appId === oDuplicateViz.appId &&\n\t\t\t\t\toViz?.visualization?.id !== oDuplicateViz?.visualization?.id &&\n\t\t\t\t\toViz.persConfig?.sectionIndex === oDuplicateViz.persConfig?.sectionIndex\n\t\t\t)\n\t\t\t.forEach((oViz) => {\n\t\t\t\toViz?.persConfig?.duplicateApps?.push(oDuplicateViz);\n\t\t\t});\n\t});\n\n\treturn aVizs;\n};\n\nconst _isGUIVisualization = (visualization: AppData) => {\n\treturn visualization?.target?.parameters?.[\"sap-ui-tech-hint\"]?.value?.value === \"GUI\";\n};\n\nconst _isMustIncludeRecommendation = (recViz: ICustomVisualization) => {\n\treturn recViz.fioriId && CONSTANTS.MUST_INCLUDE_RECOMMEDED_APPS.includes(recViz.fioriId);\n};\n\nconst _isVisualizationAlreadyAdded = (visualization: ICustomVisualization, favoriteVisualizations: ICustomVisualization[]) => {\n\treturn !favoriteVisualizations.some(\n\t\t(favViz) =>\n\t\t\tfavViz.visualization?.target?.semanticObject === visualization.visualization?.target?.semanticObject &&\n\t\t\tfavViz.visualization?.target?.action === visualization.visualization?.target?.action\n\t);\n};\n\n/**\n *\n * @class Provides the AppManager Class used for fetch and process user apps.\n *\n * @extends sap.ui.BaseObject\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121.0\n *\n * @private\n * @experimental Since 1.121\n * @hidden\n *\n * @alias sap.cux.home.util.AppManager\n */\n\nexport default class AppManager extends BaseObject {\n\tprivate aRequestQueue: { pageId: string; pageLoadPromise: Promise<IPage> }[] = [];\n\tprivate _oMoveAppsPromise!: Promise<void>;\n\tprivate bInsightsSectionPresent: boolean = false;\n\tpublic insightsSectionIndex!: number;\n\tstatic Instance: AppManager;\n\tprivate recommendedFioriIds!: string[];\n\tprivate versionInfo!: IVersionInfo;\n\tprivate _RBManifestMap!: Record<string, ResourceBundle>;\n\tprivate _recommendedVisualizations!: ICustomVisualization[];\n\tprivate vizDataModified: boolean = false;\n\tprivate _oVizCacheData: { [key: string]: ICustomVizInstance } = {};\n\tprivate _favPageVisualizations: ICustomVisualization[] = [];\n\tprivate componentData: IAppInfo = {};\n\tprivate fioriAppData: IAppInfo = {};\n\tprivate recommendedUtilInstance: RecommendedCardUtil;\n\tprivate catalogAppData!: Promise<AppData[]> | undefined;\n\n\tprivate constructor() {\n\t\tsuper();\n\t\tthis.recommendedUtilInstance = RecommendedCardUtil.getInstance();\n\t}\n\n\tstatic getInstance() {\n\t\tif (!AppManager.Instance) {\n\t\t\tAppManager.Instance = new AppManager();\n\t\t}\n\t\treturn AppManager.Instance;\n\t}\n\t/**\n\t * Returns page load promise from the request queue if it exists, adds it to the queue if it doesn't\n\t *\n\t * @param {string} sPageId - page id\n\t * @param {boolean} bForceRefresh - force reload of data if true\n\t * @returns {Promise} - returns a promise which resolves with the requested page data\n\t * @private\n\t */\n\tprivate async _fetchRequestFromQueue(bForceRefresh: boolean): Promise<IPage> {\n\t\tconst oSpaceContentService = await Container.getServiceAsync<SpaceContent>(\"SpaceContent\");\n\t\tlet oPageLoadPromise: Promise<IPage>;\n\t\tthis.aRequestQueue = this.aRequestQueue || [];\n\n\t\t//Check if request already exists in the queue, if not add it\n\t\tconst oRequestedPage = this.aRequestQueue.find((oRequest) => oRequest.pageId === MYHOME_PAGE_ID);\n\t\tif (!oRequestedPage || bForceRefresh === true || this.vizDataModified === true) {\n\t\t\tthis.vizDataModified = false;\n\t\t\toPageLoadPromise = oSpaceContentService.getPage(MYHOME_PAGE_ID);\n\t\t\tif (oRequestedPage) {\n\t\t\t\toRequestedPage.pageLoadPromise = oPageLoadPromise;\n\t\t\t} else {\n\t\t\t\tthis.aRequestQueue.push({\n\t\t\t\t\tpageId: MYHOME_PAGE_ID,\n\t\t\t\t\tpageLoadPromise: oPageLoadPromise\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\toPageLoadPromise = oRequestedPage.pageLoadPromise;\n\t\t}\n\n\t\treturn oPageLoadPromise;\n\t}\n\t/**\n\t * Returns all dynamic visualizations present in MyHome page\n\t *\n\t * @param {boolean} bForceRefresh - force reload of visualizations data\n\t * @returns {Promise} - resolves to array of all dynamic visualizations in MyHome page\n\t * @private\n\t */\n\tprivate _fetchDynamicVizs(bForceRefresh: boolean) {\n\t\treturn this.fetchFavVizs(bForceRefresh, true).then((aFavApps: ICustomVisualization[]) =>\n\t\t\taFavApps.filter((oDynApp) => oDynApp.isCount || oDynApp.isSmartBusinessTile)\n\t\t);\n\t}\n\t/**\n\t * Returns all the sections that are available in the MyHome page\n\t *\n\t * @param {boolean} bForceRefresh - force reload of visualizations data\n\t * @returns {Promise} - resolves to array of all sections available in MyHome page\n\t * @private\n\t */\n\tpublic async _getSections(bForceRefresh: boolean = false): Promise<ISection[]> {\n\t\tconst oPage: IPage = await this._fetchRequestFromQueue(bForceRefresh);\n\t\tconst aSections = (oPage && oPage.sections) || [],\n\t\t\tiRecentAppSectionIndex: number = aSections.findIndex((oSection) => oSection.default);\n\t\tif (iRecentAppSectionIndex > 0) {\n\t\t\tif (this._oMoveAppsPromise !== undefined) {\n\t\t\t\tthis._oMoveAppsPromise = this.moveSection(iRecentAppSectionIndex, 0);\n\t\t\t\tawait this._oMoveAppsPromise;\n\t\t\t}\n\t\t\treturn this._getSections(true);\n\t\t} else {\n\t\t\treturn aSections;\n\t\t}\n\t}\n\t/**\n\t * Models and returns all visualizations available in MyHome page\n\t *\n\t * @param {bool} bForceRefresh - force reload of visualizations data\n\t * @returns {Promise} - resolves to array of all apps available in MyHome page\n\t * @private\n\t */\n\tprivate async _fetchMyHomeVizs(bForceRefresh: boolean): Promise<ICustomVisualization[]> {\n\t\tconst aVizs: ICustomVisualization[] = [];\n\t\tthis._oVizCacheData = this._oVizCacheData || {};\n\t\tconst aSections = await this._getSections(bForceRefresh);\n\t\tconst oVizInstantiationService = await Container.getServiceAsync<VisualizationInstantiation>(\"VisualizationInstantiation\");\n\t\taSections.forEach((oSection: ISection, iSectionIndex: number) => {\n\t\t\toSection?.visualizations?.forEach((oVisualization: IVisualization, iVisualizationIndex: number) => {\n\t\t\t\tconst vizConfig = oVisualization.vizConfig,\n\t\t\t\t\toVizInfo = vizConfig?.[\"sap.app\"] || ({ title: \"?\" } as IVisualization),\n\t\t\t\t\toViz = {} as ICustomVisualization;\n\n\t\t\t\toViz.oldAppId = _getAppId(vizConfig?.[\"sap.flp\"]);\n\t\t\t\toViz.appId = oVisualization?.targetURL; // Using targetURL as unique identifier as in certian scenario vizConfig can be empty.\n\t\t\t\toViz.url = oVisualization?.targetURL;\n\t\t\t\tif (!oViz.url && _isSmartBusinessTile(oVisualization)) {\n\t\t\t\t\toViz.url = _getTargetUrl(vizConfig?.[\"sap.flp\"]);\n\t\t\t\t}\n\t\t\t\toViz.leanURL = getLeanURL(oViz.url);\n\t\t\t\toViz.title = oVisualization?.title || _getAppTitleSubTitle(oVizInfo, oVisualization)?.title;\n\t\t\t\toViz.subtitle = oVisualization.subtitle || _getAppTitleSubTitle(oVizInfo, oVisualization).subtitle;\n\t\t\t\toViz.BGColor = DEFAULT_BG_COLOR().key;\n\t\t\t\toViz.isFav = true;\n\t\t\t\toViz.isSection = false;\n\t\t\t\toViz.icon = vizConfig?.[\"sap.ui\"]?.icons?.icon || FALLBACK_ICON;\n\t\t\t\tif (oVisualization?.indicatorDataSource) {\n\t\t\t\t\toViz.isCount = true;\n\t\t\t\t\toViz.indicatorDataSource = oVisualization.indicatorDataSource.path;\n\t\t\t\t\toViz.contentProviderId = oVisualization.contentProviderId;\n\t\t\t\t}\n\t\t\t\toViz.isSmartBusinessTile = _isSmartBusinessTile(oVisualization);\n\t\t\t\tif (oViz.isSmartBusinessTile) {\n\t\t\t\t\tif (!this._oVizCacheData[oViz.appId]) {\n\t\t\t\t\t\tthis._oVizCacheData[oViz.appId] = oVizInstantiationService.instantiateVisualization(\n\t\t\t\t\t\t\toVisualization\n\t\t\t\t\t\t) as ICustomVizInstance;\n\t\t\t\t\t\tthis._oVizCacheData[oViz.appId].setActive(true);\n\t\t\t\t\t}\n\t\t\t\t\toViz.vizInstance = this._oVizCacheData[oViz.appId];\n\t\t\t\t}\n\t\t\t\t// Add FLP Personalization Config\n\t\t\t\toViz.persConfig = {\n\t\t\t\t\tpageId: MYHOME_PAGE_ID,\n\t\t\t\t\tsectionTitle: oSection.title,\n\t\t\t\t\tsectionId: oSection.id,\n\t\t\t\t\tsectionIndex: iSectionIndex,\n\t\t\t\t\tvisualizationIndex: iVisualizationIndex,\n\t\t\t\t\tisDefaultSection: oSection.default,\n\t\t\t\t\tisPresetSection: oSection.preset,\n\t\t\t\t\tduplicateApps: []\n\t\t\t\t};\n\t\t\t\toViz.visualization = oVisualization;\n\t\t\t\t// Title and Subtitle in visualization are required in Insights Dialog.\n\t\t\t\toViz.visualization.title = oViz.title;\n\t\t\t\toViz.visualization.subtitle = oViz.subtitle;\n\t\t\t\taVizs.push(oViz);\n\t\t\t});\n\t\t});\n\t\treturn aVizs;\n\t}\n\t/**\n\t * Copies all Dynamic visualizations to Insights section\n\t *\n\t * @returns {Promise} - resolves to void and copy all the visualizations\n\t * @private\n\t */\n\tprivate async _copyDynamicVizs() {\n\t\tconst aDynamicVizs: ICustomVisualization[] = await this._fetchDynamicVizs(true);\n\t\treturn Promise.all(\n\t\t\taDynamicVizs.map((oDynViz: ICustomVisualization) => {\n\t\t\t\treturn this.addVisualization(oDynViz.visualization!.vizId, MYINSIGHT_SECTION_ID);\n\t\t\t})\n\t\t);\n\t}\n\t/**\n\t * Returns a list of all favorite vizualizations in MyHome page\n\t *\n\t * @param {boolean} bForceRefresh - force reload of vizualizations data\n\t * @param {boolean} bPreventGrouping - prevent vizualizations grouping\n\t * @returns {Promise} - resolves to array of favourite vizualizations in MyHome page\n\t * @private\n\t */\n\tpublic async fetchFavVizs(bForceRefresh: boolean, bPreventGrouping?: boolean): Promise<ISectionAndVisualization[]> {\n\t\tconst aMyHomeVizs = await this._fetchMyHomeVizs(bForceRefresh);\n\t\tconst aVisibleFavVizs = aMyHomeVizs.filter(\n\t\t\t(oViz) => oViz.persConfig && oViz.persConfig.sectionId !== MYINSIGHT_SECTION_ID && oViz.url && oViz.title\n\t\t);\n\n\t\tif (bPreventGrouping) {\n\t\t\treturn this._filterDuplicateVizs(_linkDuplicateVizs(aVisibleFavVizs), false);\n\t\t} else {\n\t\t\treturn this._addGroupInformation(aVisibleFavVizs);\n\t\t}\n\t}\n\t/**\n\t * Returns all vizualizations present in the Insights Section\n\t *\n\t * @param {boolean} bForceRefresh - force reload insights vizualizations data\n\t * @param {string} sSectionTitle - optional, title of insights section to be used while creating insights section\n\t * @returns {Promise} - resolves to an array with all vizualizations in Insights section\n\t */\n\tpublic async fetchInsightApps(bForceRefresh: boolean, sSectionTitle: string) {\n\t\tconst fnFetchInsightsApps = async () => {\n\t\t\tconst aVizs = await this._fetchMyHomeVizs(bForceRefresh);\n\t\t\treturn aVizs.filter((oViz) => oViz.persConfig?.sectionId === MYINSIGHT_SECTION_ID && oViz.url && oViz.title);\n\t\t};\n\n\t\tif (!this.bInsightsSectionPresent) {\n\t\t\tconst aSections: ISection[] = await this._getSections(bForceRefresh);\n\t\t\tthis.insightsSectionIndex = aSections.findIndex(function (oSection) {\n\t\t\t\treturn oSection.id === MYINSIGHT_SECTION_ID;\n\t\t\t});\n\n\t\t\tif (\n\t\t\t\tthis.insightsSectionIndex === -1 &&\n\t\t\t\t(Config.last(\"/core/shell/enablePersonalization\") || Config.last(\"/core/catalog/enabled\")) &&\n\t\t\t\tthis.bInsightsSectionPresent === false\n\t\t\t) {\n\t\t\t\tthis.bInsightsSectionPresent = true;\n\t\t\t\tawait this.addSection({\n\t\t\t\t\tsectionIndex: aSections?.length,\n\t\t\t\t\tsectionProperties: {\n\t\t\t\t\t\tid: MYINSIGHT_SECTION_ID,\n\t\t\t\t\t\ttitle: sSectionTitle\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tawait this._copyDynamicVizs();\n\t\t\t} else {\n\t\t\t\tthis.bInsightsSectionPresent = true;\n\t\t\t}\n\t\t}\n\n\t\treturn await fnFetchInsightsApps();\n\t}\n\n\t/**\n\t * Add visualization to a particular section\n\t *\n\t * @param {string} visualizationId - The id of the visualization to add.\n\t * @param {string} sectionId - The id of the section the visualization should be added to (optional parameter)\n\t * @returns {Promise} resolves to void after adding app to a section\n\t * @private\n\t */\n\tpublic async addVisualization(visualizationId: string, sectionId: string | undefined = undefined): Promise<void> {\n\t\tconst spaceContentService = await Container.getServiceAsync<SpaceContent>(\"SpaceContent\");\n\t\tawait spaceContentService.addVisualization(MYHOME_PAGE_ID, sectionId, visualizationId);\n\t}\n\n\t/**\n\t * @param {object} mProperties - map of properties\n\t * @param {string} mProperties.sectionId - section id from which visualizations should be removed\n\t * @param {object[]} mProperties.appIds - array of url of visualizations that has to be deleted\n\t * @param {boolean} mProperties.ignoreDuplicateApps - if true doesn't remove the duplicate apps, else removes the duplicate apps as well\n\t * @private\n\t * @returns {Promise} resolves after all visualizations are deleted\n\t */\n\tpublic async removeVisualizations({ sectionId, vizIds }: { sectionId: string; vizIds: string[] }) {\n\t\tconst spaceContentService = await Container.getServiceAsync<SpaceContent>(\"SpaceContent\");\n\t\tfor (const vizId of vizIds) {\n\t\t\tconst sections = await this._getSections(true);\n\t\t\tconst sectionIndex = sections.findIndex((oSection) => oSection.id === sectionId);\n\t\t\tconst targetSection = sectionIndex > -1 ? sections[sectionIndex] : null;\n\t\t\tconst visualizationIndex = targetSection?.visualizations?.findIndex((oVisualization) => oVisualization.id === vizId) ?? -1;\n\t\t\tif (visualizationIndex > -1) {\n\t\t\t\tawait spaceContentService.deleteVisualization(MYHOME_PAGE_ID, sectionIndex, visualizationIndex);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {object} mProperties - map of properties\n\t * @param {string} mProperties.pageId - page id from which visualizations should be updated\n\t * @param {object[]} mProperties.sourceSectionIndex - section index in which visualization that has to be updated\n\t * @param {boolean} mProperties.sourceVisualizationIndex - visualization index in the which should be updated\n\t * @param {boolean} mProperties.oVisualizationData - visualization data which will be updated for the vizualisation\n\t * @private\n\t * @returns {Promise} resolves to void\n\t */\n\tpublic async updateVisualizations({\n\t\tpageId,\n\t\tsourceSectionIndex,\n\t\tsourceVisualizationIndex,\n\t\toVisualizationData\n\t}: {\n\t\tpageId: string;\n\t\tsourceSectionIndex: number;\n\t\tsourceVisualizationIndex: number;\n\t\toVisualizationData: { displayFormatHint: string };\n\t}) {\n\t\tconst spaceContentService = await Container.getServiceAsync<SpaceContent>(\"SpaceContent\");\n\t\treturn spaceContentService.updateVisualization(pageId, sourceSectionIndex, sourceVisualizationIndex, oVisualizationData);\n\t}\n\n\t/**\n\t * Create Insight Section if not already present\n\t *\n\t * @param {string} sSectionTitle - optional, section title\n\t * @returns {Promise} - resolves to insight section created\n\t */\n\tpublic async createInsightSection(sSectionTitle: string) {\n\t\tif (!this.bInsightsSectionPresent) {\n\t\t\tconst aSections = await this._getSections();\n\t\t\tconst iMyInsightSectionIndex = aSections.findIndex(function (oSection) {\n\t\t\t\treturn oSection.id === MYINSIGHT_SECTION_ID;\n\t\t\t});\n\n\t\t\t//check if myinsight section exists, if not create one\n\t\t\tif (\n\t\t\t\tiMyInsightSectionIndex === -1 &&\n\t\t\t\t(Config.last(\"/core/shell/enablePersonalization\") || Config.last(\"/core/catalog/enabled\"))\n\t\t\t) {\n\t\t\t\treturn this.addSection({\n\t\t\t\t\tsectionIndex: aSections.length,\n\t\t\t\t\tsectionProperties: {\n\t\t\t\t\t\tid: MYINSIGHT_SECTION_ID,\n\t\t\t\t\t\ttitle: sSectionTitle,\n\t\t\t\t\t\tvisible: true\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Adds a section\n\t *\n\t * @param {object} mProperties - map of properties\n\t * @param {string} mProperties.sectionIndex - section index\n\t * @param {object} mProperties.sectionProperties - section properties\n\t * @returns {Promise} resolves to void and creates the section\n\t * @private\n\t */\n\tpublic async addSection(mProperties: ISection) {\n\t\tconst { sectionIndex, sectionProperties } = mProperties;\n\t\tconst oSpaceContentService = await Container.getServiceAsync<SpaceContent>(\"SpaceContent\");\n\t\tawait oSpaceContentService.addSection(MYHOME_PAGE_ID, sectionIndex, {\n\t\t\t...sectionProperties,\n\t\t\tvisible: true\n\t\t});\n\t}\n\n\t/**\n\t * Returns visualizations for a given section\n\t * @param {string} sectionId - section id\n\t * @param {boolean} [forceRefresh=false] - force reload of data if true\n\t * @returns {Promise} resolves to array of visualizations\n\t * @private\n\t */\n\tpublic async getSectionVisualizations(sectionId?: string, forceRefresh = false): Promise<ICustomVisualization[]> {\n\t\tconst aApps: ISectionAndVisualization[] = await this.fetchFavVizs(forceRefresh);\n\t\tif (sectionId) {\n\t\t\treturn aApps.find((oViz) => oViz.isSection && oViz.id === sectionId)?.apps || [];\n\t\t} else {\n\t\t\treturn aApps.filter((oViz) => !oViz.isSection); //return recently added apps\n\t\t}\n\t}\n\n\t/**\n\t * Adds a bookmark.\n\t * @private\n\t * @param {Object} bookmark - The bookmark data object.\n\t * @returns {Promise<void>} - A Promise that resolves once the bookmark is added.\n\t */\n\tpublic async addBookMark(\n\t\tbookmark: IVisualization,\n\t\tmoveConfig?: {\n\t\t\tsourceSectionIndex: number;\n\t\t\tsourceVisualizationIndex: number;\n\t\t\ttargetSectionIndex: number;\n\t\t\ttargetVisualizationIndex: number;\n\t\t}\n\t) {\n\t\tconst oBookmarkService: Bookmark = await Container.getServiceAsync(\"BookmarkV2\");\n\t\tconst aContentNodes = await oBookmarkService.getContentNodes();\n\t\tconst oMyHomeSpace = aContentNodes.find((contentNode) => contentNode.id === MYHOME_SPACE_ID);\n\t\tconst contentNode = oMyHomeSpace?.children?.find((contentNode) => contentNode.id === MYHOME_PAGE_ID);\n\t\tawait oBookmarkService.addBookmark(createBookMarkData(bookmark), contentNode);\n\t\tif (moveConfig) {\n\t\t\treturn this.moveVisualization(moveConfig);\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Retrieves the visualization with the specified appId within the specified section.\n\t * @param {string} appId - appId of the visualization for.\n\t * @param {string} sectionId - The ID of the section containing the visualization.\n\t * @param {boolean} [forceRefresh=false] - Whether to force a refresh of the section's cache.\n\t * @returns {Promise<object|null>} A promise that resolves with the visualization object if found, or null if not found.\n\t * @private\n\t */\n\tpublic async getVisualization(appId: string, sectionId?: string, forceRefresh = false) {\n\t\tconst sectionVisualizations = await this.getSectionVisualizations(sectionId, forceRefresh);\n\t\treturn sectionVisualizations.find((sectionVisualization) => sectionVisualization.appId === appId);\n\t}\n\n\t/**\n\t * Moves a visualization from source section to target section.\n\t * @param {object} moveConfig - Configuration object containing details for moving the visualization.\n\t * @param {number} moveConfig.sourceSectionIndex - Index of the source section.\n\t * @param {number} moveConfig.sourceVisualizationIndex - Index of the visualization within the source section.\n\t * @param {number} moveConfig.targetSectionIndex - Index of the target section.\n\t * @param {number} moveConfig.targetVisualizationIndex - Index at which the visualization will be placed within the target section.\n\t * @returns {Promise<void>} A promise that resolves to void after the move operation.\n\t * @private\n\t */\n\tpublic async moveVisualization(moveConfig: {\n\t\tsourceSectionIndex: number;\n\t\tsourceVisualizationIndex: number;\n\t\ttargetSectionIndex: number;\n\t\ttargetVisualizationIndex: number;\n\t}) {\n\t\tconst spaceContentService = await Container.getServiceAsync<SpaceContent>(\"SpaceContent\");\n\t\tthis.vizDataModified = true;\n\t\treturn spaceContentService.moveVisualization(\n\t\t\tMYHOME_PAGE_ID,\n\t\t\tmoveConfig.sourceSectionIndex,\n\t\t\tmoveConfig.sourceVisualizationIndex,\n\t\t\tmoveConfig.targetSectionIndex,\n\t\t\tmoveConfig.targetVisualizationIndex\n\t\t);\n\t}\n\n\t/**\n\t * Filters out duplicate visualizations from a list of all visualizations\n\t *\n\t * @param {object[]} aVisibleFavoriteVizs - array containing list of all visualizations\n\t * @param {boolean} bReturnDuplicateVizs - flag when set to true, returns only the duplicate apps\n\t * @returns {object[]} filtered array of vizualisations\n\t * @private\n\t */\n\tpublic _filterDuplicateVizs(aVisibleFavoriteVizs: ICustomVisualization[], bReturnDuplicateVizs: boolean) {\n\t\treturn aVisibleFavoriteVizs.filter((oViz, iVizIndex, aVizs) => {\n\t\t\tconst iFirstIndex = aVizs.findIndex((oTempApp) => oTempApp.appId === oViz.appId);\n\t\t\treturn bReturnDuplicateVizs ? iFirstIndex !== iVizIndex : iFirstIndex === iVizIndex;\n\t\t});\n\t}\n\n\t/**\n\t * Add Grouping Information to visualizations list, and return concatenated list.\n\t *\n\t * @param {object[]} aFavoriteVizs - list of all favorite visualizations\n\t * @returns {object[]} - concatenated list contaning grouping information as well\n\t * @private\n\t */\n\tprivate _addGroupInformation(aFavoriteVizs: ICustomVisualization[]) {\n\t\tconst aRecentVizs: ICustomVisualization[] = [],\n\t\t\taSections: ISection[] = [];\n\t\tlet oExistingSection: ISection | undefined;\n\n\t\t_linkDuplicateVizs(aFavoriteVizs).forEach((oViz) => {\n\t\t\tif (oViz.persConfig?.isDefaultSection) {\n\t\t\t\taRecentVizs.push(oViz);\n\t\t\t} else {\n\t\t\t\toExistingSection = aSections.find((oSection) => oSection.isSection && oSection.id === oViz.persConfig?.sectionId);\n\n\t\t\t\tif (!oExistingSection) {\n\t\t\t\t\taSections.push({\n\t\t\t\t\t\tid: oViz.persConfig?.sectionId,\n\t\t\t\t\t\tindex: oViz.persConfig?.sectionIndex,\n\t\t\t\t\t\ttitle: oViz.persConfig?.sectionTitle || \"\",\n\t\t\t\t\t\tbadge: \"1\",\n\t\t\t\t\t\tBGColor: DEFAULT_BG_COLOR().key,\n\t\t\t\t\t\ticon: \"sap-icon://folder-full\",\n\t\t\t\t\t\tisSection: true,\n\t\t\t\t\t\tisPresetSection: oViz.persConfig?.isPresetSection,\n\t\t\t\t\t\tapps: [oViz]\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\toExistingSection.apps?.push(oViz);\n\t\t\t\t\toExistingSection.badge = oExistingSection.apps?.length.toString();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t//filter out duplicate apps only from recent apps list\n\t\treturn [...aSections, ...this._filterDuplicateVizs(aRecentVizs, false)];\n\t}\n\n\t/**\n\t * Move a section within a page\n\t *\n\t * @param {number} sourceSectionIndex - source index (previous index of the section in the page before move)\n\t * @param {number} targetSectionIndex - target index (desired index of the section in the page after move)\n\t * @returns {Promise} resolves to void  and moves the section to desired index within the page\n\t * @private\n\t */\n\tpublic async moveSection(sourceSectionIndex: number, targetSectionIndex: number): Promise<void> {\n\t\treturn Container.getServiceAsync(\"Pages\").then(function (oPagesService: {\n\t\t\tgetPageIndex: (id: string) => number;\n\t\t\tmoveSection: (index: number, sourceIndex: number, targetIndex: number) => void;\n\t\t}) {\n\t\t\tconst iPageIndex: number = oPagesService.getPageIndex(MYHOME_PAGE_ID);\n\t\t\treturn oPagesService.moveSection(iPageIndex, sourceSectionIndex, targetSectionIndex);\n\t\t} as () => void);\n\t}\n\n\t/**\n\t * Returns array of all feature toggles\n\t *\n\t * @returns {object[]} - returns array of all feature toggles.\n\t */\n\tprivate async _getFeatureToggles() {\n\t\tlet sFeatureToggleUrl = FEATURE_TOGGLE_SRVC_URL + \"?$filter=\";\n\t\tconst FEATURE_TOGGLE_KEYS = Object.keys(FEATURE_TOGGLES);\n\t\tconst toggleFilter = FEATURE_TOGGLE_KEYS.map((sToggleKey) => {\n\t\t\treturn \"ToggleId eq '\" + FEATURE_TOGGLES[sToggleKey as keyof IFeatureToggles] + \"'\";\n\t\t}).join(\" or \");\n\t\tsFeatureToggleUrl = sFeatureToggleUrl + \"(\" + toggleFilter + \")\";\n\t\tconst oResponse = (await HttpHelper.GetJSON(sFeatureToggleUrl)) as {\n\t\t\terror: { message: string };\n\t\t\tvalue: Array<{ ToggleId: string; State: string }>;\n\t\t};\n\t\tif (oResponse?.error) {\n\t\t\tthrow new Error(oResponse.error.message);\n\t\t}\n\t\treturn oResponse?.value || [];\n\t}\n\n\t/**\n\t * Checks if feature is enabled or not.\n\t *\n\t * @param {string} sToggleId - feature toggle id\n\t * @returns {boolean} - returns true if feature is enabled.\n\t */\n\tpublic async isFeatureEnabled(sToggleId: string) {\n\t\ttry {\n\t\t\tconst aFeatureToggles = await this._getFeatureToggles();\n\t\t\tconst oToggle = aFeatureToggles.find((oFeatureToggle) => {\n\t\t\t\treturn oFeatureToggle.ToggleId === sToggleId;\n\t\t\t});\n\t\t\treturn !oToggle || oToggle.State === \"\" ? false : true;\n\t\t} catch (error) {\n\t\t\tLog.error(\"Unable to load feature toggles: \" + (error as Error).message);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Checks if a specific URL parameter is enabled (set to \"true\").\n\t *\n\t * @param {string} param - The name of the URL parameter to check.\n\t * @returns {boolean} `true` if the URL parameter exists and is set to \"true\" (case-insensitive), otherwise `false`.\n\t */\n\tpublic isURLParamEnabled(param: string): boolean {\n\t\tconst urlParams = new URLSearchParams(window.location.search);\n\t\treturn urlParams?.get(param)?.toLowerCase() === \"true\" || false;\n\t}\n\n\t/**\n\t * Fetch Recommended Fiori IDs\n\t *\n\t * @returns {Promise} resolves to array of recommended fiori ids\n\t * @private\n\t */\n\tprivate async _getRecommenedFioriIds(bForceRefresh: boolean = false): Promise<string[]> {\n\t\tif (!this.recommendedFioriIds || bForceRefresh) {\n\t\t\ttry {\n\t\t\t\tconst response = (await HttpHelper.GetJSON(RECOMMENDATION_SRVC_URL)) as {\n\t\t\t\t\terror: { message: string };\n\t\t\t\t\tvalue: Array<{ app_id: string }>;\n\t\t\t\t};\n\t\t\t\tthis.recommendedFioriIds =\n\t\t\t\t\tresponse?.value?.map((oApp) => {\n\t\t\t\t\t\treturn oApp.app_id;\n\t\t\t\t\t}) || [];\n\t\t\t} catch (error) {\n\t\t\t\tLog.error(\"Unable to load recommendations: \" + (error as Error).message);\n\t\t\t\treturn Promise.resolve([]);\n\t\t\t}\n\t\t}\n\t\treturn this.recommendedFioriIds;\n\t}\n\n\t/**\n\t * Fetch Catalog Apps\n\t *\n\t * @returns {Promise} resolves to array of Catalog Apps\n\t * @private\n\t */\n\tpublic async _getCatalogApps() {\n\t\tif (!this.catalogAppData) {\n\t\t\ttry {\n\t\t\t\tconst SearchableContent = await Container.getServiceAsync<SearchableContent>(\"SearchableContent\");\n\t\t\t\tthis.catalogAppData = SearchableContent.getApps({ includeAppsWithoutVisualizations: false });\n\t\t\t\treturn this.catalogAppData;\n\t\t\t} catch (error) {\n\t\t\t\tthis.catalogAppData = undefined;\n\t\t\t\tLog.error(error instanceof Error ? \"Error while fetching catalog apps:\" + error.message : String(error));\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(this.catalogAppData);\n\t}\n\n\t/**\n\t * Checks whether page settings contains addCardtoInsightsHidden\n\t * @param {object} page - page object\n\t * @returns {boolean} returns boolean\n\t * @private\n\t */\n\tprivate isAddCardToInsightsHidden(page?: IPageType) {\n\t\treturn page?.component?.settings?.tableSettings?.addCardtoInsightsHidden;\n\t}\n\n\t/**\n\t * check Valid Manifests\n\t *\n\t * @returns {boolean} returns boolean\n\t * @private\n\t */\n\n\tprivate _checkValidManifests(manifest: IAppManifest): boolean {\n\t\tconst dataSources = manifest[\"sap.app\"]?.dataSources;\n\n\t\t// Ensure dataSources has the correct structure for `mainService`\n\t\tconst hasRequiredDataSource = manifest[\"sap.ui.generic.app\"] && dataSources?.mainService;\n\n\t\tif (!hasRequiredDataSource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst pages = manifest[\"sap.ui.generic.app\"]?.pages;\n\t\t// if its not list report component or if listreport page settings has\n\t\t// isAddCardToInsightsHidden as true, then do not recommend the card\n\t\tif (Array.isArray(pages)) {\n\t\t\treturn this.recommendedUtilInstance._isListReport(pages[0]) && !this.isAddCardToInsightsHidden(pages[0]);\n\t\t}\n\n\t\tconst pageValues = Object.values(pages as PageRecord);\n\t\tif (pageValues.length > 0) {\n\t\t\treturn pageValues.some((page) => {\n\t\t\t\treturn (\n\t\t\t\t\ttypeof page === \"object\" && this.recommendedUtilInstance._isListReport(page) && !this.isAddCardToInsightsHidden(page)\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Get OData Model\n\t *\n\t * @param {object} manifest - manifest object\n\t * @returns {ODataModelV2} returns OData Model\n\t * @private\n\t */\n\tprivate _getOdataModel(oManifest: IAppManifest): Promise<ODataModelV2> {\n\t\treturn new Promise(function (resolve) {\n\t\t\tconst datasource = oManifest?.[\"sap.app\"]?.dataSources;\n\t\t\tconst mainService = datasource?.mainService;\n\t\t\tlet annotationUrls: string[] = (mainService?.settings?.annotations || [])\n\t\t\t\t.map((name: string) => datasource?.[name]?.uri || \"\")\n\t\t\t\t.filter(Boolean);\n\n\t\t\tconst oDataModel = new ODataModelV2(mainService?.uri as string, {\n\t\t\t\tannotationURI: annotationUrls,\n\t\t\t\tloadAnnotationsJoined: true\n\t\t\t});\n\t\t\toDataModel.attachMetadataLoaded(() => {\n\t\t\t\tresolve(oDataModel);\n\t\t\t});\n\t\t\toDataModel.attachMetadataFailed(() => {\n\t\t\t\tresolve(oDataModel);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Get Entity Set\n\t *\n\t * @param {object} manifest - manifest object\n\t * @returns {string} returns entity set\n\t * @private\n\t */\n\tprivate _getEntitySet(manifest: IAppManifest): string | undefined {\n\t\tconst pages = manifest[\"sap.ui.generic.app\"]?.pages;\n\t\tif (Array.isArray(pages)) {\n\t\t\treturn pages[0].entitySet;\n\t\t} else if (pages) {\n\t\t\tfor (const key in pages) {\n\t\t\t\tconst oApp = pages[key] as IPageType;\n\t\t\t\tif (this.recommendedUtilInstance._isListReport(oApp)) {\n\t\t\t\t\treturn oApp.entitySet;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Load I18n\n\t *\n\t * @param {object} manifest - manifest object\n\t * @param {string} manifestUrl - manifest url\n\t * @returns {object} returns resource bundle\n\t * @private\n\t */\n\tprivate async loadI18n(manifest: IAppManifest, manifestUrl: string) {\n\t\t// construct abslute url for properties file relative to manifest url\n\t\tconst i18nBundleUrl = manifest?.[\"sap.app\"]?.[\"i18n\"]?.[\"bundleUrl\"] as string;\n\t\tconst absoluteUrl = new URL(i18nBundleUrl, manifestUrl).href;\n\t\tthis._RBManifestMap = this._RBManifestMap || {};\n\t\tif (!this._RBManifestMap[absoluteUrl]) {\n\t\t\tconst oResourceBundle = await ResourceBundle.create({\n\t\t\t\t// specify url of the base .properties file\n\t\t\t\tbundleUrl: absoluteUrl,\n\t\t\t\tasync: true,\n\t\t\t\tterminologies: manifest[\"sap.app\"]?.[\"i18n\"]?.[\"terminologies\"]\n\t\t\t});\n\t\t\tthis._RBManifestMap[absoluteUrl] = oResourceBundle;\n\t\t}\n\t\treturn this._RBManifestMap[absoluteUrl];\n\t}\n\n\t/**\n\t * Get I18n Value Or Default String\n\t *\n\t * @param {string} sValue - value\n\t * @param {object} oResourceBundle - resource bundle object\n\t * @returns {string} returns string\n\t * @private\n\t */\n\tprivate getI18nValueOrDefaultString(sValue: string, oRB: ResourceBundle) {\n\t\tlet sPath = \"\";\n\t\tif (sValue && sValue.startsWith(\"{{\")) {\n\t\t\tsPath = sValue.substring(2, sValue.length - 2);\n\t\t} else if (sValue && sValue.startsWith(\"{\")) {\n\t\t\tsPath = sValue.substring(1, sValue.length - 1);\n\t\t}\n\t\treturn sPath ? oRB.getText(sPath) : sValue;\n\t}\n\n\t/**\n\t * Retrieves a copy of the analytical card manifest.\n\t *\n\t *\n\t * @private\n\t * @returns {ICardManifest} A copy of the analytical card manifest.\n\t */\n\tpublic _getAnalyticalCardManifest() {\n\t\treturn JSON.parse(JSON.stringify(AnalyticalCardSkeleton)) as ICardManifest;\n\t}\n\n\t/**\n\t * Processes the app manifest and generates a recommended card manifest if the app meets the required conditions.\n\t *\n\t * @param {ODataMetaModel} metaModel - The OData meta model containing metadata about entities and properties.\n\t * @param {IValidManifest} manifestObj - An object containing the app manifest and its URL.\n\t * @param {AppInfoData | undefined} parentApp - The parent app information, if available.\n\t * @param {IVersionInfo} versionInfo - The version and build timestamp of the app.\n\t * @returns {Promise<ICardManifest | undefined>} A promise that resolves to the generated card manifest if the app is eligible,\n\t * or `undefined` if the app does not meet the required conditions.\n\t * @private\n\t */\n\tprivate async getProcessedManifest(\n\t\tmetaModel: ODataMetaModel,\n\t\tmanifestObj: IValidManifest,\n\t\tparentApp: IAppInfoData | undefined,\n\t\tversionInfo: IVersionInfo\n\t): Promise<ICardManifest | undefined> {\n\t\ttry {\n\t\t\tconst manifest = manifestObj.manifest;\n\t\t\tconst mainEntitySetName = this._getEntitySet(manifest);\n\t\t\tif (!mainEntitySetName) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst mainEntitySet = metaModel.getODataEntitySet(mainEntitySetName) as IEntitySet;\n\t\t\tconst lineItemDetails = this.recommendedUtilInstance.getLineItemDetails(metaModel, manifest, mainEntitySetName);\n\n\t\t\tif (!lineItemDetails?.lineItem) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst entitySetName = lineItemDetails.entitySet || mainEntitySetName;\n\t\t\tconst entitySet = (\n\t\t\t\tentitySetName === mainEntitySetName ? mainEntitySet : metaModel.getODataEntitySet(entitySetName)\n\t\t\t) as IEntitySet;\n\t\t\tconst entityType = metaModel.getODataEntityType(entitySet.entityType) as IEntityType;\n\t\t\tconst suppressRowNavigation = lineItemDetails?.lrSettings?.[\"bSupressCardRowNavigation\"];\n\n\t\t\t// Check for mandatory properties\n\t\t\tif (this.recommendedUtilInstance.hasMandatoryProperties(entitySet, entityType?.property)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\t// Check for parameterized entity sets\n\t\t\tconst parameterDetails = this.recommendedUtilInstance._getParametersisedEntitySetParams(metaModel, entitySetName, true);\n\t\t\tif (parameterDetails?.entitySetName && parameterDetails?.parameters?.length) {\n\t\t\t\tconst paramEntitySet = metaModel.getODataEntitySet(parameterDetails.entitySetName) as IEntitySet;\n\t\t\t\tif (this.recommendedUtilInstance.hasMandatoryProperties(paramEntitySet, parameterDetails.parameters as Property[])) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst cardInput = this.recommendedUtilInstance._getManifestCardData(manifest, lineItemDetails, parentApp!, metaModel);\n\n\t\t\t// Ensure the card has at least 3 columns\n\t\t\tif (cardInput.columns.length < COLUMN_LENGTH) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\t// Resolve card title\n\t\t\tconst headerInfo = lineItemDetails?.headerInfo as IHeaderInfo;\n\t\t\tconst cardTitle = headerInfo.TypeNamePlural?.String || \"\";\n\t\t\tcardInput.cardTitle = cardTitle || cardInput.cardTitle;\n\n\t\t\t// Resolve i18n title if necessary\n\t\t\tif (!cardTitle && manifest[\"sap.app\"]?.i18n) {\n\t\t\t\tconst i18nBundleUrl = manifest[\"sap.app\"].i18n.bundleUrl;\n\t\t\t\tconst appTitle = manifest[\"sap.app\"].title;\n\t\t\t\tif (i18nBundleUrl && (appTitle.startsWith(\"i18n>\") || appTitle.startsWith(\"{\"))) {\n\t\t\t\t\tconst i18nResourceBundle = await this.loadI18n(manifest, manifestObj.url);\n\t\t\t\t\tcardInput.cardTitle = this.getI18nValueOrDefaultString(cardInput.cardTitle!, i18nResourceBundle);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.recommendedUtilInstance._createCardManifest(cardInput, versionInfo, manifest, suppressRowNavigation);\n\t\t} catch (oError: unknown) {\n\t\t\tLog.error(\"Error while processing manifest\", oError instanceof Error ? oError.message : String(oError));\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Fetches the OData meta models for a given list of valid manifests.\n\t * @param {IValidManifest[]} validManifests - An array of valid manifest objects\n\t * @returns {Promise<(ODataMetaModel | undefined)[]>} A promise that resolves to an array of OData meta models.\n\t * Each element corresponds to a manifest in the input array, and may be `undefined` if the meta model could not be fetched.\n\t * @private\n\t */\n\tprivate async fetchMetaModels(validManifests: IValidManifest[]): Promise<(ODataMetaModel | undefined)[]> {\n\t\tconst odataPromises = validManifests.map(async (manifestObj) => {\n\t\t\ttry {\n\t\t\t\treturn (await this._getOdataModel(manifestObj.manifest))?.getMetaModel();\n\t\t\t} catch (oError: unknown) {\n\t\t\t\tLog.error(\"Error while fetching metamodel\", oError instanceof Error ? oError.message : String(oError));\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t});\n\n\t\treturn await Promise.all(odataPromises);\n\t}\n\n\t/**\n\t * Combines the valid manifests with their corresponding OData meta models.\n\t * @param {IValidManifest[]} validManifests - An array of valid manifest objects\n\t * @param {ODataMetaModel[]} aMetaModel - An array of OData meta models\n\t * @returns {ICombinedManifestDetails[]} An array of objects containing the manifest and the corresponding meta model.\n\t * @private\n\t */\n\tprivate combineManifestsAndMetaModels(\n\t\tvalidManifests: IValidManifest[],\n\t\taMetaModel: (ODataMetaModel | undefined)[]\n\t): ICombinedManifestDetails[] {\n\t\treturn validManifests.reduce<ICombinedManifestDetails[]>((combined, manifestObj, index) => {\n\t\t\tconst metaModel = aMetaModel[index];\n\t\t\tif (metaModel) {\n\t\t\t\tcombined.push({ manifest: manifestObj, metaModel });\n\t\t\t}\n\t\t\treturn combined;\n\t\t}, []);\n\t}\n\n\t/**\n\t * Process the manifest and meta model to get the card manifest\n\t * @param {ICombinedManifestDetails[]} combinedDetails - An array of objects containing the manifest and the corresponding meta model.\n\t * @param {IAppInfoData[]} aCSTR - An array of app info data\n\t * @returns {Promise<(ICardManifest | undefined)[]>} A promise that resolves to an array of recommended card manifests.\n\t * @private\n\t */\n\tprivate async processManifests(\n\t\tcombinedDetails: ICombinedManifestDetails[],\n\t\taCSTR: IAppInfoData[]\n\t): Promise<(ICardManifest | undefined)[]> {\n\t\treturn Promise.all(\n\t\t\tcombinedDetails.map((item) => {\n\t\t\t\tconst parentApp = aCSTR.find((oApp) => oApp.resolutionResult?.ui5ComponentName === item.manifest.manifest?.[\"sap.app\"]?.id);\n\t\t\t\treturn this.getProcessedManifest(item.metaModel, item.manifest, parentApp, this.versionInfo);\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t * Processes the app list to generate a list of Fiori IDs.\n\t *\n\t * If `aList` is not provided, it uses `aAppComponentIds` and `aComponent` to generate the list of Fiori IDs.\n\t * It matches the `semanticObject` and `action` of each component in `aAppComponentIds` with the entries in `aComponent`.\n\t * If a match is found, the corresponding `fioriId` is added to the list.\n\t *\n\t * @param {string[]} [aList] - An optional array of Fiori IDs to return directly.\n\t * @param {ICardDetails[]} [aAppComponentIds] - An array of app component details to process.\n\t * @param {IAppInfo} [aComponent] - A mapping of component IDs to their corresponding data entries.\n\t * @returns {string[]} - A list of Fiori IDs.\n\t */\n\tprivate processAppList(aList?: string[], aAppComponentIds?: ICardDetails[], aComponent?: IAppInfo): string[] {\n\t\tif (!aList && aAppComponentIds && aAppComponentIds.length) {\n\t\t\treturn aAppComponentIds.reduce((list, oComponent) => {\n\t\t\t\tconst oData: IAppInfoData[] = aComponent?.[oComponent.id] || [];\n\t\t\t\tconst matchingData = oData.find(\n\t\t\t\t\t(entry) => entry.semanticObject === oComponent.target?.semanticObject && entry.action === oComponent.target?.action\n\t\t\t\t);\n\n\t\t\t\treturn matchingData ? [...list, matchingData.fioriId!] : list;\n\t\t\t}, [] as string[]);\n\t\t}\n\t\treturn aList || [];\n\t}\n\n\t/**\n\t * Fetch Card Mainfest\n\t *\n\t * @param {string[]} aAppIds - array of app ids\n\t * @returns {Promise} resolves to array of card manifest\n\t * @private\n\t */\n\tpublic async _getCardManifest(aList?: string[], aAppComponentIds?: ICardDetails[]): Promise<ICardManifest[]> {\n\t\ttry {\n\t\t\tconst [aCatalog, aFioriData] = await Promise.all([this._getCatalogApps(), this.getFioriAppData()]);\n\t\t\tthis.versionInfo = (await VersionInfo.load()) as IVersionInfo;\n\n\t\t\tconst aCSTR: IAppInfoData[] = Object.values(aFioriData).flat();\n\t\t\tconst aComponent = this.componentData;\n\t\t\t// in case of replacing old recommended cards fioriIds are not available hence make use of componnetname\n\t\t\t// and semanticobject and action to find fioriId, and populate aList to recreate recommended card again\n\t\t\tconst processedList = this.processAppList(aList, aAppComponentIds, aComponent);\n\n\t\t\tconst manifests = await this.fetchManifests(processedList, aFioriData, aCatalog);\n\t\t\tconst validManifests = manifests.filter((manifestObj) => this._checkValidManifests(manifestObj.manifest));\n\n\t\t\tconst aMetaModel = await this.fetchMetaModels(validManifests);\n\t\t\tconst combinedDetails = this.combineManifestsAndMetaModels(validManifests, aMetaModel);\n\n\t\t\tconst cards = await this.processManifests(combinedDetails, aCSTR);\n\t\t\treturn cards.filter((card) => card !== undefined);\n\t\t} catch (oError: unknown) {\n\t\t\tLog.error(\"Error while fetching card manifest\", oError instanceof Error ? oError.message : String(oError));\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Fetch the app manifest for the given app ids\n\t * @param {string[]} appIdList - array of app ids\n\t * @param {AppInfo} fioriData - fiori data\n\t * @param {AppData[]} catalogData - catalog data\n\t * @returns {Promise} resolves to array of manifests\n\t * @private\n\t */\n\tprivate async fetchManifests(appIdList: string[], fioriData: IAppInfo, catalogData: AppData[]): Promise<IValidManifest[]> {\n\t\ttry {\n\t\t\tconst appPromises = appIdList.map(async (appId) => {\n\t\t\t\tconst aApp: IAppInfoData[] = fioriData[appId] || [];\n\t\t\t\tfor (const oApp of aApp) {\n\t\t\t\t\tconst oViz = catalogData.find(\n\t\t\t\t\t\t(catalog) => oApp.semanticObject === catalog.target?.semanticObject && oApp.action === catalog.target?.action\n\t\t\t\t\t);\n\t\t\t\t\tconst manifestUrl = oApp?.resolutionResult?.applicationDependencies?.manifest;\n\t\t\t\t\tif (oViz && manifestUrl) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst response = await fetch(manifestUrl);\n\t\t\t\t\t\t\tconst manifest = (await response.json()) as IAppManifest;\n\t\t\t\t\t\t\treturn { url: response.url, manifest };\n\t\t\t\t\t\t} catch (error: unknown) {\n\t\t\t\t\t\t\tLog.error(\"Error while fetching manifest\", error instanceof Error ? error.message : String(error));\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// No valid manifest found in this appId's entries\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t\tconst results = await Promise.all(appPromises);\n\t\t\treturn results.filter((manifest): manifest is IValidManifest => manifest !== undefined);\n\t\t} catch (oError) {\n\t\t\tLog.error(\"Error while processing manifests\", oError instanceof Error ? oError.message : String(oError));\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Remove Duplicate Cards\n\t *\n\t * @param {object[]} aCards - array of cards\n\t * @returns {object[]} returns array of cards\n\t * @private\n\t */\n\tprivate _removeDuplicateCards(aCards: ICard[]): ICard[] {\n\t\tconst oCardDict: Record<string, boolean> = {};\n\t\tconst aResult: ICard[] = [];\n\t\taCards.forEach((oCard) => {\n\t\t\tconst sCardTitle = oCard?.descriptorContent?.[\"sap.card\"]?.header?.title || \"\";\n\t\t\tif (!oCardDict[sCardTitle]) {\n\t\t\t\taResult.push(oCard);\n\t\t\t\toCardDict[sCardTitle] = true;\n\t\t\t}\n\t\t});\n\t\treturn aResult;\n\t}\n\n\t/**\n\t * Fetch Recommended Cards\n\t *\n\t * @returns {Promise<ICard[] | []> } resolves to array of recommended cards\n\t * @private\n\t */\n\tpublic async getRecommenedCards(): Promise<ICard[] | []> {\n\t\ttry {\n\t\t\tconst aAppIds = await this._getRecommenedFioriIds();\n\t\t\tconst aManifests = await this._getCardManifest(aAppIds);\n\t\t\tconst aRecManifests = aManifests?.slice(0, RECOMMENDED_CARD_LIMIT);\n\t\t\tconst aRecommendedCards = aRecManifests?.map((manifest) => {\n\t\t\t\tlet id;\n\t\t\t\tif (manifest?.[\"sap.card\"]) {\n\t\t\t\t\tmanifest[\"sap.card\"].rec = true;\n\t\t\t\t\tid = manifest[\"sap.app\"]?.id;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tid,\n\t\t\t\t\tdescriptorContent: manifest\n\t\t\t\t};\n\t\t\t});\n\t\t\treturn this._removeDuplicateCards(aRecommendedCards as ICard[]);\n\t\t} catch (error) {\n\t\t\tLog.error(\"Error while fetching recommended cards:\", error instanceof Error ? error.message : String(error));\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves a list of recommended visualizations for the user.\n\t *\n\t * The final list is composed of up to 10 recommendations, with must-include visualizations prioritized.\n\t * If no recommended visualizations are available or if an error occurs, it returns an empty array.\n\t *\n\t * @private\n\t * @async\n\t * @param {boolean} [forceRefresh=false] - If `true`, forces a refresh of the recommended visualizations\n\t *                                         regardless of whether they are cached.\n\t * @returns {Promise<ICustomVisualization[]>} A promise that resolves to an array of recommended visualizations.\n\t *                                            The array is limited to 10 visualizations, including must-include recommendations.\n\t */\n\tpublic async getRecommendedVisualizations(forceRefresh: boolean = false) {\n\t\tif (!this._recommendedVisualizations || forceRefresh) {\n\t\t\tconst recommendedFioriIds = await this._getRecommenedFioriIds(forceRefresh);\n\t\t\tif (recommendedFioriIds.length) {\n\t\t\t\tlet finalRecommendations: ICustomVisualization[] = [];\n\t\t\t\tlet mustIncludeRecommendations: ICustomVisualization[] = [];\n\t\t\t\tlet [recommendedVisualizations, favoriteVisualizations] = await Promise.all([\n\t\t\t\t\tthis._getVisualizationsByFioriIds(recommendedFioriIds),\n\t\t\t\t\tthis._fetchMyHomeVizs(forceRefresh)\n\t\t\t\t]);\n\t\t\t\t//filter out recommendations that are already added\n\t\t\t\trecommendedVisualizations = recommendedVisualizations.filter((recViz) =>\n\t\t\t\t\t_isVisualizationAlreadyAdded(recViz, favoriteVisualizations)\n\t\t\t\t);\n\t\t\t\trecommendedVisualizations.forEach((recViz) => {\n\t\t\t\t\tif (_isMustIncludeRecommendation(recViz)) {\n\t\t\t\t\t\tmustIncludeRecommendations.push(recViz);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfinalRecommendations.push(recViz);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t//return only 10 recommended apps along with 'MyInbox' and 'Manage My Timesheet' if user has access to these apps.\n\t\t\t\tthis._recommendedVisualizations = finalRecommendations\n\t\t\t\t\t.slice(0, 10 - mustIncludeRecommendations.length)\n\t\t\t\t\t.concat(mustIncludeRecommendations);\n\t\t\t} else {\n\t\t\t\tthis._recommendedVisualizations = [];\n\t\t\t}\n\t\t}\n\t\treturn this._recommendedVisualizations;\n\t}\n\n\t/**\n\t * Asynchronously retrieves the list of inbound applications from the SAP Fiori client-side target resolution service.\n\t *\n\t * @private\n\t * @async\n\t * @returns {Promise<Array>} A promise that resolves to an array of inbound applications.\n\t *                            If an error occurs or the inbound applications are not available, it resolves to an empty array.\n\t */\n\tprivate async _getInboundApps() {\n\t\ttry {\n\t\t\tconst service = await Container.getServiceAsync<ClientSideTargetResolution>(\"ClientSideTargetResolution\");\n\t\t\treturn service?._oAdapter?._aInbounds || [];\n\t\t} catch (error) {\n\t\t\tLog.error(\"Error while fetching inbound apps: \" + (error as Error).message);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves Fiori app data and stores it in the `fioriAppData` and `componentData` properties.\n\t *\n\t * This method fetches inbound applications using the `_getInboundApps` method and processes them to extract\n\t * Fiori app IDs (`sap-fiori-id`) and their associated semantic data. It also maps UI5 component names to their\n\t * corresponding Fiori app IDs for later use.\n\t *\n\t * @returns {Promise<IAppInfo>} A promise that resolves to an object containing Fiori app data\n\t * @private\n\t */\n\tprivate async getFioriAppData(): Promise<IAppInfo> {\n\t\ttry {\n\t\t\tif (!Object.keys(this.componentData).length) {\n\t\t\t\tthis.componentData = {};\n\t\t\t\tthis.fioriAppData = {};\n\t\t\t\tconst inbounds = await this._getInboundApps();\n\t\t\t\tinbounds.forEach((oItem) => {\n\t\t\t\t\tconst fioriId = oItem?.signature?.parameters?.[\"sap-fiori-id\"]?.defaultValue?.value;\n\t\t\t\t\tconst componentId = oItem?.resolutionResult?.ui5ComponentName;\n\t\t\t\t\tif (fioriId) {\n\t\t\t\t\t\tconst semanticData: IAppInfoData = {\n\t\t\t\t\t\t\taction: oItem.action,\n\t\t\t\t\t\t\tsemanticObject: oItem.semanticObject,\n\t\t\t\t\t\t\tresolutionResult: oItem.resolutionResult\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.fioriAppData[fioriId] = this.fioriAppData[fioriId] || [];\n\t\t\t\t\t\tthis.fioriAppData[fioriId].push(semanticData);\n\n\t\t\t\t\t\t// store data along with fioriId in componentData, this can be used later to find the\n\t\t\t\t\t\t// fioriId for those apps when only ui5ComponentName is known\n\t\t\t\t\t\tif (componentId) {\n\t\t\t\t\t\t\tconst combinedData: IAppInfoData = { ...semanticData, fioriId };\n\n\t\t\t\t\t\t\tthis.componentData[componentId] = this.componentData[componentId] || [];\n\t\t\t\t\t\t\tthis.componentData[componentId].push(combinedData);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn this.fioriAppData;\n\t\t} catch (oError) {\n\t\t\tLog.error(oError instanceof Error ? oError.message : String(oError));\n\t\t\treturn {};\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves visualizations based on a list of Fiori IDs.\n\t *\n\t * This function processes the given Fiori IDs to find associated visualizations. It does so by fetching\n\t * inbound applications and catalog apps, then matching the Fiori IDs to filter out and gather relevant visualizations.\n\t * The function distinguishes between GUI and non-GUI visualizations, prioritizing non-GUI visualizations if both types are found.\n\t * It also ensures that each visualization is unique based on its URL and title, avoiding duplicates.\n\t *\n\t * @private\n\t * @async\n\t * @param {string[]} fioriIds - An array of Fiori IDs to search for visualizations.\n\t * @returns {Promise<ICustomVisualization[]>} A promise that resolves to an array of unique visualizations associated with the provided Fiori IDs.\n\t */\n\tprivate async _getVisualizationsByFioriIds(fioriIds: string[]) {\n\t\tconst visualizations: ICustomVisualization[] = [];\n\t\tconst visitedVisualizations: Map<string, boolean> = new Map<string, boolean>();\n\t\tconst [inbounds, catalogApps] = await Promise.all([this._getInboundApps(), this._getCatalogApps()]);\n\t\tfioriIds.forEach((fioriId) => {\n\t\t\t// get all inbounds with the fiori id\n\t\t\tconst authorizedApps = inbounds.filter(function (inbound) {\n\t\t\t\treturn inbound?.signature.parameters[\"sap-fiori-id\"]?.defaultValue?.value === fioriId;\n\t\t\t});\n\t\t\tauthorizedApps.forEach((app) => {\n\t\t\t\t//filter apps that matched semantic object action\n\t\t\t\tlet matchingVizualizations = catalogApps.filter((catalogApp) => {\n\t\t\t\t\treturn catalogApp?.target?.semanticObject === app.semanticObject && catalogApp.target.action === app.action;\n\t\t\t\t});\n\n\t\t\t\tconst guiVisualizations = matchingVizualizations.filter((matchingVizualization) =>\n\t\t\t\t\t_isGUIVisualization(matchingVizualization)\n\t\t\t\t);\n\t\t\t\tconst nonGuiVisualizations = matchingVizualizations.filter(\n\t\t\t\t\t(matchingVizualization) => !_isGUIVisualization(matchingVizualization)\n\t\t\t\t);\n\t\t\t\t//if both gui and non-gui visualizations exists, then consider only non-gui visualizations for recommendation.\n\t\t\t\tif (guiVisualizations.length > 0 && nonGuiVisualizations.length > 0) {\n\t\t\t\t\tmatchingVizualizations = [...nonGuiVisualizations];\n\t\t\t\t}\n\n\t\t\t\tmatchingVizualizations.forEach((matchingVizualization) => {\n\t\t\t\t\tlet visualization = matchingVizualization.visualizations[0];\n\t\t\t\t\tlet recommendedVisualization: ICustomVisualization = {\n\t\t\t\t\t\ttitle: visualization.title,\n\t\t\t\t\t\tsubtitle: visualization.subtitle,\n\t\t\t\t\t\ticon: visualization.icon,\n\t\t\t\t\t\turl: visualization.targetURL,\n\t\t\t\t\t\tvizId: visualization.vizId,\n\t\t\t\t\t\tfioriId: fioriId,\n\t\t\t\t\t\tvisualization: visualization\n\t\t\t\t\t};\n\t\t\t\t\t//if app with same url or title already recommended, then don't consider it.\n\t\t\t\t\tif (\n\t\t\t\t\t\t!visitedVisualizations.has(recommendedVisualization.url!) ||\n\t\t\t\t\t\t!visitedVisualizations.has(recommendedVisualization.title!)\n\t\t\t\t\t) {\n\t\t\t\t\t\tvisitedVisualizations.set(recommendedVisualization.url!, true);\n\t\t\t\t\t\tvisitedVisualizations.set(recommendedVisualization.title!, true);\n\t\t\t\t\t\tvisualizations.push(recommendedVisualization);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\treturn visualizations;\n\t}\n\n\t/**\n\t * Retrieves visualizations for all favorite pages based on the provided parameters.\n\t * @param {Array} pages - An array of favorite pages.\n\t * @param {boolean} shouldReload - A flag indicating whether to reload page visualizations.\n\t * @returns {Promise<ICustomVisualization[]>} A promise that resolves with an array of favorite page visualizations.\n\t * @private\n\t */\n\tpublic async _getAllFavPageApps(pages: IPage[], shouldReload?: boolean): Promise<ICustomVisualization[]> {\n\t\ttry {\n\t\t\tif (pages) {\n\t\t\t\tthis._favPageVisualizations = this._favPageVisualizations || [];\n\t\t\t\t//Check to ensure that missing visualization data is loaded, if any\n\t\t\t\tconst loadedPages = this._favPageVisualizations.reduce((pageIDs: string[], visualization) => {\n\t\t\t\t\tif (visualization.pageId && !pageIDs.includes(visualization.pageId)) {\n\t\t\t\t\t\tpageIDs.push(visualization.pageId);\n\t\t\t\t\t}\n\t\t\t\t\treturn pageIDs;\n\t\t\t\t}, []);\n\t\t\t\tconst pageIds = pages.map((page) => page.pageId);\n\t\t\t\tconst shouldLoadMissingApps = loadedPages.length === 0 || !loadedPages.every((pageId) => pageIds.includes(pageId));\n\t\t\t\tif (!shouldReload && !shouldLoadMissingApps) {\n\t\t\t\t\treturn this._favPageVisualizations;\n\t\t\t\t} else {\n\t\t\t\t\tthis._favPageVisualizations = await this._loadAllPageVisualizations(pages);\n\t\t\t\t\treturn this._favPageVisualizations;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [];\n\t\t} catch (error) {\n\t\t\tLog.error(error as string);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Loads visualizations for all specified pages.\n\t * @param {Array} pages - An array of pages.\n\t * @param {boolean} [shouldFetchDistinctApps=false] - A flag indicating whether to fetch distinct pages.\n\t * @returns {Promise<ICustomVisualization[]>} A promise that resolves with an array of page visualizations.\n\t * @private\n\t */\n\tprivate async _loadAllPageVisualizations(pages: IPage[], shouldFetchDistinctApps = false): Promise<ICustomVisualization[]> {\n\t\tconst getBgColor = (pageId: string | undefined) => {\n\t\t\treturn pages.find((page) => page.pageId === pageId)?.BGColor ?? DEFAULT_BG_COLOR().key;\n\t\t};\n\n\t\ttry {\n\t\t\tconst favPageVisualizations: ICustomVisualization[] = [];\n\t\t\tconst spaceContentService = await Container.getServiceAsync<SpaceContent>(\"SpaceContent\");\n\t\t\tconst pageData = await spaceContentService.getPages(pages.map((oPage) => oPage.pageId) as string[]);\n\t\t\tconst aPages = Object.values(pageData);\n\n\t\t\tfor (const page of aPages) {\n\t\t\t\tconst sections = page.sections || [];\n\t\t\t\tfor (const section of sections) {\n\t\t\t\t\tconst visualizations = section.visualizations || [];\n\t\t\t\t\tfor (const visualization of visualizations) {\n\t\t\t\t\t\tconst app = {\n\t\t\t\t\t\t\tappId: visualization.targetURL,\n\t\t\t\t\t\t\tvizId: visualization.vizId,\n\t\t\t\t\t\t\ticon: visualization.icon,\n\t\t\t\t\t\t\tBGColor: getBgColor(page.id) as string,\n\t\t\t\t\t\t\tpageId: page.id\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (!shouldFetchDistinctApps || !favPageVisualizations.some((oVizApp) => oVizApp.appId === app.appId)) {\n\t\t\t\t\t\t\tfavPageVisualizations.push(app);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn favPageVisualizations;\n\t\t} catch (error) {\n\t\t\tLog.error(error as string);\n\t\t\treturn [];\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"utils"}},{"offset":{"line":346,"column":0},"map":{"version":3,"names":["sap","ui","define","BaseObject","_catch","body","recover","result","e","then","methods","isEncoded","url","test","MultiPartRequest","batchRequests","constructor","requestMethod","csrfToken","this","encodeURI","boundary","Date","now","options","headers","method","_constructBody","BOUNDARY","REQUEST_HEADERS","REQUEST_BODY","index","length","request","boundaryEnd","addRequest","push","constructBodyWithPayload","changeSet","CHANGESET_BOUNDARY","CHANGESET_HEADER","JSON","stringify","payload","getDataFromRawValue","value","parsedValue","split","filter","data","finalData","contentTypeValue","includes","parse","fetchCSRFToken","baseURL","Promise","resolve","fetch","HEAD","response","ok","token","get","Error","error","message","reject","BatchHelper","extend","fetchData","_fetchData","multiPartRequest","_this","GET","POST","text","createMultipartRequest","_createMultipartRequest","urls","_this2","buildMultipartRequest","createMultipartRequestWithPayload","_createMultipartRequestWithPayload","payloads","_this3","buildMultipartRequestWithPayload","_buildMultipartRequest","arguments","undefined","forEach","_buildMultipartRequestWithPayload","_ref","multipartRequest"],"sources":["BatchHelper.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport BaseObject from \"sap/ui/base/Object\";\n\nenum methods {\n\tGET = \"GET\",\n\tPOST = \"POST\",\n\tPUT = \"PUT\",\n\tPATCH = \"PATCH\",\n\tDELETE = \"DELETE\",\n\tHEAD = \"HEAD\"\n}\n\ninterface Options {\n\theaders: Record<string, string>;\n\tmethod: methods;\n\tbody?: string;\n}\n\nconst isEncoded = (url: string) => {\n\treturn /%[0-9A-F]{2}/i.test(url);\n};\n\n/**\n * Represents a multipart request.\n */\nclass MultiPartRequest {\n\tprivate url: string;\n\tprivate batchRequests: MultiPartRequest[] = [];\n\tprivate boundary: string;\n\tpublic options: Options;\n\tpublic payload?: unknown;\n\n\t/**\n\t * Creates a MultiPartRequest object.\n\t *\n\t * @param {string} url - The URL for the multipart request.\n\t * @constructor\n\t */\n\tconstructor(url: string, requestMethod: methods, csrfToken?: string) {\n\t\t//encode the URL if it is not already encoded\n\t\tthis.url = isEncoded(url) ? url : encodeURI(url);\n\t\tthis.boundary = `batch_id_${Date.now()}_01`;\n\t\tthis.options = {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": `multipart/mixed;boundary=${this.boundary}`\n\t\t\t},\n\t\t\tmethod: requestMethod\n\t\t};\n\n\t\t// Add CSRF token to headers if available\n\t\tif (csrfToken) {\n\t\t\tthis.options.headers[\"X-CSRF-Token\"] = csrfToken;\n\t\t}\n\t}\n\n\t/**\n\t * Constructs the body for the multipart request.\n\t *\n\t * @returns {string} - The constructed body.\n\t * @private\n\t */\n\tpublic _constructBody(): string {\n\t\tconst BOUNDARY = `--${this.boundary}`;\n\t\tconst REQUEST_HEADERS = `Content-Type: application/http\\r\\nContent-Transfer-Encoding: binary\\r\\n`;\n\t\tconst REQUEST_BODY = `Accept: application/json\\r\\n\\r\\n\\r\\n`;\n\n\t\tlet body = `${BOUNDARY}\\r\\n`;\n\n\t\tfor (let index = 0; index < this.batchRequests.length; index++) {\n\t\t\tconst request = this.batchRequests[index];\n\t\t\tconst boundaryEnd = index === this.batchRequests.length - 1 ? \"--\\r\\n\" : \"\\r\\n\";\n\t\t\tbody += `${REQUEST_HEADERS}\\r\\n`;\n\t\t\tbody += `${request.options.method} ${request.url} HTTP/1.1\\r\\n${REQUEST_BODY}`;\n\t\t\tbody += `${BOUNDARY}${boundaryEnd}`;\n\t\t}\n\n\t\treturn body;\n\t}\n\n\t/**\n\t * Adds a request to the MultiPartRequest batch.\n\t *\n\t * @public\n\t * @param {Object} request - The request to add to the batch.\n\t */\n\tpublic addRequest(request: MultiPartRequest): void {\n\t\tthis.batchRequests.push(request);\n\t}\n\n\t/**\n\t * Constructs the body for the multipart request with payload\n\t *\n\t * @returns {string} - The constructed body.\n\t * @private\n\t */\n\tpublic constructBodyWithPayload(): string {\n\t\tconst BOUNDARY = `--${this.boundary}`;\n\t\tconst REQUEST_HEADERS = \"Content-Type:application/http\\r\\nContent-Transfer-Encoding:binary\\r\\n\";\n\t\tlet body = `${BOUNDARY}\\r\\n`;\n\t\tconst changeSet = \"changeset_001\";\n\t\tconst CHANGESET_BOUNDARY = `--${changeSet}`;\n\t\tconst CHANGESET_HEADER = `Content-Type: multipart/mixed; boundary=${changeSet}\\r\\n`;\n\t\tbody += `${CHANGESET_HEADER}\\r\\n${CHANGESET_BOUNDARY}\\r\\n`;\n\t\tfor (let index = 0; index < this.batchRequests.length; index++) {\n\t\t\tconst request = this.batchRequests[index];\n\t\t\tbody += `\\r\\n${REQUEST_HEADERS}`;\n\t\t\tbody += `Content-ID: ${index + 1}\\r\\n\\r\\n`;\n\t\t\tbody += `${request.options.method} ${request.url} HTTP/1.1\\r\\n`;\n\t\t\tbody += \"sap-context-accept: header\\r\\nContent-Type:application/json\\r\\n\\r\\n\";\n\t\t\tbody += `${JSON.stringify(request.payload)}\\r\\n\\r\\n`;\n\t\t\tbody += CHANGESET_BOUNDARY;\n\t\t\tif (index === this.batchRequests.length - 1) {\n\t\t\t\tbody += \"--\\r\\n\";\n\t\t\t\tbody += `${BOUNDARY}--`;\n\t\t\t}\n\t\t}\n\t\treturn body;\n\t}\n}\n\n/**\n * Parses multipart body response and returns an array of values called in the batch request.\n *\n * @param {string} value - Multipart body response.\n * @returns {Object[]} - Array of values in the multipart request.\n * @returns {Object[]} - An array of values in the multipart request.\n */\nconst getDataFromRawValue = function (value: string): (string | object)[] {\n\tconst parsedValue = value.split(\"\\r\\n\").filter((data) => data !== \"\");\n\n\tconst finalData: (string | object)[] = [];\n\tlet contentTypeValue = \"\";\n\n\tfor (let index = 1; index < parsedValue.length - 1; index++) {\n\t\tcontentTypeValue = parsedValue[index].includes(\"Content-Type: \") ? parsedValue[index].split(\"Content-Type: \")[1] : contentTypeValue;\n\n\t\tif (parsedValue[index + 1].includes(parsedValue[0])) {\n\t\t\tif (contentTypeValue === \"application/json\") {\n\t\t\t\tfinalData.push(JSON.parse(parsedValue[index]) as string);\n\t\t\t} else {\n\t\t\t\tfinalData.push(parsedValue[index]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn finalData;\n};\n\n/**\n * Fetches the CSRF token from the specified base URL.\n *\n * @async\n * @param {string} baseURL - The base URL to fetch the CSRF token from.\n * @returns {Promise<string>} A Promise that resolves when all batch requests are completed. A promise that resolves to the CSRF token.\n * @throws {Error} An error if the CSRF token cannot be fetched.\n */\nconst fetchCSRFToken = async function (baseURL: string): Promise<string> {\n\ttry {\n\t\tconst response = await fetch(baseURL, {\n\t\t\tmethod: methods.HEAD,\n\t\t\theaders: {\n\t\t\t\t\"X-CSRF-Token\": \"Fetch\"\n\t\t\t}\n\t\t});\n\n\t\tif (response.ok) {\n\t\t\tconst token = response.headers.get(\"X-CSRF-Token\");\n\t\t\tif (token) {\n\t\t\t\treturn token;\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Cannot fetch X-CSRF-Token.\");\n\t} catch (error: unknown) {\n\t\tthrow new Error((error as Error).message);\n\t}\n};\n\n/**\n *\n * Helper class for managing batch requests.\n *\n * @extends BaseObject\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.utils.BatchHelper\n */\nexport default class BatchHelper extends BaseObject {\n\tprivate url!: string;\n\n\t/**\n\t * Fetches data from a multipart request.\n\t *\n\t * @private\n\t * @param {MultiPartRequest} multiPartRequest - The multipart request object.\n\t * @returns {Promise<Array<string | object>>} - A promise that resolves to the data from the request.\n\t */\n\tprivate async fetchData(multiPartRequest: MultiPartRequest): Promise<Array<string | object>> {\n\t\tmultiPartRequest.options.body =\n\t\t\tmultiPartRequest.options.method === methods.GET\n\t\t\t\t? multiPartRequest._constructBody()\n\t\t\t\t: multiPartRequest.constructBodyWithPayload();\n\n\t\tmultiPartRequest.options.method = methods.POST;\n\n\t\tconst response = await fetch(this.url, multiPartRequest.options);\n\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(\"Failed to fetch data from the server.\");\n\t\t}\n\n\t\tconst text = await response.text();\n\t\treturn getDataFromRawValue(text);\n\t}\n\n\t/**\n\t * Creates a multipart batch request with multiple URLs.\n\t *\n\t * @public\n\t * @param {string} baseURL - The base URL for creating the batch request.\n\t * @param {string[]} urls - An array of URLs for individual requests.\n\t * @returns {Promise<Array<string | object>>} - A promise that resolves to the data from the batch request.\n\t */\n\tpublic async createMultipartRequest(baseURL: string, urls: string[]): Promise<Array<string | object>> {\n\t\tthis.url = `${baseURL}$batch`;\n\t\tconst csrfToken = await fetchCSRFToken(baseURL);\n\t\tconst request = this.buildMultipartRequest(urls, csrfToken);\n\t\treturn await this.fetchData(request);\n\t}\n\n\t/**\n\t * Creates a multipart batch request with given payloads and sends it to the specified base URL.\n\t *\n\t * @public\n\t * @param {string} baseURL - The base URL for creating the batch request.\n\t * @param payloads - An array of objects containing the URL and data for each part of the multipart request.\n\t * @param requestMethod - The HTTP method to be used for the request (e.g., POST).\n\t * @returns {Promise<Array<string | object>>} A promise that resolves to the data from the batch request.\n\t */\n\tpublic async createMultipartRequestWithPayload(\n\t\tbaseURL: string,\n\t\tpayloads: { url: string; data: unknown }[],\n\t\trequestMethod: methods\n\t): Promise<Array<string | object>> {\n\t\tthis.url = `${baseURL}$batch`;\n\t\tconst csrfToken = await fetchCSRFToken(baseURL);\n\t\tconst request = this.buildMultipartRequestWithPayload(payloads, csrfToken, requestMethod);\n\t\treturn await this.fetchData(request);\n\t}\n\n\t/**\n\t * Builds a multipart request from an array of URLs.\n\t *\n\t * @private\n\t * @param {string[]} urls - An array of URLs for individual requests.\n\t * @returns {MultiPartRequest} - The multipart request object.\n\t */\n\tprivate buildMultipartRequest(urls: string[], csrfToken: string, requestMethod: methods = methods.GET): MultiPartRequest {\n\t\t// create base request from first URL\n\t\tconst request = new MultiPartRequest(urls[0], requestMethod, csrfToken);\n\n\t\t// Add all URLs as sub-requests\n\t\turls.forEach((url) => {\n\t\t\trequest.addRequest(new MultiPartRequest(url, requestMethod, csrfToken));\n\t\t});\n\n\t\treturn request;\n\t}\n\n\t/**\n\t * Builds a multipart request with the given payloads, CSRF token, and request method.\n\t *\n\t * @param payloads - An array of objects containing the URL and data for each part of the request.\n\t * @param csrfToken - The CSRF token to be included in the request headers.\n\t * @param requestMethod - The HTTP method to be used for the request.\n\t * @returns {MultiPartRequest} A `MultiPartRequest` object containing the constructed multipart request.\n\t */\n\tprivate buildMultipartRequestWithPayload(\n\t\tpayloads: { url: string; data: unknown }[],\n\t\tcsrfToken: string,\n\t\trequestMethod: methods\n\t): MultiPartRequest {\n\t\tconst request = new MultiPartRequest(payloads[0].url, requestMethod, csrfToken);\n\t\trequest.payload = payloads[0].data;\n\t\tpayloads.forEach(({ url, data }) => {\n\t\t\tconst multipartRequest = new MultiPartRequest(url, requestMethod, csrfToken);\n\t\t\tmultipartRequest.payload = data;\n\t\t\trequest.addRequest(multipartRequest);\n\t\t});\n\n\t\treturn request;\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"utils"}},{"offset":{"line":351,"column":0},"map":{"version":3,"names":["sap","ui","define","CardSkeleton","_version","id","type","title","subTitle","applicationVersion","version","shortTitle","info","description","tags","keywords","extension","header","content","data","request","url","method","parameters","$format","path","item","attributesOrientationType","attributes","value","maxItems","__exports","__esModule"],"sources":["CardSkeleton.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nexport const CardSkeleton = {\n\t_version: \"1.14.0\",\n\t\"sap.app\": {\n\t\tid: \"card.explorer.data.list.card\",\n\t\ttype: \"card\",\n\t\ttitle: \"Sample for Data usage in Cards\",\n\t\tsubTitle: \"Sample for Data usage in Cards\",\n\t\tapplicationVersion: {\n\t\t\tversion: \"1.0.0\"\n\t\t},\n\t\tshortTitle: \"A short title for this Card\",\n\t\tinfo: \"Additional information about this Card\",\n\t\tdescription: \"A long description for this Card\",\n\t\ttags: {\n\t\t\tkeywords: [\"Data\", \"Card\", \"Sample\"]\n\t\t}\n\t},\n\t\"sap.card\": {\n\t\textension: \"./sap/bc/ui5_ui5/sap/product_homes1/dataDump/CardExtension\",\n\t\ttype: \"List\",\n\t\theader: {\n\t\t\ttitle: \"Products\",\n\t\t\tsubTitle: \"In Stock Information\"\n\t\t},\n\t\tcontent: {\n\t\t\tdata: {\n\t\t\t\trequest: {\n\t\t\t\t\turl: \"\",\n\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\tparameters: {\n\t\t\t\t\t\t$format: \"json\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tpath: \"/d/results\"\n\t\t\t},\n\t\t\titem: {\n\t\t\t\ttitle: \"{ProductName}\",\n\t\t\t\tdescription: \"{UnitsInStock} units in stock\",\n\t\t\t\tattributesOrientationType: \"OneColumn\",\n\t\t\t\tattributes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"{Processor}\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\tmaxItems: 5\n\t\t}\n\t}\n};\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,6CAAA,2BAIO,MAAMC,EAAe,CAC3BC,SAAU,SACV,UAAW,CACVC,GAAI,+BACJC,KAAM,OACNC,MAAO,iCACPC,SAAU,iCACVC,mBAAoB,CACnBC,QAAS,SAEVC,WAAY,8BACZC,KAAM,yCACNC,YAAa,mCACbC,KAAM,CACLC,SAAU,CAAC,OAAQ,OAAQ,YAG7B,WAAY,CACXC,UAAW,6DACXV,KAAM,OACNW,OAAQ,CACPV,MAAO,WACPC,SAAU,wBAEXU,QAAS,CACRC,KAAM,CACLC,QAAS,CACRC,IAAK,GACLC,OAAQ,MACRC,WAAY,CACXC,QAAS,SAGXC,KAAM,cAEPC,KAAM,CACLnB,MAAO,gBACPM,YAAa,gCACbc,0BAA2B,YAC3BC,WAAY,CACX,CACCC,MAAO,iBAIVC,SAAU,KAGX,IAAAC,EAAA,CAAAC,WAAA,MAAAD,EAAA5B,eAAA,OAAA4B,CAAA","ignoreList":[],"sourceRoot":"utils"}},{"offset":{"line":356,"column":0},"map":{"version":3,"names":["sap","ui","define","___Constants","DEFAULT_BG_COLOR","LEGEND_COLORS","PAGE_SELECTION_LIMIT","ColorUtils","constructor","this","_oColorList","slice","getFreeColor","oColor","find","oColour","assigned","sColor","key","addColor","sKey","_fetchColor","removeColor","_getColorMap","__exports"],"sources":["ColorUtils.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport { Value } from \"sap/ui/core/theming/Parameters\";\nimport { DEFAULT_BG_COLOR, LEGEND_COLORS, PAGE_SELECTION_LIMIT } from \"./Constants\";\n\nclass ColorUtils {\n\tprivate _oColorList!: { key: string; value: Value; assigned: boolean }[];\n\n\tconstructor() {\n\t\tthis._oColorList = LEGEND_COLORS().slice(0, PAGE_SELECTION_LIMIT);\n\t}\n\n\t/**\n\t * Returns first unassigned color from the list\n\t *\n\t * @public\n\t * @returns {string} color key of unassigned color\n\t */\n\tpublic getFreeColor() {\n\t\tconst oColor = this._oColorList.find((oColour) => !oColour.assigned);\n\t\tlet sColor = DEFAULT_BG_COLOR().key;\n\n\t\tif (oColor) {\n\t\t\toColor.assigned = true;\n\t\t\tsColor = oColor.key;\n\t\t}\n\t\treturn sColor;\n\t}\n\n\t/**\n\t * Marks color as assigned in the list\n\t *\n\t * @public\n\t * @param {string} sKey color key\n\t * @returns {object} color list instance for chaining\n\t */\n\taddColor(sKey: string) {\n\t\tthis._fetchColor(sKey).assigned = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Marks color as unassigned in the list\n\t *\n\t * @public\n\t * @param {string} sKey color key\n\t * @returns {object} color list instance for chaining\n\t */\n\tremoveColor(sKey: string) {\n\t\tthis._fetchColor(sKey).assigned = false;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Fetch Color Object from the list\n\t *\n\t * @private\n\t * @param {string} sKey color key\n\t * @returns {object} color Object, if found\n\t */\n\t_fetchColor(sKey: string): { assigned: boolean } {\n\t\treturn (\n\t\t\tthis._oColorList.find(function (oColour) {\n\t\t\t\treturn oColour.key === sKey;\n\t\t\t}) || { assigned: false }\n\t\t);\n\t}\n\n\t/**\n\t * Getter for Color List\n\t *\n\t * @private\n\t * @returns {object} color list object\n\t */\n\t_getColorMap() {\n\t\treturn this._oColorList;\n\t}\n}\n\nexport default new ColorUtils();\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,2CAAA,yBAAAC,GAAA,mBAMSC,EAAgBD,EAAA,0BAAEE,EAAaF,EAAA,uBAAEG,EAAoBH,EAAA,wBAE9D,MAAMI,EAGLC,cACCC,KAAKC,YAAcL,IAAgBM,MAAM,EAAGL,EAC7C,CAQOM,eACN,MAAMC,EAASJ,KAAKC,YAAYI,KAAMC,IAAaA,EAAQC,UAC3D,IAAIC,EAASb,IAAmBc,IAEhC,GAAIL,EAAQ,CACXA,EAAOG,SAAW,KAClBC,EAASJ,EAAOK,GACjB,CACA,OAAOD,CACR,CASAE,SAASC,GACRX,KAAKY,YAAYD,GAAMJ,SAAW,KAClC,OAAOP,IACR,CASAa,YAAYF,GACXX,KAAKY,YAAYD,GAAMJ,SAAW,MAClC,OAAOP,IACR,CASAY,YAAYD,GACX,OACCX,KAAKC,YAAYI,KAAK,SAAUC,GAC/B,OAAOA,EAAQG,MAAQE,CACxB,IAAM,CAAEJ,SAAU,MAEpB,CAQAO,eACC,OAAOd,KAAKC,WACb,EACA,IAAAc,EAEc,IAAIjB,EAAY,OAAAiB,CAAA","ignoreList":[],"sourceRoot":"utils"}},{"offset":{"line":361,"column":0},"map":{"version":3,"names":["sap","ui","define","Parameters","fnFetchLegendColor","sLegendName","key","value","get","name","assigned","BASE_URL","INSIGHTS_READ_SRVC_URL","MYHOME_PAGE_ID","MYAPPS_SECTION_ID","FALLBACK_ICON","DEFAULT_APP_ICON","MYINSIGHT_SECTION_ID","MYHOME_SPACE_ID","DEFAULT_BG_COLOR","PAGE_SELECTION_LIMIT","LEGEND_COLORS","map","END_USER_COLORS","AppTypes","FAVORITE","RECENT","FREQUENT","PLACEHOLDER_ITEMS_COUNT","RECOMMENDED_CARD_LIMIT","RECOMMENDATION_SRVC_URL","FEATURE_TOGGLES","TASK_ACTIONS","AI_GENERATED_CARD","AI_SMART_APPFINDER","FEATURE_TOGGLE_SRVC_URL","REPO_BASE_URL","DEFAULT_NEWS_URL","SETTINGS_PANELS_KEYS","KEYUSER_SETTINGS_PANELS_KEYS","CONTENT_ADDITION_PANEL_TYPES","TABLE_TYPES","GRID","TREE","ANALYTICAL","RESPONSIVE","STANDARD_LIST","OBJECT_LIST","COLUMN_LENGTH","AI_APP_FINDER_BASE_URL","AI_APP_FINDER_API","__exports","__esModule"],"sources":["Constants.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Parameters from \"sap/ui/core/theming/Parameters\";\n\nexport const fnFetchLegendColor = (sLegendName: string) => {\n\treturn {\n\t\tkey: sLegendName,\n\t\tvalue: Parameters.get({\n\t\t\tname: sLegendName\n\t\t}),\n\t\tassigned: false\n\t};\n};\n\nconst BASE_URL = \"/sap/opu/odata4/ui2/insights_srv/srvd/ui2/\";\nconst INSIGHTS_READ_SRVC_URL = BASE_URL + \"insights_read_srv/0001/\";\n\nexport const MYHOME_PAGE_ID: string = \"SAP_BASIS_PG_UI_MYHOME\";\nexport const MYAPPS_SECTION_ID: string = \"3WO90XZ1DX1AS32M7ZM9NBXEF\";\nexport const FALLBACK_ICON: string = \"sap-icon://document\";\nexport const DEFAULT_APP_ICON: string = \"sap-icon://product\";\nexport const MYINSIGHT_SECTION_ID: string = \"AZHJGRIT78TG7Y65RF6EPFJ9U\";\nexport const MYHOME_SPACE_ID: string = \"SAP_BASIS_SP_UI_MYHOME\";\nexport const DEFAULT_BG_COLOR = () => fnFetchLegendColor(\"sapLegendColor9\");\n\nexport const PAGE_SELECTION_LIMIT = 8;\nexport const LEGEND_COLORS = () =>\n\t[\n\t\t\"sapLegendColor6\",\n\t\t\"sapLegendColor3\",\n\t\t\"sapLegendColor1\",\n\t\t\"sapLegendColor10\",\n\t\t\"sapLegendColor12\",\n\t\t\"sapLegendColor7\",\n\t\t\"sapLegendColor5\",\n\t\t\"sapLegendColor8\",\n\t\t\"sapLegendColor18\",\n\t\t\"sapLegendColor9\"\n\t].map(fnFetchLegendColor);\nexport const END_USER_COLORS = () =>\n\t[\n\t\t\"sapLegendColor19\",\n\t\t\"sapLegendColor13\",\n\t\t\"sapLegendColor11\",\n\t\t\"sapLegendColor20\",\n\t\t\"sapLegendColor2\",\n\t\t\"sapLegendColor17\",\n\t\t\"sapLegendColor15\",\n\t\t\"sapLegendColor14\",\n\t\t\"sapLegendColor16\",\n\t\t\"sapLegendColor4\"\n\t].map(fnFetchLegendColor);\nexport const AppTypes = {\n\tFAVORITE: \"FAVORITE\",\n\tRECENT: \"RECENT\",\n\tFREQUENT: \"FREQUENT\"\n};\nexport const PLACEHOLDER_ITEMS_COUNT = 5;\nexport const RECOMMENDED_CARD_LIMIT = 4;\nexport const RECOMMENDATION_SRVC_URL = INSIGHTS_READ_SRVC_URL + \"RecommendedApps\";\nexport const FEATURE_TOGGLES = {\n\tTASK_ACTIONS: \"/UI2/S4HOME_FEATURE_TOGGLE\",\n\tAI_GENERATED_CARD: \"AIU_SMART_PERSONALIZATION\",\n\tAI_SMART_APPFINDER: \"AIU_SMART_APPFINDER\"\n};\nexport const FEATURE_TOGGLE_SRVC_URL = INSIGHTS_READ_SRVC_URL + \"FeatureToggle\";\nexport const REPO_BASE_URL = BASE_URL + \"insights_cards_repo_srv/0001/\";\nexport const DEFAULT_NEWS_URL =\n\t\"/sap/opu/odata4/sap/sui_flp_aps_ui_usernews/srvd_a2x/sap/sui_flp_aps_ui_usernews/0001/NewsGroup?$expand=_group_to_image,_group_to_article&$format=json\";\nexport enum SETTINGS_PANELS_KEYS {\n\tLAYOUT = \"LAYOUT\",\n\tNEWS = \"NEWS\",\n\tPAGES = \"PAGES\",\n\tINSIGHTS_TILES = \"INSIGHTS_TILES\",\n\tINSIGHTS_CARDS = \"INSIGHTS_CARDS\",\n\tADVANCED = \"ADVANCED\"\n}\nexport enum KEYUSER_SETTINGS_PANELS_KEYS {\n\tLAYOUT = \"KEYUSER_LAYOUT\",\n\tNEWS_PAGES = \"KEYUSER_NEWS_PAGES\",\n\tNEWS = \"KEYUSER_NEWS\",\n\tPAGES = \"KEYUSER_PAGES\"\n}\nexport enum CONTENT_ADDITION_PANEL_TYPES {\n\tAI_APP_FINDER = \"AI_APP_FINDER\",\n\tAI_INSIGHTS_CARDS = \"AI_INSIGHTS_CARDS\"\n}\nexport const TABLE_TYPES = {\n\tGRID: \"GridTable\",\n\tTREE: \"TreeTable\",\n\tANALYTICAL: \"AnalyticalTable\",\n\tRESPONSIVE: \"ResponsiveTable\",\n\tSTANDARD_LIST: \"StandardList\",\n\tOBJECT_LIST: \"ObjectList\"\n};\nexport const COLUMN_LENGTH = 3;\n\nexport const AI_APP_FINDER_BASE_URL = \"/sap/opu/odata4/sap/aiu_ui_prompt/srvd/sap/aiu_ui_prompt/0001/\";\nexport const AI_APP_FINDER_API = AI_APP_FINDER_BASE_URL + \"SmartAppFinder/SAP__self.ExecuteAppFinderFromUserInput\";\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,0CAAA,4CAAAC,GAAA,aAMO,MAAMC,EAAsBC,IAC3B,CACNC,IAAKD,EACLE,MAAOJ,EAAWK,IAAI,CACrBC,KAAMJ,IAEPK,SAAU,QAIZ,MAAMC,EAAW,6CACjB,MAAMC,EAAyBD,EAAW,0BAEnC,MAAME,EAAyB,yBAC/B,MAAMC,EAA4B,4BAClC,MAAMC,EAAwB,sBAC9B,MAAMC,EAA2B,qBACjC,MAAMC,EAA+B,4BACrC,MAAMC,EAA0B,yBAChC,MAAMC,EAAmBA,IAAMf,EAAmB,mBAElD,MAAMgB,EAAuB,EAC7B,MAAMC,EAAgBA,IAC5B,CACC,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACCC,IAAIlB,GACA,MAAMmB,EAAkBA,IAC9B,CACC,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACCD,IAAIlB,GACA,MAAMoB,EAAW,CACvBC,SAAU,WACVC,OAAQ,SACRC,SAAU,YAEJ,MAAMC,EAA0B,EAChC,MAAMC,EAAyB,EAC/B,MAAMC,EAA0BlB,EAAyB,kBACzD,MAAMmB,EAAkB,CAC9BC,aAAc,6BACdC,kBAAmB,4BACnBC,mBAAoB,uBAEd,MAAMC,EAA0BvB,EAAyB,gBACzD,MAAMwB,EAAgBzB,EAAW,gCACjC,MAAM0B,EACZ,yJAAyJ,IAC9IC,EAAoB,SAApBA,KAAoB,mBAApBA,EAAoB,eAApBA,EAAoB,iBAApBA,EAAoB,mCAApBA,EAAoB,mCAApBA,EAAoB,8BAApBA,CAAoB,EAApBA,GAAoB,QAQpBC,EAA4B,SAA5BA,KAA4B,2BAA5BA,EAA4B,mCAA5BA,EAA4B,uBAA5BA,EAA4B,gCAA5BA,CAA4B,EAA5BA,GAA4B,QAM5BC,EAA4B,SAA5BA,KAA4B,iCAA5BA,EAA4B,gDAA5BA,CAA4B,EAA5BA,GAA4B,IAIjC,MAAMC,EAAc,CAC1BC,KAAM,YACNC,KAAM,YACNC,WAAY,kBACZC,WAAY,kBACZC,cAAe,eACfC,YAAa,cAEP,MAAMC,EAAgB,EAEtB,MAAMC,EAAyB,iEAC/B,MAAMC,EAAoBD,EAAyB,yDAAyD,IAAAE,EAAA,CAAAC,WAAA,MAAAD,EAAA/C,qBAAA+C,EAAAtC,iBAAAsC,EAAArC,oBAAAqC,EAAApC,gBAAAoC,EAAAnC,mBAAAmC,EAAAlC,uBAAAkC,EAAAjC,kBAAAiC,EAAAhC,mBAAAgC,EAAA/B,uBAAA+B,EAAA9B,gBAAA8B,EAAA5B,kBAAA4B,EAAA3B,WAAA2B,EAAAvB,0BAAAuB,EAAAtB,yBAAAsB,EAAArB,0BAAAqB,EAAApB,kBAAAoB,EAAAhB,0BAAAgB,EAAAf,gBAAAe,EAAAd,mBAAAc,EAAAb,uBAAAa,EAAAZ,+BAAAY,EAAAX,+BAAAW,EAAAV,cAAAU,EAAAH,gBAAAG,EAAAF,yBAAAE,EAAAD,oBAAA,OAAAC,CAAA","ignoreList":[],"sourceRoot":"utils"}},{"offset":{"line":366,"column":0},"map":{"version":3,"names":["sap","ui","define","sap_m_library","UI5Element","DateFormat","___TaskUtils","ValueColor","TaskPriority","oRelativeDateTimeFormatter","getDateTimeInstance","style","relative","relativeStyle","oRelativeDateFormatter","getDateInstance","toPriority","oTask","criticality","Error","Critical","Neutral","toTaskPriorityText","sPriority","VERY_HIGH","HIGH","MEDIUM","LOW","toRelativeDateTime","oDate","format","Date","toRelativeDate","iTimeStamp","sRelativeDate","charAt","toUpperCase","slice","createBookMarkData","oBookMark","finalBookMarkData","title","url","targetURL","icon","info","subtitle","serviceUrl","indicatorDataSource","path","numberUnit","vizType","vizConfig","dataSource","getImportance","oDataField","sImportance","iImportance","EnumMember","sortCollectionByImportance","aCollection","sort","oFirstData","oSecondData","iFirstDataImportance","iSecondDataImportance","getLeanURL","constructFullUrl","query","fullURL","URL","window","location","href","search","hash","toString","indexOf","recycleId","id","existingControl","getElementById","destroy","__exports","__esModule"],"sources":["DataFormatUtils.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport { ValueColor } from \"sap/m/library\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport DateFormat from \"sap/ui/core/format/DateFormat\";\nimport { BookmarkParameters } from \"sap/ushell/services/BookmarkV2\";\nimport { IVisualization } from \"../interface/AppsInterface\";\nimport { TaskPriority } from \"./TaskUtils\";\n\nconst oRelativeDateTimeFormatter = DateFormat.getDateTimeInstance({\n\tstyle: \"medium\",\n\trelative: true,\n\trelativeStyle: \"short\"\n});\n\nconst oRelativeDateFormatter = DateFormat.getDateInstance({\n\trelative: true\n});\n\nexport function toPriority(oTask: { criticality: ValueColor }) {\n\tswitch (oTask.criticality) {\n\t\tcase ValueColor.Error:\n\t\t\treturn 1;\n\t\tcase ValueColor.Critical:\n\t\t\treturn 2;\n\t\tcase ValueColor.Neutral:\n\t\t\treturn 3;\n\t\tdefault:\n\t\t\treturn 99;\n\t}\n}\n\nexport function toTaskPriorityText(sPriority: TaskPriority) {\n\tswitch (sPriority) {\n\t\tcase TaskPriority.VERY_HIGH:\n\t\t\treturn \"veryHighPriority\";\n\t\tcase TaskPriority.HIGH:\n\t\t\treturn \"highPriority\";\n\t\tcase TaskPriority.MEDIUM:\n\t\t\treturn \"mediumPriority\";\n\t\tcase TaskPriority.LOW:\n\t\t\treturn \"lowPriority\";\n\t\tdefault:\n\t\t\treturn \"nonePriority\";\n\t}\n}\n\n/**\n * Formats a given date as a relative date and time string.\n *\n * @param {Date} oDate - The input date to format as a relative date and time string.\n * @returns {string} A string representing the input date in a relative date and time format.\n */\nexport function toRelativeDateTime(oDate: Date) {\n\treturn oRelativeDateTimeFormatter.format(new Date(oDate));\n}\n\n/**\n * Converts a given date to a relative date string.\n *\n * @param {Date} iTimeStamp - The input timestamp to convert to a relative date string.\n * @returns {string} A relative date string with the first letter capitalized.\n */\nexport function toRelativeDate(iTimeStamp: Date) {\n\tconst sRelativeDate = oRelativeDateFormatter.format(new Date(iTimeStamp));\n\treturn sRelativeDate.charAt(0).toUpperCase() + sRelativeDate.slice(1);\n}\n\nexport function createBookMarkData(oBookMark: IVisualization) {\n\tconst finalBookMarkData = {\n\t\ttitle: oBookMark.title || \"\",\n\t\turl: oBookMark.targetURL,\n\t\ticon: oBookMark.icon,\n\t\tinfo: oBookMark.info,\n\t\tsubtitle: oBookMark.subtitle,\n\t\tserviceUrl: oBookMark.indicatorDataSource && oBookMark.indicatorDataSource.path,\n\t\tnumberUnit: oBookMark.numberUnit,\n\t\tvizType: oBookMark.vizType,\n\t\tvizConfig: oBookMark.vizConfig,\n\t\tdataSource: oBookMark.dataSource\n\t} as unknown as BookmarkParameters;\n\treturn finalBookMarkData;\n}\n\nexport function getImportance(oDataField: unknown) {\n\tlet sImportance,\n\t\tiImportance = -1;\n\tif ((oDataField as { importance: { EnumMember: string } })[\"importance\"]) {\n\t\tsImportance = (oDataField as { importance: { EnumMember: string } })[\"importance\"].EnumMember;\n\t\tswitch (sImportance) {\n\t\t\tcase \"com.sap.vocabularies.UI.v1.ImportanceType/High\":\n\t\t\t\tiImportance = 1;\n\t\t\t\tbreak;\n\t\t\tcase \"com.sap.vocabularies.UI.v1.ImportanceType/Medium\":\n\t\t\t\tiImportance = 2;\n\t\t\t\tbreak;\n\t\t\tcase \"com.sap.vocabularies.UI.v1.ImportanceType/Low\":\n\t\t\t\tiImportance = 3;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t} else {\n\t\tiImportance = 2; // default importance to be considered as Medium\n\t}\n\treturn iImportance;\n}\n\nexport function sortCollectionByImportance(aCollection: Array<unknown>) {\n\treturn aCollection.sort((oFirstData, oSecondData) => {\n\t\tconst iFirstDataImportance = getImportance(oFirstData);\n\t\tconst iSecondDataImportance = getImportance(oSecondData);\n\t\treturn iFirstDataImportance < iSecondDataImportance ? -1 : 1;\n\t});\n}\n\nexport function getLeanURL(targetURL: string) {\n\tconst url = targetURL;\n\tconst constructFullUrl = function (query: string, url: string) {\n\t\tconst fullURL = new URL(window.location.href);\n\t\tfullURL.search = query;\n\t\tfullURL.hash = url;\n\t\treturn fullURL.toString();\n\t};\n\n\t// append appState only in the case when targetURL starts with \"#\"\n\tif ((url || \"\").charAt(0) !== \"#\") {\n\t\treturn url;\n\t}\n\n\tlet query = window.location.search;\n\tif (!query) {\n\t\tquery = \"?sap-ushell-config=lean\";\n\t} else if (query.indexOf(\"sap-ushell-config=\") >= -1) {\n\t\t// avoid duplicates: lean FLP opens a link again\n\t\tquery += \"&sap-ushell-config=lean\";\n\t}\n\n\treturn constructFullUrl(query, url);\n}\n\n/**\n * Destroys the element if it already exist with given ID\n *\n * @private\n * @param {string} id - ID of the element.\n */\nexport function recycleId(id: string) {\n\tconst existingControl = UI5Element.getElementById(id);\n\tif (existingControl) {\n\t\texistingControl.destroy();\n\t}\n\treturn id;\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,gDAAA,+FAAAC,EAAAC,EAAAC,EAAAC,GAAA,mBAKSC,EAAUJ,EAAA,oBAKVK,EAAYF,EAAA,gBAErB,MAAMG,EAA6BJ,EAAWK,oBAAoB,CACjEC,MAAO,SACPC,SAAU,KACVC,cAAe,UAGhB,MAAMC,EAAyBT,EAAWU,gBAAgB,CACzDH,SAAU,OAGJ,SAASI,EAAWC,GAC1B,OAAQA,EAAMC,aACb,KAAKX,EAAWY,MACf,OAAO,EACR,KAAKZ,EAAWa,SACf,OAAO,EACR,KAAKb,EAAWc,QACf,OAAO,EACR,QACC,OAAO,GAEV,CAEO,SAASC,EAAmBC,GAClC,OAAQA,GACP,KAAKf,EAAagB,UACjB,MAAO,mBACR,KAAKhB,EAAaiB,KACjB,MAAO,eACR,KAAKjB,EAAakB,OACjB,MAAO,iBACR,KAAKlB,EAAamB,IACjB,MAAO,cACR,QACC,MAAO,eAEV,CAQO,SAASC,EAAmBC,GAClC,OAAOpB,EAA2BqB,OAAO,IAAIC,KAAKF,GACnD,CAQO,SAASG,EAAeC,GAC9B,MAAMC,EAAgBpB,EAAuBgB,OAAO,IAAIC,KAAKE,IAC7D,OAAOC,EAAcC,OAAO,GAAGC,cAAgBF,EAAcG,MAAM,EACpE,CAEO,SAASC,EAAmBC,GAClC,MAAMC,EAAoB,CACzBC,MAAOF,EAAUE,OAAS,GAC1BC,IAAKH,EAAUI,UACfC,KAAML,EAAUK,KAChBC,KAAMN,EAAUM,KAChBC,SAAUP,EAAUO,SACpBC,WAAYR,EAAUS,qBAAuBT,EAAUS,oBAAoBC,KAC3EC,WAAYX,EAAUW,WACtBC,QAASZ,EAAUY,QACnBC,UAAWb,EAAUa,UACrBC,WAAYd,EAAUc,YAEvB,OAAOb,CACR,CAEO,SAASc,EAAcC,GAC7B,IAAIC,EACHC,GAAe,EAChB,GAAKF,EAAsD,cAAe,CACzEC,EAAeD,EAAsD,cAAcG,WACnF,OAAQF,GACP,IAAK,iDACJC,EAAc,EACd,MACD,IAAK,mDACJA,EAAc,EACd,MACD,IAAK,gDACJA,EAAc,EACd,MACD,QACC,MAEH,KAAO,CACNA,EAAc,CACf,CACA,OAAOA,CACR,CAEO,SAASE,EAA2BC,GAC1C,OAAOA,EAAYC,KAAK,CAACC,EAAYC,KACpC,MAAMC,EAAuBV,EAAcQ,GAC3C,MAAMG,EAAwBX,EAAcS,GAC5C,OAAOC,EAAuBC,GAAyB,EAAI,CAAC,EAE9D,CAEO,SAASC,EAAWvB,GAC1B,MAAMD,EAAMC,EACZ,MAAMwB,EAAmB,SAAUC,EAAe1B,GACjD,MAAM2B,EAAU,IAAIC,IAAIC,OAAOC,SAASC,MACxCJ,EAAQK,OAASN,EACjBC,EAAQM,KAAOjC,EACf,OAAO2B,EAAQO,UAChB,EAGA,IAAKlC,GAAO,IAAIP,OAAO,KAAO,IAAK,CAClC,OAAOO,CACR,CAEA,IAAI0B,EAAQG,OAAOC,SAASE,OAC5B,IAAKN,EAAO,CACXA,EAAQ,yBACT,MAAO,GAAIA,EAAMS,QAAQ,wBAA0B,EAAG,CAErDT,GAAS,yBACV,CAEA,OAAOD,EAAiBC,EAAO1B,EAChC,CAQO,SAASoC,EAAUC,GACzB,MAAMC,EAAkB5E,EAAW6E,eAAeF,GAClD,GAAIC,EAAiB,CACpBA,EAAgBE,SACjB,CACA,OAAOH,CACR,CAAC,IAAAI,EAAA,CAAAC,WAAA,MAAAD,EAAAnE,aAAAmE,EAAA7D,qBAAA6D,EAAAvD,qBAAAuD,EAAAnD,iBAAAmD,EAAA7C,qBAAA6C,EAAA7B,gBAAA6B,EAAAxB,6BAAAwB,EAAAjB,aAAAiB,EAAAL,YAAA,OAAAK,CAAA","ignoreList":[],"sourceRoot":"utils"}},{"offset":{"line":371,"column":0},"map":{"version":3,"names":["sap","ui","define","Log","MessageBox","sap_m_library","BaseObject","Element","Fragment","sap_ui_core_library","JSONModel","ODataModel","ResourceModel","___DataFormatUtils","___TaskUtils","_catch","body","recover","result","e","then","ButtonType","ValueState","toTaskPriorityText","TaskPriority","ReasonRequired","decideButtonNature","decisionOption","Nature","toUpperCase","Accept","Reject","Neutral","Default","getActionButton","i18nBundle","task","baseUrl","text","DecisionText","type","pressHandler","DecisionDialog","decisionDialogMethod","bind","getIconFrameBadge","priority","iconBadge","VERY_HIGH","HIGH","getIconFrameBadgeValueState","Error","None","extend","constructor","_constructor","refreshView","BaseObject.prototype.constructor.call","this","handleReasonOptionChange","_handleReasonOptionChange","event","comboBox","getSource","comboBoxValue","getValue","selectedItem","getSelectedItem","confirmationDialogPromise","confirmationDialog","comboBoxRequired","confirmationDialogModel","getData","dialogSettings","reasonOptionsSettings","required","setTooltip","setValueState","getBeginButton","setEnabled","_toggleSubmitButtonState","catch","error","message","String","dialogData","noteRequired","noteMandatory","noteFilled","getElementById","trim","length","comboBoxFilled","noteFlag","comboBoxFlag","setProperty","readReasonOptions","_readReasonOptions","origin","instance","decisionKey","onSuccess","onError","sPath","oUrlParams","SAP__Origin","InstanceID","DecisionKey","fnSuccess","oData","results","fnError","oError","dataServiceModel","read","urlParameters","success","groupId","loadReasonOptions","_loadReasonOptions","_this","metaModel","getMetaModel","Promise","resolve","loaded","getODataFunctionImport","reject","reasonOptions","show","Required","Optional","openDecisionDialog","_openDecisionDialog","submitButtonEnabled","load","name","controller","confirmationDialogFragment","i18nModel","bundle","priorityText","addStyleClass","Priority","setModel","open","confirmActionHandler","_confirmActionHandler","getModel","getProperty","reasonOptionSelectedItem","reasonCode","getKey","note","showNote","handleCancel","_handleCancel","_bClosedViaButton","close","cancelActionHandler","refresh","handleAfterClose","_handleAfterClose","destroy","createODataRequest","_createODataRequest","path","urlParams","settings","data","response","info","getText","details","parameters","responseText","fireRequestFailed","create","sendAction","_sendAction","importName","decision","reasonOptionCode","Comments","ReasonCode","setBusy","JSON","parse","value","showDecisionDialog","_showDecisionDialog","_this2","TaskTitle","title","decisionDialogSettings","CommentMandatory","question","badgeIcon","badgeValueState","confirmButtonLabel","showFeedbackMessage","textAreaLabel","reasonOptionKey","_temp","metadataLoaded","reasonOptionsLoadedPromise","noneText","unshift","Name","Code","dialogUtils","getTaskActions","multiSelectDecisionResults","actions","displayedTypes","Set","multiSelectDecisionOptions","TaskDefinitionID","has","push","add","action"],"sources":["DecisionDialog.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport ComboBox from \"sap/m/ComboBox\";\nimport Dialog from \"sap/m/Dialog\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport Text from \"sap/m/Text\";\nimport TextArea from \"sap/m/TextArea\";\nimport { ButtonType } from \"sap/m/library\";\nimport Event from \"sap/ui/base/Event\";\nimport BaseObject from \"sap/ui/base/Object\";\nimport Control from \"sap/ui/core/Control\";\nimport Element from \"sap/ui/core/Element\";\nimport Fragment from \"sap/ui/core/Fragment\";\nimport { ValueState } from \"sap/ui/core/library\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport { Task } from \"../TaskPanel\";\nimport { Response } from \"../ToDoPanel\";\nimport { toTaskPriorityText } from \"./DataFormatUtils\";\nimport { TaskPriority } from \"./TaskUtils\";\n\nenum ReasonRequired {\n\tRequired = \"REQUIRED\",\n\tOptional = \"OPTIONAL\"\n}\n\nexport interface DecisionOption {\n\tSAP__Origin: string;\n\tInstanceID: string;\n\tNature: ButtonType;\n\tDecisionKey: string;\n\tCommentMandatory: boolean;\n\tDecisionText: string;\n\tReasonRequired: ReasonRequired;\n}\n\ninterface ReasonOption {\n\t[key: string]: string;\n}\n\ninterface ReasonOptionSettings {\n\tshow: boolean;\n\trequired: boolean;\n\treasonOptions?: ReasonOption[];\n}\n\ninterface DecisionDialogSettings {\n\tbadgeIcon: string;\n\tbadgeValueState: string;\n\tshowNote: boolean;\n\tnoteMandatory: boolean;\n\tquestion: string;\n\ttitle: string;\n\tconfirmButtonLabel: string;\n\ttextAreaLabel: string;\n\tpriorityText: string;\n\tshowFeedbackMessage: boolean;\n\treasonOptionsSettings: ReasonOptionSettings;\n\tconfirmActionHandler: (note: string, reasonCode: string) => void;\n\tcancelActionHandler: () => void;\n}\n\ninterface IDecisionDialog extends Dialog {\n\t_bClosedViaButton: boolean;\n}\n\ninterface DialogSettings {\n\tdialogSettings: DecisionDialogSettings;\n\tsubmitButtonEnabled: boolean;\n}\n\ninterface ODataError {\n\tresponse: {\n\t\tbody: string;\n\t};\n\tresponseText: string;\n\terror: {\n\t\tmessage: {\n\t\t\tvalue: string;\n\t\t};\n\t};\n}\n\ninterface MultiSelectDecisionResult {\n\t[key: string]: DecisionOption[];\n}\n\nexport interface ActionButton {\n\ttype: ButtonType;\n\ttext: string;\n\tpressHandler: (refresh: Refresh) => Promise<void> | void;\n}\n\ninterface Refresh {\n\t(forceRefresh: boolean): void;\n}\n\nconst decideButtonNature = (decisionOption: DecisionOption): ButtonType => {\n\tswitch (decisionOption.Nature?.toUpperCase()) {\n\t\tcase \"POSITIVE\":\n\t\t\treturn ButtonType.Accept;\n\t\tcase \"NEGATIVE\":\n\t\t\treturn ButtonType.Reject;\n\t\tcase \"NEUTRAL\":\n\t\t\treturn ButtonType.Neutral;\n\t\tdefault:\n\t\t\treturn ButtonType.Default;\n\t}\n};\n\nconst getActionButton = (decisionOption: DecisionOption, i18nBundle: ResourceBundle, task: Task, baseUrl: string): ActionButton => {\n\treturn {\n\t\ttext: decisionOption.DecisionText,\n\t\ttype: decideButtonNature(decisionOption) || ButtonType.Default,\n\t\tpressHandler: DecisionDialog.decisionDialogMethod.bind(null, decisionOption, i18nBundle, task, baseUrl)\n\t};\n};\n\n/**\n * Gets the icon frame badge based on the task priority.\n *\n * This method returns a specific badge string for tasks with high or very high priority.\n * For tasks with lower priorities, it returns an empty string.\n *\n * @param {TaskPriority} priority - The priority level of the task.\n * @returns {string} The badge string for high priority tasks, or an empty string for others.\n */\nexport function getIconFrameBadge(priority: TaskPriority): string {\n\tlet iconBadge = \"\";\n\tif (priority === TaskPriority.VERY_HIGH || priority === TaskPriority.HIGH) {\n\t\ticonBadge = \"sap-icon://high-priority\";\n\t}\n\n\treturn iconBadge;\n}\n\n/**\n * Converts a priority string to a Priority enum value.\n * If the priority string is not recognized, it returns the default value \"None\".\n *\n * @param {TaskPriority} priority - The priority string to convert.\n * @returns {ValueState} The corresponding Priority enum value.\n */\nexport function getIconFrameBadgeValueState(priority: TaskPriority): ValueState {\n\treturn priority === TaskPriority.VERY_HIGH || priority === TaskPriority.HIGH ? ValueState.Error : ValueState.None;\n}\n\n/**\n *\n * Helper class for Decision Dialog handling.\n *\n * @extends BaseObject\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.utils.DecisionDialog\n */\nexport default class DecisionDialog extends BaseObject {\n\tprivate decisionOption: DecisionOption;\n\tprivate i18nBundle: ResourceBundle;\n\tprivate refreshView: Refresh;\n\tprivate task: Task;\n\tprivate confirmationDialogPromise!: Promise<IDecisionDialog>;\n\tprivate confirmationDialogModel!: JSONModel;\n\tprivate dataServiceModel!: ODataModel;\n\tprivate baseUrl: string;\n\n\tconstructor(decisionOption: DecisionOption, i18nBundle: ResourceBundle, task: Task, baseUrl: string, refreshView: Refresh) {\n\t\tsuper();\n\t\tthis.decisionOption = decisionOption;\n\t\tthis.i18nBundle = i18nBundle;\n\t\tthis.baseUrl = baseUrl;\n\t\tthis.refreshView = refreshView;\n\t\tthis.task = task;\n\t}\n\n\t/**\n\t * Handles the change event of the reason option ComboBox.\n\t *\n\t * @private\n\t * @param {Event} event - The event object.\n\t * @returns {void}\n\t */\n\tpublic handleReasonOptionChange(event: Event): void {\n\t\tconst comboBox = event.getSource<ComboBox>();\n\t\tconst comboBoxValue = comboBox.getValue();\n\t\tconst selectedItem = comboBox.getSelectedItem();\n\n\t\tthis.confirmationDialogPromise\n\t\t\t.then((confirmationDialog) => {\n\t\t\t\tconst comboBoxRequired = (this.confirmationDialogModel.getData() as DialogSettings).dialogSettings.reasonOptionsSettings\n\t\t\t\t\t.required;\n\t\t\t\t// Set the tooltip useful when the currently selected item's text is truncated\n\t\t\t\tcomboBox.setTooltip(comboBoxValue);\n\t\t\t\tcomboBox.setValueState(selectedItem === null ? ValueState.Error : ValueState.None);\n\n\t\t\t\t// Special case where if reason options is optional and all\n\t\t\t\t// the text is deleted value state should be none (corner case)\n\t\t\t\tif (!comboBoxRequired && comboBoxValue === \"\") {\n\t\t\t\t\tcomboBox.setValueState(ValueState.None);\n\t\t\t\t}\n\n\t\t\t\t// Special case where if value in combo box gets partially deleted by the user\n\t\t\t\t// there is no selection yet button is not disabled\n\t\t\t\tif (!comboBoxRequired && comboBoxValue !== \"\" && selectedItem === null) {\n\t\t\t\t\tconfirmationDialog.getBeginButton().setEnabled(false);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Update the submit button state (disabled / enabled)\n\t\t\t\tthis._toggleSubmitButtonState();\n\t\t\t})\n\t\t\t.catch((error: unknown) => {\n\t\t\t\tLog.error(error instanceof Error ? error.message : String(error));\n\t\t\t});\n\t}\n\n\t/**\n\t * Toggles the state of the submit button based on the dialog settings.\n\t *\n\t * @private\n\t * @returns {void}\n\t */\n\tpublic _toggleSubmitButtonState(): void {\n\t\tconst dialogData = this.confirmationDialogModel.getData() as DialogSettings;\n\t\tconst noteRequired = dialogData.dialogSettings.noteMandatory;\n\n\t\tconst noteFilled = (Element.getElementById(\"confirmDialogTextarea\") as TextArea).getValue().trim().length > 0;\n\t\tconst comboBoxRequired = dialogData.dialogSettings.reasonOptionsSettings.required;\n\n\t\tconst comboBoxFilled = (Element.getElementById(\"reasonOptionsSelect\") as ComboBox).getSelectedItem() !== null;\n\t\tconst noteFlag = (noteRequired && noteFilled) || !noteRequired;\n\t\tconst comboBoxFlag = (comboBoxRequired && comboBoxFilled) || !comboBoxRequired;\n\n\t\tthis.confirmationDialogModel.setProperty(\"/submitButtonEnabled\", noteFlag && comboBoxFlag);\n\t}\n\n\t/**\n\t * Reads reason options from the backend.\n\t *\n\t * @private\n\t * @param {string} origin - The SAP origin.\n\t * @param {string} instance - The instance ID.\n\t * @param {string} decisionKey - The decision key.\n\t * @param {Function} onSuccess - The success callback function.\n\t * @param {Function} onError - The error callback function.\n\t * @returns {void}\n\t */\n\tprivate readReasonOptions(\n\t\torigin: string,\n\t\tinstance: string,\n\t\tdecisionKey: string,\n\t\tonSuccess: (arg: ReasonOption[]) => void,\n\t\tonError: (arg: unknown) => void\n\t): void {\n\t\tconst sPath = \"/ReasonOptions\";\n\t\tconst oUrlParams = {\n\t\t\tSAP__Origin: `'${origin}'`,\n\t\t\tInstanceID: `'${instance}'`,\n\t\t\tDecisionKey: `'${decisionKey}'`\n\t\t};\n\t\tconst fnSuccess = (oData: Response) => {\n\t\t\tif (oData && oData.results) {\n\t\t\t\tif (onSuccess) {\n\t\t\t\t\tonSuccess(oData.results as ReasonOption[]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tconst fnError = (oError: unknown) => {\n\t\t\tif (onError) {\n\t\t\t\tonError(oError);\n\t\t\t}\n\t\t};\n\n\t\tthis.dataServiceModel.read(sPath, {\n\t\t\turlParameters: oUrlParams,\n\t\t\tsuccess: fnSuccess,\n\t\t\terror: fnError,\n\t\t\tgroupId: \"reasonOptions\"\n\t\t});\n\t}\n\n\t/**\n\t * Load the reason options which are part of this decision option.\n\t *\n\t * @private\n\t * @returns {Promise<ReasonOptionSettings | null>} - containing resolved array of reason options\n\t */\n\tprivate async loadReasonOptions(): Promise<ReasonOptionSettings | null> {\n\t\tconst metaModel = this.dataServiceModel.getMetaModel();\n\t\tawait metaModel.loaded();\n\n\t\tif (metaModel.getODataFunctionImport(\"ReasonOptions\")) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.readReasonOptions(\n\t\t\t\t\tthis.decisionOption.SAP__Origin,\n\t\t\t\t\tthis.decisionOption.InstanceID,\n\t\t\t\t\tthis.decisionOption.DecisionKey,\n\t\t\t\t\t(reasonOptions: ReasonOption[]) => {\n\t\t\t\t\t\tconst reasonOptionsSettings = {\n\t\t\t\t\t\t\tshow:\n\t\t\t\t\t\t\t\t(this.decisionOption.ReasonRequired === ReasonRequired.Required ||\n\t\t\t\t\t\t\t\t\tthis.decisionOption.ReasonRequired === ReasonRequired.Optional) &&\n\t\t\t\t\t\t\t\treasonOptions.length > 0,\n\t\t\t\t\t\t\trequired: this.decisionOption.ReasonRequired === ReasonRequired.Required,\n\t\t\t\t\t\t\treasonOptions: reasonOptions\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresolve(reasonOptionsSettings);\n\t\t\t\t\t},\n\t\t\t\t\t(oError) => {\n\t\t\t\t\t\treject(oError as Error);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Open the decision dialog for the inbox task selected.\n\t *\n\t * @private\n\t * @param {DecisionDialogSettings} dialogSettings - contains the settings for the decision dialog\n\t */\n\tprivate openDecisionDialog(dialogSettings: DecisionDialogSettings) {\n\t\tthis.confirmationDialogModel = new JSONModel({\n\t\t\tsubmitButtonEnabled: !dialogSettings?.noteMandatory && !dialogSettings?.reasonOptionsSettings?.required,\n\t\t\tdialogSettings\n\t\t});\n\n\t\tthis.confirmationDialogPromise = Fragment.load({\n\t\t\ttype: \"XML\",\n\t\t\tname: \"sap.cux.home.utils.fragment.showDecisionDialog\",\n\t\t\tcontroller: this\n\t\t})\n\t\t\t.then((confirmationDialogFragment: Control | Control[]) => {\n\t\t\t\tconst confirmationDialog = confirmationDialogFragment as IDecisionDialog;\n\t\t\t\tconst i18nModel = new ResourceModel({ bundle: this.i18nBundle });\n\t\t\t\tconst priorityText = Element.getElementById(\"task-priority-text\") as Text;\n\t\t\t\tpriorityText.addStyleClass(this.task.Priority);\n\n\t\t\t\tconfirmationDialog.setModel(this.confirmationDialogModel);\n\t\t\t\tconfirmationDialog.setModel(i18nModel, \"i18n\");\n\t\t\t\tconfirmationDialog.open();\n\t\t\t\treturn confirmationDialog;\n\t\t\t})\n\t\t\t.catch((error: unknown) => {\n\t\t\t\tLog.error(error instanceof Error ? error.message : String(error));\n\t\t\t}) as Promise<IDecisionDialog>;\n\t}\n\n\t/**\n\t * Submit handler for the decision dialog\n\t *\n\t * @private\n\t */\n\tpublic confirmActionHandler(): void {\n\t\tthis.confirmationDialogPromise\n\t\t\t.then((confirmationDialog) => {\n\t\t\t\tconst dialogSettings = (confirmationDialog.getModel()?.getProperty(\"/\") as DialogSettings).dialogSettings;\n\t\t\t\tconst reasonOptionsSettings = dialogSettings.reasonOptionsSettings;\n\n\t\t\t\t// Get the reason option value from the combo box\n\t\t\t\tconst reasonOptionSelectedItem = reasonOptionsSettings.show\n\t\t\t\t\t? (Element.getElementById(\"reasonOptionsSelect\") as ComboBox)?.getSelectedItem()\n\t\t\t\t\t: null;\n\t\t\t\tconst reasonCode = (\n\t\t\t\t\treasonOptionSelectedItem !== null && reasonOptionSelectedItem?.getKey() !== \"defaultSelectedKey\"\n\t\t\t\t\t\t? reasonOptionSelectedItem.getKey()\n\t\t\t\t\t\t: null\n\t\t\t\t) as string;\n\n\t\t\t\t// Get the note value from the text area\n\t\t\t\tconst note = (\n\t\t\t\t\tdialogSettings.showNote ? (Element.getElementById(\"confirmDialogTextarea\") as TextArea)?.getValue() : null\n\t\t\t\t) as string;\n\t\t\t\tdialogSettings.confirmActionHandler(note, reasonCode);\n\t\t\t})\n\t\t\t.catch((error: unknown) => {\n\t\t\t\tLog.error(error instanceof Error ? error.message : String(error));\n\t\t\t});\n\t}\n\n\t/**\n\t * Handler for cancel action in the decision dialog\n\t *\n\t * @private\n\t */\n\tpublic handleCancel() {\n\t\tthis.confirmationDialogPromise\n\t\t\t.then((confirmationDialog) => {\n\t\t\t\tconst dialogSettings = (confirmationDialog.getModel()?.getProperty(\"/\") as DialogSettings).dialogSettings;\n\t\t\t\tconfirmationDialog._bClosedViaButton = true;\n\t\t\t\tconfirmationDialog.close();\n\t\t\t\tdialogSettings.cancelActionHandler();\n\n\t\t\t\tif (this.confirmationDialogModel.getProperty(\"/dialogSettings/showFeedbackMessage\")) {\n\t\t\t\t\tthis.dataServiceModel.refresh();\n\t\t\t\t\tthis.refreshView(true);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error: unknown) => {\n\t\t\t\tLog.error(error instanceof Error ? error.message : String(error));\n\t\t\t});\n\t}\n\n\t/**\n\t * After close dialog handler in the decision dialog\n\t *\n\t * @private\n\t */\n\tpublic handleAfterClose() {\n\t\tthis.confirmationDialogPromise\n\t\t\t.then((confirmationDialog) => {\n\t\t\t\tif (confirmationDialog._bClosedViaButton) {\n\t\t\t\t\t// dialog is closed via button\n\t\t\t\t\tconfirmationDialog._bClosedViaButton = false;\n\t\t\t\t} else {\n\t\t\t\t\t// dialog is closed by other means (e.g. pressing Escape)\n\t\t\t\t\tconst dialogSettings = (confirmationDialog.getModel()?.getProperty(\"/\") as DialogSettings).dialogSettings;\n\t\t\t\t\tdialogSettings.cancelActionHandler();\n\t\t\t\t}\n\t\t\t\tconfirmationDialog.destroy();\n\t\t\t})\n\t\t\t.catch((error: unknown) => {\n\t\t\t\tLog.error(error instanceof Error ? error.message : String(error));\n\t\t\t});\n\t}\n\n\t/**\n\t * Creates an OData request with the specified parameters.\n\t *\n\t * @private\n\t * @param {string} path - The path of the OData request.\n\t * @param {Record<string, string>} urlParams - The URL parameters of the request.\n\t * @param {Function} fnSuccess - The success callback function.\n\t * @param {Function} fnError - The error callback function.\n\t * @returns {void}\n\t */\n\tprivate createODataRequest(\n\t\tpath: string,\n\t\turlParams: Record<string, string>,\n\t\tfnSuccess: (data: unknown, response: unknown) => void,\n\t\tfnError: (error: ODataError) => void\n\t): void {\n\t\tconst settings = {\n\t\t\tsuccess: (data: unknown, response: unknown) => {\n\t\t\t\tLog.info(\"successful action\");\n\t\t\t\tfnSuccess?.(data, response);\n\t\t\t},\n\t\t\terror: (error: ODataError) => {\n\t\t\t\tconst message = this.i18nBundle.getText(\"DataManager.HTTPRequestFailed\");\n\t\t\t\tconst details = error.response ? error.response.body : null;\n\t\t\t\tconst parameters = {\n\t\t\t\t\tmessage: message,\n\t\t\t\t\tresponseText: details as string\n\t\t\t\t};\n\t\t\t\tthis.dataServiceModel.fireRequestFailed(parameters);\n\t\t\t\tfnError(error);\n\t\t\t},\n\t\t\turlParameters: urlParams\n\t\t};\n\n\t\tthis.dataServiceModel.create(path, {}, settings);\n\t}\n\n\t/**\n\t * Sends an action to the backend.\n\t *\n\t * @private\n\t * @param {string} importName - The name of the function import or action.\n\t * @param {DecisionOption} decision - The decision option.\n\t * @param {string} note - The note to be included with the action.\n\t * @param {string} reasonOptionCode - The reason option code.\n\t * @param {Task} task - The task associated with the action.\n\t * @returns {void}\n\t */\n\tprivate sendAction(importName: string, decision: DecisionOption, note: string, reasonOptionCode: string, task: Task): void {\n\t\tconst urlParams: Record<string, string> = {\n\t\t\tSAP__Origin: `'${task.SAP__Origin}'`,\n\t\t\tInstanceID: `'${task.InstanceID}'`\n\t\t};\n\n\t\tif (decision.DecisionKey) {\n\t\t\turlParams.DecisionKey = `'${decision.DecisionKey}'`;\n\t\t}\n\n\t\tif (note?.length > 0) {\n\t\t\turlParams.Comments = `'${note}'`;\n\t\t}\n\n\t\tif (reasonOptionCode) {\n\t\t\turlParams.ReasonCode = `'${reasonOptionCode}'`;\n\t\t}\n\n\t\tconst onSuccess = () => {\n\t\t\tthis.confirmationDialogPromise\n\t\t\t\t.then((confirmationDialog) => {\n\t\t\t\t\tconfirmationDialog.setBusy(false);\n\t\t\t\t\tthis.confirmationDialogModel.setProperty(\"/dialogSettings/showFeedbackMessage\", true);\n\t\t\t\t})\n\t\t\t\t.catch((error: unknown) => {\n\t\t\t\t\tLog.error(error instanceof Error ? error.message : String(error));\n\t\t\t\t});\n\t\t};\n\n\t\tconst onError = (error: ODataError) => {\n\t\t\tif (error.responseText) {\n\t\t\t\tconst oError = JSON.parse(error.responseText) as ODataError;\n\t\t\t\tMessageBox.error(oError?.error?.message?.value);\n\t\t\t}\n\t\t\tthis.handleCancel();\n\t\t};\n\n\t\tthis.createODataRequest(`/${importName}`, urlParams, onSuccess, onError);\n\t}\n\n\t/**\n\t * Shows the decision dialog.\n\t *\n\t * @private\n\t * @returns {Promise<void>}\n\t */\n\tprivate async showDecisionDialog(): Promise<void> {\n\t\tthis.dataServiceModel = this.dataServiceModel || new ODataModel(this.baseUrl);\n\t\tconst { TaskTitle: title, Priority } = this.task;\n\t\tconst decisionDialogSettings: DecisionDialogSettings = {\n\t\t\tnoteMandatory: this.decisionOption.CommentMandatory,\n\t\t\tquestion: this.i18nBundle.getText(\"XMSG_DECISION_QUESTION\", [this.decisionOption.DecisionText]) as string,\n\t\t\ttitle,\n\t\t\tbadgeIcon: getIconFrameBadge(Priority),\n\t\t\tbadgeValueState: getIconFrameBadgeValueState(Priority),\n\t\t\tpriorityText: this.i18nBundle.getText(toTaskPriorityText(Priority)) as string,\n\t\t\tconfirmButtonLabel: this.i18nBundle.getText(\"XBUT_SUBMIT\") as string,\n\t\t\tshowNote: true,\n\t\t\tshowFeedbackMessage: false,\n\t\t\treasonOptionsSettings: {\n\t\t\t\tshow: false,\n\t\t\t\trequired: false\n\t\t\t},\n\t\t\ttextAreaLabel: this.i18nBundle.getText(\"XFLD_TextArea_Decision\") as string,\n\t\t\tconfirmActionHandler: (note, reasonOptionKey) => {\n\t\t\t\tthis.sendAction(\"Decision\", this.decisionOption, note, reasonOptionKey, this.task);\n\t\t\t},\n\t\t\tcancelActionHandler: () => {}\n\t\t};\n\n\t\ttry {\n\t\t\tawait this.dataServiceModel.metadataLoaded();\n\t\t\tconst reasonOptionsLoadedPromise =\n\t\t\t\tthis.decisionOption?.ReasonRequired === ReasonRequired.Required ||\n\t\t\t\tthis.decisionOption?.ReasonRequired === ReasonRequired.Optional\n\t\t\t\t\t? this.loadReasonOptions()\n\t\t\t\t\t: null;\n\n\t\t\t// reason options won't be loaded\n\t\t\tif (!reasonOptionsLoadedPromise) {\n\t\t\t\tthis.openDecisionDialog(decisionDialogSettings);\n\t\t\t} else {\n\t\t\t\t// based on reasonOptionsLoadedPromise, reason options will be loaded\n\t\t\t\treasonOptionsLoadedPromise\n\t\t\t\t\t.then((reasonOptionsSettings: ReasonOptionSettings | null) => {\n\t\t\t\t\t\tif (reasonOptionsSettings !== null) {\n\t\t\t\t\t\t\tdecisionDialogSettings.reasonOptionsSettings = reasonOptionsSettings;\n\n\t\t\t\t\t\t\t// In case of optional reason option combo box, a (None) option is created as to have a default selection\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tdecisionDialogSettings.reasonOptionsSettings?.reasonOptions &&\n\t\t\t\t\t\t\t\t!decisionDialogSettings.reasonOptionsSettings?.required\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tconst noneText = `(${this.i18nBundle.getText(\"XSEL_DECISION_REASON_NONE_OPTION\")})`;\n\t\t\t\t\t\t\t\tdecisionDialogSettings.reasonOptionsSettings.reasonOptions.unshift({\n\t\t\t\t\t\t\t\t\tName: noneText,\n\t\t\t\t\t\t\t\t\tCode: \"defaultSelectedKey\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.openDecisionDialog(decisionDialogSettings);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\tLog.error(\"Could not load the reason options properly\");\n\t\t\t\t\t});\n\t\t\t}\n\t\t} catch {\n\t\t\tLog.error(\"Could not load metadata model for inbox\");\n\t\t}\n\t}\n\n\t/**\n\t * Initiates the decisionDialog\n\t *\n\t * @static\n\t * @param {DecisionOption} decisionOption - Decision Option\n\t * @param {ResourceModel} i18nBundle - The resource bundle for internationalization.\n\t * @param {Task} task - Task Instance\n\t * @param {Refresh} refresh - Refresh function\n\t */\n\tstatic decisionDialogMethod(decisionOption: DecisionOption, i18nBundle: ResourceBundle, task: Task, baseUrl: string, refresh: Refresh) {\n\t\tconst dialogUtils = new DecisionDialog(decisionOption, i18nBundle, task, baseUrl, refresh);\n\t\treturn dialogUtils.showDecisionDialog();\n\t}\n\n\t/**\n\t * Retrieves task actions based on the task and multi-select decision results.\n\t *\n\t * @static\n\t * @param {Task} task - The task for which actions are retrieved.\n\t * @param {string} baseUrl - The base URL.\n\t * @param {MultiSelectDecisionResult} multiSelectDecisionResults - The multi-select decision results.\n\t * @param {ResourceBundle} i18nBundle - The resource bundle for internationalization.\n\t * @returns {ActionButton[]} An array of action buttons.\n\t */\n\tstatic getTaskActions(\n\t\ttask: Task,\n\t\tbaseUrl: string,\n\t\tmultiSelectDecisionResults: MultiSelectDecisionResult,\n\t\ti18nBundle: ResourceBundle\n\t): ActionButton[] {\n\t\tconst actions: ActionButton[] = [];\n\t\tconst displayedTypes = new Set<string>();\n\t\tconst multiSelectDecisionOptions = multiSelectDecisionResults[task.SAP__Origin + task.TaskDefinitionID];\n\n\t\tif (multiSelectDecisionOptions) {\n\t\t\tfor (const decisionOption of multiSelectDecisionOptions) {\n\t\t\t\tif (!displayedTypes.has(decisionOption.Nature) || !decisionOption.Nature) {\n\t\t\t\t\tactions.push(getActionButton(decisionOption, i18nBundle, task, baseUrl));\n\t\t\t\t\tdisplayedTypes.add(decisionOption.Nature);\n\t\t\t\t} else {\n\t\t\t\t\tconst action = getActionButton(decisionOption, i18nBundle, task, baseUrl);\n\t\t\t\t\taction.type = ButtonType.Default;\n\t\t\t\t\tactions.push(action);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn actions;\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"utils"}},{"offset":{"line":376,"column":0},"map":{"version":3,"names":["sap","ui","define","Device","DeviceWidth","Mobile","Tablet","Desktop","DeviceType","calculateDeviceType","width","arguments","length","undefined","resize","system","phone","LargeDesktop","fetchElementProperties","domRef","properties","oProperties","forEach","property","parseFloat","window","getComputedStyle","getPropertyValue","calculateCardWidth","cardLayoutConfig","gap","peekWidth","totalCards","Math","max","minWidth","min","containerWidth","maxWidth","mainCardWidth","cardCountToUse","totalGap","twoCardWidth","possibleCardCount","cardWidth","__exports","__esModule"],"sources":["Device.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Device from \"sap/ui/Device\";\n\ninterface CardLayoutConfig {\n\tcontainerWidth: number;\n\ttotalCards: number;\n\tminWidth: number;\n\tmaxWidth: number;\n}\n\n/** Device widths in px */\nconst DeviceWidth = {\n\tMobile: 624,\n\tTablet: 1024,\n\tDesktop: 1135\n};\n\nexport enum DeviceType {\n\tMobile = \"Mobile\",\n\tTablet = \"Tablet\",\n\tDesktop = \"Desktop\",\n\tLargeDesktop = \"LargeDesktop\"\n}\n\n/**\n * Calculates the device type based on the given width.\n *\n * @param {number} [width=Device.resize.width] - The width of the device. Defaults to the current device width.\n * @returns {DeviceType} - The calculated device type.\n */\nexport function calculateDeviceType(width: number = Device.resize.width): DeviceType {\n\tif (width < DeviceWidth.Mobile || Device.system.phone) {\n\t\treturn DeviceType.Mobile;\n\t} else if (width < DeviceWidth.Tablet) {\n\t\treturn DeviceType.Tablet;\n\t} else if (width < DeviceWidth.Desktop) {\n\t\treturn DeviceType.Desktop;\n\t} else {\n\t\treturn DeviceType.LargeDesktop;\n\t}\n}\n\n/**\n * Fetches the specified CSS properties of a given DOM element and returns them as a record.\n *\n * @param {Element} domRef - The DOM element from which to fetch the properties.\n * @param {string[]} properties - An array of property names to fetch.\n * @returns {Record<string, number>} - A record where the keys are property names and the values are the corresponding property values as numbers.\n */\nexport function fetchElementProperties(domRef: Element, properties: string[]): Record<string, number> {\n\tconst oProperties: Record<string, number> = {};\n\tproperties.forEach((property) => {\n\t\toProperties[property] = parseFloat(window.getComputedStyle(domRef).getPropertyValue(property));\n\t});\n\n\treturn oProperties;\n}\n\n/**\n * Calculates the card width based on the available width and certain constraints.\n *\n * @param {CardLayoutConfig} cardLayoutConfig - Card layout configuration containing container width, no. of cards, min and max width.\n * @returns {number} The calculated card width within specified constraints.\n */\nexport function calculateCardWidth(cardLayoutConfig: CardLayoutConfig): number {\n\tconst gap = 16;\n\n\tif (calculateDeviceType() === DeviceType.Mobile) {\n\t\tconst peekWidth = 76;\n\t\tif (cardLayoutConfig.totalCards === 1) {\n\t\t\t// Single card: full width, constrained\n\t\t\treturn Math.max(cardLayoutConfig.minWidth, Math.min(cardLayoutConfig.containerWidth, cardLayoutConfig.maxWidth));\n\t\t} else {\n\t\t\t// Calculate width of the first card, reserving space for the peek of the second\n\t\t\tconst mainCardWidth = cardLayoutConfig.containerWidth - peekWidth;\n\t\t\t// Clamp to min/max width\n\t\t\treturn Math.max(cardLayoutConfig.minWidth, Math.min(mainCardWidth, cardLayoutConfig.maxWidth));\n\t\t}\n\t}\n\n\tlet cardCountToUse: number;\n\n\t// Tablet mode: width between 600 and 1023\n\tif (calculateDeviceType() === DeviceType.Tablet && cardLayoutConfig.totalCards > 1) {\n\t\tconst totalGap = gap; // gap between 2 cards\n\t\tconst twoCardWidth = (cardLayoutConfig.containerWidth - totalGap) / 2;\n\n\t\tif (twoCardWidth >= cardLayoutConfig.minWidth && twoCardWidth <= cardLayoutConfig.maxWidth) {\n\t\t\tcardCountToUse = 2;\n\t\t} else {\n\t\t\tcardCountToUse = 1;\n\t\t}\n\t} else {\n\t\t// Step 1: How many cards *can* fit based on minWidth\n\t\tlet possibleCardCount = 1;\n\t\twhile (cardLayoutConfig.containerWidth / possibleCardCount >= cardLayoutConfig.minWidth + gap) {\n\t\t\tpossibleCardCount++;\n\t\t}\n\t\tpossibleCardCount--; // Last valid value\n\t\t// Step 2: If we have fewer cards than we *can* fit, stretch them\n\t\tcardCountToUse = Math.max(Math.min(possibleCardCount, cardLayoutConfig.totalCards), Math.min(cardLayoutConfig.totalCards, 3));\n\t}\n\tif (cardCountToUse <= 0) return cardLayoutConfig.minWidth;\n\tconst totalGap = (cardCountToUse - 1) * gap;\n\tconst cardWidth = (cardLayoutConfig.containerWidth - totalGap) / cardCountToUse;\n\treturn Math.min(Math.max(cardWidth, cardLayoutConfig.minWidth), cardLayoutConfig.maxWidth);\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,uCAAA,2BAAAC,GAAA,aAeA,MAAMC,EAAc,CACnBC,OAAQ,IACRC,OAAQ,KACRC,QAAS,MACR,IAEUC,EAAU,SAAVA,KAAU,mBAAVA,EAAU,mBAAVA,EAAU,qBAAVA,EAAU,sCAAVA,CAAU,EAAVA,GAAU,IAaf,SAASC,IAAqE,IAAjDC,EAAaC,UAAAC,OAAA,GAAAD,UAAA,KAAAE,UAAAF,UAAA,GAAGR,EAAOW,OAAOJ,MACjE,GAAIA,EAAQN,EAAYC,QAAUF,EAAOY,OAAOC,MAAO,CACtD,OAAOR,EAAWH,MACnB,MAAO,GAAIK,EAAQN,EAAYE,OAAQ,CACtC,OAAOE,EAAWF,MACnB,MAAO,GAAII,EAAQN,EAAYG,QAAS,CACvC,OAAOC,EAAWD,OACnB,KAAO,CACN,OAAOC,EAAWS,YACnB,CACD,CASO,SAASC,EAAuBC,EAAiBC,GACvD,MAAMC,EAAsC,CAAC,EAC7CD,EAAWE,QAASC,IACnBF,EAAYE,GAAYC,WAAWC,OAAOC,iBAAiBP,GAAQQ,iBAAiBJ,GAAU,GAG/F,OAAOF,CACR,CAQO,SAASO,EAAmBC,GAClC,MAAMC,EAAM,GAEZ,GAAIrB,MAA0BD,EAAWH,OAAQ,CAChD,MAAM0B,EAAY,GAClB,GAAIF,EAAiBG,aAAe,EAAG,CAEtC,OAAOC,KAAKC,IAAIL,EAAiBM,SAAUF,KAAKG,IAAIP,EAAiBQ,eAAgBR,EAAiBS,UACvG,KAAO,CAEN,MAAMC,EAAgBV,EAAiBQ,eAAiBN,EAExD,OAAOE,KAAKC,IAAIL,EAAiBM,SAAUF,KAAKG,IAAIG,EAAeV,EAAiBS,UACrF,CACD,CAEA,IAAIE,EAGJ,GAAI/B,MAA0BD,EAAWF,QAAUuB,EAAiBG,WAAa,EAAG,CACnF,MAAMS,EAAWX,EACjB,MAAMY,GAAgBb,EAAiBQ,eAAiBI,GAAY,EAEpE,GAAIC,GAAgBb,EAAiBM,UAAYO,GAAgBb,EAAiBS,SAAU,CAC3FE,EAAiB,CAClB,KAAO,CACNA,EAAiB,CAClB,CACD,KAAO,CAEN,IAAIG,EAAoB,EACxB,MAAOd,EAAiBQ,eAAiBM,GAAqBd,EAAiBM,SAAWL,EAAK,CAC9Fa,GACD,CACAA,IAEAH,EAAiBP,KAAKC,IAAID,KAAKG,IAAIO,EAAmBd,EAAiBG,YAAaC,KAAKG,IAAIP,EAAiBG,WAAY,GAC3H,CACA,GAAIQ,GAAkB,EAAG,OAAOX,EAAiBM,SACjD,MAAMM,GAAYD,EAAiB,GAAKV,EACxC,MAAMc,GAAaf,EAAiBQ,eAAiBI,GAAYD,EACjE,OAAOP,KAAKG,IAAIH,KAAKC,IAAIU,EAAWf,EAAiBM,UAAWN,EAAiBS,SAClF,CAAC,IAAAO,EAAA,CAAAC,WAAA,MAAAD,EAAArC,aAAAqC,EAAApC,sBAAAoC,EAAA3B,yBAAA2B,EAAAjB,qBAAA,OAAAiB,CAAA","ignoreList":[],"sourceRoot":"utils"}},{"offset":{"line":381,"column":0},"map":{"version":3,"names":["sap","ui","define","GridContainer","FlexBox","Table","Event","Element","sap_ui_core_library","attachKeyboardHandler","event","disablenavigation","callback","draggedControl","closestTo","target","firstElementChild","container","getParent","isMetaKey","metaKey","ctrlKey","items","getItems","currentIndex","findIndex","item","document","activeElement","getDomRef","setTabIndexForItems","map","includes","key","Promise","resolve","preventDefault","stopPropagation","currentItemIndex","indexOfItem","reverseItems","reverse","index","_areItemsInSameRow","_getClosestElementYIndex","data","length","droppedControl","_temp3","_temp2","focusDraggedItem","dragDropEvent","dropPosition","dnd","RelativeDropPosition","Before","After","_temp","then","e","reject","item1","item2","getBoundingClientRect","top","dropItemIndex","draggedItemDomRef","aWrapperItemsDomRef","$","children","each","iIndex","oWrapperItem","classList","contains","push","setAttribute","focus","keyCode","fnElementPositionX","element","x","fnElementPositionY","y","minIndex","minDistance","Number","MAX_SAFE_INTEGER","forEach","currentDist","Math","sqrt","pow","isAllowed","aItems","tabIndex","__exports","__esModule"],"sources":["DragDropUtils.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport GridContainer from \"sap/f/GridContainer\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport HeaderContainer from \"sap/m/HeaderContainer\";\nimport Table from \"sap/m/Table\";\nimport Event from \"sap/ui/base/Event\";\nimport Control from \"sap/ui/core/Control\";\nimport Element from \"sap/ui/core/Element\";\nimport { dnd } from \"sap/ui/core/library\";\n\n/**\n * Handles keyboard events for navigation and drag and drop functionality.\n * @param {KeyboardEvent} event - The keyboard event object.\n * @param {boolean} disablenavigation - Whether navigation is allowed.\n * @param {Function} callback - The callback function to execute when a drag and drop event occurs.\n * @returns {Promise<void>} A Promise that resolves when the handling is complete.\n */\n\nexport async function attachKeyboardHandler(\n\tevent: KeyboardEvent,\n\tdisablenavigation: boolean,\n\tcallback?: (dragDropEvent: Event) => Promise<void> | void\n) {\n\tconst draggedControl = Element.closestTo((event.target as HTMLElement).firstElementChild as HTMLElement) as Control;\n\tconst container = draggedControl.getParent() as GridContainer | FlexBox;\n\tconst isMetaKey = event.metaKey || event.ctrlKey;\n\tconst items = container.getItems();\n\tconst currentIndex = items.findIndex((item) => document.activeElement === item.getDomRef());\n\tsetTabIndexForItems(\n\t\titems.map((item) => item.getDomRef() as HTMLElement),\n\t\tcurrentIndex\n\t);\n\n\tif (\n\t\t!draggedControl ||\n\t\t!container ||\n\t\t!(disablenavigation && [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\", \"Home\", \"End\"].includes(event.key))\n\t) {\n\t\treturn;\n\t}\n\n\tevent.preventDefault();\n\tevent.stopPropagation();\n\n\tlet currentItemIndex = container.indexOfItem(draggedControl);\n\tconst reverseItems = [...items].reverse();\n\tconst getDomRef = (index: number): HTMLElement | null => items[index]?.getDomRef() as HTMLElement | null;\n\tswitch (event.key) {\n\t\tcase \"ArrowRight\":\n\t\t\tif (_areItemsInSameRow(getDomRef(currentItemIndex), getDomRef(currentItemIndex + 1))) {\n\t\t\t\tcurrentItemIndex++;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"ArrowLeft\":\n\t\t\tif (_areItemsInSameRow(getDomRef(currentItemIndex), getDomRef(currentItemIndex - 1))) {\n\t\t\t\tcurrentItemIndex--;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"ArrowUp\":\n\t\tcase \"ArrowDown\":\n\t\t\tcurrentItemIndex = _getClosestElementYIndex(container, currentItemIndex, event.key);\n\t\t\tbreak;\n\t\tcase \"Home\":\n\t\t\tcurrentItemIndex = draggedControl.data(\"groupId\")\n\t\t\t\t? items.findIndex((item) => item.data(\"groupId\"))\n\t\t\t\t: items.findIndex((item) => !item.data(\"groupId\"));\n\t\t\tbreak;\n\t\tcase \"End\":\n\t\t\tcurrentItemIndex =\n\t\t\t\titems.length -\n\t\t\t\t1 -\n\t\t\t\t(draggedControl.data(\"groupId\")\n\t\t\t\t\t? reverseItems.findIndex((item) => item.data(\"groupId\"))\n\t\t\t\t\t: reverseItems.findIndex((item) => !item.data(\"groupId\")));\n\t\t\tbreak;\n\t}\n\tconst droppedControl = currentItemIndex > -1 && currentItemIndex < items.length ? items[currentItemIndex] : null;\n\tif (draggedControl && droppedControl) {\n\t\tconst dragDropEvent = new Event(\"keyboardDragDropEvent\", container, {\n\t\t\tdraggedControl,\n\t\t\tdroppedControl,\n\t\t\tdropPosition: [\"ArrowLeft\", \"ArrowUp\", \"Home\"].includes(event.key)\n\t\t\t\t? dnd.RelativeDropPosition.Before\n\t\t\t\t: dnd.RelativeDropPosition.After\n\t\t});\n\t\tsetTabIndexForItems(\n\t\t\titems.map((item) => item.getDomRef() as HTMLElement),\n\t\t\tcurrentItemIndex\n\t\t);\n\t\tif (callback && isMetaKey) {\n\t\t\tawait callback(dragDropEvent);\n\t\t}\n\t\tfocusDraggedItem(container, currentItemIndex);\n\t}\n}\n\n/**\n * Checks if two items are in the same row based on their top positions.\n *\n * @private\n * @param {HTMLElement | null} item1 - The first item's DOM reference.\n * @param {HTMLElement | null} item2 - The second item's DOM reference.\n * @returns {boolean} True if both items are in the same row, otherwise false.\n */\nfunction _areItemsInSameRow(item1: HTMLElement | null, item2: HTMLElement | null): boolean {\n\tif (!item1 || !item2) {\n\t\treturn false;\n\t}\n\treturn item1.getBoundingClientRect().top === item2.getBoundingClientRect().top;\n}\n\n/**\n * Gathers all DOM elements representing individual tiles in the grid container\n * that have the \"sapFGridContainerItemWrapper\" class, stores them in an array,\n * and then focuses the DOM element corresponding to the card that was just moved\n * during a drag-and-drop operation by setting its \"tabindex\" to \"0\" for\n * accessibility and navigation purposes.\n * @param {GridContainer | FlexBox} container - The container containing the items.\n * @param {number} dropItemIndex - The index of the item to focus after drag-and-drop.\n */\nexport const focusDraggedItem = (container: GridContainer | HeaderContainer | FlexBox | Table, dropItemIndex: number): void => {\n\tlet draggedItemDomRef: HTMLElement | null = null;\n\tif (container instanceof GridContainer) {\n\t\tconst aWrapperItemsDomRef: HTMLElement[] = [];\n\t\tcontainer\n\t\t\t.$(\"listUl\")\n\t\t\t.children()\n\t\t\t.each(function (iIndex, oWrapperItem) {\n\t\t\t\tif (oWrapperItem.classList.contains(\"sapFGridContainerItemWrapper\")) {\n\t\t\t\t\taWrapperItemsDomRef.push(oWrapperItem);\n\t\t\t\t}\n\t\t\t});\n\t\tdraggedItemDomRef = aWrapperItemsDomRef[dropItemIndex];\n\t} else if (container instanceof FlexBox || container instanceof Table) {\n\t\tdraggedItemDomRef = container.getItems()[dropItemIndex].getDomRef() as HTMLElement;\n\t}\n\tif (draggedItemDomRef) {\n\t\tdraggedItemDomRef.setAttribute(\"tabindex\", \"0\");\n\t\tdraggedItemDomRef.focus();\n\t}\n};\n\n/**\n * Gets the index of the closest element in the Y direction within a grid container.\n * @param {GridContainer | FlexBox} container - The container (either GridContainer or FlexBox).\n * @param {number} currentIndex - The index of the current element.\n * @param {string} keyCode - The key code representing the direction (ArrowUp or ArrowDown).\n * @returns {number} The index of the closest element in the Y direction.\n */\n\nconst _getClosestElementYIndex = (container: GridContainer | FlexBox, currentIndex: number, keyCode: string) => {\n\tconst fnElementPositionX = function (element: HTMLElement) {\n\t\treturn element.getBoundingClientRect().x;\n\t};\n\n\tconst fnElementPositionY = function (element: HTMLElement) {\n\t\treturn element.getBoundingClientRect().y;\n\t};\n\n\tlet minIndex = currentIndex;\n\tlet minDistance = Number.MAX_SAFE_INTEGER;\n\tconst items = container.getItems().map((item) => item.getDomRef()) as HTMLElement[];\n\titems.forEach(function (item, index) {\n\t\tconst currentDist = Math.sqrt(\n\t\t\tMath.pow(fnElementPositionX(items[currentIndex]) - fnElementPositionX(item), 2) +\n\t\t\t\tMath.pow(fnElementPositionY(items[currentIndex]) - fnElementPositionY(item), 2)\n\t\t);\n\t\tconst isAllowed = (keyCode === \"ArrowDown\" && index > currentIndex) || (keyCode === \"ArrowUp\" && index < currentIndex);\n\t\tif (isAllowed && currentDist < minDistance && fnElementPositionY(item) !== fnElementPositionY(items[currentIndex])) {\n\t\t\tminDistance = currentDist;\n\t\t\tminIndex = index;\n\t\t}\n\t});\n\treturn minIndex;\n};\n\nconst setTabIndexForItems = (aItems: HTMLElement[], currentIndex: number) => {\n\taItems.forEach((x, index) => {\n\t\tx.tabIndex = index === currentIndex ? 0 : -1;\n\t});\n};\n"],"mappings":"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","ignoreList":[],"sourceRoot":"utils"}},{"offset":{"line":386,"column":0},"map":{"version":3,"names":["sap","ui","define","FESRHelper","FESR_EVENTS","addFESRId","control","fesrId","data","getFESRId","addFESRSemanticStepName","element","eventName","stepName","setSemanticStepname","__exports","__esModule"],"sources":["FESRUtil.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Control from \"sap/ui/core/Control\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport FESRHelper from \"sap/ui/performance/trace/FESRHelper\";\n\nexport enum FESR_EVENTS {\n\tPRESS = \"press\",\n\tCHANGE = \"change\",\n\tSELECT = \"select\"\n}\n\nexport const addFESRId = (control: Control | UI5Element, fesrId: string) => {\n\tcontrol.data(\"fesr-id\", fesrId);\n};\n\nexport const getFESRId = (control: Control | UI5Element) => {\n\treturn control.data(\"fesr-id\") as string;\n};\n\nexport const addFESRSemanticStepName = (element: UI5Element, eventName: string, stepName: string) => {\n\tif (stepName) {\n\t\tFESRHelper.setSemanticStepname(element, eventName, stepName);\n\t}\n};\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,yCAAA,iDAAAC,GAAA,iBASYC,EAAW,SAAXA,KAAW,iBAAXA,EAAW,mBAAXA,EAAW,0BAAXA,CAAW,EAAXA,GAAW,IAMhB,MAAMC,EAAYA,CAACC,EAA+BC,KACxDD,EAAQE,KAAK,UAAWD,EAAO,EAGzB,MAAME,EAAaH,GAClBA,EAAQE,KAAK,WAGd,MAAME,EAA0BA,CAACC,EAAqBC,EAAmBC,KAC/E,GAAIA,EAAU,CACbV,EAAWW,oBAAoBH,EAASC,EAAWC,EACpD,GACC,IAAAE,EAAA,CAAAC,WAAA,MAAAD,EAAAX,cAAAW,EAAAV,YAAAU,EAAAN,YAAAM,EAAAL,0BAAA,OAAAK,CAAA","ignoreList":[],"sourceRoot":"utils"}},{"offset":{"line":391,"column":0},"map":{"version":3,"names":["sap","ui","define","Log","BaseObject","___Constants","REPO_BASE_URL","HttpHelper","constructor","super","fetchCSRFToken","fetch","method","headers","then","response","token","get","ok","Error","catch","error","message","Post","url","payload","csrfToken","body","JSON","stringify","json","GetJSON"],"sources":["HttpHelper.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport BaseObject from \"sap/ui/base/Object\";\nimport { REPO_BASE_URL } from \"./Constants\";\n\n/**\n *\n * @class Provides the HttpHelper Class used for Get and Post Calls.\n *\n * @extends sap.ui.BaseObject\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121.0\n *\n * @private\n * @experimental Since 1.121\n * @hidden\n *\n * @alias sap.cux.home.utils.HttpHelper\n */\n\nexport default class HttpHelper extends BaseObject {\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\t/**\n\t * Fetches the CSRF Token\n\t * @returns {Promise<string | void>} Promise that resolves with the CSRF Token\n\t */\n\tprivate static fetchCSRFToken(): Promise<string | void> {\n\t\treturn fetch(REPO_BASE_URL, {\n\t\t\tmethod: \"HEAD\",\n\t\t\theaders: {\n\t\t\t\t\"X-CSRF-Token\": \"Fetch\"\n\t\t\t}\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tconst token = response.headers.get(\"X-CSRF-Token\");\n\t\t\t\tif (response.ok && token) {\n\t\t\t\t\treturn token;\n\t\t\t\t}\n\t\t\t\tthrow new Error(\"Cannot fetch X-CSRF-Token.\");\n\t\t\t})\n\t\t\t.catch((error: Error) => {\n\t\t\t\tLog.error(error.message);\n\t\t\t});\n\t}\n\n\t/**\n\t * Post Method\n\t * @param {string} url - The URL to post to\n\t * @param {object} payload - The payload to post\n\t * @returns {Promise<unknown>} Promise that resolves with the response\n\t */\n\tpublic static Post(url: string, payload: object): Promise<unknown> {\n\t\treturn HttpHelper.fetchCSRFToken()\n\t\t\t.then((csrfToken) => {\n\t\t\t\treturn fetch(url, {\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t\"X-CSRF-Token\": csrfToken as string,\n\t\t\t\t\t\t\"content-type\": \"application/json\"\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify(payload)\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.catch((error: Error) => {\n\t\t\t\tLog.error(error.message);\n\t\t\t});\n\t}\n\n\t/**\n\t * Get Method for JSON Data\n\t * @param {string} url - The URL to get from\n\t * @returns {Promise<unknown>} Promise that resolves with the JSON data response\n\t */\n\tpublic static GetJSON(url: string): Promise<unknown> {\n\t\treturn fetch(url)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.catch((error: Error) => {\n\t\t\t\tLog.error(error.message);\n\t\t\t});\n\t}\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,2CAAA,6DAAAC,EAAAC,EAAAC,GAAA,mBAMSC,EAAaD,EAAA,iBAmBP,MAAME,UAAmBH,EAC/BI,cACPC,OACD,CAMA,qBAAeC,GACd,OAAOC,MAAML,EAAe,CAC3BM,OAAQ,OACRC,QAAS,CACR,eAAgB,WAGhBC,KAAMC,IACN,MAAMC,EAAQD,EAASF,QAAQI,IAAI,gBACnC,GAAIF,EAASG,IAAMF,EAAO,CACzB,OAAOA,CACR,CACA,MAAM,IAAIG,MAAM,6BAA6B,GAE7CC,MAAOC,IACPlB,EAAIkB,MAAMA,EAAMC,QAAQ,EAE3B,CAQA,WAAcC,CAAKC,EAAaC,GAC/B,OAAOlB,EAAWG,iBAChBI,KAAMY,GACCf,MAAMa,EAAK,CACjBZ,OAAQ,OACRC,QAAS,CACR,eAAgBa,EAChB,eAAgB,oBAEjBC,KAAMC,KAAKC,UAAUJ,MAGtBX,KAAMC,GACCA,EAASe,QAEhBV,MAAOC,IACPlB,EAAIkB,MAAMA,EAAMC,QAAQ,EAE3B,CAOA,cAAcS,CAAQP,GACrB,OAAOb,MAAMa,GACXV,KAAMC,GACCA,EAASe,QAEhBV,MAAOC,IACPlB,EAAIkB,MAAMA,EAAMC,QAAQ,EAE3B,EACA,OAAAf,CAAA","ignoreList":[],"sourceRoot":"utils"}},{"offset":{"line":396,"column":0},"map":{"version":3,"names":["sap","ui","define","ICONS","title","icons","account","wrench","visits","video","temperature","task","synchronize","survey","settings","search","refresh","product","present","pool","picture","phone","pending","past","opportunity","opportunities","notes","map","log","lightbulb","leads","lead","laptop","inbox","history","future","fridge","fallback","employee","email","edit","duplicate","download","dishwasher","delete","decline","complete","competitor","chalkboard","cart","card","camera","calendar","begin","basket","attachment","approvals","appointment","alert","addresses","add","activities","action","accept","hint","group","bed","arobase","favorite","less","lateness","lab","instance","inspection","home","grid","goalseek","flight","filter","factory","endoscopy","electrocardiogram","documents","decision","database","customer","contacts","compare","world","iphone","ipad","warning","sort","print","save","play","pause","record","response","unfavorite","timesheet","list","share","feed","role","flag","post","inspect","comment","collaborate","shortcut","permission","supplier","manager","signature","request","receipt","puzzle","process","private","overlay","meal","loan","performance","menu","education","accelerated","warning2","create","globe","tags","waiver","microphone","tree","theater","taxi","stethoscope","step","sonography","soccer","pharmacy","newspaper","machine","unwired","widgets","wallet","upload","unlocked","umbrella","tag","syringe","syntax","suitcase","simulate","shield","repost","provision","projector","palette","nurse","mileage","measure","locked","letter","inventory","initiative","incident","goal","form","folder","example","eraser","document","doctor","discussion","dimension","crop","collision","curriculum","cause","burglary","building","border","bookmark","badge","paging","explorer","header","collapse","expand","positive","negative","display","menu2","redo","undo","down","up","shelf","background","resize","move","show","hide","error","forward","overflow","dropdown","legend","restart","stop","activate","connected","disconnected","key","minimize","outbox","call","jam","cloud","headset","scissors","sound","co","bell","cancel","customize","copy","paste","reset","checklist","indent","outdent","heading1","heading2","heading3","away","busy","blur","pixelate","strikethrough","text","responsive","validate","touch","combine","split","megamenu","feedback","information","s4hana","translate","technicalsystem","systemjava","systemabap","systemrecommendations","system","systemtrex","systemtracks","technicalscenario","technicalinstance","exceptions","python","user","note","gateway","marquee","more","pattern","arrow","data","swimlane","select","cursor","api","java","block","actor","unit","signal","dependency","generalization","aggregation","composition","association","port","operations","constrains","receptions","references","parts","flow","values","subject","connector","aggregator","splitter","converter","realization","interface","application","network","intranet","antenna","firewall","hub","modem","repeater","router","switch","satellite","insights","BusinessSuiteInAppSymbols","heart","quarter","year","equalizer","component","sms","forklift","coins","program","phase","milestone","bold","italic","underline","segmentation","snapshot","intersection","union","top","bottom","neutral","blocked","pipette","recipe","ingredients","spill","fire","stratification","relationship","increase","decrease","expedite","postpone","approved","submission","birthday","classification","completed","answered","container","products","sidepanel","target","source","material","overdue","alarm","radius","polygon","grip","water","gas","liquid","operator","equipment","section","kohorte","female","male","model","hourglass","tv","radio","outdoor","event","tractor","social","event2","rescheduling","resequencing","driver","overlap","utilization","trailer","railcar","warehouse","goods","ship","contract","reminder","weight","immunization","allergies","rescheduling2","resequencing2","refinery","terminal","vessel","barge","road","pipeline","delay","causes","effects","rfid","input","lighthouse","__exports","__esModule"],"sources":["IconList.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nexport const ICONS: Icons = {\n\t\"SAP-icons\": {\n\t\ttitle: \"SAP Icons\",\n\t\ticons: {\n\t\t\t\"accidental-leave\": [\"accidental\", \"leave\", \"medical\", \"cross\", \"plus\", \"emergency\", \"hospital\"],\n\t\t\taccount: [\"user\", \"menu\", \"settings\"],\n\t\t\twrench: [\"wrench\", \"control\", \"configuration\", \"settings\", \"tool\"],\n\t\t\t\"windows-doors\": [\"window\", \"door\", \"entry\"],\n\t\t\t\"washing-machine\": [\"washing\", \"machine\", \"laundry\", \"clean\", \"wash\", \"purify\"],\n\t\t\tvisits: [\"user\", \"arrow\", \"door\", \"visit\", \"login\", \"entry\"],\n\t\t\tvideo: [\"camera\", \"recorder\", \"video\", \"movie\", \"clip\"],\n\t\t\t\"travel-expense\": [\n\t\t\t\t\"plane\",\n\t\t\t\t\"dollar\",\n\t\t\t\t\"money\",\n\t\t\t\t\"trip\",\n\t\t\t\t\"expense\",\n\t\t\t\t\"travel\",\n\t\t\t\t\"holiday\",\n\t\t\t\t\"flight\",\n\t\t\t\t\"budget\",\n\t\t\t\t\"billing\",\n\t\t\t\t\"invoice\",\n\t\t\t\t\"cost\",\n\t\t\t\t\"payments\"\n\t\t\t],\n\t\t\ttemperature: [\"temperature\", \"hot\", \"heat\", \"cold\", \"cool\", \"illness\", \"sickness\", \"health\", \"medical\"],\n\t\t\ttask: [\"clipboard\", \"task\", \"checkbox\", \"checklist\", \"list\", \"checkmark\"],\n\t\t\tsynchronize: [\"synchronize\", \"reload\", \"refresh\", \"arrow\"],\n\t\t\tsurvey: [\"survey\", \"form\", \"checklist\", \"list\", \"checkbox\", \"checkmark\", \"x\"],\n\t\t\tsettings: [\"cogwheels\", \"configuration\", \"settings\", \"tools\", \"modify\", \"customize\"],\n\t\t\tsearch: [\"search\", \"magnifier\", \"glass\"],\n\t\t\t\"sales-document\": [\"document\", \"page\", \"file\", \"text\", \"sales\", \"money\"],\n\t\t\t\"retail-store\": [\"shop\", \"store\", \"retail\", \"market\"],\n\t\t\trefresh: [\"reload\", \"refresh\", \"arrow\"],\n\t\t\tproduct: [\"product\", \"commodity\", \"goods\", \"stock\", \"merchandise\", \"package\"],\n\t\t\tpresent: [\"time\", \"clock\", \"star\", \"current\", \"present\"],\n\t\t\t\"ppt-attachment\": [\"document\", \"page\", \"file\", \"attachment\", \"ppt\", \"powerpoint\"],\n\t\t\tpool: [\"pool\", \"basin\", \"swim\"],\n\t\t\t\"pie-chart\": [\"analytics\", \"chart\", \"display\", \"data\", \"pie\", \"segments\"],\n\t\t\tpicture: [\"picture\", \"photo\", \"photograph\", \"shot\", \"image\"],\n\t\t\t\"photo-voltaic\": [\"photovoltaic\", \"voltaic\", \"electricity\", \"power\", \"solar\", \"panel\", \"sun\"],\n\t\t\tphone: [\"phone\", \"telephone\", \"landline\", \"number\", \"call\", \"dial\"],\n\t\t\tpending: [\"time\", \"clock\", \"pend\", \"pending\", \"awaiting\", \"unresolved\", \"unsettled\"],\n\t\t\t\"pdf-attachment\": [\"document\", \"page\", \"file\", \"attachment\", \"pdf\"],\n\t\t\tpast: [\"time\", \"clock\", \"past\", \"bygone\", \"former\", \"late\"],\n\t\t\t\"outgoing-call\": [\"call\", \"communicate\", \"phone\", \"telephone\", \"outgoing\", \"arrow\"],\n\t\t\topportunity: [\"chart\", \"line\", \"star\", \"opportunity\", \"stock\", \"market\", \"exchange\", \"trade\"],\n\t\t\topportunities: [\"user\", \"person\", \"dollar\", \"equal to\", \"opportunity\"],\n\t\t\tnotes: [\"notes\", \"marks\", \"info\", \"draft\"],\n\t\t\t\"money-bills\": [\"money\", \"cash\", \"payment\", \"bills\", \"dollar\"],\n\t\t\tmap: [\"map\", \"pin\", \"loaction\", \"place\", \"area\"],\n\t\t\tlog: [\"log\", \"logout\", \"log on\", \"log off\"],\n\t\t\t\"line-charts\": [\"analytics\", \"chart\", \"display\", \"data\"],\n\t\t\tlightbulb: [\"lightbulb\", \"light\", \"lamp\", \"idea\"],\n\t\t\tleads: [\"user\", \"person\", \"leads\", \"star\", \"equal to\"],\n\t\t\tlead: [\"money\", \"dollar\", \"currency\", \"payment\"],\n\t\t\tlaptop: [\"laptop\", \"device\", \"computer\"],\n\t\t\t\"kpi-managing-my-area\": [\"user\", \"person\", \"kpi\", \"checkmark\", \"equal to\"],\n\t\t\t\"kpi-corporate-performance\": [\"chart\", \"line\", \"kpi\", \"checkmark\", \"performance\"],\n\t\t\t\"incoming-call\": [\"call\", \"communicate\", \"incoming\", \"phone\", \"telephone\", \"arrow\"],\n\t\t\tinbox: [\"inbox\", \"in\", \"arrow\"],\n\t\t\t\"horizontal-bar-chart\": [\"analytics\", \"chart\", \"display\", \"data\", \"bar\", \"horizontal\"],\n\t\t\thistory: [\"time\", \"clock\", \"history\", \"past\", \"chronicle\"],\n\t\t\t\"heating-cooling\": [\"temperature\", \"air conditioning\", \"ac\", \"heat\", \"cold\", \"sun\", \"snowflake\"],\n\t\t\t\"gantt-bars\": [\"calendar\", \"gantt\", \"bars\", \"gantt bars\", \"chart\", \"schedule\"],\n\t\t\tfuture: [\"time\", \"clock\", \"arrow\", \"future\", \"hereafter\"],\n\t\t\tfridge: [\"fridge\", \"refrigerator\", \"icebox\", \"freezer\", \"cooler\", \"appliance\"],\n\t\t\tfallback: [\"folder\", \"fallback\", \"marked\", \"object\"],\n\t\t\t\"expense-report\": [\"expense\", \"report\", \"documents\", \"money\", \"dollar\"],\n\t\t\t\"excel-attachment\": [\"document\", \"page\", \"file\", \"attachment\", \"excel\", \"spreadsheet\", \"accounting\"],\n\t\t\t\"energy-saving-lightbulb\": [\"lightbulb\", \"light\", \"lamp\", \"idea\", \"eco\", \"energy saving\"],\n\t\t\temployee: [\"user\", \"person\", \"employee\", \"member\", \"operator\", \"representative\"],\n\t\t\temail: [\"envelope\", \"email\", \"e-mail\", \"electronic mail\", \"mail\", \"correspondence\"],\n\t\t\tedit: [\"pencil\", \"pen\", \"write\", \"edit\", \"modify\", \"text\"],\n\t\t\tduplicate: [\"duplicate\", \"objects\", \"arrow\"],\n\t\t\tdownload: [\"download\", \"arrow\"],\n\t\t\t\"doc-attachment\": [\"document\", \"page\", \"file\", \"attachment\", \"word\", \"text\"],\n\t\t\tdishwasher: [\"dishwasher\", \"dish\", \"wash\", \"appliance\"],\n\t\t\tdelete: [\"bin\", \"trash can\", \"rubbish\", \"delete\"],\n\t\t\tdecline: [\"reject\", \"close\", \"remove\", \"cancel\", \"x\"],\n\t\t\tcomplete: [\"complete\", \"checkmark\", \"tick\", \"affirmative\", \"enter\", \"finish\"],\n\t\t\tcompetitor: [\"competitor\", \"winner\", \"prize\", \"award\", \"trophy\", \"cup\"],\n\t\t\t\"collections-management\": [\"calculator\", \"counting\", \"simulate\", \"collections management\", \"total\", \"accounting\"],\n\t\t\tchalkboard: [\"chalkboard\", \"education\", \"teaching\", \"learning\", \"classroom\", \"school\", \"college\"],\n\t\t\tcart: [\"cart\", \"trolley\", \"basket\", \"shopping\"],\n\t\t\tcard: [\"image\", \"placeholder\", \"picture\", \"hills\", \"mountains\", \"sun\", \"card\"],\n\t\t\tcamera: [\"camera\", \"photograph\", \"device\", \"image\", \"snap shot\"],\n\t\t\tcalendar: [\"calendar\"],\n\t\t\tbegin: [\"begin\", \"start\", \"arrows\"],\n\t\t\tbasket: [\"basket\", \"shopping\"],\n\t\t\t\"bar-chart\": [\"analytics\", \"chart\", \"display\", \"data\"],\n\t\t\tattachment: [\"attach\", \"file\", \"paper clip\"],\n\t\t\t\"arrow-top\": [\"arrow top\", \"up\"],\n\t\t\t\"arrow-right\": [\"arrow right\"],\n\t\t\t\"arrow-left\": [\"arrow left\"],\n\t\t\t\"arrow-bottom\": [\"arrow bottom\", \"down\"],\n\t\t\tapprovals: [\"form\", \"details\", \"text\", \"approvals\", \"accepted\", \"checkmark\"],\n\t\t\tappointment: [\"date picker\", \"calendar\", \"month\", \"week\", \"day\", \"appointment\"],\n\t\t\t\"alphabetical-order\": [\"function\", \"alphabet\", \"letters\", \"a to z\", \"descending\", \"sorting\", \"order\"],\n\t\t\t\"along-stacked-chart\": [\"analytics\", \"chart\", \"display\", \"data\"],\n\t\t\talert: [\"message\", \"warning\", \"critical\", \"notifications\", \"status\"],\n\t\t\taddresses: [\"customers\", \"contacts\", \"addresses\", \"email\", \"e-mail\", \"directory\", \"companies\", \"houses\", \"homes\"],\n\t\t\t\"address-book\": [\"customers\", \"contacts\", \"addresses\", \"email\", \"e-mail\", \"directory\", \"companies\", \"@\", \"at\"],\n\t\t\t\"add-filter\": [\"filter\", \"organise\", \"aggregate\", \"data\", \"add\", \"plus\", \"additional\", \"another\", \"more\"],\n\t\t\t\"add-favorite\": [\"favorite\", \"favourite\", \"star\", \"add\", \"plus\", \"additional\", \"another\", \"more\"],\n\t\t\tadd: [\"add\", \"plus\", \"additional\", \"another\", \"more\", \"add row\", \"add object\", \"add item\"],\n\t\t\tactivities: [\"activities\", \"tasks\", \"to do\", \"list\"],\n\t\t\taction: [\"actions\", \"collection\", \"share options\", \"forward actions\", \"more actions\", \"arrow\"],\n\t\t\taccept: [\"accept\", \"approve\", \"correct\", \"checkmark\", \"tick\", \"affirmative\"],\n\t\t\thint: [\"information\", \"hint\", \"about\", \"details\"],\n\t\t\tgroup: [\n\t\t\t\t\"group\",\n\t\t\t\t\"team\",\n\t\t\t\t\"people\",\n\t\t\t\t\"communication\",\n\t\t\t\t\"collaborate\",\n\t\t\t\t\"teamwork\",\n\t\t\t\t\"peer to peer\",\n\t\t\t\t\"design thinking\",\n\t\t\t\t\"work\",\n\t\t\t\t\"together\",\n\t\t\t\t\"project\",\n\t\t\t\t\"customers\",\n\t\t\t\t\"audience\",\n\t\t\t\t\"category\"\n\t\t\t],\n\t\t\t\"check-availability\": [\n\t\t\t\t\"date picker\",\n\t\t\t\t\"calendar\",\n\t\t\t\t\"month\",\n\t\t\t\t\"week\",\n\t\t\t\t\"day\",\n\t\t\t\t\"appointment\",\n\t\t\t\t\"search\",\n\t\t\t\t\"look up\",\n\t\t\t\t\"check\",\n\t\t\t\t\"availability\",\n\t\t\t\t\"find\"\n\t\t\t],\n\t\t\t\"weather-proofing\": [\"weather\", \"proofing\", \"protection\"],\n\t\t\t\"payment-approval\": [\"sales\", \"simple payment\", \"money\", \"bill\", \"details\", \"quote\", \"accept\", \"approval\", \"checkmark\"],\n\t\t\t\"batch-payments\": [\"folder\", \"open\", \"money\", \"documents\"],\n\t\t\tbed: [\"bed\", \"sleep\", \"ill\", \"hospital\", \"sick\", \"medical\", \"tired\", \"snooze\", \"night\"],\n\t\t\tarobase: [\"at\", \"@\", \"email\", \"address\"],\n\t\t\t\"family-care\": [\"family\", \"protection\", \"people\", \"family\"],\n\t\t\tfavorite: [\"favorite\", \"favourite\", \"star\"],\n\t\t\t\"navigation-right-arrow\": [\"navigation\", \"right\", \"expand\", \"collapsed tree\", \"tree arrow\", \"arrow\"],\n\t\t\t\"navigation-left-arrow\": [\"navigation\", \"left\", \"arrow\"],\n\t\t\t\"e-care\": [\n\t\t\t\t\"e care\",\n\t\t\t\t\"digital customer care\",\n\t\t\t\t\"service\",\n\t\t\t\t\"electronic\",\n\t\t\t\t\"leaf\",\n\t\t\t\t\"leaves\",\n\t\t\t\t\"nature\",\n\t\t\t\t\"organic\",\n\t\t\t\t\"health\",\n\t\t\t\t\"environment\"\n\t\t\t],\n\t\t\tless: [\"less\", \"minus\", \"subtract\"],\n\t\t\tlateness: [\"time\", \"timer\", \"waiting\", \"lateness\", \"loading\", \"hour glass\", \"sand\", \"out of time\"],\n\t\t\tlab: [\"lab\", \"chemicals\", \"liquid\", \"mixture\", \"chemistry\", \"science\", \"laboratory\"],\n\t\t\t\"internet-browser\": [\"screen\", \"internet\", \"website\", \"browser\", \"web app\", \"globe\", \"www\", \"html\"],\n\t\t\tinstance: [\"instance\", \"process\", \"clock\", \"chevron\"],\n\t\t\tinspection: [\"search\", \"document\", \"inspect\"],\n\t\t\t\"image-viewer\": [\"image\", \"placeholder\", \"picture\", \"hills\", \"mountains\", \"sun\", \"viewer\", \"carousel\", \"lightbox\"],\n\t\t\thome: [\"home\", \"house\", \"index\", \"landing page\", \"start\", \"main\"],\n\t\t\tgrid: [\"grid\", \"waffle\", \"layout\", \"boxes\", \"squares\", \"modular\"],\n\t\t\tgoalseek: [\"goal\", \"goalseek\", \"target\", \"result\", \"objective\", \"aim\"],\n\t\t\t\"general-leave-request\": [\"holiday\", \"vacation\", \"leave\", \"request\", \"deck\", \"chair\", \"sun\", \"create\"],\n\t\t\t\"create-leave-request\": [\n\t\t\t\t\"holiday\",\n\t\t\t\t\"vacation\",\n\t\t\t\t\"leave\",\n\t\t\t\t\"request\",\n\t\t\t\t\"deck chair\",\n\t\t\t\t\"sun\",\n\t\t\t\t\"create\",\n\t\t\t\t\"add\",\n\t\t\t\t\"plus\",\n\t\t\t\t\"additional\",\n\t\t\t\t\"another\",\n\t\t\t\t\"more\"\n\t\t\t],\n\t\t\tflight: [\"plane\", \"trip\", \"travel\", \"holiday\", \"flight\", \"Aeroplane\", \"transit\", \"shipment\"],\n\t\t\tfilter: [\"filter\", \"organise\", \"aggregate\", \"data\"],\n\t\t\t\"favorite-list\": [\"favorite\", \"favourite\", \"star\", \"menu\", \"list\"],\n\t\t\tfactory: [\"factory\", \"production\", \"supplier\", \"manufacturing\"],\n\t\t\tendoscopy: [\"endoscopy\", \"medical\", \"procedure\"],\n\t\t\t\"employee-pane\": [\"user\", \"person\", \"employee\", \"member\", \"operator\", \"representative\", \"profile\", \"me\"],\n\t\t\t\"employee-approvals\": [\"person\", \"accept\", \"approval\", \"employee\", \"hr\", \"human resources\"],\n\t\t\t\"email-read\": [\"mail\", \"letter\", \"e-mail\", \"envelope\", \"open\", \"read\"],\n\t\t\telectrocardiogram: [\"electrocardiogram\", \"heart\", \"scan\", \"monitor\", \"medical\"],\n\t\t\tdocuments: [\"document\", \"page\", \"file\", \"attachment\", \"documents\"],\n\t\t\tdecision: [\"hand shake\", \"decision\", \"hands\", \"agreement\", \"colleagues\", \"contract\"],\n\t\t\tdatabase: [\"database\", \"big data\", \"cube\", \"complex\", \"complicated\", \"simple\", \"information\", \"backend\"],\n\t\t\t\"customer-history\": [\"person\", \"history\", \"customer\", \"user\", \"clock\", \"account\"],\n\t\t\tcustomer: [\"person\", \"individual\", \"user\", \"customer\", \"human\", \"circle\", \"profile\", \"me\"],\n\t\t\t\"credit-card\": [\"credit card\", \"master-card\", \"money\", \"debit\", \"order\", \"buy\", \"purchase\", \"shopping\", \"book online\"],\n\t\t\t\"create-entry-time\": [\n\t\t\t\t\"document\",\n\t\t\t\t\"page\",\n\t\t\t\t\"file\",\n\t\t\t\t\"attachment\",\n\t\t\t\t\"timesheet\",\n\t\t\t\t\"clock\",\n\t\t\t\t\"hours\",\n\t\t\t\t\"days\",\n\t\t\t\t\"workday\",\n\t\t\t\t\"create entry time\",\n\t\t\t\t\"add\",\n\t\t\t\t\"plus\",\n\t\t\t\t\"additional\",\n\t\t\t\t\"another\",\n\t\t\t\t\"more\"\n\t\t\t],\n\t\t\tcontacts: [\"customers\", \"contacts\", \"address\", \"email\", \"e-mail\", \"phone book\", \"directory\", \"phone numbers\", \"companies\"],\n\t\t\tcompare: [\"compare\", \"law\", \"justice\", \"scale\", \"measure\", \"weight\", \"balance\", \"compare\", \"comparison\"],\n\t\t\t\"clinical-order\": [\"document\", \"page\", \"file\", \"text\", \"medical\", \"clinical\"],\n\t\t\t\"chain-link\": [\"link\", \"chain\", \"hyperlink\"],\n\t\t\t\"pull-down\": [\"navigation\", \"pull down\", \"refresh\", \"arrow\"],\n\t\t\t\"cargo-train\": [\"train\", \"cargo\", \"delivery\", \"transit\"],\n\t\t\t\"car-rental\": [\"car\", \"auto\", \"rental\", \"company car\", \"hire\", \"vehicle\", \"transportation\"],\n\t\t\t\"business-card\": [\n\t\t\t\t\"business card\",\n\t\t\t\t\"contact\",\n\t\t\t\t\"networking\",\n\t\t\t\t\"colleague\",\n\t\t\t\t\"person\",\n\t\t\t\t\"address\",\n\t\t\t\t\"identification\",\n\t\t\t\t\"details\",\n\t\t\t\t\"profile\"\n\t\t\t],\n\t\t\t\"bar-code\": [\"bar code\", \"document\", \"file\", \"scan\", \"verify\"],\n\t\t\t\"folder-blank\": [\"folder\", \"blank\"],\n\t\t\t\"passenger-train\": [\"train\", \"public transportation\", \"passenger\"],\n\t\t\t\"question-mark\": [\"message\", \"question mark\", \"neutral\", \"notifications\", \"status\"],\n\t\t\tworld: [\"globe\", \"world\", \"goegraphical\", \"earth\", \"planet\", \"international\", \"global\"],\n\t\t\tiphone: [\"iphone\", \"phone\", \"smart phone\", \"portrait\", \"tablet\", \"mobile\", \"responsive\", \"cozy\"],\n\t\t\tipad: [\"ipad\", \"tablet\", \"portrait\", \"mobile\", \"responsive\", \"cozy\"],\n\t\t\twarning: [\"warning\", \"exclamation mark\", \"indicator\", \"information\"],\n\t\t\tsort: [\"sort\", \"aggregate\", \"ascending\", \"descending\", \"arrow\"],\n\t\t\t\"course-book\": [\"education\", \"course\", \"learning\", \"e book\", \"bookmark\", \"open\", \"knowledge\", \"course book\", \"program\"],\n\t\t\t\"course-program\": [\n\t\t\t\t\"document\",\n\t\t\t\t\"page\",\n\t\t\t\t\"file\",\n\t\t\t\t\"attachment\",\n\t\t\t\t\"course\",\n\t\t\t\t\"education\",\n\t\t\t\t\"course\",\n\t\t\t\t\"learning\",\n\t\t\t\t\"e book\",\n\t\t\t\t\"bookmark\",\n\t\t\t\t\"open\",\n\t\t\t\t\"knowledge\",\n\t\t\t\t\"coursebook\",\n\t\t\t\t\"program\"\n\t\t\t],\n\t\t\t\"add-coursebook\": [\n\t\t\t\t\"education\",\n\t\t\t\t\"course\",\n\t\t\t\t\"learning\",\n\t\t\t\t\"e book\",\n\t\t\t\t\"bookmark\",\n\t\t\t\t\"open\",\n\t\t\t\t\"knowledge\",\n\t\t\t\t\"course book\",\n\t\t\t\t\"program\",\n\t\t\t\t\"add\",\n\t\t\t\t\"plus\",\n\t\t\t\t\"additional\",\n\t\t\t\t\"another\",\n\t\t\t\t\"more\"\n\t\t\t],\n\t\t\tprint: [\"print\", \"printer\", \"send to print\", \"hard copy\", \"output\", \"paper\", \"document\", \"file\"],\n\t\t\tsave: [\"save\", \"diskette\", \"floppy disc\", \"local disc\", \"hard disc\"],\n\t\t\tplay: [\"play\"],\n\t\t\tpause: [\"pause\"],\n\t\t\trecord: [\"record\"],\n\t\t\tresponse: [\"reply\", \"response\", \"arrow\"],\n\t\t\t\"pushpin-on\": [\n\t\t\t\t\"document\",\n\t\t\t\t\"page\",\n\t\t\t\t\"file\",\n\t\t\t\t\"attachment\",\n\t\t\t\t\"pin\",\n\t\t\t\t\"pushpin\",\n\t\t\t\t\"stick\",\n\t\t\t\t\"unstick\",\n\t\t\t\t\"snap\",\n\t\t\t\t\"remove pin\",\n\t\t\t\t\"unpin\",\n\t\t\t\t\"off\",\n\t\t\t\t\"on\"\n\t\t\t],\n\t\t\t\"pushpin-off\": [\"pin\", \"pushpin\", \"stick\", \"unstick\", \"snap\", \"remove pin\", \"unpin\", \"off\", \"on\"],\n\t\t\tunfavorite: [\"remove\", \"unfavorite\", \"star\"],\n\t\t\t\"learning-assistant\": [\n\t\t\t\t\"education\",\n\t\t\t\t\"course\",\n\t\t\t\t\"learning\",\n\t\t\t\t\"e book\",\n\t\t\t\t\"bookmark\",\n\t\t\t\t\"open\",\n\t\t\t\t\"knowledge\",\n\t\t\t\t\"school\",\n\t\t\t\t\"college\",\n\t\t\t\t\"help\",\n\t\t\t\t\"tutor\",\n\t\t\t\t\"assistant\",\n\t\t\t\t\"teacher\",\n\t\t\t\t\"professor\"\n\t\t\t],\n\t\t\ttimesheet: [\"document\", \"page\", \"file\", \"attachment\", \"timesheet\", \"clock\", \"hours\", \"days\", \"workday\"],\n\t\t\t\"time-entry-request\": [\"time\", \"entry\", \"request\", \"clock\", \"list\"],\n\t\t\tlist: [\"list\", \"text\", \"ordered\"],\n\t\t\t\"action-settings\": [\"settings\", \"cogwheel\", \"configuration\", \"tools\", \"modify\", \"customize\"],\n\t\t\tshare: [\"share\", \"reshare\", \"distribute\", \"arrow\"],\n\t\t\tfeed: [\"feed\", \"messages\", \"input\", \"news\", \"updates\", \"latest\", \"real-time\"],\n\t\t\trole: [\"person\", \"individual\", \"user\", \"customer\", \"permission\", \"access\", \"granted\", \"open\", \"restrictions\", \"unlocked\"],\n\t\t\tflag: [\"flag\", \"mark\", \"marker\", \"important\"],\n\t\t\tpost: [\"speech\", \"bubble\", \"comment\", \"post\"],\n\t\t\tinspect: [\"inspect\", \"dialog\", \"popup\", \"popout\", \"arrow\"],\n\t\t\t\"inspect-down\": [\"cancel\", \"x\", \"close\", \"dialog\", \"popup\"],\n\t\t\t\"appointment-2\": [\"date picker\", \"calendar\", \"month\", \"week\", \"day\", \"appointment\"],\n\t\t\t\"target-group\": [\"arrow\", \"dart\", \"dartboard\", \"target group\", \"goal\", \"audience\", \"specific\"],\n\t\t\t\"marketing-campaign\": [\"marketing campaign\", \"loud speaker\", \"megaphone\", \"notify\", \"announcenment\", \"public address\"],\n\t\t\t\"message-error\": [\"message\", \"error\", \"negative\", \"notifications\", \"status\"],\n\t\t\tcomment: [\"speech\", \"bubble\", \"comment\", \"discussion\"],\n\t\t\t\"shipping-status\": [\"shipping status\", \"truck\", \"products\", \"delivery\", \"supplier\", \"transit\", \"lorry\", \"van\", \"shipment\"],\n\t\t\tcollaborate: [\n\t\t\t\t\"group\",\n\t\t\t\t\"team\",\n\t\t\t\t\"people\",\n\t\t\t\t\"colleagues\",\n\t\t\t\t\"communication\",\n\t\t\t\t\"collaborate\",\n\t\t\t\t\"teamwork\",\n\t\t\t\t\"peer to peer\",\n\t\t\t\t\"design thinking\",\n\t\t\t\t\"work\",\n\t\t\t\t\"together\",\n\t\t\t\t\"project\"\n\t\t\t],\n\t\t\tshortcut: [\"shortcut\", \"redirect\", \"arrow\"],\n\t\t\t\"lead-outdated\": [\"lead outdated\", \"circle\", \"dollar\"],\n\t\t\t\"tools-opportunity\": [\"analytics\", \"chart\", \"display\", \"data\", \"overview\", \"map\", \"org\", \"tree\"],\n\t\t\tpermission: [\"document\", \"page\", \"file\", \"permission\", \"access\", \"granted\", \"open\", \"restrictions\", \"unlocked\"],\n\t\t\tsupplier: [\n\t\t\t\t\"supplier\",\n\t\t\t\t\"package\",\n\t\t\t\t\"product\",\n\t\t\t\t\"satisfaction\",\n\t\t\t\t\"returns\",\n\t\t\t\t\"deliveries\",\n\t\t\t\t\"warehouse\",\n\t\t\t\t\"person\",\n\t\t\t\t\"seller\",\n\t\t\t\t\"buyer\",\n\t\t\t\t\"inventory\"\n\t\t\t],\n\t\t\t\"table-view\": [\"analytics\", \"chart\", \"display\", \"data\", \"table\", \"grid\", \"waffle\", \"view\", \"columns\", \"rows\"],\n\t\t\t\"table-chart\": [\"analytics\", \"chart\", \"display\", \"data\", \"table\", \"columns\", \"rows\", \"grid\", \"waffle\", \"view\"],\n\t\t\t\"switch-views\": [\"switch\", \"views\", \"objects\", \"arrange\"],\n\t\t\t\"e-learning\": [\n\t\t\t\t\"education\",\n\t\t\t\t\"course\",\n\t\t\t\t\"e learning\",\n\t\t\t\t\"e book\",\n\t\t\t\t\"bookmark\",\n\t\t\t\t\"open\",\n\t\t\t\t\"knowledge\",\n\t\t\t\t\"school\",\n\t\t\t\t\"college\",\n\t\t\t\t\"computer\",\n\t\t\t\t\"screen\"\n\t\t\t],\n\t\t\tmanager: [\n\t\t\t\t\"manager\",\n\t\t\t\t\"company\",\n\t\t\t\t\"overview\",\n\t\t\t\t\"inform\",\n\t\t\t\t\"board\",\n\t\t\t\t\"leader\",\n\t\t\t\t\"conference\",\n\t\t\t\t\"meeting\",\n\t\t\t\t\"keynote\",\n\t\t\t\t\"speech\",\n\t\t\t\t\"presentation\"\n\t\t\t],\n\t\t\t\"switch-classes\": [\"switch\", \"views\", \"objects\", \"arrange\", \"classes\"],\n\t\t\t\"simple-payment\": [\"sales\", \"simple payment\", \"money\", \"bill\", \"details\", \"quote\"],\n\t\t\tsignature: [\"pencil\", \"pen\", \"signature\", \"sign\"],\n\t\t\t\"sales-order-item\": [\"document\", \"page\", \"file\", \"sales order item\", \"money\", \"bill\", \"details\", \"quote\"],\n\t\t\t\"sales-order\": [\"document\", \"page\", \"file\", \"sales order\", \"money\", \"bill\", \"details\", \"quote\"],\n\t\t\trequest: [\"document\", \"page\", \"file\", \"text\", \"edit\", \"write\", \"new\", \"pencil\", \"pen\", \"request\"],\n\t\t\treceipt: [\"money\", \"bill\", \"details\", \"proof\", \"sale\", \"receipt\"],\n\t\t\tpuzzle: [\"puzzle\", \"pieces\", \"fit\", \"together\", \"jigsaw\", \"thinking\", \"objects\", \"challenge\"],\n\t\t\tprocess: [\"process\", \"flow\", \"arrow\", \"chevron\"],\n\t\t\tprivate: [\n\t\t\t\t\"person\",\n\t\t\t\t\"individual\",\n\t\t\t\t\"user\",\n\t\t\t\t\"customer\",\n\t\t\t\t\"human\",\n\t\t\t\t\"locked\",\n\t\t\t\t\"in use\",\n\t\t\t\t\"occupied\",\n\t\t\t\t\"restricted\",\n\t\t\t\t\"private\",\n\t\t\t\t\"forbidden\"\n\t\t\t],\n\t\t\t\"popup-window\": [\"computer\", \"dialog\", \"popup\", \"window\", \"screen\", \"popout\"],\n\t\t\t\"person-placeholder\": [\"person\", \"individual\", \"user\", \"customer\", \"human\", \"profile\", \"me\"],\n\t\t\t\"per-diem\": [\"euro\", \"time\", \"per diem\", \"calendar\"],\n\t\t\t\"paper-plane\": [\"send\", \"flight\", \"paper\", \"plane\", \"fly\", \"message\", \"note\", \"folded\"],\n\t\t\t\"paid-leave\": [\"paid leave\", \"money\", \"dollar\", \"bill\", \"approved\"],\n\t\t\t\"pdf-reader\": [\"pdf reader\", \"document\", \"display\", \"file\"],\n\t\t\t\"overview-chart\": [\"analytics\", \"chart\", \"display\", \"data\", \"overview\", \"map\", \"org\"],\n\t\t\toverlay: [\"overlay\", \"circle\", \"dot\"],\n\t\t\t\"org-chart\": [\"analytics\", \"chart\", \"display\", \"data\", \"overview\", \"map\", \"org\", \"tree\"],\n\t\t\t\"number-sign\": [\"number sign\", \"hash\", \"#'\"],\n\t\t\t\"notification-2\": [\"speech\", \"bubble\", \"comment\", \"discussion\", \"notification\"],\n\t\t\t\"my-sales-order\": [\"document\", \"page\", \"sales\", \"order\", \"money\", \"bill\", \"details\", \"quote\", \"invoice\"],\n\t\t\tmeal: [\"meal\", \"knife and fork\", \"dinner\", \"lunch\", \"eating\", \"dine\", \"expenses\"],\n\t\t\tloan: [\"money bag\", \"bank\", \"dollar\", \"tag\"],\n\t\t\t\"order-status\": [\"document\", \"page\", \"file\", \"attachment\", \"order\", \"status\"],\n\t\t\t\"customer-order-entry\": [\"sign\", \"signature\", \"order\", \"entry\", \"customer\", \"contract\", \"agreement\"],\n\t\t\tperformance: [\"gauge\", \"measure\", \"speed\", \"monitor\", \"performance\"],\n\t\t\tmenu: [\"menu\", \"list\"],\n\t\t\t\"employee-lookup\": [\"customer\", \"user\", \"person\", \"individual\", \"contacts\", \"look up\", \"find\", \"search\"],\n\t\t\teducation: [\"education\", \"course\", \"learning\", \"e book\", \"bookmark\", \"open\", \"knowledge\", \"school\", \"college\"],\n\t\t\t\"customer-briefing\": [\"customer\", \"user\", \"person\", \"individual\", \"contacts\", \"address\", \"email\", \"e-mail\", \"briefing\"],\n\t\t\t\"customer-and-contacts\": [\"customer\", \"user\", \"person\", \"individual\", \"contacts\", \"address\", \"email\", \"e-mail\"],\n\t\t\t\"my-view\": [\"my view\", \"person\", \"profile\", \"tv\", \"monitor\", \"video call\", \"individual\", \"cutomer\", \"user\"],\n\t\t\taccelerated: [\"calendar\", \"time\", \"speed\"],\n\t\t\t\"to-be-reviewed\": [\"to be reviewed\", \"indicator\", \"information\"],\n\t\t\twarning2: [\"warning\", \"to be reviewed\", \"indicator\", \"information\"],\n\t\t\t\"feeder-arrow\": [\"feeder\", \"arrow\", \"input\", \"enter text\", \"execute\", \"send\"],\n\t\t\t\"quality-issue\": [\"quality issue\", \"warning\", \"problem\", \"attention\", \"status\", \"details\"],\n\t\t\t\"workflow-tasks\": [\"calendar\", \"workflow\", \"task\", \"process\", \"steps\", \"project\"],\n\t\t\tcreate: [\"document\", \"page\", \"file\", \"attachment\", \"create\", \"new\"],\n\t\t\t\"home-share\": [\"globe\", \"world\", \"goegraphical\", \"earth\", \"planet\", \"share\", \"global distribution\", \"arrow\"],\n\t\t\tglobe: [\"globe\", \"world\", \"goegraphical\", \"earth\", \"planet\", \"international\", \"global\"],\n\t\t\ttags: [\"tag\", \"label\", \"marker\", \"indicator\", \"detail\"],\n\t\t\t\"work-history\": [\"folder\", \"person\", \"work history\"],\n\t\t\t\"x-ray\": [\"x ray\", \"procedure\", \"scan\", \"medical\"],\n\t\t\t\"wounds-doc\": [\"wounds\", \"doc\", \"injury\", \"accident\", \"hospital\", \"patient\", \"emergency\", \"health\", \"illness\", \"cross\"],\n\t\t\t\"web-cam\": [\"web cam\", \"camera\", \"live\", \"video\", \"visual\"],\n\t\t\twaiver: [\"waiver\", \"money bag\", \"percentage\"],\n\t\t\t\"vertical-bar-chart\": [\"analytics\", \"chart\", \"display\", \"data\", \"bar\", \"vertical\"],\n\t\t\t\"upstacked-chart\": [\"analytics\", \"chart\", \"display\", \"data\", \"upstacked\"],\n\t\t\t\"trip-report\": [\"analytics\", \"chart\", \"display\", \"data\", \"suitcase\", \"trip\", \"report\", \"business trip\"],\n\t\t\tmicrophone: [\"microphone\", \"mic\", \"keynote\", \"announcement\", \"speech\", \"talk\", \"audio\", \"dictate\", \"record\"],\n\t\t\t\"unpaid-leave\": [\"unpaid leave\", \"money\", \"dollar\", \"bill\", \"rejected\"],\n\t\t\ttree: [\"analytics\", \"chart\", \"display\", \"data\", \"overview\", \"map\", \"org\", \"tree\"],\n\t\t\t\"toaster-up\": [\"toaster\", \"up\", \"details\"],\n\t\t\t\"toaster-top\": [\"toaster\", \"top\", \"details\"],\n\t\t\t\"toaster-down\": [\"toaster\", \"down\", \"details\"],\n\t\t\t\"time-account\": [\"time\", \"account\", \"clock\", \"list\"],\n\t\t\ttheater: [\"theater\", \"show\", \"play\", \"masks\"],\n\t\t\ttaxi: [\"car\", \"taxi\", \"cab\", \"transportation\"],\n\t\t\t\"subway-train\": [\"subway train\", \"underground\", \"tube\"],\n\t\t\t\"study-leave\": [\"study\", \"education\", \"graduate\", \"school\", \"college\", \"student\", \"qualification\"],\n\t\t\tstethoscope: [\"stethoscope\", \"medical\", \"health\", \"doctor\", \"hospital\", \"nurse\"],\n\t\t\tstep: [\"process\", \"flow\", \"step\", \"arrow\"],\n\t\t\tsonography: [\"sonography\", \"medical\", \"ultrasound\", \"ultrasonography\"],\n\t\t\tsoccer: [\"soccer\", \"ball\", \"football\", \"world cup\"],\n\t\t\t\"physical-activity\": [\"physical activity\", \"runing\", \"run\", \"jogging\"],\n\t\t\tpharmacy: [\"medicine\", \"pills\", \"drugs\", \"pharmacy\", \"pain\", \"medication\"],\n\t\t\t\"official-service\": [\"official\", \"service\", \"government\", \"court house\", \"law\", \"legal\", \"authority\", \"official\"],\n\t\t\t\"offsite-work\": [\"offsite work\", \"external\", \"company\", \"office\", \"outside\"],\n\t\t\t\"nutrition-activity\": [\"apple\", \"nutrition\", \"activity\", \"health\", \"fruit\"],\n\t\t\tnewspaper: [\"newspaper\", \"headlines\", \"latest\", \"updates\"],\n\t\t\t\"monitor-payments\": [\n\t\t\t\t\"report\",\n\t\t\t\t\"bill\",\n\t\t\t\t\"billing\",\n\t\t\t\t\"sales\",\n\t\t\t\t\"expense\",\n\t\t\t\t\"quote\",\n\t\t\t\t\"envelope\",\n\t\t\t\t\"invoice\",\n\t\t\t\t\"dollar\",\n\t\t\t\t\"money\",\n\t\t\t\t\"monitor payments\"\n\t\t\t],\n\t\t\t\"map-2\": [\"map\", \"card\", \"navigation\", \"hunt\", \"destination\", \"location\"],\n\t\t\tmachine: [\"machine\", \"factory\", \"production\", \"supplier\", \"technical\"],\n\t\t\t\"mri-scan\": [\"mri\", \"scan\", \"medical\"],\n\t\t\t\"end-user-experience-monitoring\": [\"end user experience monitoring\", \"gauge\", \"measure\", \"speed\", \"monitor\"],\n\t\t\tunwired: [\"unwired\", \"gauge\", \"measure\", \"speed\", \"monitor\", \"performance\"],\n\t\t\t\"customer-financial-fact-sheet\": [\"document\", \"page\", \"file\", \"attachment\", \"customer\", \"financial\", \"fact sheet\", \"money\"],\n\t\t\t\"retail-store-manager\": [\"retail store manager\"],\n\t\t\t\"electronic-medical-record\": [\"electronic medical record\", \"medical\", \"cross\", \"emergency\", \"hospital\"],\n\t\t\t\"eam-work-order\": [\"enterprise asset management\", \"work\", \"order\", \"hard hat\", \"check\", \"tick mark\"],\n\t\t\t\"customer-view\": [\"customer\", \"view\", \"analytics\", \"overview\"],\n\t\t\t\"crm-service-manager\": [\"crm service manager\", \"task\", \"dropdown\", \"list\"],\n\t\t\t\"crm-sales\": [\"crm sales\", \"customer\", \"relationship\", \"management\", \"person\", \"star\", \"money\", \"list\"],\n\t\t\twidgets: [\"widgets\", \"random\", \"star\", \"dollar\", \"plane\", \"music\", \"apps\"],\n\t\t\t\"commission-check\": [\"commission check\", \"coins\", \"stack\", \"search\", \"percentage\", \"money\"],\n\t\t\t\"collections-insight\": [\n\t\t\t\t\"collections\",\n\t\t\t\t\"insight\",\n\t\t\t\t\"report\",\n\t\t\t\t\"bill\",\n\t\t\t\t\"billing\",\n\t\t\t\t\"sales\",\n\t\t\t\t\"expense\",\n\t\t\t\t\"quote\",\n\t\t\t\t\"envelope\",\n\t\t\t\t\"invoice\",\n\t\t\t\t\"dollar\",\n\t\t\t\t\"money\"\n\t\t\t],\n\t\t\t\"clinical-tast-tracker\": [\"clinical\", \"task\", \"tracker\", \"clipboard\", \"medical\", \"checklist\", \"check boxes\"],\n\t\t\t\"citizen-connect\": [\n\t\t\t\t\"citizen connect\",\n\t\t\t\t\"people\",\n\t\t\t\t\"colleagues\",\n\t\t\t\t\"communication\",\n\t\t\t\t\"collaborate\",\n\t\t\t\t\"teamwork\",\n\t\t\t\t\"peer to peer\",\n\t\t\t\t\"design thinking\",\n\t\t\t\t\"work\",\n\t\t\t\t\"together\",\n\t\t\t\t\"project\"\n\t\t\t],\n\t\t\t\"cart-approval\": [\"cart\", \"trolley\", \"basket\", \"shopping\", \"item\", \"approve\", \"approval\", \"accept\", \"check\"],\n\t\t\t\"capital-projects\": [\"capital projects\", \"building\", \"dollar\", \"money\"],\n\t\t\t\"bo-strategy-management\": [\"bo strategy management\", \"business\", \"object\", \"circle\"],\n\t\t\t\"business-objects-mobile\": [\"business objects mobile\", \"analytics\", \"chart\", \"display\", \"data\"],\n\t\t\t\"business-objects-explorer\": [\"business objects explorer\", \"compass\"],\n\t\t\t\"business-objects-experience\": [\"analytics\", \"chart\", \"display\", \"data\", \"business objects experience\"],\n\t\t\t\"bbyd-dashboard\": [\"business by design\", \"dashboard\"],\n\t\t\t\"bbyd-active-sales\": [\"business by design\", \"active\", \"sales\", \"search\", \"approvals\", \"check\", \"book\"],\n\t\t\t\"business-by-design\": [\"business by design\"],\n\t\t\t\"business-one\": [\"business one\"],\n\t\t\t\"sap-box\": [\"container\", \"box\", \"work load\", \"collection\", \"documents\", \"files\", \"filing\", \"directory\", \"storage\"],\n\t\t\t\"manager-insight\": [\"manager\", \"insight\", \"company\", \"overview\", \"analyse\", \"inform\", \"board\", \"report\"],\n\t\t\t\"accounting-document-verification\": [\"document\", \"approve\", \"verify\", \"accounting\", \"money\", \"coins\"],\n\t\t\t\"hr-approval\": [\"person\", \"accept\", \"approval\", \"employee\", \"hr\", \"human resources\"],\n\t\t\t\"idea-wall\": [\n\t\t\t\t\"idea\",\n\t\t\t\t\"wall\",\n\t\t\t\t\"collaborate\",\n\t\t\t\t\"teamwork\",\n\t\t\t\t\"peer to peer\",\n\t\t\t\t\"design thinking\",\n\t\t\t\t\"work\",\n\t\t\t\t\"together\",\n\t\t\t\t\"project\",\n\t\t\t\t\"improve\"\n\t\t\t],\n\t\t\t\"cart-5\": [\"cart\", \"trolley\", \"basket\", \"shopping\", \"item\", \"sap\"],\n\t\t\t\"cart-4\": [\n\t\t\t\t\"cart\",\n\t\t\t\t\"trolley\",\n\t\t\t\t\"basket\",\n\t\t\t\t\"shopping\",\n\t\t\t\t\"item\",\n\t\t\t\t\"add\",\n\t\t\t\t\"put in\",\n\t\t\t\t\"insert\",\n\t\t\t\t\"add\",\n\t\t\t\t\"plus\",\n\t\t\t\t\"additional\",\n\t\t\t\t\"another\",\n\t\t\t\t\"more\"\n\t\t\t],\n\t\t\twallet: [\"money\", \"wallet\", \"purse\", \"coins\", \"bank\", \"allowance\", \"worth\", \"wealth\", \"cash\", \"notes\"],\n\t\t\t\"vehicle-repair\": [\"car\", \"crash\", \"accident\", \"damage\", \"repair\", \"fix\", \"garage\", \"vehicle\"],\n\t\t\tupload: [\"upload\", \"arrow\"],\n\t\t\tunlocked: [\"unlocked\", \"open padlock\", \"open\", \"status\", \"available\", \"access\", \"unrestricted\"],\n\t\t\tumbrella: [\"rain\", \"umbrella\", \"brolly\", \"shelter\", \"keep dry\"],\n\t\t\t\"travel-request\": [\"bubble\", \"question\", \"exclamation\", \"notifications\", \"status\", \"help\"],\n\t\t\t\"travel-expense-report\": [\"report\", \"bill\", \"billing\", \"sales\", \"travel\", \"expense\", \"quote\", \"envelope\", \"invoice\"],\n\t\t\t\"travel-itinerary\": [\"travel\", \"airplane\", \"plane\", \"car\", \"itinerary\", \"schedule\", \"plan\", \"flight\", \"drive\"],\n\t\t\t\"time-overtime\": [\"time\", \"overtime\", \"clock\", \"money\", \"hours\"],\n\t\t\t\"thing-type\": [\"popup\", \"speech\", \"bubble\", \"thing-type\"],\n\t\t\t\"technical-object\": [\"technical\", \"object\", \"wrench\", \"tool\", \"fine tune\", \"tweak\", \"fix\", \"work\", \"component\"],\n\t\t\ttag: [\"tag\", \"label\", \"marker\", \"indicator\", \"detail\"],\n\t\t\tsyringe: [\"medical\", \"emergency\", \"hospital\", \"syringe\", \"needle\", \"shot\", \"injection\"],\n\t\t\tsyntax: [\"source\", \"code\", \"develop\", \"write\", \"syntax\"],\n\t\t\tsuitcase: [\"travel\", \"suitcase\", \"business trip\", \"personal\", \"possessions\", \"articles\", \"items\", \"collection\"],\n\t\t\tsimulate: [\n\t\t\t\t\"calculator\",\n\t\t\t\t\"calculate\",\n\t\t\t\t\"count\",\n\t\t\t\t\"numbers\",\n\t\t\t\t\"counting\",\n\t\t\t\t\"simulate\",\n\t\t\t\t\"divide\",\n\t\t\t\t\"calculation\",\n\t\t\t\t\"tot up\",\n\t\t\t\t\"digits\",\n\t\t\t\t\"algorithm\",\n\t\t\t\t\"mathematician\",\n\t\t\t\t\"mathematics\"\n\t\t\t],\n\t\t\tshield: [\"authority\", \"legitimate\", \"official\", \"important\", \"protection\", \"defense\", \"security\"],\n\t\t\t\"share-2\": [\"share\", \"distribute\", \"share with connections\"],\n\t\t\t\"sales-quote\": [\"document\", \"page\", \"file\", \"text\", \"sales\", \"money\", \"bill\", \"details\", \"quote\"],\n\t\t\trepost: [\"post again\", \"circulate\"],\n\t\t\tprovision: [\n\t\t\t\t\"analytics\",\n\t\t\t\t\"chart\",\n\t\t\t\t\"display\",\n\t\t\t\t\"data\",\n\t\t\t\t\"table\",\n\t\t\t\t\"columns\",\n\t\t\t\t\"rows\",\n\t\t\t\t\"grid\",\n\t\t\t\t\"waffle\",\n\t\t\t\t\"settings\",\n\t\t\t\t\"modify\",\n\t\t\t\t\"customize\"\n\t\t\t],\n\t\t\tprojector: [\"beamer\", \"projector\", \"show\", \"movie\", \"presentation\", \"keynote\"],\n\t\t\t\"add-product\": [\"product\", \"box\", \"package\", \"unit\", \"inventory\", \"add\", \"plus\", \"additional\", \"another\", \"more\"],\n\t\t\t\"pipeline-analysis\": [\"analytics\", \"chart\", \"display\", \"data\"],\n\t\t\t\"add-photo\": [\"camera\", \"photograph\", \"device\", \"image\", \"snap shot\", \"add\", \"plus\", \"additional\", \"another\", \"more\"],\n\t\t\tpalette: [\"palette\", \"paint\", \"color\", \"spot\", \"mixing\", \"artist\", \"theme\", \"design\"],\n\t\t\tnurse: [\"nurse\", \"medical\", \"cross\", \"emergency\", \"hospital\"],\n\t\t\t\"sales-notification\": [\"bubble\", \"sales\", \"notification\"],\n\t\t\tmileage: [\"mileage\", \"tank\", \"petrol\", \"fuel\", \"fill up\", \"gas\", \"station\"],\n\t\t\t\"meeting-room\": [\"meeting\", \"room\", \"collaborate\", \"colleagues\", \"teamwork\", \"peer to peer\"],\n\t\t\t\"media-forward\": [\"forward\", \"media\", \"arrow\", \"end\", \"finish\"],\n\t\t\t\"media-play\": [\"play\", \"media\", \"arrow\"],\n\t\t\t\"media-pause\": [\"pause\", \"media\", \"arrow\"],\n\t\t\t\"media-reverse\": [\"reverse\", \"media\", \"arrow\"],\n\t\t\t\"media-rewind\": [\"rewind\", \"media\", \"arrow\", \"start\", \"back\"],\n\t\t\t\"measurement-document\": [\"measure\", \"weight\", \"scale\", \"precision\", \"technical\", \"calibrate\", \"calibration\", \"calculation\"],\n\t\t\t\"measuring-point\": [\"measure\", \"point\", \"scale\", \"precision\", \"arrow\"],\n\t\t\tmeasure: [\"measure\", \"weight\", \"scale\", \"precision\", \"technical\", \"calibrate\", \"calibration\", \"calculation\"],\n\t\t\t\"map-3\": [\"map\", \"card\", \"x marks the spot\", \"treasure\", \"navigation\", \"hunt\", \"find\", \"destination\", \"location\"],\n\t\t\tlocked: [\"locked\", \"padlock\", \"private\", \"status\", \"in use\", \"forbidden\", \"restricted\", \"safe\"],\n\t\t\tletter: [\"letter\", \"mail\", \"post\", \"postal\", \"envelope\", \"address\", \"contact\", \"correspondence\"],\n\t\t\t\"journey-arrive\": [\"journey\", \"arrive\", \"arrow\", \"placement\"],\n\t\t\t\"journey-change\": [\"journey\", \"change\", \"direction\", \"arrow\", \"placement\"],\n\t\t\t\"journey-depart\": [\"journey\", \"depart\", \"arrow\", \"move\", \"placement\"],\n\t\t\t\"it-system\": [\"server\", \"it\", \"machine\", \"computer\", \"technology\", \"device\", \"system\"],\n\t\t\t\"it-instance\": [\"server\", \"it\", \"machine\", \"computer\", \"technology\", \"device\", \"instance\"],\n\t\t\t\"it-host\": [\"server\", \"it\", \"machine\", \"computer\", \"technology\", \"device\", \"host\"],\n\t\t\t\"iphone-2\": [\"iphone\", \"phone\", \"smart phone\", \"landscape\", \"tablet\", \"mobile\", \"responsive\", \"cozy\"],\n\t\t\t\"ipad-2\": [\"ipad\", \"landscape\", \"tablet\", \"mobile\", \"responsive\", \"cozy\"],\n\t\t\tinventory: [\"inventory\", \"truck\", \"wrench\", \"tools\"],\n\t\t\t\"insurance-house\": [\"document\", \"page\", \"file\", \"attachment\", \"insurance\", \"house\"],\n\t\t\t\"insurance-life\": [\"document\", \"page\", \"file\", \"attachment\", \"insurance\", \"life\"],\n\t\t\t\"insurance-car\": [\"document\", \"page\", \"file\", \"attachment\", \"insurance\", \"car\"],\n\t\t\tinitiative: [\"initiative\", \"initiate\", \"begin\", \"enter\", \"right\", \"arrow\", \"circle\"],\n\t\t\tincident: [\"incident\", \"question\", \"message\"],\n\t\t\t\"group-2\": [\"group\", \"data\", \"aggregate\", \"list\", \"table\"],\n\t\t\tgoal: [\"goal\", \"target\", \"result\", \"objective\", \"aim\"],\n\t\t\t\"functional-location\": [\"arrow\", \"locate\", \"me\", \"map\", \"location\", \"pointer\", \"navigation\", \"functional\"],\n\t\t\t\"full-screen\": [\"full\", \"screen\", \"arrow\"],\n\t\t\tform: [\"form\", \"details\", \"text\"],\n\t\t\t\"fob-watch\": [\"fob watch\", \"time\", \"stop watch\", \"timer\", \"countdown\"],\n\t\t\t\"blank-tag\": [\"tag\", \"label\", \"marker\", \"indicator\", \"blank\"],\n\t\t\t\"family-protection\": [\"family\", \"protection\", \"people\", \"house\", \"roof\", \"family\"],\n\t\t\tfolder: [\"folder\", \"details\"],\n\t\t\t\"fax-machine\": [\"fax\", \"machine\", \"communicate\"],\n\t\t\texample: [\"example\", \"dots\", \"cicles\", \"individual\", \"odd\"],\n\t\t\teraser: [\"pencil\", \"pen\", \"erase\", \"remove\", \"undo\", \"text\"],\n\t\t\t\"employee-rejections\": [\"person\", \"x\", \"rejections\", \"employee\", \"hr\", \"human resources\"],\n\t\t\t\"drop-down-list\": [\"dropdown\", \"list\", \"arrow\", \"megamenu\"],\n\t\t\t\"draw-rectangle\": [\"draw\", \"rectangle\", \"resize\", \"shape\", \"create\"],\n\t\t\tdocument: [\"document\", \"page\", \"file\", \"attachment\", \"blank\", \"new\"],\n\t\t\tdoctor: [\"doctor\", \"medical\", \"cross\", \"emergency\", \"hospital\"],\n\t\t\t\"discussion-2\": [\"speech\", \"bubble\", \"comment\", \"discussion\", \"text\"],\n\t\t\tdiscussion: [\"speech\", \"bubble\", \"comment\", \"discussion\", \"blank\"],\n\t\t\tdimension: [\"dimension\", \"layers\", \"stacked\"],\n\t\t\t\"customer-and-supplier\": [\n\t\t\t\t\"customer and supplier\",\n\t\t\t\t\"package\",\n\t\t\t\t\"product\",\n\t\t\t\t\"satisfaction\",\n\t\t\t\t\"returns\",\n\t\t\t\t\"warehouse\",\n\t\t\t\t\"person\",\n\t\t\t\t\"seller\",\n\t\t\t\t\"buyer\",\n\t\t\t\t\"inventory\"\n\t\t\t],\n\t\t\tcrop: [\"crop\", \"clip\", \"snip\", \"cut\", \"picture\", \"image\", \"shape\", \"obect\"],\n\t\t\t\"add-contact\": [\n\t\t\t\t\"person\",\n\t\t\t\t\"contact\",\n\t\t\t\t\"business card\",\n\t\t\t\t\"customer\",\n\t\t\t\t\"details\",\n\t\t\t\t\"address\",\n\t\t\t\t\"information\",\n\t\t\t\t\"add\",\n\t\t\t\t\"plus\",\n\t\t\t\t\"additional\",\n\t\t\t\t\"another\",\n\t\t\t\t\"more\"\n\t\t\t],\n\t\t\t\"compare-2\": [\"compare\", \"law\", \"justice\", \"scale\", \"measure\", \"weight\", \"balance\", \"compare\", \"comparison\"],\n\t\t\t\"color-fill\": [\"square\", \"filled\", \"color\"],\n\t\t\tcollision: [\"car\", \"crash\", \"accident\", \"damage\"],\n\t\t\tcurriculum: [\"folder\", \"curriculum\", \"learning\", \"documents\", \"content\"],\n\t\t\t\"chart-axis\": [\"analytics\", \"chart\", \"display\", \"data\", \"chart axis\", \"arrows\", \"directions\"],\n\t\t\t\"full-stacked-chart\": [\"analytics\", \"chart\", \"display\", \"data\", \"full stacked chart\"],\n\t\t\t\"full-stacked-column-chart\": [\"analytics\", \"chart\", \"display\", \"data\", \"full stacked column chart\"],\n\t\t\t\"vertical-bar-chart-2\": [\"analytics\", \"chart\", \"display\", \"data\", \"vertical bar chart\"],\n\t\t\t\"horizontal-bar-chart-2\": [\"analytics\", \"chart\", \"display\", \"data\", \"horizontal bar chart\"],\n\t\t\t\"horizontal-stacked-chart\": [\"analytics\", \"chart\", \"display\", \"data\", \"horizontal stacked chart\"],\n\t\t\t\"vertical-stacked-chart\": [\"analytics\", \"chart\", \"display\", \"data\", \"vertical stacked chart\"],\n\t\t\t\"choropleth-chart\": [\"analytics\", \"chart\", \"display\", \"data\", \"choropleth chart\", \"geographic\", \"map\", \"world\"],\n\t\t\t\"geographic-bubble-chart\": [\"analytics\", \"chart\", \"display\", \"data\", \"geographic\", \"bubble\", \"map\", \"world\"],\n\t\t\t\"multiple-radar-chart\": [\"analytics\", \"chart\", \"display\", \"data\", \"multiple radar chart\"],\n\t\t\t\"radar-chart\": [\"analytics\", \"chart\", \"display\", \"data\", \"radar-chart\"],\n\t\t\t\"crossed-line-chart\": [\"analytics\", \"chart\", \"display\", \"data\", \"crossed line chart\"],\n\t\t\t\"multiple-line-chart\": [\"analytics\", \"chart\", \"display\", \"data\", \"multiple line chart\"],\n\t\t\t\"multiple-bar-chart\": [\"analytics\", \"chart\", \"display\", \"data\", \"multiple bar chart\"],\n\t\t\t\"line-chart\": [\"analytics\", \"chart\", \"display\", \"data\", \"line chart\"],\n\t\t\t\"line-chart-dual-axis\": [\"analytics\", \"chart\", \"display\", \"data\", \"line chart\", \"dual axis\"],\n\t\t\t\"bubble-chart\": [\"analytics\", \"chart\", \"display\", \"data\", \"bubble chart\"],\n\t\t\t\"scatter-chart\": [\"analytics\", \"chart\", \"display\", \"data\", \"scatter chart\"],\n\t\t\t\"multiple-pie-chart\": [\"analytics\", \"chart\", \"display\", \"data\", \"multiple\", \"pie chart\"],\n\t\t\t\"column-chart-dual-axis\": [\"analytics\", \"chart\", \"display\", \"data\", \"column\", \"dual axis\"],\n\t\t\t\"tag-cloud-chart\": [\"analytics\", \"chart\", \"display\", \"data\", \"speech\", \"tag\", \"cloud\"],\n\t\t\t\"area-chart\": [\"analytics\", \"chart\", \"display\", \"data\", \"area\"],\n\t\t\tcause: [\"get\", \"reason\", \"incoming\", \"arrow\", \"relocate\", \"take\"],\n\t\t\t\"cart-3\": [\"cart\", \"trolley\", \"basket\", \"shopping\", \"item\", \"add\", \"put in\", \"insert\", \"down\", \"arrow\"],\n\t\t\t\"cart-2\": [\"cart\", \"trolley\", \"basket\", \"shopping\", \"empty\", \"remove\", \"take out\", \"clear\", \"up\", \"arrow\"],\n\t\t\t\"bus-public-transport\": [\"bus\", \"public\", \"traffic\", \"vehicle\"],\n\t\t\tburglary: [\"money\", \"thief\", \"loss\", \"theft\", \"safe\", \"unsafe\", \"burglary\", \"robbery\", \"bank\"],\n\t\t\tbuilding: [\"building\", \"company\", \"firm\", \"factory\", \"office\"],\n\t\t\tborder: [\"border\", \"square\", \"outline\"],\n\t\t\tbookmark: [\"bookmark\", \"later\", \"marker\", \"save\"],\n\t\t\tbadge: [\n\t\t\t\t\"badge\",\n\t\t\t\t\"insignia\",\n\t\t\t\t\"star\",\n\t\t\t\t\"service\",\n\t\t\t\t\"identity\",\n\t\t\t\t\"authority\",\n\t\t\t\t\"legitimate\",\n\t\t\t\t\"coat of arms\",\n\t\t\t\t\"membership\",\n\t\t\t\t\"award\",\n\t\t\t\t\"rank\"\n\t\t\t],\n\t\t\t\"attachment-audio\": [\"document\", \"page\", \"file\", \"attachment\", \"audio\", \"sound\"],\n\t\t\t\"attachment-video\": [\"document\", \"page\", \"file\", \"attachment\", \"video\", \"film\", \"movie\"],\n\t\t\t\"attachment-html\": [\"document\", \"page\", \"file\", \"attachment\", \"html\", \"web\", \"website\"],\n\t\t\t\"attachment-photo\": [\"document\", \"page\", \"file\", \"attachment\", \"photo\", \"image\"],\n\t\t\t\"attachment-e-pub\": [\"document\", \"page\", \"file\", \"e pub\", \"electronic publication\", \"e book\"],\n\t\t\t\"attachment-zip-file\": [\"document\", \"page\", \"file\", \"zip\", \"compressed\"],\n\t\t\t\"attachment-text-file\": [\"document\", \"page\", \"file\", \"text\"],\n\t\t\t\"add-equipment\": [\"wrench\", \"control\", \"configuration\", \"settings\", \"tool\", \"add\", \"plus\", \"additional\", \"another\", \"more\"],\n\t\t\t\"add-activity\": [\"activity\", \"activities\", \"tasks\", \"to do\", \"list\", \"add\", \"plus\", \"additional\", \"another\", \"more\"],\n\t\t\t\"activity-individual\": [\"activity\", \"activities\", \"tasks\", \"to do\", \"list\", \"individual\", \"person\"],\n\t\t\t\"activity-2\": [\"activity\", \"activities\", \"tasks\", \"to do\", \"list\", \"check list\", \"correct\", \"success\", \"tick mark\"],\n\t\t\t\"add-activity-2\": [\n\t\t\t\t\"activity\",\n\t\t\t\t\"activities\",\n\t\t\t\t\"tasks\",\n\t\t\t\t\"to do\",\n\t\t\t\t\"list\",\n\t\t\t\t\"check list\",\n\t\t\t\t\"correct\",\n\t\t\t\t\"success\",\n\t\t\t\t\"tick mark\",\n\t\t\t\t\"add\",\n\t\t\t\t\"plus\",\n\t\t\t\t\"additional\",\n\t\t\t\t\"another\",\n\t\t\t\t\"more\"\n\t\t\t],\n\t\t\t\"activity-items\": [\"activity\", \"activities\", \"tasks\", \"to do\", \"list\", \"items\"],\n\t\t\t\"activity-assigned-to-goal\": [\"activity\", \"activities\", \"tasks\", \"to do\", \"assigned to goal\", \"target\", \"objective\"],\n\t\t\t\"status-positive\": [\"positive\", \"completed\", \"on track\", \"led\", \"traffic lights\", \"street sign\", \"lifecycle\"],\n\t\t\t\"status-negative\": [\"negative\", \"attention\", \"led\", \"traffic lights\", \"street sign\", \"lifecycle\"],\n\t\t\t\"status-inactive\": [\"inactive\", \"neutral\", \"information\", \"led\", \"traffic lights\", \"street sign\", \"lifecycle\"],\n\t\t\t\"status-critical\": [\"critical\", \"in process\", \"warning\", \"led\", \"traffic lights\", \"street sign\", \"lifecycle\"],\n\t\t\t\"blank-tag-2\": [\"tag\", \"label\", \"marker\", \"indicator\", \"blank\"],\n\t\t\t\"cart-full\": [\"cart\", \"trolley\", \"basket\", \"shopping\", \"full\", \"capacity\", \"load\"],\n\t\t\t\"locate-me\": [\"arrow\", \"locate\", \"me\", \"map\", \"location\", \"pointer\", \"navigation\"],\n\t\t\tpaging: [\"paging\", \"navigation\"],\n\t\t\t\"company-view\": [\"view\", \"group\", \"company\", \"personnel\", \"firm\", \"overview\"],\n\t\t\t\"document-text\": [\"document\", \"page\", \"file\", \"text\"],\n\t\t\texplorer: [\"explorer\", \"compass\"],\n\t\t\t\"personnel-view\": [\"view\", \"person\", \"profile\", \"personnel\", \"overview\"],\n\t\t\t\"sorting-ranking\": [\"sort\", \"ranking\", \"ascending\", \"descending\", \"arrow\"],\n\t\t\t\"drill-down\": [\"drill down\", \"arrow\", \"detail\", \"hierarchy\", \"level\", \"megamenu\"],\n\t\t\t\"drill-up\": [\"drill up\", \"arrow\", \"detail\", \"hierarchy\", \"level\"],\n\t\t\t\"vds-file\": [\"document\", \"page\", \"file\", \"text\", \"attachment\", \"Visual Design Stream\", \"vds\"],\n\t\t\t\"sap-logo-shape\": [\"sap\", \"logo\", \"shape\"],\n\t\t\t\"folder-full\": [\"folder\", \"full\"],\n\t\t\t\"system-exit\": [\"system\", \"exit\"],\n\t\t\t\"system-exit-2\": [\"system\", \"exit\"],\n\t\t\t\"close-command-field\": [\"close command field\", \"navigation\", \"left\", \"page left\", \"previous\", \"arrow\"],\n\t\t\t\"open-command-field\": [\"open command field\", \"navigation\", \"right\", \"page right\", \"next\", \"arrow\"],\n\t\t\t\"sys-enter-2\": [\"system\", \"enter\", \"correct\", \"tick\", \"affirmative\"],\n\t\t\t\"sys-enter\": [\"system\", \"enter\", \"correct\", \"tick\", \"affirmative\"],\n\t\t\t\"sys-help-2\": [\"system\", \"help\", \"circle\", \"question\"],\n\t\t\t\"sys-help\": [\"system\", \"help\", \"circle\", \"question\"],\n\t\t\t\"sys-back\": [\"system\", \"back\", \"arrows\"],\n\t\t\t\"sys-back-2\": [\"system\", \"back\", \"arrows\"],\n\t\t\t\"sys-cancel\": [\"clear\", \"remove\", \"cancel\", \"x\"],\n\t\t\t\"sys-cancel-2\": [\"clear\", \"remove\", \"cancel\", \"x\"],\n\t\t\t\"open-folder\": [\"folder\", \"open\"],\n\t\t\t\"sys-find-next\": [\"find\", \"binoculars\", \"look up\", \"add\", \"plus\", \"additional\", \"another\", \"more\"],\n\t\t\t\"sys-find\": [\"find\", \"binoculars\", \"look up\"],\n\t\t\t\"sys-monitor\": [\"screen\", \"monitor\", \"tv\"],\n\t\t\t\"sys-prev-page\": [\"system\", \"previous\", \"page\", \"up\", \"arrows\"],\n\t\t\t\"sys-first-page\": [\"system\", \"first\", \"page\", \"up\", \"top\", \"arrows\"],\n\t\t\t\"sys-next-page\": [\"system\", \"next\", \"page\", \"down\", \"arrows\"],\n\t\t\t\"sys-last-page\": [\"system\", \"last\", \"page\", \"down\", \"bottom\", \"arrows\"],\n\t\t\t\"generate-shortcut\": [\"generate\", \"shortcut\", \"arrow\"],\n\t\t\t\"create-session\": [\"create\", \"session\"],\n\t\t\t\"display-more\": [\"display\", \"details\", \"more\", \"arrow\"],\n\t\t\t\"enter-more\": [\"enter\", \"details\", \"more\", \"arrow\"],\n\t\t\t\"zoom-in\": [\"zoom\", \"in\", \"magnify\", \"glass\", \"plus\", \"enlarge\", \"bigger\"],\n\t\t\t\"zoom-out\": [\"zoom\", \"out\", \"glass\", \"minus\", \"reduce\", \"smaller\"],\n\t\t\theader: [\"maximize\", \"header\", \"screen\"],\n\t\t\t\"detail-view\": [\"search\", \"form\", \"look up\", \"find\", \"view\", \"detial\"],\n\t\t\tcollapse: [\"collapse all\", \"minus\", \"ungroup all\", \"arrow\"],\n\t\t\texpand: [\"expand all\", \"plus\", \"group all\", \"arrow\"],\n\t\t\tpositive: [\"plus\", \"positive\"],\n\t\t\tnegative: [\"minus\", \"remove\", \"subtract\", \"negative\"],\n\t\t\tdisplay: [\"display\", \"details\", \"inspect\", \"spectacles\", \"glasses\"],\n\t\t\tmenu2: [\"menu\", \"hamburger menu\", \"main menu\"],\n\t\t\tredo: [\"redo\", \"arrow\", \"previous state\", \"history\", \"forwards\"],\n\t\t\tundo: [\"undo\", \"arrow\", \"previous state\", \"history\", \"backwards\"],\n\t\t\t\"navigation-up-arrow\": [\"navigation\", \"up\", \"arrow\"],\n\t\t\t\"navigation-down-arrow\": [\"navigation\", \"down\", \"collapse\", \"expanded tree\", \"tree arrow\", \"arrow\", \"megamenu\"],\n\t\t\tdown: [\"down\", \"triangle\", \"megamenu\"],\n\t\t\tup: [\"up\", \"triangle\"],\n\t\t\tshelf: [\"shelf\", \"storage\", \"drawers\", \"compartments\"],\n\t\t\tbackground: [\"image\", \"placeholder\", \"picture\", \"hills\", \"mountains\", \"sun\"],\n\t\t\tresize: [\"resize\", \"bigger\", \"smaller\"],\n\t\t\tmove: [\"move\", \"relocate\", \"left\", \"right\", \"up\", \"down\"],\n\t\t\tshow: [\"show\", \"eye\"],\n\t\t\thide: [\"hide\", \"eye\"],\n\t\t\t\"nav-back\": [\"navigation\", \"back\", \"previous\", \"arrow\"],\n\t\t\terror: [\"message\", \"error\", \"negative\", \"notifications\", \"status\", \"solid\"],\n\t\t\t\"slim-arrow-right\": [\"slim\", \"thin\", \"skinny\", \"arrow\", \"right\", \"scroll right\"],\n\t\t\t\"slim-arrow-left\": [\"slim\", \"thin\", \"skinny\", \"arrow\", \"left\", \"scroll left\"],\n\t\t\t\"slim-arrow-down\": [\"slim\", \"thin\", \"skinny\", \"arrow\", \"down\", \"select navigation\", \"combobox\", \"multi combobox\"],\n\t\t\t\"slim-arrow-up\": [\"slim\", \"thin\", \"skinny\", \"arrow\", \"up\"],\n\t\t\tforward: [\"forward\", \"arrow\"],\n\t\t\toverflow: [\"overflow\", \"dots\", \"ellipsis\", \"more\"],\n\t\t\t\"value-help\": [\"value\", \"help\", \"popup\", \"assistance\", \"multi input\"],\n\t\t\t\"multi-select\": [\"multi select\", \"list\", \"table\", \"data\"],\n\t\t\t\"exit-full-screen\": [\"exit\", \"fullscreen\", \"arrow\"],\n\t\t\t\"sys-add\": [\"add\", \"plus\", \"additional\", \"another\", \"more\", \"add row\", \"add object\", \"add item\"],\n\t\t\t\"sys-minus\": [\"minus\", \"remove\", \"subtract\"],\n\t\t\tdropdown: [\"dropdown\", \"menu\", \"menu button\", \"arrow\", \"megamenu\"],\n\t\t\t\"expand-group\": [\"expand\", \"group\", \"move to bottom\", \"arrow\"],\n\t\t\t\"vertical-grip\": [\"vertical\", \"grip\", \"move left\", \"move right\", \"splitter\"],\n\t\t\t\"horizontal-grip\": [\"horizontal\", \"grip\", \"move up\", \"move down\", \"splitter\"],\n\t\t\t\"sort-descending\": [\"sort\", \"descending\", \"down\", \"table\", \"aggregate\"],\n\t\t\t\"sort-ascending\": [\"sort\", \"ascending\", \"up\", \"table\", \"aggregate\"],\n\t\t\t\"arrow-down\": [\"arrow\", \"circle\", \"down\", \"variant\", \"management\", \"selection\", \"options\", \"megamenu\"],\n\t\t\tlegend: [\"legend\", \"description\", \"colors\", \"charts\", \"table\", \"planning\", \"calendar\"],\n\t\t\t\"collapse-group\": [\"collapse\", \"group\", \"move to top\", \"arrow\"],\n\t\t\t\"message-warning\": [\"message\", \"warning\", \"critical\", \"notifications\", \"status\"],\n\t\t\t\"message-information\": [\"message\", \"information\", \"neutral\", \"notifications\", \"status\"],\n\t\t\t\"message-success\": [\"message\", \"success\", \"positive\", \"notifications\", \"status\"],\n\t\t\trestart: [\"restart\", \"process\", \"play\"],\n\t\t\tstop: [\"stop\", \"process\", \"play\"],\n\t\t\t\"add-process\": [\"process\", \"add\", \"plus\", \"additional\", \"another\", \"more\"],\n\t\t\t\"cancel-maintenance\": [\"wrench\", \"control\", \"configuration\", \"settings\", \"tool\", \"cancel maintenance\"],\n\t\t\tactivate: [\"activate\", \"ignite\", \"initiate\", \"magic\", \"wand\", \"spark\"],\n\t\t\t\"resize-horizontal\": [\n\t\t\t\t\"resize\",\n\t\t\t\t\"horizontal\",\n\t\t\t\t\"column\",\n\t\t\t\t\"screen\",\n\t\t\t\t\"bigger\",\n\t\t\t\t\"smaller\",\n\t\t\t\t\"enlarge\",\n\t\t\t\t\"reduce\",\n\t\t\t\t\"arrows\",\n\t\t\t\t\"lines\",\n\t\t\t\t\"side to side\"\n\t\t\t],\n\t\t\t\"resize-vertical\": [\n\t\t\t\t\"resize\",\n\t\t\t\t\"vertical\",\n\t\t\t\t\"row\",\n\t\t\t\t\"screen\",\n\t\t\t\t\"bigger\",\n\t\t\t\t\"smaller\",\n\t\t\t\t\"enlarge\",\n\t\t\t\t\"reduce\",\n\t\t\t\t\"arrows\",\n\t\t\t\t\"lines\",\n\t\t\t\t\"up and down\"\n\t\t\t],\n\t\t\tconnected: [\"plug\", \"connected\", \"on\", \"state\"],\n\t\t\tdisconnected: [\"plug\", \"disconnected\", \"unplug\", \"state\"],\n\t\t\t\"edit-outside\": [\"pencil\", \"pen\", \"write\", \"edit\", \"modify\", \"text\", \"outside\", \"arrow\"],\n\t\t\tkey: [\"key\", \"data\", \"lock\", \"important\"],\n\t\t\tminimize: [\"minimize\", \"screen\", \"window\", \"reduce\", \"hide\"],\n\t\t\t\"back-to-top\": [\"back to top\", \"jump\", \"beginning\", \"arrow\", \"up\"],\n\t\t\t\"hello-world\": [\"bubble\", \"ui5\", \"hello\", \"world\"],\n\t\t\toutbox: [\"outbox\", \"out\", \"arrow\"],\n\t\t\t\"donut-chart\": [\"analytics\", \"chart\", \"display\", \"data\"],\n\t\t\t\"heatmap-chart\": [\"analytics\", \"chart\", \"display\", \"data\"],\n\t\t\t\"horizontal-bullet-chart\": [\"analytics\", \"chart\", \"display\", \"data\"],\n\t\t\t\"vertical-bullet-chart\": [\"analytics\", \"chart\", \"display\", \"data\"],\n\t\t\tcall: [\"call\", \"communicate\", \"phone\", \"telephone\"],\n\t\t\t\"download-from-cloud\": [\"download\", \"cloud\", \"arrow\"],\n\t\t\t\"upload-to-cloud\": [\"save\", \"upload\", \"cloud\", \"arrow\"],\n\t\t\tjam: [\"sap\", \"logo\", \"jam\", \"social\", \"collaborate\", \"share\"],\n\t\t\t\"sap-ui5\": [\"ui5\", \"framework\", \"development\", \"sap\"],\n\t\t\t\"message-popup\": [\"message\", \"popup\", \"speech\", \"bubble\", \"exclamation\", \"notifications\", \"status\"],\n\t\t\tcloud: [\"cloud\", \"platform\", \"storage\", \"big data\", \"sap\"],\n\t\t\t\"horizontal-waterfall-chart\": [\"analytics\", \"chart\", \"display\", \"data\"],\n\t\t\t\"vertical-waterfall-chart\": [\"analytics\", \"chart\", \"display\", \"data\"],\n\t\t\t\"broken-link\": [\"unlink\", \"broken\", \"chain\", \"hyperlink\"],\n\t\t\theadset: [\"headset\", \"call\", \"help\", \"support\", \"talk\", \"mic\", \"listen\"],\n\t\t\t\"thumb-up\": [\"thumbs\", \"up\", \"like\", \"appreciate\", \"positive\"],\n\t\t\t\"thumb-down\": [\"thumbs\", \"down\", \"dislike\", \"negative\"],\n\t\t\t\"multiselect-all\": [\"multi select\", \"list\", \"table\", \"data\", \"all\", \"selected\"],\n\t\t\t\"multiselect-none\": [\"multi select\", \"list\", \"table\", \"data\", \"none\", \"deselected\"],\n\t\t\tscissors: [\"cut\", \"scissors\", \"document\", \"clipboards\", \"file\", \"text\"],\n\t\t\tsound: [\"sound\", \"audio\", \"audio\", \"speaker\"],\n\t\t\t\"sound-loud\": [\"sound\", \"audio\", \"audio\", \"speaker\", \"loud\", \"louder\"],\n\t\t\t\"sound-off\": [\"sound\", \"audio\", \"off\", \"mute\", \"quiet\", \"speaker\", \"cancel\"],\n\t\t\t\"date-time\": [\"date\", \"time\"],\n\t\t\t\"user-settings\": [\n\t\t\t\t\"settings\",\n\t\t\t\t\"cogwheel\",\n\t\t\t\t\"configuration\",\n\t\t\t\t\"settings\",\n\t\t\t\t\"tools\",\n\t\t\t\t\"modify\",\n\t\t\t\t\"customize\",\n\t\t\t\t\"person\",\n\t\t\t\t\"user\",\n\t\t\t\t\"runtime authoring\"\n\t\t\t],\n\t\t\t\"key-user-settings\": [\n\t\t\t\t\"settings\",\n\t\t\t\t\"cogwheel\",\n\t\t\t\t\"configuration\",\n\t\t\t\t\"settings\",\n\t\t\t\t\"tools\",\n\t\t\t\t\"modify\",\n\t\t\t\t\"customize\",\n\t\t\t\t\"administrator\",\n\t\t\t\t\"key user\",\n\t\t\t\t\"runtime authoring\"\n\t\t\t],\n\t\t\t\"developer-settings\": [\n\t\t\t\t\"settings\",\n\t\t\t\t\"cogwheel\",\n\t\t\t\t\"configuration\",\n\t\t\t\t\"settings\",\n\t\t\t\t\"tools\",\n\t\t\t\t\"modify\",\n\t\t\t\t\"customize\",\n\t\t\t\t\"developer\",\n\t\t\t\t\"runtime authoring\"\n\t\t\t],\n\t\t\t\"text-formatting\": [\"customize\", \"text\", \"format\", \"options\", \"text decoration\", \"text edit\", \"rich-text\"],\n\t\t\t\"bold-text\": [\"bold\", \"fat\", \"bulk\", \"weight\", \"text\", \"format\", \"text decoration\", \"text edit\", \"rich-text\"],\n\t\t\t\"italic-text\": [\"itlalic\", \"slanted\", \"leaning\", \"text\", \"format\", \"text decoration\", \"text edit\", \"rich-text\"],\n\t\t\t\"underline-text\": [\"underline\", \"text\", \"format\", \"text decoration\", \"text edit\", \"rich-text\"],\n\t\t\t\"text-align-justified\": [\"align\", \"text\", \"justified\", \"text edit\", \"rich-text\"],\n\t\t\t\"text-align-left\": [\"align\", \"text\", \"left\", \"text edit\", \"rich-text\"],\n\t\t\t\"text-align-center\": [\"align\", \"text\", \"center\", \"text edit\", \"rich-text\"],\n\t\t\t\"text-align-right\": [\"align\", \"text\", \"right\", \"text edit\", \"rich-text\"],\n\t\t\t\"bullet-text\": [\"bullet\", \"text\", \"dots\", \"text edit\", \"rich-text\"],\n\t\t\t\"numbered-text\": [\"numbered\", \"text\", \"1, 2, 3\", \"text edit\", \"rich-text\"],\n\t\t\tco: [\"co pilot\", \"mnemonics\", \"assistant\", \"launchpad\"],\n\t\t\t\"ui-notifications\": [\"notify\", \"ui\", \"notifications\", \"alerts\", \"launchpad\"],\n\t\t\tbell: [\"bell\", \"alarm\", \"notify\", \"alerts\"],\n\t\t\t\"cancel-share\": [\"cancel share\", \"cancel distribution\", \"do not share with connections\"],\n\t\t\t\"write-new-document\": [\"document\", \"page\", \"file\", \"text\", \"edit\", \"write\", \"new\", \"pencil\", \"pen\"],\n\t\t\t\"write-new\": [\"write\", \"new\", \"create\", \"pencil\", \"pen\"],\n\t\t\tcancel: [\"unable\", \"forbidden\", \"do not\", \"cancel\", \"not allowed\", \"not allowed\"],\n\t\t\t\"screen-split-one\": [\"screen\", \"split\", \"two\", \"master\", \"detail\", \"split app\"],\n\t\t\t\"screen-split-two\": [\"screen\", \"split\", \"two\", \"half\"],\n\t\t\t\"screen-split-three\": [\"screen\", \"split\", \"three\", \"columns\"],\n\t\t\tcustomize: [\"settings\", \"configuration\", \"settings\", \"modify\", \"customize\", \"equaliser\", \"fine tune\"],\n\t\t\t\"user-edit\": [\"user\", \"edit\", \"person\", \"pencil\", \"pen\"],\n\t\t\t\"source-code\": [\"source\", \"code\", \"develop\", \"write\", \"syntax\"],\n\t\t\tcopy: [\"copy\", \"document\", \"file\", \"duplicate\", \"text\"],\n\t\t\tpaste: [\"paste\", \"document\", \"clipboards\", \"file\", \"text\"],\n\t\t\t\"line-chart-time-axis\": [\"chart\", \"line\", \"time\", \"axis\"],\n\t\t\t\"clear-filter\": [\"filter\", \"organise\", \"aggregate\", \"data\", \"clear\", \"delete\", \"remove\", \"cancel\"],\n\t\t\treset: [\"reset\", \"x\", \"cancel\"],\n\t\t\t\"trend-up\": [\"trend\", \"up\", \"diagonal\", \"increase\", \"improve\", \"arrow\"],\n\t\t\t\"trend-down\": [\"trend\", \"down\", \"diagonal\", \"decrease\", \"decline\", \"arrow\"],\n\t\t\t\"cursor-arrow\": [\"cursor\", \"arrow\", \"mouse\", \"pointer\", \"select\"],\n\t\t\t\"add-document\": [\"document\", \"page\", \"file\", \"text\", \"new\", \"add\", \"plus\", \"additional\", \"another\", \"more\"],\n\t\t\t\"create-form\": [\"create\", \"form\", \"new\", \"add\", \"plus\", \"additional\", \"another\", \"more\"],\n\t\t\t\"resize-corner\": [\"resize\", \"dialog\", \"corner\"],\n\t\t\t\"chevron-phase\": [\"analytics\", \"chart\", \"display\", \"data\", \"gantt\", \"shape\", \"chevron\", \"phase\"],\n\t\t\t\"chevron-phase-2\": [\"analytics\", \"chart\", \"display\", \"data\", \"gantt\", \"shape\", \"chevron\", \"phase\"],\n\t\t\t\"rhombus-milestone\": [\"analytics\", \"chart\", \"display\", \"data\", \"gantt\", \"shape\", \"rhombus\", \"milestone\"],\n\t\t\t\"rhombus-milestone-2\": [\"analytics\", \"chart\", \"display\", \"data\", \"gantt\", \"shape\", \"rhombus\", \"milestone\"],\n\t\t\t\"circle-task\": [\"analytics\", \"chart\", \"display\", \"data\", \"gantt\", \"shape\", \"circle\", \"task\"],\n\t\t\t\"circle-task-2\": [\"analytics\", \"chart\", \"display\", \"data\", \"gantt\", \"shape\", \"circle\", \"task\"],\n\t\t\t\"project-definition-triangle\": [\"analytics\", \"chart\", \"display\", \"data\", \"gantt\", \"shape\", \"triangle\", \"project\", \"definition\"],\n\t\t\t\"project-definition-triangle-2\": [\n\t\t\t\t\"analytics\",\n\t\t\t\t\"chart\",\n\t\t\t\t\"display\",\n\t\t\t\t\"data\",\n\t\t\t\t\"gantt\",\n\t\t\t\t\"shape\",\n\t\t\t\t\"triangle\",\n\t\t\t\t\"project\",\n\t\t\t\t\"definition\"\n\t\t\t],\n\t\t\t\"master-task-triangle\": [\"analytics\", \"chart\", \"display\", \"data\", \"gantt\", \"shape\", \"triangle\", \"task\", \"master\"],\n\t\t\t\"master-task-triangle-2\": [\"analytics\", \"chart\", \"display\", \"data\", \"gantt\", \"shape\", \"triangle\", \"task\", \"master\"],\n\t\t\t\"program-triangles\": [\"analytics\", \"chart\", \"display\", \"data\", \"gantt\", \"shape\", \"triangle\", \"program\"],\n\t\t\t\"program-triangles-2\": [\"analytics\", \"chart\", \"display\", \"data\", \"gantt\", \"shape\", \"triangle\", \"program\"],\n\t\t\t\"mirrored-task-circle\": [\"analytics\", \"chart\", \"display\", \"data\", \"gantt\", \"shape\", \"mirrored\", \"circle\", \"task\"],\n\t\t\t\"mirrored-task-circle-2\": [\"analytics\", \"chart\", \"display\", \"data\", \"gantt\", \"shape\", \"mirrored\", \"circle\", \"task\"],\n\t\t\t\"checklist-item\": [\"analytics\", \"chart\", \"display\", \"data\", \"gantt\", \"shape\", \"checklist\", \"item\"],\n\t\t\t\"checklist-item-2\": [\"analytics\", \"chart\", \"display\", \"data\", \"gantt\", \"shape\", \"checklist\", \"item\"],\n\t\t\tchecklist: [\"analytics\", \"chart\", \"display\", \"data\", \"gantt\", \"shape\", \"checklist\"],\n\t\t\t\"checklist-2\": [\"analytics\", \"chart\", \"display\", \"data\", \"gantt\", \"shape\", \"checklist\"],\n\t\t\t\"chart-table-view\": [\"analytics\", \"chart\", \"display\", \"data\", \"table\", \"columns\", \"rows\", \"grid\", \"waffle\", \"view\"],\n\t\t\t\"filter-analytics\": [\"analytics\", \"filter\", \"organise\", \"chart\", \"customize\", \"display\", \"data\"],\n\t\t\t\"filter-facets\": [\"analytics\", \"filter\", \"organise\", \"chart\", \"customize\", \"display\", \"data\"],\n\t\t\t\"filter-fields\": [\"analytics\", \"filter\", \"organise\", \"chart\", \"customize\", \"display\", \"data\"],\n\t\t\tindent: [\"indent\", \"paragraph\", \"move right\", \"align\", \"text edit\", \"spacing\", \"rich-text\", \"arrows\"],\n\t\t\toutdent: [\"outdent\", \"paragraph\", \"move left\", \"align\", \"text edit\", \"spacing\", \"rich-text\", \"arrows\"],\n\t\t\theading1: [\"heading\", \"header\", \"h1\", \"large text\", \"title\", \"level 1\", \"text edit\", \"rich-text\"],\n\t\t\theading2: [\"heading\", \"header\", \"h2\", \"large text\", \"title\", \"level 2\", \"text edit\", \"rich-text\"],\n\t\t\theading3: [\"heading\", \"header\", \"h3\", \"large text\", \"title\", \"level 3\", \"text edit\", \"rich-text\"],\n\t\t\t\"decrease-line-height\": [\n\t\t\t\t\"decrease\",\n\t\t\t\t\"line height\",\n\t\t\t\t\"leading\",\n\t\t\t\t\"text edit\",\n\t\t\t\t\"spacing\",\n\t\t\t\t\"rich-text\",\n\t\t\t\t\"less space\",\n\t\t\t\t\"reduce\",\n\t\t\t\t\"compress\",\n\t\t\t\t\"arrows\"\n\t\t\t],\n\t\t\t\"increase-line-height\": [\n\t\t\t\t\"increase\",\n\t\t\t\t\"line height\",\n\t\t\t\t\"leading\",\n\t\t\t\t\"text edit\",\n\t\t\t\t\"spacing\",\n\t\t\t\t\"rich-text\",\n\t\t\t\t\"more space\",\n\t\t\t\t\"enlarge\",\n\t\t\t\t\"expand\",\n\t\t\t\t\"arrows\"\n\t\t\t],\n\t\t\t\"add-folder\": [\"folder\", \"add\", \"directory\", \"additional\", \"library\"],\n\t\t\taway: [\"time\", \"clock\", \"away\", \"availability\", \"chronicle\", \"be right back\", \"appear away\", \"off work\", \"me\"],\n\t\t\tbusy: [\"busy\", \"unavailable\", \"not responsive\", \"blocked\", \"circle\", \"dot\", \"me\", \"working\"],\n\t\t\t\"appear-offline\": [\"appear-offline\", \"offline\", \"hide\", \"blocked\", \"circle\", \"me\"],\n\t\t\tblur: [\"blur\", \"tool\", \"screenshot\", \"image\", \"edit\", \"modify\", \"distort\", \"smudge\", \"blurry\", \"filter\", \"effects\"],\n\t\t\tpixelate: [\n\t\t\t\t\"pixel\",\n\t\t\t\t\"tool\",\n\t\t\t\t\"screenshot\",\n\t\t\t\t\"image\",\n\t\t\t\t\"edit\",\n\t\t\t\t\"modify\",\n\t\t\t\t\"distort\",\n\t\t\t\t\"pixelate\",\n\t\t\t\t\"squares\",\n\t\t\t\t\"dots\",\n\t\t\t\t\"resolution\",\n\t\t\t\t\"noise\"\n\t\t\t],\n\t\t\t\"horizontal-combination-chart\": [\"analytics\", \"chart\", \"display\", \"data\", \"combination\", \"line-chart\", \"bar\", \"horizontal\"],\n\t\t\t\"add-employee\": [\n\t\t\t\t\"customer\",\n\t\t\t\t\"user\",\n\t\t\t\t\"person\",\n\t\t\t\t\"individual\",\n\t\t\t\t\"contacts\",\n\t\t\t\t\"add\",\n\t\t\t\t\"additional\",\n\t\t\t\t\"employee\",\n\t\t\t\t\"hr\",\n\t\t\t\t\"human resources\",\n\t\t\t\t\"plus\"\n\t\t\t],\n\t\t\t\"text-color\": [\"color\", \"formatting\", \"edit\", \"colour\", \"letters\", \"rich\", \"rich-text\", \"options\"],\n\t\t\t\"browse-folder\": [\"browse folder\", \"search\", \"look up\", \"folder\", \"browse\", \"directory\", \"library\", \"find\"],\n\t\t\t\"primary-key\": [\"key\", \"primary\", \"data\", \"lock\", \"important\"],\n\t\t\t\"two-keys\": [\"key\", \"primary\", \"foreign\", \"data\", \"lock\", \"important\"],\n\t\t\tstrikethrough: [\"strike\", \"formatting\", \"edit\", \"cross out\", \"letters\", \"rich\", \"rich-text\", \"options\", \"review\"],\n\t\t\ttext: [\"text\", \"formatting\", \"edit\", \"input\", \"letters\", \"rich\", \"rich-text\"],\n\t\t\tresponsive: [\"desktop\", \"tablet\", \"mobile\", \"phone\", \"adaptive\", \"cozy\", \"compact\", \"web app\"],\n\t\t\t\"desktop-mobile\": [\"desktop\", \"tablet\", \"mobile\", \"phone\", \"adaptive\", \"cozy\", \"compact\", \"web app\", \"responsive\", \"adaptive\"],\n\t\t\t\"table-row\": [\"display\", \"data\", \"table\", \"table row\", \"grid\", \"waffle\", \"view\", \"rows\"],\n\t\t\t\"table-column\": [\"display\", \"data\", \"table\", \"table column\", \"grid\", \"waffle\", \"view\", \"columns\"],\n\t\t\tvalidate: [\"message\", \"check\", \"validate\", \"security\", \"status\", \"approve\", \"reject\", \"decision\", \"certify\"],\n\t\t\t\"keyboard-and-mouse\": [\"mouse\", \"desktop\", \"click\", \"keyboard\", \"compact\", \"condensed\", \"controls\", \"devices\"],\n\t\t\ttouch: [\"finger\", \"mobile\", \"press\", \"touch\", \"cozy\", \"comfortable\", \"controls\", \"devices\"],\n\t\t\t\"expand-all\": [\"expand\", \"all\", \"open\", \"open all\", \"expand all\", \"arrow\", \"table\", \"tree\", \"list\"],\n\t\t\t\"collapse-all\": [\"collapse\", \"all\", \"close\", \"close all\", \"collapse all\", \"arrow\", \"table\", \"tree\", \"list\"],\n\t\t\tcombine: [\n\t\t\t\t\"merge\",\n\t\t\t\t\"arrow\",\n\t\t\t\t\"combine\",\n\t\t\t\t\"glue\",\n\t\t\t\t\"together\",\n\t\t\t\t\"join\",\n\t\t\t\t\"meld\",\n\t\t\t\t\"unite\",\n\t\t\t\t\"aggregate\",\n\t\t\t\t\"interflow\",\n\t\t\t\t\"runtime authoring\",\n\t\t\t\t\"runtime adaptation\",\n\t\t\t\t\"ui adaptation\",\n\t\t\t\t\"arrows-right\"\n\t\t\t],\n\t\t\tsplit: [\n\t\t\t\t\"split\",\n\t\t\t\t\"arrow\",\n\t\t\t\t\"separate\",\n\t\t\t\t\"break\",\n\t\t\t\t\"cleave\",\n\t\t\t\t\"clove\",\n\t\t\t\t\"cut up\",\n\t\t\t\t\"runtime authoring\",\n\t\t\t\t\"runtime adaptation\",\n\t\t\t\t\"ui adaptation\",\n\t\t\t\t\"arrows-right\"\n\t\t\t],\n\t\t\tmegamenu: [\"navigation\", \"arrows-down\", \"arrow-down\", \"down\", \"shell\"],\n\t\t\tfeedback: [\"feedback\", \"smiley\", \"comment\", \"shell\", \"callout\", \"speech\"],\n\t\t\tinformation: [\"information\", \"info\", \"message\", \"message-information\", \"i\", \"filled\", \"notification\"],\n\t\t\ts4hana: [\"s4hana\", \"S/4HANA\", \"S/4\", \"hana\", \"product switch\", \"product\", \"switch\"],\n\t\t\ttranslate: [\"translate\", \"text\", \"letters\", \"translation\", \"A\", \"arrows\"]\n\t\t}\n\t},\n\t\"SAP-icons-TNT\": {\n\t\ttitle: \"SAP Fiori Tools\",\n\t\ticons: {\n\t\t\ttechnicalsystem: [\"system\", \"hexagon\"],\n\t\t\tsystemjava: [\"system\", \"java\"],\n\t\t\tsystemabap: [\"abap\", \"system\"],\n\t\t\tsystemrecommendations: [\"system\", \"star\", \"favorite\"],\n\t\t\tsystem: [\"system\"],\n\t\t\tsystemtrex: [\"system\", \"trex\", \"settings\"],\n\t\t\tsystemtracks: [\"system\", \"arrow\"],\n\t\t\ttechnicalscenario: [\"hexagon\", \"connection\", \"scenario\"],\n\t\t\ttechnicalinstance: [\"hexagon\", \"connection\", \"instance\"],\n\t\t\t\"throughput-backlog\": [\"arrow\", \"bar\", \"chart\", \"up\"],\n\t\t\t\"batch-processing\": [\"process\", \"document\", \"settings\", \"double\", \"multiple\"],\n\t\t\t\"database-consistency\": [\"data\", \"indicator\", \"warning\"],\n\t\t\t\"intermediate-message\": [\"email\", \"e-mail\", \"electronic mail\", \"envelope\", \"mail\", \"correspondence\", \"message\", \"arrow\"],\n\t\t\texceptions: [\"warning\", \"status\", \"exclamation\"],\n\t\t\t\"system-hana\": [\"hana\", \"system\", \"chip\"],\n\t\t\tpython: [\"system\", \"python\"],\n\t\t\t\"raise-fault\": [\"lightning\", \"flash\", \"status\"],\n\t\t\t\"spike-arrest\": [\"chart\", \"line\", \"performance\", \"cancel\", \"data\", \"analytics\", \"x\"],\n\t\t\t\"verify-api\": [\"wrench\", \"question mark\", \"status\", \"tool\"],\n\t\t\tuser: [\"person\", \"individual\", \"user\", \"customer\", \"human\", \"profile\", \"me\"],\n\t\t\tnote: [\"notes\", \"draft\", \"text\", \"write\", \"letter\"],\n\t\t\t\"throwing-message\": [\"envelope\", \"email\", \"e-mail\", \"electronic mail\", \"mail\", \"correspondence\", \"throwing\"],\n\t\t\t\"catching-message\": [\"envelope\", \"email\", \"e-mail\", \"electronic mail\", \"mail\", \"correspondence\", \"catching\"],\n\t\t\t\"start-event\": [\"circle\", \"start\", \"event\", \"display\", \"data\", \"task\"],\n\t\t\t\"end-event\": [\"circle\", \"end\", \"event\", \"display\", \"data\", \"task\"],\n\t\t\tgateway: [\"shape\", \"indicator\", \"check\"],\n\t\t\t\"sub-process-marker\": [\"add\", \"square\", \"shape\", \"process\", \"plus\", \"marker\"],\n\t\t\t\"ad-hoc-marker\": [\"tilde\", \"marker\"],\n\t\t\t\"manual-task\": [\"activity\", \"manual\", \"task\", \"process\", \"hand\"],\n\t\t\t\"send-task\": [\"envelope\", \"email\", \"e-mail\", \"electronic mail\", \"mail\", \"correspondence\", \"catching\", \"send\"],\n\t\t\t\"receive-task\": [\"envelope\", \"email\", \"e-mail\", \"electronic mail\", \"mail\", \"correspondence\", \"catching\", \"receive\"],\n\t\t\t\"script-task\": [\"script\", \"activity\", \"task\", \"process\"],\n\t\t\tmarquee: [\"mark\", \"select\", \"lines\", \"dashed line\"],\n\t\t\t\"data-input-arrow\": [\"out\", \"arrow\", \"data\", \"arrow right\", \"filled\"],\n\t\t\t\"data-output-arrow\": [\"out\", \"arrow\", \"data\", \"arrow right\", \"empty\"],\n\t\t\tmore: [\"dropdown\", \"list\", \"arrow\"],\n\t\t\tpattern: [\"squares\", \"shape\", \"check\"],\n\t\t\ttask: [\"task\", \"steps\", \"project\", \"shape\"],\n\t\t\tarrow: [\"arrow up\", \"direction\", \"up\", \"right\"],\n\t\t\tdata: [\"document\", \"page\", \"file\", \"attachment\", \"blank\", \"new\"],\n\t\t\t\"data-store\": [\"data\", \"store\", \"storage\", \"files\", \"barrel\", \"cylinder\"],\n\t\t\tpool: [\"collect\", \"double\", \"pool\", \"lanes\"],\n\t\t\tswimlane: [\"collect\", \"single\", \"pool\", \"lane\"],\n\t\t\tselect: [\"arrow\", \"selection\", \"select\", \"cursor\", \"arrow\", \"pointer\", \"mouse\", \"filled\"],\n\t\t\tcursor: [\"arrow\", \"selection\", \"select\", \"cursor\", \"arrow\", \"pointer\", \"mouse\"],\n\t\t\tapi: [\"api\", \"program\", \"application\"],\n\t\t\t\"o-data\": [\"o data\", \"data\", \"protocol\"],\n\t\t\tjava: [\"java\", \"coffee\"],\n\t\t\t\"value-mapping\": [\"value\", \"exchange\"],\n\t\t\t\"terminate-end-event\": [\"circle\", \"end\", \"event\", \"terminate\", \"data\", \"task\"],\n\t\t\t\"parallel-gateway\": [\"shape\", \"indicator\", \"add\", \"check\"],\n\t\t\t\"exclusive-gateway\": [\"shape\", \"indicator\", \"cancel\", \"check\"],\n\t\t\t\"service-task\": [\"service\", \"task\", \"setting\", \"cogwheels\", \"configuration\", \"customize\"],\n\t\t\t\"workflow-editor\": [\"connection\", \"flow\", \"workflow\", \"square\", \"circle\", \"lines\"],\n\t\t\t\"boundary-interrupting\": [\"indicator\", \"clock\", \"event\", \"time\", \"boundary\"],\n\t\t\t\"boundary-non-interrupting\": [\"indicator\", \"clock\", \"event\", \"time\", \"boundary\"],\n\t\t\tblock: [\"cube\", \"square\", \"modular\", \"system\", \"collection\", \"box\", \"object\"],\n\t\t\t\"constrain-block\": [\"block\", \"cube\", \"braces\", \"brackets\", \"analysis\", \"model\"],\n\t\t\tactor: [\"person\", \"individual\", \"user\", \"human\"],\n\t\t\t\"instance-specification\": [\"block\", \"brick\", \"model\", \"system\", \"part\", \"module\"],\n\t\t\t\"value-type\": [\"slider\", \"define\", \"system\", \"panel\", \"variant\", \"control\"],\n\t\t\t\"interface-block\": [\"hexagon\", \"code\", \"design\", \"port\"],\n\t\t\tunit: [\"measure\", \"ruler\", \"quantity\", \"magnitude\", \"education\"],\n\t\t\tsignal: [\"tower\", \"information\", \"network\", \"radio\", \"wave\"],\n\t\t\t\"quantity-kind\": [\"measure\", \"quantity\", \"magnitude\", \"unit\", \"beaker\", \"jug\", \"capacity\"],\n\t\t\t\"item-flow\": [\"flow\", \"association\", \"connector\"],\n\t\t\tdependency: [\"link\", \"interrupted\", \"dependent\"],\n\t\t\tgeneralization: [\"link\", \"general\"],\n\t\t\taggregation: [\"link\", \"aggregate\", \"collect\"],\n\t\t\tcomposition: [\"link\", \"compose\"],\n\t\t\tassociation: [\"link\", \"associate\"],\n\t\t\tport: [\"external\", \"entity\", \"point\", \"block\", \"modular\"],\n\t\t\t\"proxy-port\": [\"external\", \"entity\", \"point\", \"block\", \"modular\", \"proxy\", \"system\", \"boundary\"],\n\t\t\t\"full-port\": [\"external\", \"entity\", \"point\", \"block\", \"modular\", \"full\", \"system\", \"boundary\"],\n\t\t\toperations: [\"setting\", \"arrow\", \"circle\", \"development\"],\n\t\t\tconstrains: [\"brackets\"],\n\t\t\treceptions: [\"arrow\", \"hexagon\", \"receive\", \"input\", \"inside\"],\n\t\t\treferences: [\"connection\", \"block\", \"relation\", \"connect\", \"influence\"],\n\t\t\tparts: [\"puzzle\", \"piece\", \"game\", \"module\", \"match\"],\n\t\t\tflow: [\"arrow\", \"direction\", \"cross\"],\n\t\t\tvalues: [\"object\", \"code\"],\n\t\t\t\"bill-of-material\": [\"list\", \"material\", \"manufacture\", \"list\", \"bom\"],\n\t\t\t\"document-info-recording\": [\"document\", \"link\"],\n\t\t\t\"use-case-diagram\": [\"diagram\", \"oval\"],\n\t\t\t\"bdd-diagram\": [\"diagram\", \"box\"],\n\t\t\t\"requirement-diagram\": [\"diagram\", \"need\", \"note\", \"notepad\"],\n\t\t\t\"package-diagram\": [\"diagram\", \"folder\"],\n\t\t\t\"internal-block-diagram\": [\"diagram\", \"box\"],\n\t\t\t\"requirement-containment-relationship\": [\"diagram\", \"box\"],\n\t\t\t\"use-case\": [\"oval\"],\n\t\t\t\"use-case-extension-point\": [\"oval\", \"dots\"],\n\t\t\t\"communication-path\": [\"line\", \"diagonal\"],\n\t\t\t\"note-connection\": [\"line\", \"diagonal\", \"dotted\"],\n\t\t\tsubject: [\"window\"],\n\t\t\t\"auto-layout\": [\"compose\", \"arrange\"],\n\t\t\t\"required-interface\": [\"receive\", \"import\", \"input\"],\n\t\t\t\"provided-interface\": [\"deliver\", \"export\", \"output\"],\n\t\t\t\"sub-content\": [\"folder\", \"container\"],\n\t\t\tconnector: [\"connect\", \"connection\", \"number\"],\n\t\t\t\"local-process-call\": [\"window\", \"arrow\"],\n\t\t\taggregator: [\"tree\", \"gather\", \"collect\"],\n\t\t\tsplitter: [\"tree\"],\n\t\t\tconverter: [\"tree\", \"extractor\", \"arrow\", \"document\", \"file\"],\n\t\t\t\"content-modifier\": [\"letter\", \"mail\", \"pen\", \"email\", \"e-mail\", \"electronic mail\", \"envelope\"],\n\t\t\t\"message-start-event\": [\n\t\t\t\t\"mail\",\n\t\t\t\t\"circle\",\n\t\t\t\t\"email\",\n\t\t\t\t\"e-mail\",\n\t\t\t\t\"electronic mail\",\n\t\t\t\t\"envelope\",\n\t\t\t\t\"mail\",\n\t\t\t\t\"correspondence\",\n\t\t\t\t\"receiving\",\n\t\t\t\t\"sending\",\n\t\t\t\t\"standard\"\n\t\t\t],\n\t\t\t\"message-end-event\": [\n\t\t\t\t\"mail\",\n\t\t\t\t\"circle\",\n\t\t\t\t\"email\",\n\t\t\t\t\"e-mail\",\n\t\t\t\t\"electronic mail\",\n\t\t\t\t\"envelope\",\n\t\t\t\t\"mail\",\n\t\t\t\t\"correspondence\",\n\t\t\t\t\"receiving\",\n\t\t\t\t\"sending\",\n\t\t\t\t\"standard\"\n\t\t\t],\n\t\t\t\"escalation-end-event\": [\"arrow\", \"circle\", \"responsibility\", \"standard\"],\n\t\t\t\"start-timer-event\": [\"clock\", \"circle\", \"standard\", \"timer\", \"span\", \"timeout\", \"time\"],\n\t\t\t\"error-start-event\": [\"circle\", \"lightning\", \"flash\"],\n\t\t\t\"error-end-event\": [\"circle\", \"lightning\", \"flash\"],\n\t\t\t\"content-enricher\": [\"square\", \"arrow\", \"box\"],\n\t\t\trealization: [\"sysml\", \"arrow\"],\n\t\t\tinterface: [\"sysml\", \"i\", \"hexagon\"],\n\t\t\t\"business-capability\": [\"business\", \"architecture\", \"enterprise\", \"capability\", \"pentagon\"],\n\t\t\t\"progress-group\": [\"business\", \"architecture\", \"enterprise\", \"process\", \"group\", \"chevron\", \"square\"],\n\t\t\t\"value-stream\": [\"business\", \"architecture\", \"enterprise\", \"value\", \"dollar\", \"square\"],\n\t\t\t\"value-flow\": [\"business\", \"architecture\", \"enterprise\", \"value\", \"dollar\", \"chevron\"],\n\t\t\tapplication: [\"app\", \"architecture\", \"enterprise\", \"application\", \"program\"],\n\t\t\t\"etl-job\": [\"architecture\", \"enterprise\", \"application\", \"etl\", \"extract\", \"transform\", \"load\", \"configuration\", \"setting\"],\n\t\t\t\"business-service\": [\"business\", \"enterprise\", \"application\", \"service\", \"pentagon\", \"setting\", \"architecture\"],\n\t\t\t\"application-service\": [\"architecture\", \"enterprise\", \"application\", \"service\", \"app\", \"setting\"],\n\t\t\t\"network-node\": [\"architecture\", \"enterprise\", \"infrastructure\", \"arrow\", \"circle\", \"node\"],\n\t\t\tnetwork: [\"architecture\", \"enterprise\", \"infrastructure\", \"circle\", \"node\"],\n\t\t\t\"deployment-instance\": [\"architecture\", \"enterprise\", \"infrastructure\", \"square\", \"setting\"],\n\t\t\tintranet: [\"architecture\", \"enterprise\", \"infrastructure\", \"house\", \"world\", \"globe\"],\n\t\t\t\"mobile-network\": [\"architecture\", \"enterprise\", \"infrastructure\", \"mobile\", \"network\", \"tower\", \"power\", \"pole\"],\n\t\t\t\"private-cloud\": [\"architecture\", \"enterprise\", \"infrastructure\", \"cloud\", \"lock\", \"secure\", \"safe\"],\n\t\t\tantenna: [\"architecture\", \"enterprise\", \"antenna\", \"transmit\"],\n\t\t\tfirewall: [\"architecture\", \"enterprise\", \"firewall\", \"brick\", \"wall\", \"secure\", \"safe\"],\n\t\t\thub: [\"architecture\", \"enterprise\", \"grid\"],\n\t\t\tmodem: [\"architecture\", \"enterprise\", \"grid\", \"internet\", \"web\"],\n\t\t\trepeater: [\"architecture\", \"enterprise\", \"grid\", \"internet\", \"repeat\"],\n\t\t\trouter: [\"architecture\", \"enterprise\", \"grid\", \"internet\"],\n\t\t\tswitch: [\"architecture\", \"enterprise\", \"grid\"],\n\t\t\tsatellite: [\"architecture\", \"enterprise\", \"space\"],\n\t\t\t\"system-2\": [\"architecture\", \"enterprise\", \"square\", \"node\"],\n\t\t\t\"status-activating\": [\"activate\", \"clock\", \"square\"],\n\t\t\t\"status-suspended\": [\"suspend\", \"pause\", \"square\"],\n\t\t\t\"status-suspending\": [\"suspend\", \"pause\", \"square\", \"clock\"],\n\t\t\t\"status-terminated\": [\"terminate\", \"triangle\"],\n\t\t\t\"status-terminating\": [\"terminate\", \"triangle\", \"clock\"],\n\t\t\t\"solution-not-licensed\": [\"circle\", \"half\", \"fill\", \"empty\", \"license\"],\n\t\t\t\"clear-all-mapping\": [\"clear\", \"remove\", \"delete\", \"map\", \"cancel\"],\n\t\t\t\"map-all-fields\": [\"link\", \"source\", \"target\", \"text\"],\n\t\t\t\"process-package\": [\"package\", \"process\", \"arrow\", \"arrows\", \"chevron\"],\n\t\t\t\"process-kpis\": [\"process\", \"kpi\", \"chart\", \"bulb\", \"light\", \"lamp\"],\n\t\t\tinsights: [\"insights\", \"chart\", \"light\", \"bulb\", \"lamp\"]\n\t\t}\n\t},\n\tBusinessSuiteInAppSymbols: {\n\t\ttitle: \"SAP Business Suite\",\n\t\ticons: {\n\t\t\theart: [\"heart\", \"medical\"],\n\t\t\tquarter: [\"calendar\", \"time\", \"date\", \"quarter\", \"schedule\"],\n\t\t\tyear: [\"calendar\", \"time\", \"date\", \"year\", \"schedule\"],\n\t\t\tequalizer: [\"equalizer\", \"sliders\", \"adjust\"],\n\t\t\tcomponent: [\"component\", \"plus\", \"add\"],\n\t\t\t\"component-private\": [\"component\", \"private\", \"locked\"],\n\t\t\t\"raw-material\": [\"barrel\", \"raw\", \"material\"],\n\t\t\tsms: [\"sms\", \"mobile\", \"message\", \"phone\", \"speech\", \"bubble\", \"text\"],\n\t\t\t\"add-note\": [\"add\", \"plus\", \"additional\", \"more\", \"another\", \"note\", \"info\", \"draft\"],\n\t\t\t\"change-time-horizon\": [\"change\", \"arrow\", \"time\", \"clock\", \"time horizon\"],\n\t\t\t\"table-chart-customization\": [\"wrench\", \"control\", \"customize\", \"configuration\", \"tools\", \"settings\", \"table\", \"chart\"],\n\t\t\t\"delegated-important-task\": [\"flag\", \"arrow\", \"task\", \"delegate\", \"important\"],\n\t\t\tforklift: [\"forklift\", \"transport\"],\n\t\t\tcoins: [\"coins\", \"money\", \"cash\"],\n\t\t\t\"filter-menu\": [\"filter\", \"organise\", \"aggregate\", \"data\", \"menu\"],\n\t\t\t\"target-to-date\": [\"date\", \"target\", \"calendar\", \"arrow\"],\n\t\t\tprogram: [\"planning\", \"scheduling\", \"program\", \"project\", \"scheduling\", \"shape\", \"gantt\", \"chart\", \"display\", \"analytics\"],\n\t\t\tphase: [\n\t\t\t\t\"planning\",\n\t\t\t\t\"scheduling\",\n\t\t\t\t\"program\",\n\t\t\t\t\"project\",\n\t\t\t\t\"scheduling\",\n\t\t\t\t\"shape\",\n\t\t\t\t\"gantt\",\n\t\t\t\t\"chart\",\n\t\t\t\t\"display\",\n\t\t\t\t\"analytics\",\n\t\t\t\t\"chevron\"\n\t\t\t],\n\t\t\tchecklist: [\n\t\t\t\t\"planning\",\n\t\t\t\t\"scheduling\",\n\t\t\t\t\"program\",\n\t\t\t\t\"project\",\n\t\t\t\t\"scheduling\",\n\t\t\t\t\"shape\",\n\t\t\t\t\"gantt\",\n\t\t\t\t\"chart\",\n\t\t\t\t\"display\",\n\t\t\t\t\"analytics\",\n\t\t\t\t\"checklist\"\n\t\t\t],\n\t\t\t\"mirrored-task\": [\n\t\t\t\t\"planning\",\n\t\t\t\t\"scheduling\",\n\t\t\t\t\"program\",\n\t\t\t\t\"project\",\n\t\t\t\t\"scheduling\",\n\t\t\t\t\"shape\",\n\t\t\t\t\"gantt\",\n\t\t\t\t\"chart\",\n\t\t\t\t\"display\",\n\t\t\t\t\"analytics\",\n\t\t\t\t\"mirrored task\"\n\t\t\t],\n\t\t\t\"sub-project\": [\n\t\t\t\t\"planning\",\n\t\t\t\t\"scheduling\",\n\t\t\t\t\"program\",\n\t\t\t\t\"project\",\n\t\t\t\t\"scheduling\",\n\t\t\t\t\"shape\",\n\t\t\t\t\"gantt\",\n\t\t\t\t\"chart\",\n\t\t\t\t\"display\",\n\t\t\t\t\"analytics\",\n\t\t\t\t\"sub project\"\n\t\t\t],\n\t\t\t\"checklist-item\": [\n\t\t\t\t\"planning\",\n\t\t\t\t\"scheduling\",\n\t\t\t\t\"program\",\n\t\t\t\t\"project\",\n\t\t\t\t\"scheduling\",\n\t\t\t\t\"shape\",\n\t\t\t\t\"gantt\",\n\t\t\t\t\"chart\",\n\t\t\t\t\"display\",\n\t\t\t\t\"analytics\",\n\t\t\t\t\"checklist item\"\n\t\t\t],\n\t\t\t\"adhoc-analysis\": [\"magnifier\", \"glass\", \"search\", \"adhoc analysis\", \"analytics\", \"exclamation\", \"status\"],\n\t\t\t\"change-analysis\": [\"magnifier\", \"glass\", \"search\", \"change analysis\", \"analytics\"],\n\t\t\t\"review-demands\": [\"magnifier\", \"glass\", \"search\", \"review demands\", \"clipboard\", \"task\", \"arrow\"],\n\t\t\t\"project-definition\": [\n\t\t\t\t\"shape\",\n\t\t\t\t\"gantt\",\n\t\t\t\t\"chart\",\n\t\t\t\t\"display\",\n\t\t\t\t\"analytics\",\n\t\t\t\t\"triangle\",\n\t\t\t\t\"project\",\n\t\t\t\t\"definition\",\n\t\t\t\t\"planning\",\n\t\t\t\t\"scheduling\"\n\t\t\t],\n\t\t\t\"data-access\": [\"arrow\", \"data\", \"access\"],\n\t\t\t\"define-shortage\": [\"define\", \"shortage\", \"chart\", \"measurement\"],\n\t\t\t\"review-supplies\": [\"magnifier\", \"glass\", \"search\", \"review\", \"supplies\", \"supply\", \"analytics\"],\n\t\t\t\"change-log\": [\"change\", \"log\", \"time\", \"clock\"],\n\t\t\t\"priority-1\": [\"high priority\", \"exclamation\", \"alert\", \"warning\", \"status\"],\n\t\t\t\"priority-2\": [\"high priority\", \"exclamation\", \"alert\", \"warning\", \"status\", \"multiple\"],\n\t\t\tjam: [\"jam\", \"message\", \"speech\", \"bubble\", \"text\", \"conversation\", \"social\", \"comment\", \"discussion\"],\n\t\t\tmilestone: [\"badge\", \"insignia\", \"star\", \"prize\", \"award\", \"achievement\", \"milestone\"],\n\t\t\t\"bulleting-with-numbers\": [\"bullet\", \"text\", \"dots\", \"rich text\"],\n\t\t\t\"decrease-indent\": [\"text\", \"rich text\", \"decrease indent\", \"paragraph\", \"move left\", \"align\", \"arrow\", \"outdent\"],\n\t\t\t\"increase-indent\": [\"text\", \"rich text\", \"increase indent\", \"paragraph\", \"move left\", \"align\", \"arrow\", \"indent\"],\n\t\t\tbold: [\"text\", \"rich text\", \"style\", \"text decoration\", \"format\", \"bold\", \"fat\", \"weight\"],\n\t\t\titalic: [\"text\", \"rich text\", \"style\", \"text decoration\", \"format\", \"italic\", \"slanted\", \"leaning\"],\n\t\t\t\"strike-through\": [\"text\", \"rich text\", \"style\", \"text decoration\", \"format\", \"strike through\", \"crossed out\"],\n\t\t\tunderline: [\"text\", \"rich text\", \"style\", \"text decoration\", \"format\", \"underline\"],\n\t\t\t\"save-as\": [\"save as\", \"diskette\", \"pencil\", \"floppy disc\"],\n\t\t\tsegmentation: [\"segmentation\", \"hierarchy\", \"map\", \"org\", \"tree\", \"overview\", \"data\"],\n\t\t\t\"context-menu\": [\"menu\", \"options\", \"context\", \"button\", \"corner\", \"triangle\"],\n\t\t\tsnapshot: [\"snapshot\", \"arrows\", \"x\", \"cancel\", \"remove\", \"delete\", \"close\"],\n\t\t\t\"substraction-b-a\": [\n\t\t\t\t\"circles\",\n\t\t\t\t\"substraction\",\n\t\t\t\t\"analytics\",\n\t\t\t\t\"analyze objects\",\n\t\t\t\t\"filter\",\n\t\t\t\t\"segmentation\",\n\t\t\t\t\"segment\",\n\t\t\t\t\"target group\",\n\t\t\t\t\"b-a\"\n\t\t\t],\n\t\t\t\"substraction-a-b\": [\n\t\t\t\t\"circles\",\n\t\t\t\t\"substraction\",\n\t\t\t\t\"analytics\",\n\t\t\t\t\"analyze objects\",\n\t\t\t\t\"filter\",\n\t\t\t\t\"segmentation\",\n\t\t\t\t\"segment\",\n\t\t\t\t\"target group\",\n\t\t\t\t\"a-b\"\n\t\t\t],\n\t\t\tintersection: [\"circles\", \"intersection\", \"analytics\", \"analyze objects\", \"filter\", \"segmentation\", \"segment\", \"target group\"],\n\t\t\tunion: [\n\t\t\t\t\"circles\",\n\t\t\t\t\"intersection\",\n\t\t\t\t\"analytics\",\n\t\t\t\t\"analyze objects\",\n\t\t\t\t\"filter\",\n\t\t\t\t\"segmentation\",\n\t\t\t\t\"segment\",\n\t\t\t\t\"target group\",\n\t\t\t\t\"union\",\n\t\t\t\t\"merge\",\n\t\t\t\t\"combine\"\n\t\t\t],\n\t\t\ttop: [\"arrow\", \"top\"],\n\t\t\tbottom: [\"arrow\", \"bottom\"],\n\t\t\t\"page-up\": [\"arrows\", \"page up\"],\n\t\t\t\"page-down\": [\"arrows\", \"page down\"],\n\t\t\t\"create-dashboard\": [\"create\", \"new\", \"plus\", \"dashboard\", \"page\", \"file\"],\n\t\t\t\"excelsius-file\": [\"excelsius file\"],\n\t\t\t\"open-folder\": [\"arrow\", \"open\", \"folder\"],\n\t\t\tneutral: [\"neutral\"],\n\t\t\t\"split-segmentation\": [\"split\", \"separate\", \"divide\", \"arrows\", \"segmentation\", \"segment\", \"target group\"],\n\t\t\t\"manage-budget\": [\"arrows\", \"money\", \"manage\", \"budget\"],\n\t\t\tblocked: [\"blocked\"],\n\t\t\tpipette: [\"pipette\", \"eye dropper\", \"sample\"],\n\t\t\t\"top-recipe\": [\"recipe\", \"bowl\", \"mortar\", \"star\", \"top\", \"important\"],\n\t\t\trecipe: [\"recipe\", \"bowl\", \"mortar\"],\n\t\t\tingredients: [\"ingredients\"],\n\t\t\t\"multiple-charts\": [\"analytics\", \"chart\", \"display\", \"data\", \"multiple charts\"],\n\t\t\t\"descending-bars\": [\"analytics\", \"chart\", \"display\", \"data\", \"descending bars\"],\n\t\t\t\"descending-stacked-bars\": [\"analytics\", \"chart\", \"display\", \"data\", \"descending stacked bars\"],\n\t\t\t\"scatter-plot\": [\"analytics\", \"chart\", \"display\", \"data\", \"scatter plot\"],\n\t\t\tspill: [\"spill\", \"hazard\"],\n\t\t\tfire: [\"fire\", \"hazard\"],\n\t\t\tstratification: [\"analytics\", \"chart\", \"display\", \"data\", \"stratification\"],\n\t\t\trelationship: [\"analytics\", \"chart\", \"display\", \"data\", \"relationship\"],\n\t\t\t\"margin-decomposition\": [\"analytics\", \"chart\", \"display\", \"data\", \"margin decomposition\"],\n\t\t\t\"control-group\": [\"control group\", \"people\"],\n\t\t\t\"responsible-area\": [\"responsible area\", \"person\", \"people\"],\n\t\t\tincrease: [\"increase\", \"arrow\", \"up\", \"raise\"],\n\t\t\tdecrease: [\"decrease\", \"arrow\", \"down\", \"lower\"],\n\t\t\t\"current-stock\": [\"current stock\", \"diamond\"],\n\t\t\texpedite: [\"arrow left\", \"calendar\", \"accelerate\"],\n\t\t\tpostpone: [\"arrow right\", \"calendar\", \"postpone\", \"delay\"],\n\t\t\tapproved: [\"checkmark\", \"approved\", \"tick\", \"ok\", \"checked\"],\n\t\t\t\"partially-delivered\": [\"partially delivered\"],\n\t\t\t\"line-bar-chart\": [\"analytics\", \"chart\", \"display\", \"data\", \"line bar chart\"],\n\t\t\t\"expand-all\": [\"expand all\", \"plus\"],\n\t\t\tsubmission: [\"money\", \"submission\", \"exclamation\", \"circle\"],\n\t\t\t\"change-request\": [\"change\", \"request\", \"pencil\", \"file\", \"edit\", \"write\", \"new\", \"pen\"],\n\t\t\t\"column-unselected\": [\"column\", \"unselected\", \"circle\"],\n\t\t\t\"column-selected\": [\"column\", \"selected\", \"circle\"],\n\t\t\t\"row-unselected\": [\"row\", \"unselected\", \"circle\"],\n\t\t\t\"row-selected\": [\"row\", \"selected\", \"circle\"],\n\t\t\t\"stock-requirements\": [\"arrows\", \"stock\", \"requirement\"],\n\t\t\t\"gender-male-and-female\": [\"gender\", \"male and female\"],\n\t\t\t\"icon-marital-status\": [\"marital status\", \"wedding rings\", \"married\", \"not married\"],\n\t\t\tbirthday: [\"birthday\", \"cake\", \"candles\", \"birth date\"],\n\t\t\tclassification: [\"classification\", \"ranking\"],\n\t\t\t\"marked-for-deletion\": [\"clock\", \"time\", \"bin\", \"trash can\", \"rubbish\", \"deletion\", \"marked\", \"to be deleted\"],\n\t\t\t\"bullet-chart\": [\"bullet chart\", \"analytics\", \"chart\", \"display\", \"data\"],\n\t\t\t\"remove-filter\": [\"filter\", \"organise\", \"aggregate\", \"data\", \"clear\", \"delete\", \"remove\", \"cancel\"],\n\t\t\t\"savings-account\": [\"money\", \"bank\", \"account\", \"savings\"],\n\t\t\t\"debit-card\": [\"money\", \"bank\", \"account\", \"savings\", \"debit\", \"payment\", \"buy\", \"purchase\", \"shopping\"],\n\t\t\t\"vip-customer\": [\n\t\t\t\t\"person\",\n\t\t\t\t\"individual\",\n\t\t\t\t\"user\",\n\t\t\t\t\"customer\",\n\t\t\t\t\"human\",\n\t\t\t\t\"circle\",\n\t\t\t\t\"profile\",\n\t\t\t\t\"me\",\n\t\t\t\t\"favorite\",\n\t\t\t\t\"favourite\",\n\t\t\t\t\"star\"\n\t\t\t],\n\t\t\t\"undesirable-customer\": [\n\t\t\t\t\"person\",\n\t\t\t\t\"individual\",\n\t\t\t\t\"user\",\n\t\t\t\t\"customer\",\n\t\t\t\t\"human\",\n\t\t\t\t\"circle\",\n\t\t\t\t\"profile\",\n\t\t\t\t\"me\",\n\t\t\t\t\"star\",\n\t\t\t\t\"unfavourite\",\n\t\t\t\t\"remove\"\n\t\t\t],\n\t\t\t\"answered-change-request\": [\"request\", \"bubble\"],\n\t\t\t\"collected-change-request\": [\"request\", \"collection\", \"layers stacked\"],\n\t\t\t\"draw-freehand\": [\"draw\", \"shape\", \"create\", \"freehand\"],\n\t\t\t\"draw-circle\": [\"draw\", \"shape\", \"create\", \"circle\"],\n\t\t\tcompleted: [\"status\", \"done\", \"completed\", \"accept\", \"approve\", \"correct\", \"checkmark\", \"tick\", \"affirmative\"],\n\t\t\tanswered: [\"answered\", \"bubble\"],\n\t\t\t\"traffic-cone\": [\"traffic\", \"logistics\", \"cone\"],\n\t\t\t\"traffic-lights\": [\"traffic\", \"logistics\", \"traffic lights\"],\n\t\t\tcontainer: [\"traffic\", \"logistics\", \"container\", \"freight\", \"shipping\"],\n\t\t\t\"container-loading\": [\"traffic\", \"logistics\", \"container\", \"freight\", \"shipping\", \"load\"],\n\t\t\t\"traffic-jam\": [\"traffic\", \"logistics\", \"traffic jam\", \"road conjestion\"],\n\t\t\tproducts: [\"product\", \"commodity\", \"goods\", \"stock\", \"merchandise\", \"package\"],\n\t\t\tsidepanel: [\"screen\", \"split\", \"two\", \"area\", \"split app\", \"side panel\"],\n\t\t\t\"split-screen\": [\"screen\", \"split\", \"two\", \"area\", \"split app\", \"top bottom\", \"horizontal split\", \"analytics\"],\n\t\t\t\"keep-segment\": [\"segments\", \"data\", \"marketing\", \"campaign\", \"keep\", \"approve\"],\n\t\t\t\"exclude-segment\": [\"segments\", \"data\", \"marketing\", \"campaign\", \"clear\", \"approve\", \"remove\", \"cancel\", \"x\"],\n\t\t\t\"separate-segments\": [\"segments\", \"data\", \"marketing\", \"campaign\", \"separate\"],\n\t\t\t\"distribute-segments\": [\"segments\", \"data\", \"marketing\", \"campaign\", \"distribute\"],\n\t\t\t\"next-open-item\": [\"navigation\", \"jump\", \"shift\", \"next\", \"arrow\", \"queue\"],\n\t\t\t\"where-used\": [\"arrows\", \"directions\", \"move\", \"forward\"],\n\t\t\t\"outbound-delivery\": [\"arrow\", \"truck\", \"move\", \"delivery\", \"forward\"],\n\t\t\t\"outbound-delivery-inactive\": [\"circle\", \"stroke\", \"dot\", \"status\"],\n\t\t\t\"outbound-delivery-active\": [\"circle\", \"fill\", \"dot\", \"status\"],\n\t\t\ttarget: [\"arrow\", \"download\", \"down\", \"import\"],\n\t\t\tsource: [\"arrow\", \"upload\", \"up\", \"export\"],\n\t\t\tmaterial: [\"screw\", \"data\", \"material\"],\n\t\t\t\"due-date\": [\"arrow\", \"calendar\", \"due\", \"date\", \"appointment\", \"next\"],\n\t\t\toverdue: [\"arrow\", \"calendar\", \"due\", \"date\", \"appointment\", \"previous\"],\n\t\t\t\"set-as-default\": [\"tick\", \"setting\", \"yes\"],\n\t\t\t\"face-very-bad\": [\"smiley\", \"emotions\", \"emoji\", \"bad\"],\n\t\t\t\"face-bad\": [\"smiley\", \"emotions\", \"emoji\", \"sad\"],\n\t\t\t\"face-skeptical\": [\"smiley\", \"emotions\", \"emoji\", \"skeptical\"],\n\t\t\t\"face-neutral\": [\"smiley\", \"emotions\", \"emoji\", \"neutral\"],\n\t\t\t\"face-astonished\": [\"smiley\", \"emotions\", \"emoji\", \"astonished\"],\n\t\t\t\"face-happy\": [\"face\", \"emoticon\", \"smile\", \"positive\", \"round\"],\n\t\t\t\"face-very-happy\": [\"face\", \"emoticon\", \"smile\", \"positive\", \"round\"],\n\t\t\t\"face-awful\": [\"face\", \"sad\", \"emoticon\", \"negative\", \"round\"],\n\t\t\t\"face-devastated\": [\"face\", \"sad\", \"emoticon\", \"negative\", \"round\"],\n\t\t\t\"face-okey-dokey\": [\"face\", \"emoticon\", \"smile\", \"blink\", \"positive\", \"round\"],\n\t\t\talarm: [\"attention\", \"bell\", \"noise\"],\n\t\t\tactivate: [\"magic\", \"wand\", \"select\"],\n\t\t\t\"segment-preview-reference-objects\": [\"dots\"],\n\t\t\tradius: [\"plus\", \"add\"],\n\t\t\t\"polygon-black\": [\"geometric body\", \"measurement\", \"geometry\"],\n\t\t\t\"polygon-white\": [\"geometric body\", \"measurement\", \"geometry\"],\n\t\t\tpolygon: [\"connection\", \"geometry\", \"network\", \"connected\", \"dots\"],\n\t\t\t\"no-filter\": [\"remove\", \"minus\", \"no\"],\n\t\t\tgrip: [\"pattern\", \"move\", \"grab\", \"take\", \"drag\"],\n\t\t\twater: [\"drop\", \"oil\", \"energy\"],\n\t\t\tgas: [\"fire\", \"flame\", \"energy\"],\n\t\t\tliquid: [\"drop\", \"water\", \"energy\"],\n\t\t\t\"gas-2\": [\"fire\", \"flame\", \"energy\", \"cooker\"],\n\t\t\t\"water-2\": [\"drop\", \"tap\", \"oil\", \"control\", \"close\", \"open\"],\n\t\t\toperator: [\"person\", \"individual\", \"user\", \"customer\", \"human\", \"me\", \"security\", \"helmet\"],\n\t\t\t\"target-filter\": [\"round\", \"circle\", \"cross\", \"segment\"],\n\t\t\tequipment: [\"pump\", \"engine\", \"pipeline\", \"generator\"],\n\t\t\t\"gis-layer\": [\"world\", \"round\", \"map\"],\n\t\t\tsection: [\"people\", \"person\", \"group\", \"team\", \"selection\", \"part\"],\n\t\t\tkohorte: [\"people\", \"person\", \"group\", \"team\", \"selection\", \"part\", \"data\", \"folder\", \"index\", \"card\"],\n\t\t\tfemale: [\"cross\", \"gender\"],\n\t\t\tmale: [\"arrow\", \"gender\"],\n\t\t\tmodel: [\"pump\", \"engine\", \"pipeline\", \"generator\", \"sheet\", \"dataset\"],\n\t\t\thourglass: [\"sand\", \"diabolo\"],\n\t\t\t\"plain-grid-layout\": [\"square\", \"grid\", \"division\", \"partition\", \"split\"],\n\t\t\t\"top-panel-layout\": [\"square\", \"grid\", \"division\", \"partition\", \"split\"],\n\t\t\t\"1x2-grid-layout\": [\"square\", \"grid\", \"division\", \"partition\", \"split\"],\n\t\t\t\"side-panel-left-layout\": [\"square\", \"grid\", \"division\", \"partition\", \"split\"],\n\t\t\t\"2x2-grid-layout\": [\"square\", \"grid\", \"division\", \"partition\", \"split\"],\n\t\t\t\"inverse-t-layout\": [\"square\", \"grid\", \"division\", \"partition\", \"split\"],\n\t\t\t\"t-layout\": [\"square\", \"grid\", \"division\", \"partition\", \"split\"],\n\t\t\t\"top-side-panel-layout\": [\"square\", \"grid\", \"division\", \"partition\", \"split\"],\n\t\t\t\"side-top-panel-layout\": [\"square\", \"grid\", \"division\", \"partition\", \"split\"],\n\t\t\t\"4x4-grid-layout\": [\"square\", \"grid\", \"division\", \"partition\", \"split\"],\n\t\t\t\"add-point\": [\"plus\", \"circle\", \"ball\"],\n\t\t\t\"add-polyline\": [\"plus\", \"share\", \"price\"],\n\t\t\t\"add-polygone\": [\"plus\", \"layer\", \"window\", \"rectangle\"],\n\t\t\t\"email-send-delayed\": [\"clock\", \"timer\", \"time\", \"watch\"],\n\t\t\t\"email-not-opened\": [\"warning\", \"exclamation mark\", \"reminder\", \"attention\"],\n\t\t\t\"link-not-clicked\": [\"warning\", \"exclamation mark\", \"reminder\", \"attention\"],\n\t\t\t\"sms-send-delayed\": [\"clock\", \"timer\", \"time\", \"watch\", \"speech bubble\", \"conversation\", \"chat\"],\n\t\t\t\"ab-testing\": [\"mail\", \"duplicate\", \"store\"],\n\t\t\ttv: [\"screen\", \"monitor\", \"technical device\", \"hi-fi\", \"smart-tv\", \"broadcast\"],\n\t\t\tradio: [\"technical device\", \"sound\", \"tuner\"],\n\t\t\toutdoor: [\"hills\", \"mountains\", \"sun\", \"tree\", \"image\", \"landscape\"],\n\t\t\tevent: [\"cinema\", \"keynote\", \"party\", \"workshop\", \"team\", \"beamer\", \"announcement\"],\n\t\t\t\"paid-search\": [\"money\", \"finder\", \"lens\", \"glass\", \"finance\", \"deposit\"],\n\t\t\ttractor: [\"load\", \"cargo\", \"freight\", \"street\", \"vehicle\"],\n\t\t\t\"display-ads\": [\n\t\t\t\t\"screen\",\n\t\t\t\t\"monitor\",\n\t\t\t\t\"website\",\n\t\t\t\t\"information\",\n\t\t\t\t\"layout\",\n\t\t\t\t\"screendesign\",\n\t\t\t\t\"shopping\",\n\t\t\t\t\"online\",\n\t\t\t\t\"social media\",\n\t\t\t\t\"facebook\"\n\t\t\t],\n\t\t\t\"call-center\": [\"person\", \"individual\", \"user\", \"customer\", \"human\", \"headset\", \"phones\", \"microphone\"],\n\t\t\tsocial: [\"people\", \"person\", \"group\", \"team\", \"conversation\", \"chat\", \"bubble\", \"workshop\"],\n\t\t\tevent2: [\"calendar\", \"time\", \"clock\", \"watch\", \"date\"],\n\t\t\t\"official-service-group\": [\"bank\", \"account\", \"data\", \"storage\", \"folder\", \"finance\", \"money\"],\n\t\t\t\"time-deposit\": [\"clock\", \"timer\", \"money\", \"bag\"],\n\t\t\t\"early-widthdrawal-for-time-deposits\": [\"clock\", \"timer\", \"money\", \"bag\"],\n\t\t\t\"aggregated-view\": [\"sort\", \"order\", \"tree view\"],\n\t\t\t\"detailed-view\": [\"sort\", \"order\", \"tree view\"],\n\t\t\trescheduling: [\"change\", \"replacement\", \"placement\", \"select\", \"switch\", \"move\"],\n\t\t\tresequencing: [\"change\", \"replacement\", \"placement\", \"select\", \"switch\", \"move\"],\n\t\t\t\"movement-warning\": [\"alert\", \"attention\", \"square\"],\n\t\t\t\"multiple-warnings\": [\"alert\", \"attention\", \"square\"],\n\t\t\t\"box-truck\": [\"load\", \"cargo\", \"freight\", \"street\", \"vehicle\"],\n\t\t\t\"box-truck-empty\": [\"load\", \"cargo\", \"freight\", \"street\", \"vehicle\"],\n\t\t\tdriver: [\"people\", \"target-user\", \"driver\"],\n\t\t\t\"driver-warning\": [\"people\", \"target-user\", \"warning\", \"attention\", \"driver\"],\n\t\t\toverlap: [\"object\", \"overlap\", \"window\"],\n\t\t\t\"expand-overlap\": [\"object\", \"overlap\", \"window\", \"hierarchy\", \"expand\"],\n\t\t\t\"collapse-overlap\": [\"object\", \"overlap\", \"wiondow\", \"hierarchy\", \"expand\"],\n\t\t\tutilization: [\"utilization\", \"evaluation\", \"usage\"],\n\t\t\t\"expand-utilization\": [\"utilization\", \"evaluation\", \"usage\", \"expand\", \"show\"],\n\t\t\ttrailer: [\"vehicle\", \"load\", \"cargo\", \"freight\", \"trailer\", \"street\", \"transportation\"],\n\t\t\t\"collapse-utilization\": [\"utilization\", \"evaluation\", \"usage\", \"collapse\", \"hide\"],\n\t\t\t\"container-closed\": [\"container\", \"cargo\", \"freight\"],\n\t\t\trailcar: [\"vehicle\", \"load\", \"cargo\", \"freight\", \"railway\", \"transportation\"],\n\t\t\twarehouse: [\"building\", \"warehouse\", \"industry\", \"repository\", \"depository\"],\n\t\t\tgoods: [\"beverage\", \"product\", \"goods\"],\n\t\t\tship: [\"vehicle\", \"load\", \"cargo\", \"freight\", \"shipment\", \"transportation\"],\n\t\t\t\"truck-driver\": [\"traffic\", \"logistics\", \"driver\", \"truck\", \"person\", \"vehicle\"],\n\t\t\t\"return-delivery\": [\"vehicle\", \"load\", \"cargo\", \"deposit\", \"depository\"],\n\t\t\t\"return-order\": [\"document\", \"order\", \"return\", \"money\", \"receipt\"],\n\t\t\tcontract: [\"document\", \"order\", \"contract\", \"deal\", \"agreement\"],\n\t\t\t\"business-partner\": [\"people\", \"partner\", \"collaboration\", \"business-partner\"],\n\t\t\t\"business-partner-verified\": [\"people\", \"partner\", \"collaboration\", \"business-partner\", \"verification\"],\n\t\t\t\"business-partner-anonymous\": [\"people\", \"partner\", \"collaboration\", \"business-partner\", \"anonymous\"],\n\t\t\t\"business-partner-self-identified\": [\"people\", \"partner\", \"collaboration\", \"business-partner\", \"favorite\"],\n\t\t\t\"money-withdrawal\": [\"money\", \"withdrawal\", \"moneybag\"],\n\t\t\t\"truck-load\": [\"vehicle\", \"load\", \"cargo\", \"freight\", \"truck\", \"street\"],\n\t\t\t\"truck-unload\": [\"vehicle\", \"unload\", \"deposit\", \"cargo\", \"freight\", \"truck\", \"street\"],\n\t\t\t\"truck-load-unload\": [\"vehicle\", \"load\", \"unload\", \"cargo\", \"freight\", \"truck\", \"street\"],\n\t\t\tpharmacy: [\"health\", \"medicine\", \"pharmacy\", \"making\"],\n\t\t\t\"medicine-syrup\": [\"health\", \"medicine\", \"pharmacy\", \"medication\", \"syrup\"],\n\t\t\treminder: [\"time\", \"reminder\", \"alarm\", \"timer\"],\n\t\t\t\"medicine-pill\": [\"health\", \"medicine\", \"pharmacy\", \"medication\", \"pills\"],\n\t\t\t\"medicine-ointment\": [\"health\", \"medicine\", \"pharmacy\", \"medication\", \"ointment\", \"salve\"],\n\t\t\t\"medicine-drops\": [\"health\", \"medicine\", \"pharmacy\", \"medication\", \"drops\", \"tincture\"],\n\t\t\t\"blood-test\": [\"health\", \"blood\", \"test\", \"examination\", \"diagnose\"],\n\t\t\ttemperature: [\"health\", \"temperature\", \"test\", \"examination\", \"diagnose\"],\n\t\t\t\"medicine-inhaler\": [\"health\", \"medicine\", \"pharmacy\", \"medication\", \"inhaler\"],\n\t\t\t\"foot-steps\": [\"human\", \"foot\", \"feet\", \"foot-prints\", \"steps\"],\n\t\t\tweight: [\"health\", \"weight\", \"test\", \"examination\", \"diagnose\"],\n\t\t\t\"health-tracking\": [\"health\", \"heart\", \"test\", \"examination\", \"diagnose\", \"heart-rate\", \"activity-tracker\"],\n\t\t\t\"blood-pressure\": [\"health\", \"blood\", \"blood-pressure\", \"test\", \"examination\", \"diagnose\"],\n\t\t\timmunization: [\"health\", \"medicine\", \"pharmacy\", \"immunization\", \"vaccination\", \"injection\"],\n\t\t\tallergies: [\"health\", \"allergies\", \"diagnose\"],\n\t\t\trescheduling2: [\"planning\", \"scheduling\", \"rescheduling\", \"time\", \"sequence\", \"steps\"],\n\t\t\tresequencing2: [\"planning\", \"scheduling\", \"resequencing\", \"time\", \"sequence\", \"steps\"],\n\t\t\t\"no-time-change\": [\"planning\", \"scheduling\", \"change\", \"time\", \"sequence\", \"steps\"],\n\t\t\t\"time-change\": [\"planning\", \"scheduling\", \"change-time\", \"time\", \"sequence\", \"steps\"],\n\t\t\t\"smart-matcher\": [\"people\", \"match\", \"agreement\"],\n\t\t\t\"parallel-sequence\": [\"planning\", \"scheduling\", \"process\", \"parallel\", \"sequence\", \"flow\"],\n\t\t\t\"alternative-sequence\": [\"planning\", \"scheduling\", \"process\", \"alternative-sequence\", \"flow\", \"decision\"],\n\t\t\t\"main-sequence\": [\"planning\", \"scheduling\", \"process\", \"main-sequence\", \"flow\"],\n\t\t\trefinery: [\"building\", \"factory\", \"warehouse\", \"industry\", \"production\"],\n\t\t\tterminal: [\"building\", \"terminal\", \"collecting-point\", \"reloading-point\", \"transshipment\"],\n\t\t\tvessel: [\"vehicle\", \"load\", \"cargo\", \"freight\", \"shipment\", \"vessel\", \"transportation\"],\n\t\t\tbarge: [\"vehicle\", \"load\", \"cargo\", \"freight\", \"shipment\", \"barge\", \"transportation\"],\n\t\t\troad: [\"vehicle\", \"load\", \"cargo\", \"freight\", \"truck\", \"street\", \"transportation\"],\n\t\t\tpipeline: [\"pipeline\", \"channel\", \"tube\", \"transportation\"],\n\t\t\tdelay: [\"time\", \"reminder\", \"timer\", \"delay\", \"warning\"],\n\t\t\t\"legal-section\": [\"document\", \"legal\", \"section\"],\n\t\t\tcauses: [\"analytics\", \"evaluation\", \"cog-wheel\", \"cause\"],\n\t\t\teffects: [\"analytics\", \"evaluation\", \"cog-wheel\", \"effects\"],\n\t\t\t\"shared-by-me\": [\"people\", \"team\", \"group\", \"shared\", \"deliver\"],\n\t\t\t\"shared-with-me\": [\"people\", \"team\", \"group\", \"shared\", \"received\"],\n\t\t\t\"main-milestone\": [\"planning\", \"goal\", \"milestone\", \"steps\"],\n\t\t\t\"indicator-groups\": [\"indicator\", \"groups\", \"status\", \"time\", \"folder\"],\n\t\t\t\"alert-groups\": [\"indicator\", \"groups\", \"alert\", \"status\", \"folder\"],\n\t\t\t\"function-alert\": [\"status\", \"function\", \"alert\"],\n\t\t\t\"function-hierarchy\": [\"status\", \"function\", \"hierarchy\"],\n\t\t\trfid: [\"device\", \"location\", \"indicator\", \"alert\"],\n\t\t\tinput: [\"actions\", \"arrow\", \"status\"],\n\t\t\t\"software-item\": [\"actions\", \"arrow\", \"status\"],\n\t\t\t\"product-view\": [\"actions\", \"arrow\", \"status\"],\n\t\t\t\"software-item-variant\": [\"actions\", \"arrow\", \"status\"],\n\t\t\tlighthouse: [\"status\", \"building\", \"things\", \"important\", \"highlight\", \"app\", \"light\"],\n\t\t\t\"demand-unit\": [\"people\", \"person\", \"circle\"]\n\t\t}\n\t}\n};\n\nexport type IconCollection = {\n\ttitle: string;\n\ticons: {\n\t\t[key: string]: string[];\n\t};\n};\n\nexport type Icons = {\n\t[key: string]: IconCollection;\n};\n"],"mappings":"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","ignoreList":[],"sourceRoot":"utils"}},{"offset":{"line":401,"column":0},"map":{"version":3,"names":["sap","ui","define","UI5Element","___FESRUtil","addFESRId","getAssociatedFullScreenMenuItem","control","getElementById","getAssociation","getAssociatedFullScreenButton","createShowMoreMenuItem","id","fesrId","associatedFullScreenMenuItem","menuItem","clone","createShowMoreActionButton","associatedFullScreenButton","actionButton","sortMenuItems","menuItemOrder","menuItems","sort","a","b","aId","getId","bId","aIndex","findIndex","includes","bIndex","targetsAreEqual","targetA","targetB","Object","keys","length","semanticObject","action","__exports","__esModule"],"sources":["InsightsUtils.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Button from \"sap/m/Button\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport { Intent } from \"sap/ushell/services/AppLifeCycle\";\nimport MenuItem from \"../MenuItem\";\nimport { addFESRId } from \"./FESRUtil\";\n\n/**\n * Retrieves the associated full screen menu item.\n *\n * @returns {MenuItem} The associated full screen menu item.\n * @private\n */\nexport const getAssociatedFullScreenMenuItem = (control: UI5Element) => {\n\treturn UI5Element.getElementById(control.getAssociation(\"fullScreenMenuItem\", null) as string) as MenuItem;\n};\n\n/**\n * Retrieves the associated full screen button.\n *\n * @returns {Button} The associated full screen button.\n * @private\n *\n */\nexport const getAssociatedFullScreenButton = (control: UI5Element) => {\n\treturn UI5Element.getElementById(control.getAssociation(\"fullScreenButton\", null) as string) as Button;\n};\n\n/**\n * Creates a \"Show More\" menu item.\n *\n * @private\n * @param {string} id - The ID of the menu item.\n * @param {string} [fesrId] - The FESR ID for the menu item.\n * @returns {MenuItem} The created MenuItem instance.\n */\nexport const createShowMoreMenuItem = (control: UI5Element, id: string, fesrId?: string) => {\n\tconst associatedFullScreenMenuItem = getAssociatedFullScreenMenuItem(control);\n\tconst menuItem = associatedFullScreenMenuItem?.clone(id);\n\tif (fesrId) {\n\t\taddFESRId(menuItem, fesrId);\n\t}\n\n\treturn menuItem;\n};\n\n/**\n * Creates a \"Show More\" action button.\n *\n * @private\n * @param {string} id - The ID of the button.\n * @param {string} [fesrId] - The FESR ID for the button.\n * @returns {Button} The created Button instance.\n */\nexport const createShowMoreActionButton = (control: UI5Element, id: string, fesrId?: string) => {\n\tconst associatedFullScreenButton = getAssociatedFullScreenButton(control);\n\tconst actionButton = associatedFullScreenButton ? associatedFullScreenButton.clone(id) : null;\n\tif (fesrId && actionButton) {\n\t\taddFESRId(actionButton, fesrId);\n\t}\n\n\treturn actionButton;\n};\n\n/**\n * Sort Menuitems based on the order provided\n *\n * @private\n * @param {string[]} menuItemOrder - The Ids of the menu item in the order in which to be sorted.\n * @param {MenuItem[]} menuItems- The menuitems list to be sorted.\n * @returns {MenuItem[]} The sorted MenuItems.\n */\nexport const sortMenuItems = (menuItemOrder: string[], menuItems: MenuItem[]) => {\n\treturn menuItems?.sort((a, b) => {\n\t\tconst aId = a.getId();\n\t\tconst bId = b.getId();\n\t\tconst aIndex = menuItemOrder.findIndex((id) => aId.includes(id));\n\t\tconst bIndex = menuItemOrder.findIndex((id) => bId.includes(id));\n\t\treturn aIndex - bIndex;\n\t});\n};\n\n/**\n * Compares two intent objects to determine if they are equal.\n *\n * The function checks the following conditions:\n * 1. If both objects are empty (i.e., have no keys), they are considered equal.\n * 2. If both objects have keys, their `semanticObject` and `action` properties are compared for equality.\n * 3. If either object is `undefined` or the conditions above are not met, they are considered not equal.\n *\n * @param targetA - The first intent object to compare.\n * @param targetB - The second intent object to compare.\n * @returns `true` if the objects are considered equal, otherwise `false`.\n */\nexport const targetsAreEqual = (targetA?: Partial<Intent>, targetB?: Partial<Intent>): boolean => {\n\t// Check if both are empty objects\n\tif (targetA && targetB) {\n\t\tif (Object.keys(targetA).length === 0 && Object.keys(targetB).length === 0) {\n\t\t\treturn true;\n\t\t} else if (Object.keys(targetA).length && Object.keys(targetB).length) {\n\t\t\treturn targetA.semanticObject === targetB.semanticObject && targetA.action === targetB.action;\n\t\t}\n\t}\n\treturn false;\n};\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,8CAAA,8CAAAC,EAAAC,GAAA,mBAQSC,EAASD,EAAA,aAQX,MAAME,EAAmCC,GACxCJ,EAAWK,eAAeD,EAAQE,eAAe,qBAAsB,OAUxE,MAAMC,EAAiCH,GACtCJ,EAAWK,eAAeD,EAAQE,eAAe,mBAAoB,OAWtE,MAAME,EAAyBA,CAACJ,EAAqBK,EAAYC,KACvE,MAAMC,EAA+BR,EAAgCC,GACrE,MAAMQ,EAAWD,GAA8BE,MAAMJ,GACrD,GAAIC,EAAQ,CACXR,EAAUU,EAAUF,EACrB,CAEA,OAAOE,CAAQ,EAWT,MAAME,EAA6BA,CAACV,EAAqBK,EAAYC,KAC3E,MAAMK,EAA6BR,EAA8BH,GACjE,MAAMY,EAAeD,EAA6BA,EAA2BF,MAAMJ,GAAM,KACzF,GAAIC,GAAUM,EAAc,CAC3Bd,EAAUc,EAAcN,EACzB,CAEA,OAAOM,CAAY,EAWb,MAAMC,EAAgBA,CAACC,EAAyBC,IAC/CA,GAAWC,KAAK,CAACC,EAAGC,KAC1B,MAAMC,EAAMF,EAAEG,QACd,MAAMC,EAAMH,EAAEE,QACd,MAAME,EAASR,EAAcS,UAAWlB,GAAOc,EAAIK,SAASnB,IAC5D,MAAMoB,EAASX,EAAcS,UAAWlB,GAAOgB,EAAIG,SAASnB,IAC5D,OAAOiB,EAASG,CAAM,GAgBjB,MAAMC,EAAkBA,CAACC,EAA2BC,KAE1D,GAAID,GAAWC,EAAS,CACvB,GAAIC,OAAOC,KAAKH,GAASI,SAAW,GAAKF,OAAOC,KAAKF,GAASG,SAAW,EAAG,CAC3E,OAAO,IACR,MAAO,GAAIF,OAAOC,KAAKH,GAASI,QAAUF,OAAOC,KAAKF,GAASG,OAAQ,CACtE,OAAOJ,EAAQK,iBAAmBJ,EAAQI,gBAAkBL,EAAQM,SAAWL,EAAQK,MACxF,CACD,CACA,OAAO,KAAK,EACX,IAAAC,EAAA,CAAAC,WAAA,MAAAD,EAAAnC,kCAAAmC,EAAA/B,gCAAA+B,EAAA9B,yBAAA8B,EAAAxB,6BAAAwB,EAAArB,gBAAAqB,EAAAR,kBAAA,OAAAQ,CAAA","ignoreList":[],"sourceRoot":"utils"}},{"offset":{"line":406,"column":0},"map":{"version":3,"names":["sap","ui","define","Log","BaseObject","Lib","HashChanger","FeaturesAPI","startKeyUserAdaptation","Container","EventHub","_catch","body","recover","result","e","then","KeyUserPersonalization","constructor","component","i18nBundle","super","this","on","do","adaptationCustomData","byId","getAggregation","adaptationData","getValue","JSON","parse","setValue","getRTAUserAction","_this","Promise","resolve","load","name","isKeyUser","rtaUserActionProperties","id","getId","icon","text","getText","tooltip","press","triggerRTA","error","Error","message","reject","_this2","_temp","rootControl","catch","getServiceAsync","URLParsingService","hashChangerInstance","getInstance","shellHash","parseShellHash","getHash","hashParams","params","rtaKey","value","Object","prototype","hasOwnProperty","call","replaceHash","constructShellHash","window","location","reload"],"sources":["KeyUserPersonalization.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport Log from \"sap/base/Log\";\nimport BaseObject from \"sap/ui/base/Object\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport Lib from \"sap/ui/core/Lib\";\nimport HashChanger from \"sap/ui/core/routing/HashChanger\";\nimport UIComponent from \"sap/ui/core/UIComponent\";\nimport FeaturesAPI from \"sap/ui/fl/write/api/FeaturesAPI\";\nimport startKeyUserAdaptation from \"sap/ui/rta/api/startKeyUserAdaptation\";\nimport Container from \"sap/ushell/Container\";\nimport EventHub from \"sap/ushell/EventHub\";\nimport URLParsing from \"sap/ushell/services/URLParsing\";\nimport { UserActionProperties } from \"../Layout\";\n\nexport default class KeyUserPersonalization extends BaseObject {\n\tprivate component!: UIComponent | undefined;\n\tprivate i18nBundle!: ResourceBundle;\n\tprivate adaptationData!: object | string;\n\n\tconstructor(component: UIComponent | undefined, i18nBundle: ResourceBundle) {\n\t\tsuper();\n\n\t\tthis.component = component;\n\t\tthis.i18nBundle = i18nBundle;\n\n\t\tEventHub.on(\"keyUserAdaptationDataChange\").do(() => {\n\t\t\tconst adaptationCustomData = this.component?.byId(\"sectionWrapper\")?.getAggregation(\"adaptationData\") as CustomData;\n\t\t\tif (adaptationCustomData) {\n\t\t\t\tthis.adaptationData = adaptationCustomData.getValue() as object | string;\n\n\t\t\t\t// parse adaptation data if string\n\t\t\t\tif (typeof this.adaptationData === \"string\") {\n\t\t\t\t\tthis.adaptationData = JSON.parse(this.adaptationData) as object;\n\t\t\t\t\tadaptationCustomData.setValue(this.adaptationData);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic async getRTAUserAction(): Promise<UserActionProperties | undefined> {\n\t\ttry {\n\t\t\tawait Lib.load({ name: \"sap.ui.fl\" });\n\t\t\tconst isKeyUser = await FeaturesAPI.isKeyUser();\n\t\t\tlet rtaUserActionProperties: UserActionProperties | undefined;\n\n\t\t\tif (isKeyUser) {\n\t\t\t\trtaUserActionProperties = {\n\t\t\t\t\tid: `${this.component?.getId()}-s4MyHomeAdaptUIBtn`,\n\t\t\t\t\ticon: \"sap-icon://wrench\",\n\t\t\t\t\ttext: this.i18nBundle.getText(\"adaptUIBtn\") as string,\n\t\t\t\t\ttooltip: this.i18nBundle.getText(\"adaptUIBtn\") as string,\n\t\t\t\t\tpress: () => this.triggerRTA()\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn Promise.resolve(rtaUserActionProperties);\n\t\t} catch (error: unknown) {\n\t\t\tLog.error(error instanceof Error ? error.message : (error as string));\n\t\t\treturn;\n\t\t}\n\t}\n\n\tprivate async triggerRTA() {\n\t\ttry {\n\t\t\tawait Lib.load({ name: \"sap.ui.fl\" });\n\t\t\tif (this.component) {\n\t\t\t\tstartKeyUserAdaptation({ rootControl: this.component }).catch(async () => {\n\t\t\t\t\tconst URLParsingService = await Container.getServiceAsync<URLParsing>(\"URLParsing\");\n\t\t\t\t\tconst hashChangerInstance = HashChanger.getInstance();\n\t\t\t\t\t//Trigger Manual Reload of Application in case of failure\n\t\t\t\t\tconst shellHash = URLParsingService.parseShellHash(hashChangerInstance.getHash());\n\t\t\t\t\tconst hashParams = (shellHash?.params || {}) as Record<string, unknown>;\n\t\t\t\t\tconst rtaKey = \"sap-ui-fl-max-layer\";\n\t\t\t\t\tconst value = \"CUSTOMER\";\n\n\t\t\t\t\tif (!Object.prototype.hasOwnProperty.call(hashParams, rtaKey)) {\n\t\t\t\t\t\thashParams[rtaKey] = value;\n\t\t\t\t\t\thashChangerInstance.replaceHash(URLParsingService.constructShellHash(shellHash), \"Unknown\");\n\t\t\t\t\t}\n\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (error: unknown) {\n\t\t\tLog.error(error instanceof Error ? error.message : (error as string));\n\t\t\treturn;\n\t\t}\n\t}\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,uDAAA,0NAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,aAkjBO,SAAAC,EAAgBC,EAAMC,GAC5B,IACC,IAAIC,EAASF,GACd,CAAE,MAAMG,GACP,OAAOF,EAAQE,EAChB,CACA,GAAID,GAAUA,EAAOE,KAAM,CAC1B,OAAOF,EAAOE,UAAU,EAAGH,EAC5B,CACA,OAAOC,CACR,CAziBe,MAAMG,UAA+Bb,EAKnDc,YAAYC,EAAoCC,GAC/CC,QAEAC,KAAKH,UAAYA,EACjBG,KAAKF,WAAaA,EAElBV,EAASa,GAAG,+BAA+BC,GAAG,KAC7C,MAAMC,EAAuBH,KAAKH,WAAWO,KAAK,mBAAmBC,eAAe,kBACpF,GAAIF,EAAsB,CACzBH,KAAKM,eAAiBH,EAAqBI,WAG3C,UAAWP,KAAKM,iBAAmB,SAAU,CAC5CN,KAAKM,eAAiBE,KAAKC,MAAMT,KAAKM,gBACtCH,EAAqBO,SAASV,KAAKM,eACpC,CACD,GAEF,CAEaK,mBAAgB,IAA8C,MAAAC,EAQhEZ,KAAI,OAAAa,QAAAC,QAAAzB,EAAA,WAPV,OAAAwB,QAAAC,QACG/B,EAAIgC,KAAK,CAAEC,KAAM,eAActB,KAAA,kBAAAmB,QAAAC,QACb7B,EAAYgC,aAAWvB,KAAA,SAAzCuB,GACN,IAAIC,EAEJ,GAAID,EAAW,CACdC,EAA0B,CACzBC,GAAI,GAAGP,EAAKf,WAAWuB,6BACvBC,KAAM,oBACNC,KAAMV,EAAKd,WAAWyB,QAAQ,cAC9BC,QAASZ,EAAKd,WAAWyB,QAAQ,cACjCE,MAAOA,IAAMb,EAAKc,aAEpB,CAEA,OAAOb,QAAQC,QAAQI,EAAyB,IACjD,EAAC,SAAQS,GACR9C,EAAI8C,MAAMA,aAAiBC,MAAQD,EAAME,QAAWF,EAErD,GACD,CAAC,MAAAlC,GAAA,OAAAoB,QAAAiB,OAAArC,EAAA,EAEaiC,aAAU,IAAG,MAAAK,EAGrB/B,KAAI,MAAAgC,EAAA3C,EAAA,WAFL,OAAAwB,QAAAC,QACG/B,EAAIgC,KAAK,CAAEC,KAAM,eAActB,KAAA,cACjCqC,EAAKlC,UAAS,CACjBX,EAAuB,CAAE+C,YAAaF,EAAKlC,YAAaqC,MAAK,eAAa,OAAArB,QAAAC,QACzC3B,EAAUgD,gBAA4B,eAAazC,KAAA,SAA7E0C,GACN,MAAMC,EAAsBrD,EAAYsD,cAExC,MAAMC,EAAYH,EAAkBI,eAAeH,EAAoBI,WACvE,MAAMC,EAAcH,GAAWI,QAAU,CAAC,EAC1C,MAAMC,EAAS,sBACf,MAAMC,EAAQ,WAEd,IAAKC,OAAOC,UAAUC,eAAeC,KAAKP,EAAYE,GAAS,CAC9DF,EAAWE,GAAUC,EACrBR,EAAoBa,YAAYd,EAAkBe,mBAAmBZ,GAAY,UAClF,CAEAa,OAAOC,SAASC,QAAS,EAC1B,CAAC,MAAA7D,GAAA,OAAAoB,QAAAiB,OAAArC,EAAA,GAAE,GAEL,EAAC,SAAQkC,GACR9C,EAAI8C,MAAMA,aAAiBC,MAAQD,EAAME,QAAWF,EAErD,GAAC,OAAAd,QAAAC,QAAAkB,KAAAtC,KAAAsC,EAAAtC,KAAA,qBACF,CAAC,MAAAD,GAAA,OAAAoB,QAAAiB,OAAArC,EAAA,GACD,OAAAE,CAAA","ignoreList":[],"sourceRoot":"utils"}},{"offset":{"line":411,"column":0},"map":{"version":3,"names":["sap","ui","define","BaseObject","EventBus","Config","Container","__ColorUtils","___Constants","___PagesIconsConstants","__UShellPersonalizer","_interopRequireDefault","obj","__esModule","default","ColorUtils","DEFAULT_BG_COLOR","FALLBACK_ICON","fnFetchLegendColor","MYHOME_SPACE_ID","PAGE_SELECTION_LIMIT","PAGES","SPACES","UShellPersonalizer","PageManager","extend","constructor","_constructor","persContainerId","oOwnerComponent","BaseObject.prototype.constructor.call","this","colorUtils","_eventBus","getInstance","_getPersonalization","fetchAllAvailableSpaces","_fetchAllAvailableSpaces","_this","_aSpaces","Promise","resolve","getServiceAsync","then","oBookmarkService","getContentNodes","_oBookmarkService$get","aSpaces","filter","oSpace","id","forEach","BGColor","applyColorToAllPages","e","reject","fetchAllAvailablePages","_fetchAllAvailablePages","bFetchDistinctPages","arguments","length","undefined","_this2","_aPages","Array","isArray","children","oPage","find","oExistingPage","push","title","label","icon","isIconLoaded","pageId","spaceId","spaceTitle","url","_getDefaultPages","aAvailablePages","aFavoritePages","slice","getFavPages","_getIconForPage","oFavPage","oIcon","includes","_applyIconsForFavPages","aFavPages","aPageWithoutIcon","_getFavPages","bUpdatePersonalisation","_this3","_temp4","selected","getFreeColor","addColor","_temp3","_temp2","oPersonalizer","read","oPersData","favouritePages","write","publish","_temp","_this3$_getPersonaliz","getFavoritePages","_getFavoritePages","bForceUpdate","bSpaceEnabled","encodeURIComponent","last","oGetFavPagesPromise","_getFavPages2","_this4","_this4$_getPersonaliz","_temp8","_temp7","_this4$_getDefaultPag","aPages","oAvailablePage","_temp6","_this4$getFavPages","_temp5","_this4$_getDefaultPag2","applyColorPersonalizations","_applyColorPersonalizations","personalizations","_this5","_temp10","allSpaces","personalization","isPagePersonalization","spaceObj","space","pageObj","page","availablePageObj","colorObj","isSpacePersonalization","favPageObj","favPage","favpageBGColor","oldColor","pageBackgroundColor","_temp9","applyIconPersonalizations","_applyIconPersonalizations","_this6","_temp12","isSpaceIconPersonalization","isPageIconPersonalization","oldIcon","_temp11","oCacheInstances","pageManagerInstance"],"sources":["PageManager.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport BaseObject from \"sap/ui/base/Object\";\nimport Component from \"sap/ui/core/Component\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport Config from \"sap/ushell/Config\";\nimport Container from \"sap/ushell/Container\";\nimport Bookmark from \"sap/ushell/services/BookmarkV2\";\nimport { ISpacePagePersonalization } from \"../interface/KeyUserInterface\";\nimport { IColor, IPage, ISpace } from \"../interface/PageSpaceInterface\";\nimport ColorUtils from \"./ColorUtils\";\nimport { DEFAULT_BG_COLOR, FALLBACK_ICON, fnFetchLegendColor, MYHOME_SPACE_ID, PAGE_SELECTION_LIMIT } from \"./Constants\";\nimport { PAGES, SPACES } from \"./PagesIconsConstants\";\nimport UShellPersonalizer from \"./UshellPersonalizer\";\n\n/**\n *\n * Provides the PageManager Class used for fetch and process user pages.\n *\n * @extends sap.ui.BaseObject\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121.0\n *\n * @private\n * @experimental Since 1.121\n * @hidden\n *\n * @alias sap.cux.home.utils.PageManager\n */\n\nexport default class PageManager extends BaseObject {\n\tcolorUtils: typeof ColorUtils = ColorUtils;\n\tpersContainerId: string;\n\toOwnerComponent: Component;\n\t_aSpaces!: ISpace[];\n\t_aPages!: IPage[];\n\taFavPages!: IPage[];\n\toPersonalizer!: UShellPersonalizer;\n\toGetFavPagesPromise!: Promise<IPage[]>;\n\tstatic oCacheInstances: { [key: string]: PageManager } = {};\n\tprivate _eventBus: EventBus;\n\tprivate constructor(persContainerId: string, oOwnerComponent: Component) {\n\t\tsuper();\n\t\tthis.persContainerId = persContainerId;\n\t\tthis.oOwnerComponent = oOwnerComponent;\n\t\tthis._eventBus = EventBus.getInstance();\n\t}\n\n\tstatic getInstance(persContainerId: string, oOwnerComponent: Component) {\n\t\tif (PageManager.oCacheInstances[persContainerId]) {\n\t\t\treturn PageManager.oCacheInstances[persContainerId];\n\t\t}\n\t\tconst pageManagerInstance = new PageManager(persContainerId, oOwnerComponent);\n\t\tPageManager.oCacheInstances[persContainerId] = pageManagerInstance;\n\t\treturn pageManagerInstance;\n\t}\n\n\tprivate _getPersonalization() {\n\t\treturn UShellPersonalizer.getInstance(this.persContainerId, this.oOwnerComponent);\n\t}\n\n\tpublic async fetchAllAvailableSpaces(): Promise<ISpace[]> {\n\t\tif (this._aSpaces) {\n\t\t\treturn Promise.resolve(this._aSpaces);\n\t\t}\n\t\tconst oBookmarkService: Bookmark = await Container.getServiceAsync(\"BookmarkV2\");\n\t\tconst aSpaces = (await oBookmarkService.getContentNodes()) as ISpace[];\n\t\t// Filter MyHome Space from Spaces\n\t\tthis._aSpaces = aSpaces.filter((oSpace) => oSpace.id !== MYHOME_SPACE_ID);\n\n\t\t// Add Initial Default Color for Spaces\n\t\tthis._aSpaces.forEach(function (oSpace) {\n\t\t\toSpace.BGColor = DEFAULT_BG_COLOR();\n\t\t\toSpace.applyColorToAllPages = false;\n\t\t});\n\n\t\treturn this._aSpaces;\n\t}\n\tpublic async fetchAllAvailablePages(bFetchDistinctPages: boolean = false): Promise<IPage[]> {\n\t\tif (this._aPages) {\n\t\t\treturn Promise.resolve(this._aPages);\n\t\t}\n\t\tconst aSpaces = await this.fetchAllAvailableSpaces();\n\t\tthis._aPages = [];\n\t\taSpaces.forEach((oSpace: ISpace) => {\n\t\t\tif (Array.isArray(oSpace.children)) {\n\t\t\t\toSpace.children.forEach((oPage: IPage) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!bFetchDistinctPages ||\n\t\t\t\t\t\t(bFetchDistinctPages && !this._aPages.find((oExistingPage) => oExistingPage.id === oPage.id))\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._aPages.push({\n\t\t\t\t\t\t\ttitle: oPage.label,\n\t\t\t\t\t\t\ticon: FALLBACK_ICON,\n\t\t\t\t\t\t\tisIconLoaded: false,\n\t\t\t\t\t\t\tpageId: oPage.id,\n\t\t\t\t\t\t\tspaceId: oSpace.id,\n\t\t\t\t\t\t\tspaceTitle: oSpace.label,\n\t\t\t\t\t\t\turl: \"#Launchpad-openFLPPage?pageId=\" + oPage.id + \"&spaceId=\" + oSpace.id\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn this._aPages;\n\t}\n\tprivate _getDefaultPages(aAvailablePages: IPage[]): Promise<IPage[]> {\n\t\tconst aFavoritePages = aAvailablePages.slice(0, PAGE_SELECTION_LIMIT) || [];\n\t\treturn this.getFavPages(aFavoritePages);\n\t}\n\t// Get icons from icon constants file\n\tprivate _getIconForPage(oFavPage: IPage) {\n\t\t// Check for icon in page icon constants file\n\t\tlet oIcon = PAGES.find((oPage) => oFavPage.pageId?.includes(oPage.id));\n\n\t\tif (!oIcon) {\n\t\t\t// Check for icon in space icon constants file\n\t\t\toIcon = SPACES.find((oSpace) => oFavPage.spaceId?.includes(oSpace.id));\n\t\t}\n\n\t\toFavPage.icon = oIcon?.icon || FALLBACK_ICON;\n\t\toFavPage.isIconLoaded = true;\n\t}\n\tprivate _applyIconsForFavPages(aFavPages: IPage[]) {\n\t\tconst aPageWithoutIcon = aFavPages.filter((oPage) => !oPage.isIconLoaded);\n\t\taPageWithoutIcon.forEach((oPage: IPage) => {\n\t\t\tthis._getIconForPage(oPage);\n\t\t});\n\t}\n\tpublic async getFavPages(aFavPages: IPage[], bUpdatePersonalisation: boolean = false) {\n\t\taFavPages.forEach((oPage: IPage) => {\n\t\t\toPage.selected = true;\n\t\t\tif (!oPage.BGColor) {\n\t\t\t\toPage.BGColor = this.colorUtils.getFreeColor();\n\t\t\t} else {\n\t\t\t\tthis.colorUtils.addColor(oPage.BGColor as string);\n\t\t\t}\n\t\t});\n\n\t\t// Update the Personalisation model\n\t\tif (bUpdatePersonalisation) {\n\t\t\tif (!this.oPersonalizer) {\n\t\t\t\tthis.oPersonalizer = await this._getPersonalization();\n\t\t\t}\n\t\t\tlet oPersData = await this.oPersonalizer.read();\n\t\t\tif (!oPersData) oPersData = { favouritePages: [] };\n\t\t\toPersData.favouritePages = aFavPages;\n\t\t\tawait this.oPersonalizer.write(oPersData);\n\t\t\tthis._eventBus.publish(\"pageChannel\", \"pageUpdated\");\n\t\t}\n\n\t\t// Fetch and apply Icons for Favorite Pages\n\t\tif (aFavPages.length) {\n\t\t\tthis._applyIconsForFavPages(aFavPages);\n\t\t}\n\t\treturn aFavPages;\n\t}\n\tpublic getFavoritePages(bForceUpdate: boolean = false) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n\t\tconst bSpaceEnabled = encodeURIComponent(Config.last(\"/core/spaces/enabled\"));\n\t\tif (!bSpaceEnabled) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\t\tif (this.aFavPages && !bForceUpdate) {\n\t\t\treturn Promise.resolve(this.aFavPages);\n\t\t}\n\t\tif (this.oGetFavPagesPromise === undefined) {\n\t\t\tthis.oGetFavPagesPromise = this._getFavPages(bForceUpdate);\n\t\t}\n\t\treturn this.oGetFavPagesPromise;\n\t}\n\n\tprivate async _getFavPages(bForceUpdate: boolean) {\n\t\tthis.oPersonalizer = await this._getPersonalization();\n\t\tconst oPersData = await this.oPersonalizer.read();\n\t\tconst aFavoritePages: IPage[] | undefined = oPersData?.favouritePages;\n\t\tconst aAvailablePages = await this.fetchAllAvailablePages(true);\n\t\t// Set first 8 available pages are favorite if no favorite page data is present\n\t\tif (!aFavoritePages) {\n\t\t\tthis.aFavPages = await this._getDefaultPages(aAvailablePages);\n\t\t} else {\n\t\t\tlet aPages: IPage[] = [],\n\t\t\t\toExistingPage;\n\t\t\taFavoritePages?.forEach((oPage: IPage) => {\n\t\t\t\toExistingPage = aAvailablePages.find(function (oAvailablePage) {\n\t\t\t\t\treturn oAvailablePage.pageId === oPage.pageId;\n\t\t\t\t});\n\t\t\t\tif (oExistingPage) {\n\t\t\t\t\toExistingPage.BGColor = oPage.BGColor;\n\t\t\t\t\taPages.push(oExistingPage);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// To send Maximum of 8 Pages (BCP incident: 2270169293)\n\t\t\taPages = aPages.slice(0, PAGE_SELECTION_LIMIT);\n\t\t\tif (aPages.length || !aFavoritePages?.length) {\n\t\t\t\tthis.aFavPages = await this.getFavPages(aPages, aPages.length !== aFavoritePages?.length || bForceUpdate);\n\t\t\t} else if (!aPages.length && aFavoritePages.length) {\n\t\t\t\t//Clean unaccessible page data\n\t\t\t\toPersData.favouritePages = [];\n\t\t\t\tawait this.oPersonalizer.write(oPersData);\n\t\t\t\tthis.aFavPages = await this._getDefaultPages(aAvailablePages);\n\t\t\t}\n\t\t}\n\t\treturn this.aFavPages;\n\t}\n\n\tpublic async applyColorPersonalizations(personalizations?: ISpacePagePersonalization[]) {\n\t\tif (!personalizations?.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.aFavPages) {\n\t\t\tawait this.getFavoritePages();\n\t\t}\n\n\t\tconst allSpaces = await this.fetchAllAvailableSpaces();\n\n\t\tpersonalizations.forEach((personalization) => {\n\t\t\tconst isPagePersonalization = !!personalization.pageId;\n\t\t\t//corresponding space obj of the master list of all spaces\n\t\t\tconst spaceObj = allSpaces?.find((space) => space.id === personalization.spaceId);\n\t\t\tconst pageObj = spaceObj?.children.find((page) => page.id === personalization.pageId);\n\t\t\t//corresponding page obj of the list of favorite/visible pages\n\t\t\tconst oPage = this.aFavPages.find((oPage) => oPage.pageId === personalization.pageId);\n\t\t\t//corresponding page obj of the master list of all pages\n\t\t\tconst availablePageObj = this._aPages?.find((page) => page.pageId === personalization.pageId);\n\t\t\t// Update the Personalisation model for space\n\t\t\tif (!isPagePersonalization && spaceObj) {\n\t\t\t\tconst colorObj = fnFetchLegendColor(personalization.BGColor as string);\n\t\t\t\tspaceObj.BGColor = colorObj;\n\t\t\t\tspaceObj.applyColorToAllPages = personalization.applyColorToAllPages;\n\t\t\t\tspaceObj.isSpacePersonalization = true;\n\n\t\t\t\t// Update the color for all pages in the space if applied\n\t\t\t\tspaceObj.children.forEach((oPage) => {\n\t\t\t\t\tconst favPageObj = this.aFavPages.find((favPage) => favPage.pageId === oPage.id);\n\t\t\t\t\tif (favPageObj) {\n\t\t\t\t\t\tconst favpageBGColor = favPageObj.isPagePersonalization ? favPageObj.oldColor : DEFAULT_BG_COLOR();\n\t\t\t\t\t\tfavPageObj.BGColor = spaceObj.applyColorToAllPages ? personalization.BGColor : favpageBGColor;\n\t\t\t\t\t\toPage.BGColor = favPageObj.BGColor;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * setting personalization color for unchecked pages\n\t\t\t\t\t\t * updating color for the children of master list of spaces\n\t\t\t\t\t\t * updating color for the available pages corresponding to the space id\n\t\t\t\t\t\t */\n\t\t\t\t\t\toPage.BGColor = spaceObj.applyColorToAllPages ? personalization.BGColor : DEFAULT_BG_COLOR();\n\t\t\t\t\t\tthis._aPages.forEach((page) => {\n\t\t\t\t\t\t\tif (page.spaceId === spaceObj.id) {\n\t\t\t\t\t\t\t\tpage.BGColor = oPage.BGColor;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (pageObj) {\n\t\t\t\t// Update the Personalisation model for page\n\t\t\t\tconst pageBackgroundColor = spaceObj?.applyColorToAllPages\n\t\t\t\t\t? ({ ...spaceObj.BGColor } as IColor)\n\t\t\t\t\t: fnFetchLegendColor(personalization.BGColor as string);\n\t\t\t\t//updating color for the favourite page\n\t\t\t\tif (oPage) {\n\t\t\t\t\toPage.isPagePersonalization = true;\n\t\t\t\t\toPage.BGColor = pageBackgroundColor;\n\t\t\t\t\toPage.oldColor = fnFetchLegendColor(personalization.BGColor as string);\n\t\t\t\t}\n\t\t\t\t//updating color for the children of master list of spaces\n\t\t\t\tpageObj.isPagePersonalization = true;\n\t\t\t\tpageObj.BGColor = pageBackgroundColor;\n\t\t\t\tpageObj.oldColor = fnFetchLegendColor(personalization.BGColor as string);\n\t\t\t\t//updating color for the page of master list of pages/available page\n\t\t\t\tif (availablePageObj) {\n\t\t\t\t\tavailablePageObj.isPagePersonalization = true;\n\t\t\t\t\tavailablePageObj.BGColor = pageBackgroundColor;\n\t\t\t\t\tavailablePageObj.oldColor = fnFetchLegendColor(personalization.BGColor as string);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._eventBus.publish(\"pageChannel\", \"pageUpdated\");\n\t}\n\n\tpublic async applyIconPersonalizations(personalizations?: ISpacePagePersonalization[]) {\n\t\tif (!personalizations?.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.aFavPages) {\n\t\t\tawait this._getFavPages(false);\n\t\t}\n\t\tconst allSpaces = await this.fetchAllAvailableSpaces();\n\n\t\tpersonalizations.forEach((personalization) => {\n\t\t\tconst isPagePersonalization = !!personalization.pageId;\n\t\t\tconst spaceObj = allSpaces?.find((space) => space.id === personalization.spaceId);\n\n\t\t\t// Update the Personalisation model for space\n\t\t\tif (!isPagePersonalization) {\n\t\t\t\tif (spaceObj) {\n\t\t\t\t\tspaceObj.icon = personalization.icon;\n\t\t\t\t\tspaceObj.isSpaceIconPersonalization = true;\n\n\t\t\t\t\t// Update the icon for all pages in the space if applied\n\t\t\t\t\tspaceObj.children.forEach((oPage) => {\n\t\t\t\t\t\tif (!oPage.isPageIconPersonalization) {\n\t\t\t\t\t\t\tconst favPageObj = this.aFavPages.find((favPage) => favPage.pageId === oPage.id);\n\t\t\t\t\t\t\tif (favPageObj) {\n\t\t\t\t\t\t\t\tfavPageObj.icon = spaceObj.icon || FALLBACK_ICON;\n\t\t\t\t\t\t\t\toPage.icon = spaceObj.icon || FALLBACK_ICON;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Update the Personalisation model for page\n\t\t\t\tconst pageObj = spaceObj?.children.find((page) => page.id === personalization.pageId);\n\t\t\t\tconst oPage = this.aFavPages.find((oPage) => oPage.pageId === personalization.pageId);\n\t\t\t\tif (pageObj && oPage) {\n\t\t\t\t\toPage.isPageIconPersonalization = true;\n\t\t\t\t\tpageObj.isPageIconPersonalization = true;\n\t\t\t\t\toPage.icon = personalization.icon;\n\t\t\t\t\tpageObj.icon = personalization.icon;\n\t\t\t\t\toPage.oldIcon = personalization.oldIcon;\n\t\t\t\t\tpageObj.oldIcon = personalization.oldIcon;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis._eventBus.publish(\"pageChannel\", \"pageUpdated\");\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"utils"}},{"offset":{"line":416,"column":0},"map":{"version":3,"names":["sap","ui","define","PAGES","id","title","icon","SPACES","__exports","__esModule"],"sources":["PagesIconsConstants.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nexport const PAGES = [\n\t{\n\t\tid: \"SAP_FIN_PGT_AP_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://batch-payments\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_AP_MGR_SETTING_PC\",\n\t\ttitle: \"Current Settings\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-set-as-default\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_AP_MGR_ANALYTIC_PC\",\n\t\ttitle: \"Analytics\",\n\t\ticon: \"sap-icon://business-objects-experience\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_AP_PAYM_PC\",\n\t\ttitle: \"Payments\",\n\t\ticon: \"sap-icon://money-bills\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_AP_PER_PC\",\n\t\ttitle: \"Periodic Activities\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-event2\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_AP_INV_PC\",\n\t\ttitle: \"Supplier Invoices\",\n\t\ticon: \"sap-icon://travel-expense-report\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_AP_SUP_PC\",\n\t\ttitle: \"Suppliers\",\n\t\ticon: \"sap-icon://shipping-status\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_AR_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://account\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_AR_PAY_CLEAR_PC\",\n\t\ttitle: \"Payments and Clearing\",\n\t\ticon: \"sap-icon://simulate\"\n\t},\n\t{\n\t\tid: \"SAP_CORE_PGT_COM_PC\",\n\t\ttitle: \"Communication Management\",\n\t\ticon: \"sap-icon://key-user-settings\"\n\t},\n\t{\n\t\tid: \"SAP_CEC_PGT_MKT_CFG_PC\",\n\t\ttitle: \"Configuration\",\n\t\ticon: \"sap-icon://settings\"\n\t},\n\t{\n\t\tid: \"SAP_CEC_PGT_MKT_ADM_PC\",\n\t\ttitle: \"Data Management\",\n\t\ticon: \"sap-icon://kpi-managing-my-area\"\n\t},\n\t{\n\t\tid: \"SAP_CORE_PGT_DPP_PC\",\n\t\ttitle: \"Data Protection and Privacy\",\n\t\ticon: \"sap-icon://locked\"\n\t},\n\t{\n\t\tid: \"SAP_CORE_PGT_EMP_PC\",\n\t\ttitle: \"Employee Master Data\",\n\t\ticon: \"sap-icon://work-history\"\n\t},\n\t{\n\t\tid: \"SAP_CORE_PGT_EXT_PC\",\n\t\ttitle: \"Extensibility\",\n\t\ticon: \"sap-icon://expand-all\"\n\t},\n\t{\n\t\tid: \"SAP_CORE_PGT_IAM_PC\",\n\t\ttitle: \"Identity and Access Management\",\n\t\ticon: \"sap-icon://badge\"\n\t},\n\t{\n\t\tid: \"SAP_CORE_PGT_FLP_PC\",\n\t\ttitle: \"Launchpad\",\n\t\ticon: \"sap-icon://grid\"\n\t},\n\t{\n\t\tid: \"SAP_CORE_PGT_SEC_PC\",\n\t\ttitle: \"Security\",\n\t\ticon: \"sap-icon://shield\"\n\t},\n\t{\n\t\tid: \"SAP_CORE_PGT_TMC_PC\",\n\t\ttitle: \"Technical Monitoring\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-indicator-groups\"\n\t},\n\t{\n\t\tid: \"SAP_CORE_PGT_CTS_PC\",\n\t\ttitle: \"Transport Management\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-operator\"\n\t},\n\t{\n\t\tid: \"SAP_HCM_PGT_ADM_HRINFO_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://employee-pane\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_CCONS_AUDITOR_CPROC_PC\",\n\t\ttitle: \"Consolidation Process\",\n\t\ticon: \"sap-icon://create-form\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_CCONS_AUDITOR_MD_PC\",\n\t\ttitle: \"Master Data\",\n\t\ticon: \"sap-icon://filter-facets\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_CCONS_AUDITOR_GREP_PC\",\n\t\ttitle: \"Group Reports\",\n\t\ticon: \"sap-icon://group-2\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_CCONS_AUDITOR_SET_PC\",\n\t\ttitle: \"Settings\",\n\t\ticon: \"sap-icon://action-settings\"\n\t},\n\t{\n\t\tid: \"SAP_CEC_PGT_MKT_BAM_PC\",\n\t\ttitle: \"Business Data Analysis\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-change-analysis\"\n\t},\n\t{\n\t\tid: \"SAP_MM_PGT_CNTRL_PURCH_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-contract\"\n\t},\n\t{\n\t\tid: \"SAP_MM_PGT_CNTRL_SOURCING_PC\",\n\t\ttitle: \"Central Sourcing and Contracting\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-contract\"\n\t},\n\t{\n\t\tid: \"SAP_MM_PGT_CNTRL_PURCHASING_PC\",\n\t\ttitle: \"Central Purchasing\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-contract\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_FICA_COLLSPEC_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://sap-box\"\n\t},\n\t{\n\t\tid: \"SAP_CEC_PGT_MKT_BPC_EXP_PC\",\n\t\ttitle: \"Configuration and Setup\",\n\t\ticon: \"sap-icon://action-settings\"\n\t},\n\t{\n\t\tid: \"SAP_CA_PGT_CONSENT_MGMT_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://customer-order-entry\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_ICA_RECON_RUN_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://activity-individual\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_FICA_RECONSPEC_PC\",\n\t\ttitle: \"Reconciliation\",\n\t\ticon: \"sap-icon://accept\"\n\t},\n\t{\n\t\tid: \"SAP_CINV_PGT_SPECIALIST_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://receipt\"\n\t},\n\t{\n\t\tid: \"SAP_CINV_PGT_ADMIN_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://my-sales-order\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_CR_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://accounting-document-verification\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_CR_ACC_PC\",\n\t\ttitle: \"Credit Accounts\",\n\t\ticon: \"sap-icon://accounting-document-verification\"\n\t},\n\t{\n\t\tid: \"SAP_SD_PGT_CR_PROC_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-return-order\"\n\t},\n\t{\n\t\tid: \"SAP_PSS_PGT_DG_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://alert\"\n\t},\n\t{\n\t\tid: \"SAP_CA_PGT_MIG_PC\",\n\t\ttitle: \"Configuration - Data Migration\",\n\t\ticon: \"sap-icon://combine\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_FICA_DPSPEC_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://shield\"\n\t},\n\t{\n\t\tid: \"SAP_CMD_PGT_QLTY_BUPA_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-control-group\"\n\t},\n\t{\n\t\tid: \"SAP_CMD_PGT_QLTY_PROD_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-review-supplies\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_DIVISION_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-split-segmentation\"\n\t},\n\t{\n\t\tid: \"SAP_PLM_PGT_DESIGN_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://course-program\"\n\t},\n\t{\n\t\tid: \"SAP_LCM_PGT_LEGAL_CONTENT_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-event\"\n\t},\n\t{\n\t\tid: \"SAP_LCM_PGT_ADMINISTRATION_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://manager\"\n\t},\n\t{\n\t\tid: \"SAP_EHS_PGT_ENV_MGM_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://e-care\"\n\t},\n\t{\n\t\tid: \"SAP_OIL_PGT_FLOG_SUPLRITEM_PC\",\n\t\ttitle: \"?\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-truck-driver\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_GL_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://activity-items\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_GL_DOC_ENTRY_PC\",\n\t\ttitle: \"Journal Entries\",\n\t\ticon: \"sap-icon://education\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_GL_PERIODIC_PC\",\n\t\ttitle: \"Periodic Activities\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-event2\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_GL_REP_COA_PC\",\n\t\ttitle: \"Reporting and Chart of Accounts\",\n\t\ticon: \"sap-icon://chart-table-view\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_GL_TX_DCL_PC\",\n\t\ttitle: \"Tax Declaration\",\n\t\ticon: \"sap-icon://accounting-document-verification\"\n\t},\n\t{\n\t\tid: \"SAP_PSM_PGT_GM_GR_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://loan\"\n\t},\n\t{\n\t\tid: \"SAP_PSM_PGT_GM_GR_OVR_PC\",\n\t\ttitle: \"Budget Maintenance and Execution\",\n\t\ticon: \"sap-icon://loan\"\n\t},\n\t{\n\t\tid: \"SAP_S4CRM_PGT_REPA_MGR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://technical-object\"\n\t},\n\t{\n\t\tid: \"SAP_EHS_PGT_INC_MGMT_PC\",\n\t\ttitle: \"Health and Safety\",\n\t\ticon: \"sap-icon://incident\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_ICA_RECON_RUN_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://compare-2\"\n\t},\n\t{\n\t\tid: \"SAP_SD_PGT_SO_PROC_PS_PC\",\n\t\ttitle: \"Sales Processing\",\n\t\ticon: \"sap-icon://capital-projects\"\n\t},\n\t{\n\t\tid: \"SAP_SLL_PGT_ADMIN_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://globe\"\n\t},\n\t{\n\t\tid: \"SAP_SLL_PGT_TRD_CLS_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://internet-browser\"\n\t},\n\t{\n\t\tid: \"SAP_SLL_PGT_TRD_CMPLNC_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://home-share\"\n\t},\n\t{\n\t\tid: \"SAP_SLL_PGT_INTRASTAT_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://simple-payment\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_IA_INSIGHTS_PC\",\n\t\ttitle: \"Inventory Accounting\",\n\t\ticon: \"sap-icon://multi-select\"\n\t},\n\t{\n\t\tid: \"SAP_MM_PGT_IM_ANALYSIS_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://customer-and-supplier\"\n\t},\n\t{\n\t\tid: \"SAP_LO_PGT_HUM_INV_OVR_PC\",\n\t\ttitle: \"Handling Units in Inventory\",\n\t\ticon: \"sap-icon://customer-and-supplier\"\n\t},\n\t{\n\t\tid: \"SAP_RFM_PGT_IM_PROCESS_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://supplier\"\n\t},\n\t{\n\t\tid: \"SAP_LO_PGT_HUM_REM_OVR_PC\",\n\t\ttitle: \"Handling Units in Production\",\n\t\ticon: \"sap-icon://supplier\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_JVA_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-intersection\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_JVA_MD_PC\",\n\t\ttitle: \"Master Data\",\n\t\ticon: \"sap-icon://save\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_JVA_JE_PC\",\n\t\ttitle: \"Journal Entries\",\n\t\ticon: \"sap-icon://education\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_JVA_PA_PC\",\n\t\ttitle: \"Periodic Activities\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-event2\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_JVA_REP_PC\",\n\t\ttitle: \"Reporting\",\n\t\ticon: \"sap-icon://table-view\"\n\t},\n\t{\n\t\tid: \"SAP_LE_PGT_JITMD_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://timesheet\"\n\t},\n\t{\n\t\tid: \"SAP_LE_PGT_JITMPLNR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://create-entry-time\"\n\t},\n\t{\n\t\tid: \"SAP_SCM_PGT_PRODN_OPTR_LEAN_OVR_PC\",\n\t\ttitle: \"Kanban Overview\",\n\t\ticon: \"sap-icon://factory\"\n\t},\n\t{\n\t\tid: \"SAP_SCM_PGT_SUPERVISOR_LEAN_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://factory\"\n\t},\n\t{\n\t\tid: \"SAP_EAM_PGT_MT_OVR_MW_MC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://wrench\"\n\t},\n\t{\n\t\tid: \"SAP_EAM_PGT_MP_OVR_MC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://add-equipment\"\n\t},\n\t{\n\t\tid: \"SAP_EAM_PGT_MP_MD_PC\",\n\t\ttitle: \"Master Data\",\n\t\ticon: \"sap-icon://add-equipment\"\n\t},\n\t{\n\t\tid: \"SAP_EAM_PGT_MNT_SUP_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://technical-object\"\n\t},\n\t{\n\t\tid: \"SAP_EAM_PGT_MNT_SUP_MD_PC\",\n\t\ttitle: \"Master Data\",\n\t\ticon: \"sap-icon://technical-object\"\n\t},\n\t{\n\t\tid: \"SAP_EHS_PGT_MOC_CRDTR_PC\",\n\t\ttitle: \"Management of Change\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-unsaved-changes\"\n\t},\n\t{\n\t\tid: \"SAP_CEC_PGT_MKT_EXP_PC\",\n\t\ttitle: \"Marketing\",\n\t\ticon: \"sap-icon://marketing-campaign\"\n\t},\n\t{\n\t\tid: \"SAP_CEC_PGT_MKT_MGR_PC\",\n\t\ttitle: \"Marketing Management\",\n\t\ticon: \"sap-icon://manager-insight\"\n\t},\n\t{\n\t\tid: \"SAP_CDM_PGT_BP_MAINT_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://save\"\n\t},\n\t{\n\t\tid: \"SAP_CMD_PGT_CA_DATA_REP_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://copy\"\n\t},\n\t{\n\t\tid: \"SAP_OIL_PGT_PVOL_PC\",\n\t\ttitle: \"Production Measurements\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-gas\"\n\t},\n\t{\n\t\tid: \"SAP_SCM_PGT_OFS_RECRRG_ACTIES_PC\",\n\t\ttitle: \"Recurring Activities\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-container-loading\"\n\t},\n\t{\n\t\tid: \"SAP_SCM_PGT_OFM_OCCSNL_ACTIES_PC\",\n\t\ttitle: \"Occasional Activities\",\n\t\ticon: \"sap-icon://enter-more\"\n\t},\n\t{\n\t\tid: \"SAP_SCM_PGT_OFM_RECRRG_ACTIES_PC\",\n\t\ttitle: \"Recurring Activities\",\n\t\ticon: \"sap-icon://refresh\"\n\t},\n\t{\n\t\tid: \"SAP_LO_PGT_PLANTMANAGMT_MC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-operator\"\n\t},\n\t{\n\t\tid: \"SAP_PSS_PGT_PRODSTWRD_SPLST_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-approved\"\n\t},\n\t{\n\t\tid: \"SAP_PSS_PGT_MD_SPECIALIST_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://permission\"\n\t},\n\t{\n\t\tid: \"SAP_SCM_PGT_SUPERVISOR_RPTV_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-table-chart-customization\"\n\t},\n\t{\n\t\tid: \"SAP_SCM_PGT_PRODNENG_DISC_ANLYTS_PC\",\n\t\ttitle: \"Execution Analytics\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-multiple-charts\"\n\t},\n\t{\n\t\tid: \"SAP_SCM_PGT_PRODN_ENG_DISC_TOOLS_PC\",\n\t\ttitle: \"Miscellaneous Tools\",\n\t\ticon: \"sap-icon://machine\"\n\t},\n\t{\n\t\tid: \"SAP_SCM_PGT_PRODN_ENG_DISC_PC\",\n\t\ttitle: \"Routing Management\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-gis-layer\"\n\t},\n\t{\n\t\tid: \"SAP_SCM_PGT_PRODN_ENG_PROC_PC\",\n\t\ttitle: \"Master Recipe Management\",\n\t\ticon: \"sap-icon://process\"\n\t},\n\t{\n\t\tid: \"SAP_SCM_PGT_PRODN_OPTR_RPTV_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-production\"\n\t},\n\t{\n\t\tid: \"SAP_SCM_PGT_DDMRP_PC\",\n\t\ttitle: \"Demand-Driven Replenishment\",\n\t\ticon: \"sap-icon://cause\"\n\t},\n\t{\n\t\tid: \"SAP_SCM_PGT_PMRP_PC\",\n\t\ttitle: \"Long-Term Planning\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-year\"\n\t},\n\t{\n\t\tid: \"SAP_SCM_PGT_PRODN_PLNG_PC\",\n\t\ttitle: \"Material Planning\",\n\t\ticon: \"sap-icon://excel-attachment\"\n\t},\n\t{\n\t\tid: \"SAP_PS_PGT_PROJ_BILLING_PC\",\n\t\ttitle: \"Project Billing - Overview\",\n\t\ticon: \"sap-icon://receipt\"\n\t},\n\t{\n\t\tid: \"SAP_PPM_PGT_PROJ_MGMT_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://manager\"\n\t},\n\t{\n\t\tid: \"SAP_CPM_PGT_PROJ_MANAGE_COMM_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-line-bar-chart\"\n\t},\n\t{\n\t\tid: \"SAP_PPM_PGT_PROJSTEER_COM_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-demand-unit\"\n\t},\n\t{\n\t\tid: \"SAP_LE_PGT_ID_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-shared-with-me\"\n\t},\n\t{\n\t\tid: \"SAP_PLM_PGT_RD_RECIPE_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-recipe\"\n\t},\n\t{\n\t\tid: \"SAP_PLM_PGT_RCP_ADMIN_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-top-recipe\"\n\t},\n\t{\n\t\tid: \"SAP_SERV_PGT_RECUR_SRVC_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://synchronize\"\n\t},\n\t{\n\t\tid: \"SAP_CA_PGT_RSH_RES_MNG_PC\",\n\t\ttitle: \"Resource Management for Projects\",\n\t\ticon: \"sap-icon://employee-approvals\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_FARR_ADMIN_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://expense-report\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_FARR_RCM_PC\",\n\t\ttitle: \"Revenue Contracts_\",\n\t\ticon: \"sap-icon://sales-document\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_FARR_ADMIN_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://opportunities\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_SA_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-coins\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_RECM_SBR_NOTIF_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://trip-report\"\n\t},\n\t{\n\t\tid: \"SAP_S4CRM_PGT_SRVC_MGR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-call-center\"\n\t},\n\t{\n\t\tid: \"SAP_S4CRM_PGT_SRVC_TEC_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://keyboard-and-mouse\"\n\t},\n\t{\n\t\tid: \"SAP_LE_PGT_OD_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-ship\"\n\t},\n\t{\n\t\tid: \"SAP_PLM_PGT_SYSTEMS_ENGINEER_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-software-item\"\n\t},\n\t{\n\t\tid: \"SAP_S4CRM_PGT_SOLN_ORD_MANAGE_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://order-status\"\n\t},\n\t{\n\t\tid: \"SAP_TM_PGT_TRANSP_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://bus-public-transport\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_TRM_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-bank-account\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_TRM_ACCT_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-bank-account\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_TRM_BOE_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-bank-account\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_TRM_FOE_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-bank-account\"\n\t},\n\t{\n\t\tid: \"SAP_FIN_PGT_TRM_MOE_OVR_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-bank-account\"\n\t},\n\t{\n\t\tid: \"SAP_LO_PGT_VC_MODELING_PC\",\n\t\ttitle: \"Overview\",\n\t\ticon: \"sap-icon://customize\"\n\t},\n\t{\n\t\tid: \"SAP_SCM_PGT_EWM_WHSE_PROC_OP_PC\",\n\t\ttitle: \"Warehouse Processing\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-warehouse\"\n\t},\n\t{\n\t\tid: \"SAP_SCM_PGT_EWM_WHSE_PHY_INV_PC\",\n\t\ttitle: \"Physical Inventory\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-products\"\n\t},\n\t{\n\t\tid: \"SAP_SCM_PGT_EWM_WHSE_PROC_PC\",\n\t\ttitle: \"Warehouse Processing\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-forklift\"\n\t},\n\t{\n\t\tid: \"SAP_SCM_PGT_EWM_WHSE_SETUP_PC\",\n\t\ttitle: \"Warehouse Setup\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-warehouse\"\n\t}\n];\n\nexport const SPACES = [\n\t{\n\t\ttitle: \"Accounts Payable - Leasing\",\n\t\tid: \"SAP_BR_RECM_AP_ACCOUNTANT\",\n\t\ticon: \"sap-icon://batch-payments\"\n\t},\n\t{\n\t\ttitle: \"Accounts Receivable Leasing\",\n\t\tid: \"SAP_BR_RECM_AR_ACCOUNTANT\",\n\t\ticon: \"sap-icon://account\"\n\t},\n\t{\n\t\ttitle: \"Billing\",\n\t\tid: \"SAP_BR_BILLING_CLERK\",\n\t\ticon: \"sap-icon://payment-approval\"\n\t},\n\t{\n\t\ttitle: \"Business Partner\",\n\t\tid: \"SAP_BR_BUPA_MASTER_SPECIALIST\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-business-partner\"\n\t},\n\t{\n\t\ttitle: \"Cash Management\",\n\t\tid: \"SAP_BR_CASH_SPECIALIST\",\n\t\ticon: \"sap-icon://monitor-payments\"\n\t},\n\t{\n\t\ttitle: \"Discrete Manufacturing Execution\",\n\t\tid: \"SAP_BR_PRODN_OPTR_DISC\",\n\t\ticon: \"sap-icon://locked\"\n\t},\n\t{\n\t\ttitle: \"Field Logistics - Returns\",\n\t\tid: \"SAP_BR_WAREHOUSE_CLERK_IOG\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-return-delivery\"\n\t},\n\t{\n\t\ttitle: \"Fixed Assets\",\n\t\tid: \"SAP_BR_AA_ACCOUNTANT\",\n\t\ticon: \"sap-icon://capital-projects\"\n\t},\n\t{\n\t\ttitle: \"Group Reporting\",\n\t\tid: \"SAP_BR_GL_ACCOUNTANT_GRP\",\n\t\ticon: \"sap-icon://documents\"\n\t},\n\t{\n\t\ttitle: \"Internal Sales\",\n\t\tid: \"SAP_BR_INTERNAL_SALES_REP\",\n\t\ticon: \"sap-icon://collections-insight\"\n\t},\n\t{\n\t\ttitle: \"Inventory Management\",\n\t\tid: \"SAP_BR_INVENTORY_MANAGER\",\n\t\ticon: \"sap-icon://customer-and-supplier\"\n\t},\n\t{\n\t\ttitle: \"Just-In-Time Shipping\",\n\t\tid: \"SAP_BR_SHIP_SPECIALIST_JIT\",\n\t\ticon: \"sap-icon://instance\"\n\t},\n\t{\n\t\ttitle: \"Lean Manufacturing Planning\",\n\t\tid: \"SAP_BR_PRODN_PLNR_LEAN_MFG\",\n\t\ticon: \"sap-icon://factory\"\n\t},\n\t{\n\t\ttitle: \"Material Planning - External Procurement\",\n\t\tid: \"SAP_BR_MATL_PLNR_EXT_PROC\",\n\t\ticon: \"sap-icon://excel-attachment\"\n\t},\n\t{\n\t\ttitle: \"Operational Purchasing\",\n\t\tid: \"SAP_MM_SPT_PURCHASING_PC\",\n\t\ticon: \"sap-icon://credit-card\"\n\t},\n\t{\n\t\ttitle: \"Order BOM Management\",\n\t\tid: \"SAP_BR_BOM_ENG_CUST_ORDER\",\n\t\ticon: \"sap-icon://crm-service-manager\"\n\t},\n\t{\n\t\ttitle: \"Overhead Accounting\",\n\t\tid: \"SAP_BR_OVERHEAD_ACCOUNTANT\",\n\t\ticon: \"sap-icon://activity-individual\"\n\t},\n\t{\n\t\ttitle: \"Price Management\",\n\t\tid: \"SAP_BR_PRICING_SPECIALIST\",\n\t\ticon: \"sap-icon://customer-financial-fact-sheet\"\n\t},\n\t{\n\t\ttitle: \"Process Manufacturing Execution\",\n\t\tid: \"SAP_BR_PRODN_OPTR_PROC\",\n\t\ticon: \"sap-icon://process\"\n\t},\n\t{\n\t\ttitle: \"Process Manufacturing Execution Management\",\n\t\tid: \"SAP_BR_PRODN_SUPERVISOR_PROC\",\n\t\ticon: \"sap-icon://supplier\"\n\t},\n\t{\n\t\ttitle: \"Product\",\n\t\tid: \"SAP_BR_MD_SPCLST_ITEM_RFM\",\n\t\ticon: \"sap-icon://product\"\n\t},\n\t{\n\t\ttitle: \"Project Control - Financials\",\n\t\tid: \"SAP_BR_PROJ_FIN_CONTROLLER\",\n\t\ticon: \"sap-icon://accounting-document-verification\"\n\t},\n\t{\n\t\ttitle: \"Quality Engineering\",\n\t\tid: \"SAP_BR_QUALITY_ENGINEER\",\n\t\ticon: \"sap-icon://wrench\"\n\t},\n\t{\n\t\ttitle: \"Sales Management\",\n\t\tid: \"SAP_BR_SALES_MANAGER\",\n\t\ticon: \"sap-icon://commission-check\"\n\t},\n\t{\n\t\ttitle: \"Accounts Payable\",\n\t\tid: \"SAP_BR_ADMIN_APR_FICA\",\n\t\ticon: \"sap-icon://batch-payments\"\n\t},\n\t{\n\t\ttitle: \"Accounts Receivable\",\n\t\tid: \"SAP_BR_AR_ACCOUNTANT\",\n\t\ticon: \"sap-icon://account\"\n\t},\n\t{\n\t\ttitle: \"Administration\",\n\t\tid: \"AP_BR_RECM_ADMINISTRATOR\",\n\t\ticon: \"sap-icon://key-user-settings\"\n\t},\n\t{\n\t\ttitle: \"Administrator - HR Info\",\n\t\tid: \"SAP_BR_ADMINISTRATOR_HRINFO\",\n\t\ticon: \"sap-icon://employee-pane\"\n\t},\n\t{\n\t\ttitle: \"Auditing - Accounts Payable and Receivable\",\n\t\tid: \"SAP_BR_EXT_AUDITOR_APR_FICA\",\n\t\ticon: \"sap-icon://kpi-managing-my-area\"\n\t},\n\t{\n\t\ttitle: \"Auditing - Group Reporting\",\n\t\tid: \"SAP_BR_EXTERNAL_AUDITOR_GRP\",\n\t\ticon: \"sap-icon://create-form\"\n\t},\n\t{\n\t\ttitle: \"Bank Integration\",\n\t\tid: \"SAP_BR_BANK_INT_SPECIALIST\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-official-service-group\"\n\t},\n\t{\n\t\ttitle: \"Master Data - Batch\",\n\t\tid: \"SAP_BR_BATCH_MASTER_SPCLST\",\n\t\ticon: \"sap-icon://curriculum\"\n\t},\n\t{\n\t\ttitle: \"BOM Management\",\n\t\tid: \"SAP_BR_BOM_ENGINEER\",\n\t\ticon: \"sap-icon://sales-order-item\"\n\t},\n\t{\n\t\ttitle: \"Budgeting\",\n\t\tid: \"SAP_BR_BUDGET_SPECIALIST\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-manage-budget\"\n\t},\n\t{\n\t\ttitle: \"Business Data Analysis\",\n\t\tid: \"SAP_BR_BUSINESS_ANALYST_MKT\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-change-analysis\"\n\t},\n\t{\n\t\ttitle: \"Central Procurement\",\n\t\tid: \"SAP_MM_SPT_CNTRL_PURCHASING_PC\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-contract\"\n\t},\n\t{\n\t\ttitle: \"Collections\",\n\t\tid: \"SAP_BR_COLL_SPECIALIST_FICA\",\n\t\ticon: \"sap-icon://sap-box\"\n\t},\n\t{\n\t\ttitle: \"Configuration and Setup\",\n\t\tid: \"SAP_BR_BPC_EXPERT_MKT\",\n\t\ticon: \"sap-icon://action-settings\"\n\t},\n\t{\n\t\ttitle: \"Consent Administration\",\n\t\tid: \"SAP_BR_DATA_PRIV_SPEC_CONS\",\n\t\ticon: \"sap-icon://customer-order-entry\"\n\t},\n\t{\n\t\ttitle: \"Contract Accounting\",\n\t\tid: \"SAP_BR_RECONC_SPEC_APR_FICA\",\n\t\ticon: \"sap-icon://activity-individual\"\n\t},\n\t{\n\t\ttitle: \"Contract Accounting\",\n\t\tid: \"SAP_BR_APR_ACCOUNTANT_FICA\",\n\t\ticon: \"sap-icon://activity-individual\"\n\t},\n\t{\n\t\tid: \"SAP_BR_DATA_PRIVACY_SPECIALIST\",\n\t\ttitle: \"Data Protection and Privacy\",\n\t\ticon: \"sap-icon://locked\"\n\t},\n\t{\n\t\ttitle: \"Accounts Payable\",\n\t\tid: \"SAP_BR_AP_ACCOUNTANT\",\n\t\ticon: \"sap-icon://batch-payments\"\n\t},\n\t{\n\t\ttitle: \"Contract Data\",\n\t\tid: \"SAP_BR_RECM_SPECIALIST\",\n\t\ticon: \"sap-icon://paste\"\n\t},\n\t{\n\t\ttitle: \"Convergent Invoicing\",\n\t\tid: \"SAP_BR_INVOICING_SPECIALIST_CINV\",\n\t\ticon: \"sap-icon://receipt\"\n\t},\n\t{\n\t\ttitle: \"Convergent Invoicing Administration\",\n\t\tid: \"SAP_BR_INVOICING_ADMIN_CINV\",\n\t\ticon: \"sap-icon://my-sales-order\"\n\t},\n\t{\n\t\ttitle: \"Credit Management\",\n\t\tid: \"SAP_BR_CREDIT_CONTROLLER\",\n\t\ticon: \"sap-icon://accounting-document-verification\"\n\t},\n\t{\n\t\ttitle: \"Customer Returns\",\n\t\tid: \"SAP_BR_RETURNS_REFUND_CLERK\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-return-order\"\n\t},\n\t{\n\t\ttitle: \"Dangerous Goods\",\n\t\tid: \"SAP_BR_DG_SPLST_PCL\",\n\t\ticon: \"sap-icon://alert\"\n\t},\n\t{\n\t\ttitle: \"Data Migration\",\n\t\tid: \"SAP_BR_CONFIG_EXPERT_DATA_MIG\",\n\t\ticon: \"sap-icon://combine\"\n\t},\n\t{\n\t\ttitle: \"Data Privacy and Protection\",\n\t\tid: \"SAP_BR_DATA_PRIVACY_SPEC_FICA\",\n\t\ticon: \"sap-icon://shield\"\n\t},\n\t{\n\t\ttitle: \"Data Quality for Business Partners\",\n\t\tid: \"SAP_BR_BUPA_MASTER_STEWARD\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-control-group\"\n\t},\n\t{\n\t\ttitle: \"Data Quality for Products\",\n\t\tid: \"SAP_BR_PRODMASTER_STEWARD\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-review-supplies\"\n\t},\n\t{\n\t\ttitle: \"Development Management for Discrete Industries\",\n\t\tid: \"SAP_BR_DEVELOPMENT_MANAGER_DIN\",\n\t\ticon: \"sap-icon://key\"\n\t},\n\t{\n\t\ttitle: \"Divisional Accounting\",\n\t\tid: \"SAP_BR_DIVISION_ACCOUNTANT\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-split-segmentation\"\n\t},\n\t{\n\t\ttitle: \"Document Management\",\n\t\tid: \"SAP_BR_DESIGN_ENGINEER\",\n\t\ticon: \"sap-icon://course-program\"\n\t},\n\t{\n\t\ttitle: \"Enterprise Contract Management\",\n\t\tid: \"SAP_BR_LEGAL_COUNSEL\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-event\"\n\t},\n\t{\n\t\ttitle: \"Enterprise Contract Management Admin\",\n\t\tid: \"SAP_BR_ADMINISTRATOR_LCM\",\n\t\ticon: \"sap-icon://manager\"\n\t},\n\t{\n\t\ttitle: \"Environmental Management\",\n\t\tid: \"SAP_BR_EHS_ENV_MGMT\",\n\t\ticon: \"sap-icon://e-care\"\n\t},\n\t{\n\t\ttitle: \"Field Logistics - Supply Chain Analysis\",\n\t\tid: \"SAP_BR_SC_ANALYST_IOG\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-meter-chained\"\n\t},\n\t{\n\t\ttitle: \"General Ledger\",\n\t\tid: \"SAP_BR_GL_ACCOUNTANT\",\n\t\ticon: \"sap-icon://activity-items\"\n\t},\n\t{\n\t\ttitle: \"Grants Management\",\n\t\tid: \"SAP_BR_GRANT_SPECIALIST\",\n\t\ticon: \"sap-icon://loan\"\n\t},\n\t{\n\t\ttitle: \"In-House Repair\",\n\t\tid: \"SAP_BR_CUST_SRVC_REP_REPA\",\n\t\ticon: \"sap-icon://technical-object\"\n\t},\n\t{\n\t\ttitle: \"Incident Management\",\n\t\tid: \"SAP_BR_INDUSTRIAL_HYGIENIST\",\n\t\ticon: \"sap-icon://incident\"\n\t},\n\t{\n\t\ttitle: \"Intercompany Reconciliation\",\n\t\tid: \"SAP_BR_RECON_ACCOUNTANT\",\n\t\ticon: \"sap-icon://compare-2\"\n\t},\n\t{\n\t\ttitle: \"Internal Sales - Professional Services\",\n\t\tid: \"SAP_BR_INTERNAL_SALES_REP_PRSV\",\n\t\ticon: \"sap-icon://capital-projects\"\n\t},\n\t{\n\t\ttitle: \"International Trade Administration\",\n\t\tid: \"SAP_BR_ADMINISTRATOR_SLL\",\n\t\ticon: \"sap-icon://globe\"\n\t},\n\t{\n\t\ttitle: \"International Trade Classification\",\n\t\tid: \"SAP_BR_TRD_CLS_SPECIALIST\",\n\t\ticon: \"sap-icon://internet-browser\"\n\t},\n\t{\n\t\ttitle: \"International Trade Compliance\",\n\t\tid: \"SAP_BR_TRD_CMPLNC_SPECIALIST\",\n\t\ticon: \"sap-icon://home-share\"\n\t},\n\t{\n\t\ttitle: \"Intrastat\",\n\t\tid: \"SAP_BR_INTRASTAT_SPECIALIST\",\n\t\ticon: \"sap-icon://simple-payment\"\n\t},\n\t{\n\t\ttitle: \"Inventory Accounting\",\n\t\tid: \"SAP_BR_INVENTORY_ACCOUNTANT\",\n\t\ticon: \"sap-icon://multi-select\"\n\t},\n\t{\n\t\ttitle: \"Inventory Analysis\",\n\t\tid: \"SAP_BR_INVENTORY_ANALYST\",\n\t\ticon: \"sap-icon://customer-and-supplier\"\n\t},\n\t{\n\t\ttitle: \"Inventory Processing\",\n\t\tid: \"SAP_BR_WAREHOUSE_CLERK\",\n\t\ticon: \"sap-icon://supplier\"\n\t},\n\t{\n\t\ttitle: \"Joint Venture Accounting\",\n\t\tid: \"SAP_BR_JVA_ACCOUNTANT\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-intersection\"\n\t},\n\t{\n\t\ttitle: \"Just-In-Time Master Data\",\n\t\tid: \"SAP_BR_MD_SPECIALIST_JIT\",\n\t\ticon: \"sap-icon://timesheet\"\n\t},\n\t{\n\t\ttitle: \"Just-In-Time Material Planning\",\n\t\tid: \"SAP_BR_MATL_PLNR_JIT_S_TO_C\",\n\t\ticon: \"sap-icon://create-entry-time\"\n\t},\n\t{\n\t\ttitle: \"Lean Manufacturing Operations\",\n\t\tid: \"SAP_BR_PRODN_OPTR_LEAN_MFG\",\n\t\ticon: \"sap-icon://factory\"\n\t},\n\t{\n\t\ttitle: \"Lean Manufacturing Supervising\",\n\t\tid: \"SAP_BR_PRODN_SUPVR_LEAN_MFG\",\n\t\ticon: \"sap-icon://factory\"\n\t},\n\t{\n\t\ttitle: \"Leasing Valuation\",\n\t\tid: \"SAP_BR_RECM_VALSPECIALIST\",\n\t\ticon: \"sap-icon://clinical-tast-tracker\"\n\t},\n\t{\n\t\ttitle: \"Maintenance Execution\",\n\t\tid: \"SAP_BR_MAINTENANCE_TECHNICIAN\",\n\t\ticon: \"sap-icon://wrench\"\n\t},\n\t{\n\t\ttitle: \"Maintenance Planning\",\n\t\tid: \"SAP_BR_MAINTENANCE_PLANNER\",\n\t\ticon: \"sap-icon://add-equipment\"\n\t},\n\t{\n\t\ttitle: \"Maintenance Supervision\",\n\t\tid: \"SAP_BR_MAINTENANCE_SUPERVISOR\",\n\t\ticon: \"sap-icon://technical-object\"\n\t},\n\t{\n\t\ttitle: \"Management of Change\",\n\t\tid: \"SAP_BR_CHG_MGMT_COORDINATOR\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-unsaved-changes\"\n\t},\n\t{\n\t\ttitle: \"Marketing\",\n\t\tid: \"SAP_BR_ADMINISTRATOR_MKT\",\n\t\ticon: \"sap-icon://marketing-campaign\"\n\t},\n\t{\n\t\ttitle: \"Marketing Management\",\n\t\tid: \"SAP_BR_MARKETING_MANAGER\",\n\t\ticon: \"sap-icon://manager-insight\"\n\t},\n\t{\n\t\ttitle: \"Mass Processing of Asset\",\n\t\tid: \"SAP_BR_AA_ACCOUNTANT_IOG\",\n\t\ticon: \"sap-icon://table-chart\"\n\t},\n\t{\n\t\ttitle: \"Oil and Gas Field Operations\",\n\t\tid: \"SAP_BR_FIELD_OPERATOR_IOG\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-gas\"\n\t},\n\t{\n\t\ttitle: \"Order Fulfillment Execution\",\n\t\tid: \"SAP_BR_ORDER_FULFILLMNT_SPCLST\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-container-loading\"\n\t},\n\t{\n\t\ttitle: \"Order Fulfillment Management\",\n\t\tid: \"SAP_BR_ORDER_FULFILLMNT_MNGR\",\n\t\ticon: \"sap-icon://enter-more\"\n\t},\n\t{\n\t\ttitle: \"Payment Management\",\n\t\tid: \"SAP_BR_PAYM_SPECIALIST\",\n\t\ticon: \"sap-icon://my-sales-order\"\n\t},\n\t{\n\t\ttitle: \"Plant Management\",\n\t\tid: \"SAP_BR_PLANT_MANAGER\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-operator\"\n\t},\n\t{\n\t\ttitle: \"Product Compliance\",\n\t\tid: \"SAP_BR_PRODSTWRD_SPLST_PCL\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-approved\"\n\t},\n\t{\n\t\ttitle: \"Product Compliance Master Data\",\n\t\tid: \"SAP_BR_MD_SPECIALIST_PCL\",\n\t\ticon: \"sap-icon://permission\"\n\t},\n\t{\n\t\ttitle: \"Product Costing\",\n\t\tid: \"SAP_BR_PRODN_ACCOUNTANT\",\n\t\ticon: \"sap-icon://money-bills\"\n\t},\n\t{\n\t\ttitle: \"Production Control\",\n\t\tid: \"SAP_BR_PRODN_SUPERVISOR_RPTV\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-table-chart-customization\"\n\t},\n\t{\n\t\ttitle: \"Production Engineering - Discrete Manufacturing\",\n\t\tid: \"SAP_BR_PRODN_ENG_DISC\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-multiple-charts\"\n\t},\n\t{\n\t\ttitle: \"Production Engineering - Process Manufacturing\",\n\t\tid: \"SAP_BR_PRODN_ENG_PROC\",\n\t\ticon: \"sap-icon://process\"\n\t},\n\t{\n\t\ttitle: \"Production Execution\",\n\t\tid: \"SAP_BR_PRODN_SUPERVISOR_DISC\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-production\"\n\t},\n\t{\n\t\ttitle: \"Production Planning\",\n\t\tid: \"SAP_BR_PRODN_PLNR\",\n\t\ticon: \"sap-icon://cause\"\n\t},\n\t{\n\t\ttitle: \"Project Billing\",\n\t\tid: \"SAP_BR_PROJ_BILLG_SPCLST\",\n\t\ticon: \"sap-icon://receipt\"\n\t},\n\t{\n\t\ttitle: \"Project Management\",\n\t\tid: \"SAP_BR_PROJECTMANAGER\",\n\t\ticon: \"sap-icon://manager\"\n\t},\n\t{\n\t\ttitle: \"Project Management - Commercial\",\n\t\tid: \"SAP_BR_PROJ_MANAGE_COMM\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-line-bar-chart\"\n\t},\n\t{\n\t\ttitle: \"Project Steering Committee\",\n\t\tid: \"SAP_BR_PROJECT_STEER_MEMBER\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-demand-unit\"\n\t},\n\t{\n\t\ttitle: \"Quality Inspection\",\n\t\tid: \"SAP_BR_QUALITY_TECHNICIAN\",\n\t\ticon: \"sap-icon://inspection\"\n\t},\n\t{\n\t\ttitle: \"Quality Planning\",\n\t\tid: \"SAP_BR_QUALITY_PLANNER\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-checklist-item\"\n\t},\n\t{\n\t\ttitle: \"Raw Substance Maintenance\",\n\t\tid: \"SAP_BR_MD_SPECIALIST_RAW_SUBST\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-raw-material\"\n\t},\n\t{\n\t\ttitle: \"Receiving\",\n\t\tid: \"SAP_BR_RECEIVING_SPECIALIST\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-shared-with-me\"\n\t},\n\t{\n\t\ttitle: \"Recipe Development\",\n\t\tid: \"SAP_BR_RECIPE_DEVELOPER\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-recipe\"\n\t},\n\t{\n\t\ttitle: \"Recipe Development Administration\",\n\t\tid: \"SAP_BR_ADMINISTRATOR_RCP_DEV\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-top-recipe\"\n\t},\n\t{\n\t\ttitle: \"Recurring Service\",\n\t\tid: \"SAP_BR_SERVICE_PLANNER\",\n\t\ticon: \"sap-icon://synchronize\"\n\t},\n\t{\n\t\ttitle: \"Resource Management for Projects\",\n\t\tid: \"SAP_BR_RESOURCE_MANAGER\",\n\t\ticon: \"sap-icon://employee-approvals\"\n\t},\n\t{\n\t\ttitle: \"Revenue Accounting\",\n\t\tid: \"SAP_BR_REV_ACCOUNTANT\",\n\t\ticon: \"sap-icon://expense-report\"\n\t},\n\t{\n\t\ttitle: \"Revenue Accounting Administration\",\n\t\tid: \"SAP_BR_REV_ADMIN\",\n\t\ticon: \"sap-icon://opportunities\"\n\t},\n\t{\n\t\ttitle: \"Sales Accounting\",\n\t\tid: \"SAP_BR_SALES_ACCOUNTANT\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-coins\"\n\t},\n\t{\n\t\ttitle: \"Sales-Based Rent Reporting\",\n\t\tid: \"SAP_BR_RECM_SALES_REPORTER\",\n\t\ticon: \"sap-icon://trip-report\"\n\t},\n\t{\n\t\ttitle: \"Service Management\",\n\t\tid: \"SAP_BR_CUSTOMER_SRVC_MGR\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-call-center\"\n\t},\n\t{\n\t\ttitle: \"Service Processing\",\n\t\tid: \"SAP_BR_CUSTOMER_SRVC_TEC\",\n\t\ticon: \"sap-icon://keyboard-and-mouse\"\n\t},\n\t{\n\t\ttitle: \"Shipping\",\n\t\tid: \"SAP_BR_SHIPPING_SPECIALIST\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-ship\"\n\t},\n\t{\n\t\ttitle: \"Software Constraints\",\n\t\tid: \"SAP_BR_SYSTEMS_ENGINEER\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-software-item\"\n\t},\n\t{\n\t\ttitle: \"Solution Order Management\",\n\t\tid: \"SAP_BR_SOLN_ORDER_SPCLST\",\n\t\ticon: \"sap-icon://order-status\"\n\t},\n\t{\n\t\ttitle: \"Taxes\",\n\t\tid: \"SAP_BR_TAX_SPECIALIST\",\n\t\ticon: \"sap-icon://simulate\"\n\t},\n\t{\n\t\ttitle: \"Test Automation\",\n\t\tid: \"SAP_BR_ADMIN_TEST_AUTOMATION\",\n\t\ticon: \"sap-icon://repost\"\n\t},\n\t{\n\t\ttitle: \"Text Analysis\",\n\t\tid: \"SAP_BR_TEXTANALYSIS_DEVELOPER\",\n\t\ticon: \"sap-icon://vds-file\"\n\t},\n\t{\n\t\ttitle: \"Transportation\",\n\t\tid: \"SAP_BR_TRANSPORTATION_MGR\",\n\t\ticon: \"sap-icon://bus-public-transport\"\n\t},\n\t{\n\t\ttitle: \"Treasury\",\n\t\tid: \"SAP_BR_TREASURY_RISK_MANAGER\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-bank-account\"\n\t},\n\t{\n\t\ttitle: \"Treasury Accounting\",\n\t\tid: \"SAP_BR_TREASURY_ACCOUNTANT\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-bank-account\"\n\t},\n\t{\n\t\ttitle: \"Treasury Back Office\",\n\t\tid: \"SAP_BR_TREASURY_SPECIALIST_BOE\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-bank-account\"\n\t},\n\t{\n\t\ttitle: \"Treasury Front Office\",\n\t\tid: \"SAP_BR_TREASURY_SPECIALIST_FOE\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-bank-account\"\n\t},\n\t{\n\t\ttitle: \"Treasury Middle Office\",\n\t\tid: \"SAP_BR_TREASURY_SPECIALIST_MOE\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-bank-account\"\n\t},\n\t{\n\t\ttitle: \"Variant Configuration\",\n\t\tid: \"SAP_BR_PRODUCT_CONFIG_MODELER\",\n\t\ticon: \"sap-icon://customize\"\n\t},\n\t{\n\t\ttitle: \"Warehouse Floor\",\n\t\tid: \"SAP_BR_WAREHOUSE_OPERATIVE_EWM\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-warehouse\"\n\t},\n\t{\n\t\ttitle: \"Warehouse Office\",\n\t\tid: \"SAP_BR_WAREHOUSE_CLERK_EWM\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-products\"\n\t},\n\t{\n\t\tid: \"SAP_BR_BPC_EXPERT\",\n\t\ttitle: \"Configuration Expert - Business Process Configuration\",\n\t\ticon: \"sap-icon://action-settings\"\n\t},\n\t{\n\t\tid: \"SAP_MM_SPT_SOURCING_PC\",\n\t\ttitle: \"Sourcing and Contracting\",\n\t\ticon: \"sap-icon://BusinessSuiteInAppSymbols/icon-contract\"\n\t},\n\t{\n\t\tid: \"SAP_BR_ADMINISTRATOR\",\n\t\ttitle: \"Administration\",\n\t\ticon: \"sap-icon://key-user-settings\"\n\t},\n\t{\n\t\tid: \"SAP_BR_PRODMASTER_SPECIALIST\",\n\t\ttitle: \"Master Data - Products\",\n\t\ticon: \"sap-icon://filter-facets\"\n\t},\n\t{\n\t\tid: \"SAP_BR_EMPLOYEE\",\n\t\ttitle: \"Employee Self-Services\",\n\t\ticon: \"sap-icon://employee\"\n\t},\n\t{\n\t\tid: \"SAP_BR_PROJECT_MANAGER_PROF\",\n\t\ttitle: \"Project Management Professional Services\",\n\t\ticon: \"sap-icon://manager\"\n\t},\n\t{\n\t\tid: \"SAP_MM_SPT_PRODUCT_SRC_PC\",\n\t\ttitle: \"Product Sourcing\",\n\t\ticon: \"sap-icon://phone\"\n\t},\n\t{\n\t\tid: \"SAP_BR_EXTERNAL_AUDITOR\",\n\t\ttitle: \"Auditing - Group Reporting\",\n\t\ticon: \"sap-icon://kpi-managing-my-area\"\n\t},\n\t{\n\t\tid: \"SAP_BR_BUSINESS_PROCESS_SPEC\",\n\t\ttitle: \"Business Process Management\",\n\t\ticon: \"sap-icon://manager-insight\"\n\t},\n\t{\n\t\tid: \"SAP_BR_AP_MANAGER\",\n\t\ttitle: \"Accounts Payable\",\n\t\ticon: \"sap-icon://accounting-document-verification\"\n\t},\n\t{\n\t\tid: \"SAP_BR_ADMINISTRATOR_DATA_REPL\",\n\t\ttitle: \"Master Data - Data Replication\",\n\t\ticon: \"sap-icon://copy\"\n\t},\n\t{\n\t\tid: \"SAP_BR_AR_MANAGER\",\n\t\ttitle: \"Accounts Receivable\",\n\t\ticon: \"sap-icon://cause\"\n\t},\n\t{\n\t\tid: \"SAP_BR_CUST_SRVC_MGR_REPA\",\n\t\ttitle: \"In-House Repair\",\n\t\ticon: \"sap-icon://insurance-house\"\n\t},\n\t{\n\t\tid: \"SAP_BR_CUST_SRVC_TEC_REPA\",\n\t\ttitle: \"In-House Repair\",\n\t\ticon: \"sap-icon://insurance-house\"\n\t},\n\t{\n\t\tid: \"SAP_RFM_SPT_INVTRY_PROCG_PC\",\n\t\ttitle: \"Inventory Processing\",\n\t\ticon: \"sap-icon://supplier\"\n\t},\n\t{\n\t\tid: \"SAP_BR_RFM_STORE_ASSOCIATE\",\n\t\ttitle: \"Store Operations\",\n\t\ticon: \"sap-icon://retail-store\"\n\t},\n\t{\n\t\tid: \"SAP_BR_GRP_ACCOUNTANT\",\n\t\ttitle: \"Group Reporting\",\n\t\ticon: \"sap-icon://group-2\"\n\t},\n\t{\n\t\tid: \"SAP_BR_ADMINISTRATOR_GRP\",\n\t\ttitle: \"Administration - Group Reporting\",\n\t\ticon: \"sap-icon://group-2\"\n\t},\n\t{\n\t\tid: \"SAP_BR_ADMINISTRATOR_RFM\",\n\t\ttitle: \"Retail Administration\",\n\t\ticon: \"sap-icon://sales-quote\"\n\t},\n\t{\n\t\tid: \"SAP_BR_ADMIN_SUS_PFM\",\n\t\ttitle: \"Product Footprint Management\",\n\t\ticon: \"sap-icon://tree\"\n\t},\n\t{\n\t\tid: \"SAP_BR_BUSINESS_ANALYST_GRP\",\n\t\ttitle: \"Group Reporting Analysis\",\n\t\ticon: \"sap-icon://group-2\"\n\t},\n\t{\n\t\tid: \"SAP_BR_APR_MANAGER_FICA\",\n\t\ttitle: \"Contract Accounting\",\n\t\ticon: \"sap-icon://warning2\"\n\t},\n\t{\n\t\tid: \"SAP_BR_MD_SPECIALIST_SITE_RFM\",\n\t\ttitle: \"Site Master Data\",\n\t\ticon: \"sap-icon://chart-table-view\"\n\t},\n\t{\n\t\tid: \"SAP_BR_PRICING_SPECIALIST_PRSV\",\n\t\ttitle: \"Price Management\",\n\t\ticon: \"sap-icon://crm-sales\"\n\t},\n\t{\n\t\tid: \"SAP_BR_PROJ_PROC_CONTROLLER\",\n\t\ttitle: \"Project Control Resourcing and Procurement\",\n\t\ticon: \"sap-icon://bar-chart\"\n\t},\n\t{\n\t\tid: \"SAP_BR_PRICING_SPCLST_RFM\",\n\t\ttitle: \"Retail Sales Prices\",\n\t\ticon: \"sap-icon://search\"\n\t},\n\t{\n\t\tid: \"SAP_BR_RFM_STORE_MANAGER\",\n\t\ttitle: \"Store Management\",\n\t\ticon: \"sap-icon://retail-store-manager\"\n\t},\n\t{\n\t\tid: \"SAP_BR_RPLNMT_SPCLST_ST_RFM\",\n\t\ttitle: \"Store Replenishment\",\n\t\ticon: \"sap-icon://travel-expense-report\"\n\t},\n\t{\n\t\tid: \"SAP_BR_RCVG_SPECIALIST_IOG\",\n\t\ttitle: \"Receipts - Field Logistics\",\n\t\ticon: \"sap-icon://receipt\"\n\t},\n\t{\n\t\tid: \"SAP_RFM_SPT_INVTRY_MGMT_PC\",\n\t\ttitle: \"Inventory Management\",\n\t\ticon: \"sap-icon://customer-and-supplier\"\n\t}\n];\n"],"mappings":"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","ignoreList":[],"sourceRoot":"utils"}},{"offset":{"line":421,"column":0},"map":{"version":3,"names":["sap","ui","define","Container","EventHub","utils","setupPerformanceTracking","layout","setupTracking","Promise","resolve","containers","getItems","forEach","container","getContent","panel","attachEventOnce","containerName","getMetadata","getName","heroElement","availableElements","filter","availableElement","control","getVisible","name","_temp2","markHomePageEnd","then","e","reject","visibleElements","layoutElement","find","markHomePageStart","_temp","length","isHomeApp","_isHomeApp2","recordElementLoadEnd","homePageLoadEndMarker","emit","_isHomeApp","recordElementLoadStart","homePageLoadStartMarker","getServiceAsync","getCurrentApplication","homePage","UIElements","Object","keys","map","elementName","startMarked","endMarked","findUIElement","setPerformanceMark","markName","bUseUniqueMark","bUseLastMark","recordElementLoad","customMarkName","isStartMaker","element","marker","controlFlag","__exports","__esModule"],"sources":["PerformanceUtils.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Container from \"sap/ushell/Container\";\nimport EventHub from \"sap/ushell/EventHub\";\nimport AppLifeCycle from \"sap/ushell/services/AppLifeCycle\";\nimport utils from \"sap/ushell/utils\";\nimport BaseContainer from \"../BaseContainer\";\nimport Layout from \"../Layout\";\n\ntype ElementInfo = {\n\tname: keyof typeof UIElements;\n\tstartMarked: boolean;\n\tendMarked: boolean;\n\tcontrol?: Layout | BaseContainer;\n};\n\nconst layoutElement = \"sap.cux.home.Layout\";\nconst homePageLoadStartMarker = \"FLP-TTI-Homepage-Custom-Start\";\nconst homePageLoadEndMarker = \"FLP-TTI-Homepage-Custom\";\nlet setupTracking = false;\n\n/**\n * An object representing the UI elements and their corresponding marker names.\n *\n */\nexport const UIElements = {\n\t\"sap.cux.home.AppsContainer\": \"Apps\",\n\t\"sap.cux.home.InsightsContainer\": \"Insights\",\n\t\"sap.cux.home.NewsAndPagesContainer\": \"News\",\n\t\"sap.cux.home.ToDosContainer\": \"ToDos\",\n\t[layoutElement]: \"Layout\"\n};\n\nlet availableElements: ElementInfo[] = Object.keys(UIElements).map((elementName) => ({\n\tname: elementName as keyof typeof UIElements,\n\tstartMarked: false,\n\tendMarked: false\n}));\n\n/**\n * Checks if the current application is the home app.\n *\n * @returns {Promise<boolean>} - A promise that resolves to true if the current application is the home app, otherwise false.\n */\nasync function isHomeApp(): Promise<boolean> {\n\tconst container = await Container.getServiceAsync<AppLifeCycle>(\"AppLifeCycle\");\n\treturn container.getCurrentApplication()?.homePage as boolean;\n}\n\n/**\n * Records the start of the homepage load.\n *\n * @returns {Promise<void>} - A promise that resolves when the start of the homepage load is recorded.\n */\nasync function markHomePageStart(): Promise<void> {\n\tif (await isHomeApp()) {\n\t\trecordElementLoadStart(layoutElement, homePageLoadStartMarker);\n\t}\n}\n\n/**\n * Records the end of the homepage load.\n *\n * @returns {Promise<void>} - A promise that resolves when the end of the homepage load is recorded.\n */\nasync function markHomePageEnd(): Promise<void> {\n\tif (await isHomeApp()) {\n\t\trecordElementLoadEnd(layoutElement, homePageLoadEndMarker);\n\t\tEventHub.emit(\"CustomHomeRendered\");\n\t}\n}\n\n/**\n * Finds the UI element information by container name.\n *\n * @param {keyof typeof UIElements} containerName - The name of the container.\n * @returns {ElementInfo | undefined} - The element information if found, otherwise undefined.\n */\nfunction findUIElement(containerName: keyof typeof UIElements): ElementInfo | undefined {\n\treturn availableElements.find((heroElement) => heroElement.name === containerName);\n}\n\n/**\n * Sets a performance mark with the given name.\n *\n * @param {string} markName - The name of the performance mark.\n */\nfunction setPerformanceMark(markName: string): void {\n\tutils.setPerformanceMark(markName, {\n\t\tbUseUniqueMark: true,\n\t\tbUseLastMark: true\n\t});\n}\n\n/**\n * Records the load of an element.\n *\n * @param {keyof typeof UIElements} containerName - The name of the container.\n * @param {string} [customMarkName] - The custom mark name.\n * @param {boolean} [isStartMaker] - Indicates if it is a start marker.\n */\nfunction recordElementLoad(containerName: keyof typeof UIElements, customMarkName?: string, isStartMaker?: boolean): void {\n\tconst element = findUIElement(containerName);\n\tconst marker = isStartMaker ? \"Start\" : \"End\";\n\tconst controlFlag = isStartMaker ? \"startMarked\" : \"endMarked\";\n\n\tif (element && !element[controlFlag] && element.control?.getVisible()) {\n\t\telement[controlFlag] = true;\n\t\tsetPerformanceMark(customMarkName || `FLP-Homepage-Section-${marker}[${UIElements[containerName]}]`);\n\t}\n}\n\n/**\n * Sets up performance tracking for the given layout.\n *\n * @param {Layout} layout - The layout object containing the UI elements.\n */\nexport async function setupPerformanceTracking(layout: Layout): Promise<void> {\n\tif (!layout || setupTracking) return;\n\n\tconst containers = layout.getItems();\n\tcontainers.forEach((container) => {\n\t\tcontainer.getContent().forEach((panel) => {\n\t\t\tpanel.attachEventOnce(\"loaded\", async () => {\n\t\t\t\tconst containerName = container.getMetadata().getName();\n\t\t\t\tconst heroElement = availableElements.filter((availableElement) => availableElement.control?.getVisible())[0].name;\n\n\t\t\t\t// If the hero element is loaded, mark the end of the homepage load\n\t\t\t\tif (containerName === heroElement) {\n\t\t\t\t\tawait markHomePageEnd();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n\n\tconst visibleElements = availableElements.filter((availableElement) => {\n\t\tavailableElement.control =\n\t\t\tavailableElement.name === layoutElement\n\t\t\t\t? layout\n\t\t\t\t: containers.find((container) => container.getMetadata().getName() === availableElement.name);\n\t\treturn availableElement.control?.getVisible();\n\t});\n\n\t// record homepage start\n\tsetupTracking = true;\n\tawait markHomePageStart();\n\n\t// record homepage end in case of no visible elements except layout\n\tif (visibleElements.length === 1) {\n\t\tawait markHomePageEnd();\n\t}\n}\n\n/**\n * Records the start of the element load.\n *\n * @param {keyof typeof UIElements} containerName - The name of the container.\n * @param {string} [customMarkName] - The custom mark name.\n */\nexport function recordElementLoadStart(containerName: keyof typeof UIElements, customMarkName?: string): void {\n\trecordElementLoad(containerName, customMarkName, true);\n}\n\n/**\n * Records the end of the element load.\n *\n * @param {keyof typeof UIElements} containerName - The name of the container.\n * @param {string} [customMarkName] - The custom mark name.\n */\nexport function recordElementLoadEnd(containerName: keyof typeof UIElements, customMarkName?: string): void {\n\trecordElementLoad(containerName, customMarkName, false);\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"utils"}},{"offset":{"line":426,"column":0},"map":{"version":3,"names":["sap","ui","define","BaseObject","Component","defaultContainerId","PersonalisationUtils","extend","constructor","_constructor","BaseObject.prototype.constructor.call","this","getPersContainerId","_getPersContainerId","oManagedObject","bNewId","arguments","length","undefined","persContainerId","getOwnerIdFor","setPersContainerId","_setPersContainerId","getOwnerComponent","_getOwnerComponent","getOwnerComponentFor","__exports"],"sources":["PersonalisationUtils.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport ManagedObject from \"sap/ui/base/ManagedObject\";\nimport BaseObject from \"sap/ui/base/Object\";\nimport Component from \"sap/ui/core/Component\";\nimport UIComponent from \"sap/ui/core/UIComponent\";\n\nconst defaultContainerId = \"sap.cux\";\n\n/**\n *\n * Provides the util methods used for UshellPersonalizer.\n *\n * @extends sap.ui.BaseObject\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.122.0\n *\n * @private\n * @experimental Since 1.122\n * @hidden\n *\n * @alias sap.cux.home.utils.PersonalisationUtils\n */\n\nclass PersonalisationUtils extends BaseObject {\n\tprivate persContainerId!: string;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\tpublic getPersContainerId(oManagedObject: ManagedObject, bNewId: boolean = false): string {\n\t\tif (this.persContainerId && !bNewId) {\n\t\t\treturn this.persContainerId;\n\t\t}\n\t\treturn `${Component.getOwnerIdFor(oManagedObject)}--${defaultContainerId}`;\n\t}\n\tpublic setPersContainerId(persContainerId: string) {\n\t\tthis.persContainerId = persContainerId;\n\t}\n\tpublic getOwnerComponent(oManagedObject: ManagedObject) {\n\t\treturn Component.getOwnerComponentFor(oManagedObject) as UIComponent | undefined;\n\t}\n}\n\nexport default new PersonalisationUtils();\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,qDAAA,wDAAAC,EAAAC,GAAA,aAUA,MAAMC,EAAqB,UAE3B,MAiBMC,EAA6BH,EAAUI,OAAA,2CAG5CC,YAAW,SAAAC,IACVC,6BAAAC,KACD,EACOC,mBAAkB,SAAAC,EAACC,GAAgE,IAAjCC,EAAeC,UAAAC,OAAA,GAAAD,UAAA,KAAAE,UAAAF,UAAA,GAAG,MAC1E,GAAIL,KAAKQ,kBAAoBJ,EAAQ,CACpC,OAAOJ,KAAKQ,eACb,CACA,MAAO,GAAGf,EAAUgB,cAAcN,OAAoBT,GACvD,EACOgB,mBAAkB,SAAAC,EAACH,GACzBR,KAAKQ,gBAAkBA,CACxB,EACOI,kBAAiB,SAAAC,EAACV,GACxB,OAAOV,EAAUqB,qBAAqBX,EACvC,IAAC,IAAAY,EAGa,IAAIpB,EAAsB,OAAAoB,CAAA","ignoreList":[],"sourceRoot":"utils"}},{"offset":{"line":431,"column":0},"map":{"version":3,"names":["sap","ui","define","Formatting","Log","encodeURL","formatMessage","deepExtend","BaseObject","CoreLib","___interface_CardsInterface","___Constants","___DataFormatUtils","UIAnnotations","TABLE_TYPES","sortCollectionByImportance","COLUMN_LENGTH","ValueState","FieldAnnotationsType","FieldTypes","RecommendedCardUtil","getInstance","Instance","getLineItemDetails","metaModel","originalManifest","leadingEntitySet","leadingEntitySetDetails","getODataEntitySet","variantInfo","this","getLineItemFromVariant","entityType","lineItemDefault","lineItem","pages","lrSettings","getSettingsForPage","quickVariantSelectionX","createDefaultLineItemDetails","oVariants","variants","firstAvailableKey","sEntitySet","oVariant","findFirstNonSmartChartVariant","isSmartChart","requestAtLeastFields","defaultTableSettings","getNormalizedTableSettings","entitySet","quickVariantInfo","annotationPath","split","presentationVariant","RequestAtLeast","length","_getRequestAtLeastFields","tableSettings","validateResponsiveTable","isResponsiveTable","undefined","lineItemDetail","quickVariant","headerInfo","sKey","Object","prototype","hasOwnProperty","call","oEntitySet","checkIfSmartChart","isResponsive","type","RESPONSIVE","error","oMetaModel","qualifier","oSelectionPresentationVariant","getAnnotation","UISelectionPresentationVariant","oPresentationVariant","PresentationVariant","getPresentationVariant","UIPresentationVariant","oDetails","getLineItem","UILineItem","qualifierPath","annotation","qualifierName","fullAnnotation","entityTypeData","getODataEntityType","selectionPresentationVariant","Path","getObject","presentationVariantData","visualizationData","Visualizations","find","oVis","AnnotationPath","includes","sQualifier","_getRelevantColumnPaths","columns","Array","isArray","selectSet","Set","expandSet","forEach","oColumnData","sPath","sAdditionalPath","sExpandPath","add","extractPathAndInsertToSet","select","from","expand","pathSet","path","extractAndExpandNavigationProperty","entitySetName","selects","expands","mNavigationProperties","iPos","lastIndexOf","sNavigation","getNavigationProperty","substring","push","navProperty","mMyNavigationProperties","oEntityType","aNavigationProperty","navigationProperty","oNavigationProperty","navName","name","_addNecessaryFields","aSelects","oInfo","aProperties","RecordType","DataFieldWithIntentBasedNavigation","DataFieldWithNavigationPath","aDataFieldsWithNavigation","getDataFieldsWithNavigation","concat","getFieldControlsPath","property","ensureSelectionProperty","sSelect","oProperty","getODataProperty","CommonFieldControl","oFieldControl","requestFields","valuePath","Value","lineItemProperty","textAnnotation","CommonText","sapTextAnnotation","SemanticObject","Action","getParameters","oSelectExpand","aExpands","alwaysSelectField","_ensureSelectionProperties","_handleMandatorySelectionFields","join","item","PropertyPath","key","propertyRef","field","sProperty","sElement","_createCardManifest","oInput","oVersionInfo","manifest","bSuppressRowNavigation","oUIManifest","oAppManifest","attributeIndex","assign","id","Date","now","title","cardTitle","subTitle","oNewManifest","createManifestSapApp","createManifestSapCard","createSapui5","oContent","content","slice","column","columnValue","_getAttributeValue","identifier","value","attributes","visible","state","showStateIcon","actions","parentAppId","cardType","versions","ui5","version","buildTimestamp","attributeData","attributeValue","startsWith","oDateFormatOptions","JSON","stringify","pattern","getDatePattern","appManifest","manifestAppData","dataSources","mainService","settings","datasource","sServiceUrl","uri","sCountPath","sText","text","oCardConfig","createManifestSapCardConfig","createManifestSapCardData","url","status","data","maxItems","attributesLayoutType","addCardActions","semanticObject","action","sapCard","semObj","semanticAction","oHeaderParams","ibnTarget","sensitiveProps","ibnParams","oHeaderParameterValue","parameters","oContentParams","parse","oContentParameterValue","configuration","headerState","contentState","header","oCardConfiguration","_relevantODataFilters","_relevantODataParameters","_entitySet","_urlSuffix","destinations","service","defaultUrl","csrfTokens","token1","request","method","headers","_version","contentDensities","compact","cozy","dependencies","libs","lazy","urlExpand","oBatch","Accept","oSapCardData","batch","_getManifestCardData","oParentApp","manifestApp","mainServiceUri","serviceUrl","replace","aColumns","map","oColumn","_getColumnDetail","filter","oItem","mParameters","urlSelectExpand","createCustomParams","finalUrl","aColumnSorted","CommonLabel","String","lineItemContext","oPropertyHidden","UIHidden","Bool","isPropertyHidden","keys","oP13NDetails","createP13N","columnDataObject","isSupportedColumn","getColumnObjectDetails","Importance","importance","propertyDetails","dataField","sColumnKeyDescription","sColumnValue","aSemKeyAnnotation","CommonSemanticKey","bIsPropertySemanticKey","some","oAnnotation","bIsCriticality","criticalityAnnotation","Criticality","MeasuresISOCurrency","MeasuresUnit","sTextArragement","UITextArrangement","_setColumnTextValue","buildExpressionForCriticalityColor","CriticalityRepresentation","EnumMember","CriticalityRepresentationTypeWithoutIcon","sFormatCriticalityExpression","None","sExpressionTemplate","oCriticalityProperty","CriticalityType","Negative","Error","Critical","Warning","Positive","Success","sCriticalitySimplePath","sCriticality","warning","TextArrangementType","sTextArrangementType","valueExpr","TextOnly","TextLast","TextSeparate","aCustomParams","entityTypeName","_isListReport","page","component","listPage","bSupressCardRowNavigation","shouldSuppressCardRowNavigation","sListKey","navigation","lRVariantSettings","tableType","gridTable","GRID","treeTable","TREE","STANDARD_LIST","OBJECT_LIST","SapSemantics","ANALYTICAL","UIHeaderInfo","tabItem","entitySetData","annotationName","variantData","sPresentationVariantPath","oPresentationVariantAnnotation","indexOf","UIChart","hasMandatoryProperties","propertiesSet","propertyDetail","_getParametersisedEntitySetParams","infoParamsRequired","oResult","navPropertyName","aNavigationProperties","oNavProperty","oNavigationEntitySet","getODataAssociationEnd","oNavigationEntityType","getODataAssociationSetEnd","navProp","aSubNavigationProperties","bBackAssociationPresent","oSubNavigationProperty","sSubNavigationEntityType","lineItemAnnotations","uiHidden","FieldControlHiddenType","contextSet","contextProp","columnDataField","p13nDetails","additionalProperties","navigationPath","recordType","dataFieldValue","DataField","DataFieldForAnnotation","DataFieldWithUrl","columnKey","createP13NColumnKey","getNavigationPrefixPath","Apply","Name","Parameters","parameterDetails","Type","processAdditionalProperties","Url","processDataFieldWithUrl","oDataFieldUrl","oParameter","dataFieldColumn","columnKeyName","fioriTemplatePrefix","seperatorNotation","dataFieldSemanticObject","dataFieldActionString","dataFieldPath","isRelevantAnnotation","buildKey","parts","DataFieldForIntentBasedNavigation","DataFieldForAction","Target","Contact","DataPoint","FieldGroup","Chart","oContextSet","_getNavigationPrefix","propertyName","expandName","propertyParts","i","associationEndData","oContextProp","oDataField","sNavigationPath","aAdditionalProperties","additionalP13N","oContextCommonText","oUnitAnnotation","dataFieldDetails","sRecordType","leadingProperty","checkMultiplicityForDataFieldAssociation","UIIsImageURL","dataFieldValuePath","associationData","navigationPropertyPath","multiplicity"],"sources":["RecommendedCardUtil.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Formatting from \"sap/base/i18n/Formatting\";\nimport Log from \"sap/base/Log\";\nimport encodeURL from \"sap/base/security/encodeURL\";\nimport formatMessage from \"sap/base/strings/formatMessage\";\nimport deepExtend from \"sap/base/util/deepExtend\";\nimport BaseObject from \"sap/ui/base/Object\";\nimport CoreLib from \"sap/ui/core/library\";\nimport ODataMetaModel, { AssociationEnd, NavigationProperty, Property } from \"sap/ui/model/odata/ODataMetaModel\";\nimport {\n\tIAppInfoData,\n\tIAppManifest,\n\tICardActionParameters,\n\tICardManifest,\n\tIColumnData,\n\tIEntitySet,\n\tIEntityType,\n\tILineItem,\n\tILineItemContext,\n\tILineItemContextValue,\n\tILineItemDetails,\n\tILrSettings,\n\tIManifestCardData,\n\tIPageType,\n\tIPresentationVariant,\n\tIRequestData,\n\tISapApp,\n\tISapCard,\n\tISapCardConfig,\n\tISapUI5App,\n\tITableSettings,\n\tIUIVisualizations,\n\tIVariantSetting,\n\tIVersionInfo,\n\tPageRecord,\n\tUIAnnotations,\n\tUIAnnotationValue\n} from \"../interface/CardsInterface\";\nimport { TABLE_TYPES } from \"./Constants\";\nimport { sortCollectionByImportance } from \"./DataFormatUtils\";\n\nconst COLUMN_LENGTH = 3;\nconst ValueState = CoreLib.ValueState;\n\ninterface VariantInfo {\n\tlineItem?: ILineItem[] | string;\n\tpresentationVariant?: IPresentationVariant;\n\tqualifierPath?: string;\n\tPresentationVariant?: IPresentationVariant;\n\tVisualizations?: IUIVisualizations[];\n}\n\ninterface NonChartDetail {\n\tfirstAvailableKey: string | null;\n\tsEntitySet: string;\n\toVariant: IVariantSetting;\n}\n\ninterface SelectExpand {\n\tselect: string[];\n\texpand: string[];\n}\n\ntype SelectExpandDetail = {\n\tselect?: string;\n\texpand?: string;\n};\n\ntype RequestAtleastFieldType = { String?: string | undefined; PropertyPath?: string | undefined };\ninterface ParameterisedEntity {\n\tentitySetName?: string | null;\n\tparameters: Array<object | string>;\n\tnavPropertyName: string | null;\n}\n\ninterface ColumnObjectData extends Partial<IColumnData> {\n\tleadingProperty?: string;\n\tadditionalProperty?: string;\n\tnavigationProperty?: string;\n\tcolumnKey?: string;\n\t[key: string]: unknown;\n}\n\ninterface NavigationPropertiesMap {\n\t[entitySetName: string]: {\n\t\t[navigationPropertyName: string]: NavigationProperty;\n\t};\n}\n\ninterface ExtendedLineItemContextValue extends ILineItemContextValue {\n\tPath: string;\n\tApply: {\n\t\tName: string;\n\t\tParameters: {\n\t\t\t[key: string]: string;\n\t\t}[];\n\t};\n}\n\nenum FieldAnnotationsType {\n\tDataField = \"com.sap.vocabularies.UI.v1.DataField\",\n\tImportance = \"com.sap.vocabularies.UI.v1.Importance\",\n\tDataFieldWithNavigationPath = \"com.sap.vocabularies.UI.v1.DataFieldWithNavigationPath\",\n\tDataFieldWithIntentBasedNavigation = \"com.sap.vocabularies.UI.v1.DataFieldWithIntentBasedNavigation\",\n\tDataFieldForIntentBasedNavigation = \"com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation\",\n\tChart = \"@com.sap.vocabularies.UI.v1.Chart\",\n\tFieldGroup = \"@com.sap.vocabularies.UI.v1.FieldGroup\",\n\tDataPoint = \"@com.sap.vocabularies.UI.v1.DataPoint\",\n\tContact = \"@com.sap.vocabularies.Communication.v1.Contact\",\n\tDataFieldForAction = \"com.sap.vocabularies.UI.v1.DataFieldForAction\",\n\tDataFieldForAnnotation = \"com.sap.vocabularies.UI.v1.DataFieldForAnnotation\",\n\tDataFieldWithUrl = \"com.sap.vocabularies.UI.v1.DataFieldWithUrl\",\n\tCriticalityRepresentationTypeWithoutIcon = \"com.sap.vocabularies.UI.v1.CriticalityRepresentationType/WithoutIcon\",\n\tFieldControlHiddenType = \"com.sap.vocabularies.Common.v1.FieldControlType/Hidden\"\n}\n\nexport enum FieldTypes {\n\tDataFieldWithNavigationPath = \"DataFieldWithNavigationPath\",\n\tDataFieldWithIntentBasedNavigation = \"DataFieldWithIntentBasedNavigation\",\n\tDataFieldForIntentBasedNavigation = \"DataFieldForIntentBasedNavigation\",\n\tDataFieldForAction = \"DataFieldForAction\",\n\tDataFieldForAnnotation = \"DataFieldForAnnotation\"\n}\n\ntype Attribute = { value: string; path: string; type: string };\ntype SelectionProperties = Array<string | { PropertyPath?: string; String?: string }>;\n\nexport default class RecommendedCardUtil extends BaseObject {\n\tstatic Instance: RecommendedCardUtil;\n\n\tstatic getInstance() {\n\t\tif (!RecommendedCardUtil.Instance) {\n\t\t\tRecommendedCardUtil.Instance = new RecommendedCardUtil();\n\t\t}\n\t\treturn RecommendedCardUtil.Instance;\n\t}\n\n\t/**\n\t * @param {object} metaModel - metamodel object\n\t * @param {object} originalManifest - manifest of original app\n\t * @param {string} leadingEntitySet - main entitySet of the application as in manifest\n\t * @returns {object} - returns the lineItem details for the application based on manifest, annotations and metadata\n\t * @private\n\t */\n\tpublic getLineItemDetails(\n\t\tmetaModel: ODataMetaModel,\n\t\toriginalManifest: IAppManifest,\n\t\tleadingEntitySet: string\n\t): ILineItemDetails | undefined {\n\t\tconst leadingEntitySetDetails = metaModel.getODataEntitySet(leadingEntitySet) as IEntitySet;\n\t\tconst variantInfo = this.getLineItemFromVariant(metaModel, leadingEntitySetDetails.entityType);\n\t\tconst lineItemDefault = variantInfo.lineItem;\n\t\tconst pages = originalManifest[\"sap.ui.generic.app\"]?.pages;\n\t\tconst lrSettings = this.getSettingsForPage(pages);\n\n\t\t//if there is no quickVariantSelectionX setting in manifest, then return default line item details\n\t\tif (!lrSettings.quickVariantSelectionX) {\n\t\t\treturn this.createDefaultLineItemDetails(metaModel, variantInfo, lrSettings, leadingEntitySet, lineItemDefault);\n\t\t}\n\n\t\t// if there is a variant settings then find the first non-smart chart variant\n\t\tconst oVariants = lrSettings.quickVariantSelectionX.variants || {};\n\t\tconst { firstAvailableKey, sEntitySet, oVariant } = this.findFirstNonSmartChartVariant(metaModel, oVariants, leadingEntitySet);\n\t\tif (oVariant.isSmartChart) {\n\t\t\treturn this.createDefaultLineItemDetails(metaModel, variantInfo, lrSettings, leadingEntitySet, lineItemDefault);\n\t\t}\n\t\tdelete lrSettings.requestAtLeastFields;\n\n\t\tconst defaultTableSettings = this.getNormalizedTableSettings(metaModel, lrSettings, leadingEntitySet);\n\t\tconst entitySet = metaModel?.getODataEntitySet(sEntitySet) as IEntitySet;\n\t\tconst quickVariantInfo = this.getLineItemFromVariant(metaModel, entitySet.entityType, oVariant.annotationPath?.split(\"#\")[1]);\n\t\tconst lineItem = quickVariantInfo.lineItem;\n\t\tconst presentationVariant = quickVariantInfo.presentationVariant;\n\n\t\tlrSettings.requestAtLeastFields = presentationVariant?.RequestAtLeast?.length\n\t\t\t? presentationVariant.RequestAtLeast\n\t\t\t: this._getRequestAtLeastFields(presentationVariant!);\n\n\t\toVariant.tableSettings = this.getNormalizedTableSettings(\n\t\t\tmetaModel,\n\t\t\t{ ...oVariant, tableSettings: oVariant.tableSettings || defaultTableSettings },\n\t\t\tsEntitySet\n\t\t);\n\n\t\tthis.validateResponsiveTable(lrSettings, oVariant, firstAvailableKey);\n\n\t\tdelete lrSettings.tableSettings;\n\t\tlrSettings.isResponsiveTable = lrSettings.isResponsiveTable === undefined || lrSettings.isResponsiveTable;\n\n\t\tconst lineItemDetail: ILineItemDetails = {\n\t\t\tquickVariant: oVariant,\n\t\t\tlrSettings: lrSettings,\n\t\t\tlineItem: lineItem,\n\t\t\tentitySet: sEntitySet,\n\t\t\theaderInfo: oVariant?.tableSettings?.headerInfo || \"\"\n\t\t};\n\t\treturn lineItem\n\t\t\t? lineItemDetail\n\t\t\t: this.createDefaultLineItemDetails(metaModel, variantInfo, lrSettings, leadingEntitySet, lineItemDefault);\n\t}\n\n\t/**\n\t * Finds the first non-smart chart variant from the provided variants.\n\t *\n\t * This method iterates through the given variants to identify the first variant that is not a smart chart.\n\t * It also determines the associated entity set and updates the variant's metadata to indicate whether it is a smart chart.\n\t *\n\t * @param {ODataMetaModel} metaModel - The OData meta model containing metadata about entities and annotations.\n\t * @param {Record<string, IVariantSetting>} oVariants - A record of variants, where each key represents a variant and its associated metadata.\n\t * @param {string} leadingEntitySet - The name of the leading entity set for the application.\n\t * @returns {NonChartDetail}\n}\n\t * An object containing:\n\t * - `firstAvailableKey`: The key of the first non-smart chart variant, or `null` if none is found.\n\t * - `sEntitySet`: The entity set associated with the first non-smart chart variant.\n\t * - `oVariant`: The metadata of the first non-smart chart variant.\n\t * @private\n\t */\n\tprivate findFirstNonSmartChartVariant(\n\t\tmetaModel: ODataMetaModel,\n\t\toVariants: Record<string, IVariantSetting>,\n\t\tleadingEntitySet: string\n\t): NonChartDetail {\n\t\tlet firstAvailableKey: string | null = null;\n\t\tlet sEntitySet = leadingEntitySet;\n\t\tlet oVariant: IVariantSetting = {};\n\n\t\tfor (const sKey in oVariants) {\n\t\t\tif (!Object.prototype.hasOwnProperty.call(oVariants, sKey)) continue;\n\n\t\t\toVariant = oVariants[sKey];\n\t\t\tsEntitySet = oVariant.entitySet || leadingEntitySet;\n\t\t\tconst oEntitySet = metaModel.getODataEntitySet(sEntitySet);\n\n\t\t\tif (oEntitySet) {\n\t\t\t\toVariant.isSmartChart = this.checkIfSmartChart(metaModel, sEntitySet, oVariant);\n\t\t\t\tif (!oVariant.isSmartChart) {\n\t\t\t\t\tfirstAvailableKey = sKey;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toVariant.isSmartChart = true;\n\t\t\t}\n\t\t}\n\t\treturn { firstAvailableKey, sEntitySet, oVariant };\n\t}\n\n\t/**\n\t * Validates the responsive table type for a given variant and updates the List Report (LR) settings.\n\t *\n\t * @param {ILrSettings} lrSettings - The settings object for the List Report, including table settings and configurations.\n\t * @param {IVariantSetting} oVariant - The variant object containing table settings and metadata.\n\t * @param {string | null} firstAvailableKey - The key of the first available variant, used for logging errors.\n\t * @returns {void}\n\t * @private\n\t */\n\tprivate validateResponsiveTable(lrSettings: ILrSettings, oVariant: IVariantSetting, firstAvailableKey: string | null): void {\n\t\tconst isResponsive = oVariant.tableSettings?.type === TABLE_TYPES.RESPONSIVE;\n\t\tif (lrSettings.isResponsiveTable === undefined) {\n\t\t\tlrSettings.isResponsiveTable = isResponsive;\n\t\t} else if (lrSettings.isResponsiveTable !== isResponsive) {\n\t\t\tLog.error(`Variant with key ${firstAvailableKey} resulted in invalid Table Type combination.`);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * This method generates the default configuration for line item details, including table settings,\n\t * responsive table type, and request-at-least fields based on the provided metadata, variant information,\n\t * and settings.\n\t *\n\t * @param {ODataMetaModel} metaModel - The OData meta model containing metadata about entities and annotations.\n\t * @param {VariantInfo} variantInfo - The variant information containing presentation variant and line item details.\n\t * @param {ILrSettings} lrSettings - The settings object for the List Report, including table settings and other configurations.\n\t * @param {string} leadingEntitySet - The name of the leading entity set for the application.\n\t * @param {ILineItem[] | string | undefined} lineItemDefault - The default line item details, which can be an array of line items, a string, or undefined.\n\t * @returns {ILineItemDetails} The default line item details object, including quick variant, settings, line item, entity set, and header info.\n\t * @private\n\t */\n\tprivate createDefaultLineItemDetails(\n\t\tmetaModel: ODataMetaModel,\n\t\tvariantInfo: VariantInfo,\n\t\tlrSettings: ILrSettings,\n\t\tleadingEntitySet: string,\n\t\tlineItemDefault?: ILineItem[] | string\n\t): ILineItemDetails {\n\t\tlrSettings.tableSettings = this.getNormalizedTableSettings(metaModel, lrSettings, leadingEntitySet);\n\t\tlrSettings.isResponsiveTable = lrSettings.tableSettings.type === TABLE_TYPES.RESPONSIVE;\n\t\tif (variantInfo?.presentationVariant?.RequestAtLeast?.length) {\n\t\t\tlrSettings.requestAtLeastFields = variantInfo.presentationVariant.RequestAtLeast;\n\t\t}\n\t\treturn {\n\t\t\tquickVariant: {},\n\t\t\tlrSettings: lrSettings,\n\t\t\tlineItem: lineItemDefault,\n\t\t\tentitySet: leadingEntitySet,\n\t\t\theaderInfo: lrSettings?.tableSettings?.headerInfo || \"\"\n\t\t};\n\t}\n\n\t/**\n\t * @param {object} oMetaModel - metamodel object\n\t * @param {string} entityType - entity type of the application\n\t * @param {string} qualifier - qualifier of the variant\n\t * @returns {object} - returns the lineItem, presentationVariant, qualifierPath from the variant for the application based on manifest, annotations and metadata\n\t * @private\n\t */\n\tprivate getLineItemFromVariant(oMetaModel: ODataMetaModel, entityType: string, qualifier?: string): VariantInfo {\n\t\tconst oSelectionPresentationVariant = this.getAnnotation<IPresentationVariant>(\n\t\t\toMetaModel,\n\t\t\tentityType,\n\t\t\tUIAnnotations.UISelectionPresentationVariant,\n\t\t\tqualifier\n\t\t);\n\n\t\tlet oPresentationVariant;\n\t\tif (oSelectionPresentationVariant?.PresentationVariant) {\n\t\t\toPresentationVariant = this.getPresentationVariant(oMetaModel, entityType, oSelectionPresentationVariant.PresentationVariant);\n\t\t} else {\n\t\t\toPresentationVariant = this.getAnnotation<IPresentationVariant>(\n\t\t\t\toMetaModel,\n\t\t\t\tentityType,\n\t\t\t\tUIAnnotations.UIPresentationVariant,\n\t\t\t\tqualifier\n\t\t\t);\n\t\t}\n\n\t\tconst oDetails = oPresentationVariant ? this.getLineItem(oMetaModel, entityType, oPresentationVariant) : null;\n\t\tconst lineItem = oDetails?.lineItem || this.getAnnotation<ILineItem[]>(oMetaModel, entityType, UIAnnotations.UILineItem, \"\");\n\n\t\treturn {\n\t\t\tpresentationVariant: oPresentationVariant,\n\t\t\tlineItem: lineItem,\n\t\t\tqualifierPath: oDetails?.annotationPath || \"\"\n\t\t};\n\t}\n\n\t// get the annotation , sAnnotation from the entityType, sEntityType\n\tprivate getAnnotation<T extends IPresentationVariant | ILineItem[]>(\n\t\tmetaModel: ODataMetaModel,\n\t\tentityType: string,\n\t\tannotation: UIAnnotations,\n\t\tqualifierName?: string\n\t): T | undefined {\n\t\tconst fullAnnotation = `${annotation}${qualifierName ? `#${qualifierName}` : \"\"}`;\n\t\tconst entityTypeData = metaModel.getODataEntityType(entityType) as IEntityType;\n\t\treturn entityTypeData?.[fullAnnotation] as T | undefined;\n\t}\n\n\t/**\n\t * This method determines the presentation variant based on the provided selection presentation variant.\n\t * If the presentation variant is defined via a `Path`, it resolves the path to retrieve the corresponding object\n\t * from the OData meta model. If the presentation variant is defined inline (i.e., without a `Path`), it directly\n\t * returns the inline object.\n\t *\n\t * @param {ODataMetaModel} metaModel - The OData meta model containing metadata about entities and annotations.\n\t * @param {string} entityTypeData - The entity type for which the presentation variant is to be retrieved.\n\t * @param {IPresentationVariant} selectionPresentationVariant -\n\t * The selection presentation variant object, which may contain a `Path` or an inline `PresentationVariant`.\n\t * @returns {IPresentationVariant} The resolved presentation variant object.\n\t * @private\n\t */\n\tprivate getPresentationVariant(\n\t\tmetaModel: ODataMetaModel,\n\t\tentityTypeData: string,\n\t\tselectionPresentationVariant: IPresentationVariant\n\t): IPresentationVariant {\n\t\t// PresentationVariant must be defined (according to vocabulary) either via \"Path\" or inline (i.e. Path is not defined).\n\t\t// For compatibility, just ignore if not provided (leading to fallback to use LineItem without qualifier)\n\t\tconst presentationVariant = selectionPresentationVariant?.PresentationVariant;\n\n\t\tif (presentationVariant?.Path) {\n\t\t\treturn this.getObject<IPresentationVariant>(metaModel, entityTypeData, presentationVariant.Path);\n\t\t}\n\t\treturn presentationVariant!;\n\t}\n\n\t/**\n\t * Retrieves the line item annotation details for a given entity type and presentation variant.\n\t *\n\t * This method searches for the `com.sap.vocabularies.UI.v1.LineItem` annotation within the visualizations\n\t * of the provided presentation variant. If found, it returns the line item details, including the annotation path\n\t * and qualifier.\n\t *\n\t * @param {ODataMetaModel} metaModel - The OData meta model containing metadata about the entity type.\n\t * @param {string} entityTypeData - The entity type for which the line item annotation is to be retrieved.\n\t * @param {IPresentationVariant} presentationVariantData - The presentation variant containing visualizations.\n\t * @returns { IUIVisualizations | IUIVisualizations[] | null}\n\t * - An object containing the line item details, annotation path, and qualifier if the annotation is found.\n\t * - An array of UI annotations if applicable.\n\t * - `null` if no valid line item annotation is found.\n\t * @private\n\t */\n\tprivate getLineItem(\n\t\tmetaModel: ODataMetaModel,\n\t\tentityTypeData: string,\n\t\tpresentationVariantData: IPresentationVariant\n\t): IUIVisualizations | null {\n\t\t// Visualizations must be defined (according to vocabulary)\n\t\t// however, this is not given at least in all demokit apps (presentationVariant consisting only of sortOrder)\n\t\tlet visualizationData = presentationVariantData.Visualizations?.find(function (oVis) {\n\t\t\treturn oVis.AnnotationPath?.includes(UIAnnotations.UILineItem);\n\t\t});\n\n\t\treturn visualizationData\n\t\t\t? {\n\t\t\t\t\tlineItem: this.getObject<ILineItem[]>(metaModel, entityTypeData, visualizationData.AnnotationPath!),\n\t\t\t\t\tannotationPath: visualizationData.AnnotationPath!,\n\t\t\t\t\tsQualifier: visualizationData.AnnotationPath?.split(\"#\")[1]\n\t\t\t\t}\n\t\t\t: null;\n\t}\n\n\t/**\n\t * Extracts relevant column paths for `$select` and `$expand` OData query options.\n\t *\n\t * This method processes the provided column definitions to extract paths for the `$select` and `$expand` query options.\n\t * It ensures that paths are unique and properly formatted for OData requests.\n\t *\n\t * @param {Array<Record<string,unknown>>} columns - An array of column definitions.\n\t * Each column definition may include properties like `leadingProperty`, `additionalProperty`, and `navigationProperty`.\n\t * @returns {SelectExpand} An object containing two arrays:\n\t * - `select`: An array of unique paths for the `$select` query option.\n\t * - `expand`: An array of unique paths for the `$expand` query option.\n\t * @private\n\t */\n\tprivate _getRelevantColumnPaths(columns: ColumnObjectData[]): SelectExpand {\n\t\tcolumns = Array.isArray(columns) ? columns : [];\n\t\tconst selectSet = new Set<string>();\n\t\tconst expandSet = new Set<string>();\n\t\tcolumns.forEach((oColumnData) => {\n\t\t\tif (oColumnData) {\n\t\t\t\tconst sPath = oColumnData[\"leadingProperty\"];\n\t\t\t\tconst sAdditionalPath = oColumnData[\"additionalProperty\"];\n\t\t\t\tconst sExpandPath = oColumnData[\"navigationProperty\"];\n\t\t\t\tif (sPath) {\n\t\t\t\t\tselectSet.add(sPath);\n\t\t\t\t}\n\t\t\t\tthis.extractPathAndInsertToSet(sAdditionalPath!, selectSet);\n\t\t\t\tthis.extractPathAndInsertToSet(sExpandPath!, expandSet);\n\t\t\t}\n\t\t});\n\t\treturn {\n\t\t\tselect: Array.from(selectSet),\n\t\t\texpand: Array.from(expandSet)\n\t\t};\n\t}\n\n\t/**\n\t * Extracts and inserts unique paths into the provided array.\n\t *\n\t * This method splits the given path string by commas, iterates through the resulting paths,\n\t * and adds each unique path to the provided array. Duplicate paths are ignored.\n\t *\n\t * @param {string} sPath - A comma-separated string of paths to be processed.\n\t * @param {Set<string>}  - The array to which unique paths will be added.\n\t * @private\n\t */\n\tprivate extractPathAndInsertToSet(sPath: string, pathSet: Set<string>) {\n\t\tsPath?.split(\",\").forEach((path) => {\n\t\t\tif (path) {\n\t\t\t\tpathSet.add(path);\n\t\t\t\t// currently not doing transitive dependencies\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Expands navigation properties for the given entity set and selected properties.\n\t *\n\t * This method processes the provided `selects` array to identify navigation properties\n\t * that need to be expanded. If a navigation property is found, it is added to the `expands` array.\n\t *\n\t * @param {string} entitySetName - The name of the entity set being processed.\n\t * @param {string[]} selects - An array of selected property paths to be checked for navigation properties.\n\t * @param {string[]} expands - An array to which navigation properties requiring expansion will be added.\n\t * @param {ODataMetaModel} metaModel - The OData meta model containing metadata about entities and properties.\n\t * @private\n\t */\n\tprivate extractAndExpandNavigationProperty(entitySetName: string, selects: string[], expands: string[], metaModel: ODataMetaModel) {\n\t\tconst mNavigationProperties = {};\n\n\t\t// check if any expand is necessary\n\t\tfor (const sPath of selects) {\n\t\t\tlet iPos = sPath.lastIndexOf(\"/\");\n\t\t\tlet sNavigation;\n\t\t\tif (iPos < 0) {\n\t\t\t\t// sPath contains no '/' but still could be a navigationProperty\n\t\t\t\tif (!this.getNavigationProperty(entitySetName, sPath, metaModel, mNavigationProperties)) {\n\t\t\t\t\tcontinue; //not a navproperty hence continue to next iteration\n\t\t\t\t}\n\t\t\t\tsNavigation = sPath;\n\t\t\t} else {\n\t\t\t\tsNavigation = sPath.substring(0, iPos);\n\t\t\t}\n\t\t\tif (!expands.includes(sNavigation)) {\n\t\t\t\texpands.push(sNavigation);\n\t\t\t}\n\t\t}\n\t}\n\n\t//get the navigation property details for the given property from entityset, sEntitySet\n\tprivate getNavigationProperty(\n\t\tentitySetName: string,\n\t\tnavProperty: string,\n\t\tmetaModel: ODataMetaModel,\n\t\tmNavigationProperties: NavigationPropertiesMap\n\t) {\n\t\tlet mMyNavigationProperties = mNavigationProperties?.[entitySetName];\n\n\t\t// If navigation properties not already fetched, then fetch them\n\t\tif (!mMyNavigationProperties) {\n\t\t\tmMyNavigationProperties = {};\n\t\t\tmNavigationProperties[entitySetName] = mMyNavigationProperties;\n\n\t\t\tconst oEntitySet = metaModel.getODataEntitySet(entitySetName) as IEntitySet;\n\t\t\tif (oEntitySet) {\n\t\t\t\tconst oEntityType = metaModel.getODataEntityType(oEntitySet.entityType) as IEntityType;\n\t\t\t\tif (oEntityType) {\n\t\t\t\t\tconst aNavigationProperty = oEntityType.navigationProperty || [];\n\t\t\t\t\taNavigationProperty.forEach((oNavigationProperty) => {\n\t\t\t\t\t\tconst navName = oNavigationProperty.name;\n\t\t\t\t\t\tmMyNavigationProperties[navName] = oNavigationProperty;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn mMyNavigationProperties?.[navProperty] || undefined;\n\t}\n\n\t// add all necessary fields to the select array\n\tprivate _addNecessaryFields(aSelects: string[], oInfo: ILineItemDetails, oMetaModel: ODataMetaModel) {\n\t\tlet oEntitySet = oMetaModel.getODataEntitySet(oInfo.entitySet) as IEntitySet;\n\t\tlet oEntityType = oMetaModel.getODataEntityType(oEntitySet.entityType) as IEntityType;\n\t\tlet aProperties: string[] = [];\n\n\t\tif (aSelects.length > 0) {\n\t\t\tif (oInfo.lineItem && typeof oInfo.lineItem !== \"string\") {\n\t\t\t\toInfo.lineItem.forEach((lineItem) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tlineItem.RecordType === FieldAnnotationsType.DataFieldWithIntentBasedNavigation ||\n\t\t\t\t\t\tlineItem.RecordType === FieldAnnotationsType.DataFieldWithNavigationPath\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst aDataFieldsWithNavigation = this.getDataFieldsWithNavigation(lineItem, oMetaModel, oEntityType);\n\t\t\t\t\t\tif (aDataFieldsWithNavigation?.length) {\n\t\t\t\t\t\t\taProperties = aProperties.concat(aDataFieldsWithNavigation);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t//add the fieldcontrol path of the properties\n\t\t\tthis.getFieldControlsPath(aSelects, oMetaModel, oEntityType, aProperties);\n\t\t}\n\n\t\taProperties.forEach((property) => {\n\t\t\tthis.ensureSelectionProperty(property, aSelects);\n\t\t});\n\t}\n\n\t/**\n\t * Collects the paths for field controls based on the selected properties.\n\t * This function iterates over the given selection of properties, aSelects, retrieves the corresponding\n\t * property metadata from the OData model, and if a field control annotation exists for a property,\n\t * it adds the path of this field control to the provided array of properties.\n\t * @param {string[]} selects - An array of property names to be checked for field control paths.\n\t * @param {object} metaModel - The OData meta model instance used to retrieve property metadata.\n\t * @param {object} entityType - The entity type from the OData model that contains the properties.\n\t * @param {string[]} aProperties - An array to which the field control paths will be added.\n\t * @private\n\t */\n\tprivate getFieldControlsPath(selects: string[], metaModel: ODataMetaModel, entityType: IEntityType, aProperties: string[]) {\n\t\tselects.forEach((sSelect) => {\n\t\t\tif (sSelect) {\n\t\t\t\t//needed for activating field control for DataField Annotation & when using the setting to add new columns\n\t\t\t\tlet oProperty = (metaModel.getODataProperty(entityType, sSelect) as UIAnnotationValue) || {};\n\t\t\t\tif (UIAnnotations.CommonFieldControl in oProperty) {\n\t\t\t\t\tlet oFieldControl = oProperty[UIAnnotations.CommonFieldControl];\n\t\t\t\t\tif (oFieldControl?.Path) {\n\t\t\t\t\t\taProperties.push(oFieldControl.Path);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Handling for DataFieldWithNavigationPath and DataFieldWithIntentBasedNavigation\n\t * @param {object} lineItem - LineItem object\n\t * @param {object} metaModel - OData metamodel\n\t * @param {object} entityType - EntityType object\n\t * @returns {Array} - Array of properties to be selected in case field type is DataFieldWithNavigationPath or DataFieldWithIntentBasedNavigation\n\t * @private\n\t */\n\tprivate getDataFieldsWithNavigation(lineItem: ILineItem, metaModel: ODataMetaModel, entityType: IEntityType): string[] {\n\t\tconst requestFields = [];\n\n\t\t// Handle Value.Path\n\t\tconst valuePath = lineItem.Value?.Path;\n\t\tif (valuePath) {\n\t\t\tconst lineItemProperty = metaModel.getODataProperty(entityType, valuePath) as UIAnnotationValue;\n\t\t\tconst textAnnotation = lineItemProperty?.[UIAnnotations.CommonText]?.Path;\n\t\t\tconst sapTextAnnotation = lineItemProperty?.[\"sap:text\"];\n\n\t\t\trequestFields.push(sapTextAnnotation || textAnnotation || valuePath);\n\t\t}\n\n\t\t// Handle SemanticObject.Path\n\t\tif (lineItem.SemanticObject?.Path) {\n\t\t\trequestFields.push(lineItem.SemanticObject.Path);\n\t\t}\n\n\t\t// Handle Action.Path\n\t\tif (lineItem.Action?.Path) {\n\t\t\trequestFields.push(lineItem.Action.Path);\n\t\t}\n\n\t\treturn requestFields;\n\t}\n\n\t// Section: Parameter Handling\n\tprivate getParameters(\n\t\toInfo: ILineItemDetails,\n\t\tmetaModel: ODataMetaModel,\n\t\tentitySet: string,\n\t\toSelectExpand: SelectExpand\n\t): SelectExpandDetail {\n\t\tlet aSelects = oSelectExpand.select || [];\n\t\tlet aExpands = oSelectExpand.expand || [];\n\n\t\tlet alwaysSelectField = oInfo?.lrSettings?.requestAtLeastFields || [];\n\t\tif (alwaysSelectField.length > 0) {\n\t\t\taSelects = this._ensureSelectionProperties(aSelects, alwaysSelectField);\n\t\t}\n\n\t\tthis._handleMandatorySelectionFields(entitySet, aSelects, metaModel);\n\t\tthis._addNecessaryFields(aSelects, oInfo, metaModel);\n\t\tthis.extractAndExpandNavigationProperty(entitySet, aSelects, aExpands, metaModel);\n\n\t\treturn {\n\t\t\texpand: aExpands.join(\",\") || undefined,\n\t\t\tselect: aSelects.join(\",\") || undefined\n\t\t};\n\t}\n\n\t/**\n\t *\n\t * @param {Array} aSelects , select parameters\n\t * @param {SelectionProperties} alwaysSelectField, all the fields that are marked as requestAtLeastFields\n\t * @returns {Array} aSelects, updated select parameters\n\t * @private\n\t */\n\n\tprivate _ensureSelectionProperties(aSelects: string[], alwaysSelectField: SelectionProperties): string[] {\n\t\tfor (const item of alwaysSelectField) {\n\t\t\tif (typeof item === \"object\" && item?.PropertyPath && !aSelects.includes(item.PropertyPath)) {\n\t\t\t\taSelects.push(item.PropertyPath);\n\t\t\t}\n\t\t}\n\n\t\treturn aSelects;\n\t}\n\n\t/**\n\t * Handles the mandatory selection fields for the given entity set and properties.\n\t *\n\t * @param {object} entitySet - The entity set object.\n\t * @param {array} aSelects - The array of properties.\n\t * @returns {boolean} True if the entity set or properties have mandatory fields, false otherwise.\n\t * @private\n\t */\n\tprivate _handleMandatorySelectionFields(entitySet: string, aSelects: string[], oMetaModel: ODataMetaModel) {\n\t\tconst oEntitySet = oMetaModel.getODataEntitySet(entitySet, false) as IEntitySet;\n\t\tconst oEntityType = oMetaModel.getODataEntityType(oEntitySet.entityType, false) as IEntityType;\n\n\t\toEntityType.key.propertyRef.forEach((field) => {\n\t\t\tthis.ensureSelectionProperty(field.name, aSelects);\n\t\t});\n\t}\n\n\t// push the selection properties to the select array\n\tprivate ensureSelectionProperty(sProperty: string, aSelects: string[]) {\n\t\tsProperty?.split(\",\").forEach(function (sElement) {\n\t\t\tif (sElement && !aSelects.includes(sElement)) {\n\t\t\t\taSelects.push(sElement);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Creates a card manifest for a recommended card.\n\t *\n\t * This method generates a new card manifest based on the provided input data, version information, and app manifest.\n\t * It also processes the columns to set attributes or titles for the card content and handles row navigation suppression if required.\n\t *\n\t * @param {IManifestCardData} oInput - The input data for the card, including card title, subtitle, columns, and entity set.\n\t * @param {IVersionInfo} oVersionInfo - The version information, including the version and build timestamp.\n\t * @param {IAppManifest} manifest - The original app manifest.\n\t * @param {boolean} [bSuppressRowNavigation] - Optional flag to suppress row navigation actions in the card content.\n\t * @returns {ICardManifest} The generated card manifest object.\n\t * @private\n\t */\n\tpublic _createCardManifest(\n\t\toInput: IManifestCardData,\n\t\toVersionInfo: IVersionInfo,\n\t\tmanifest: IAppManifest,\n\t\tbSuppressRowNavigation?: boolean\n\t): ICardManifest {\n\t\tlet oUIManifest = manifest[\"sap.ui\"];\n\t\tlet oAppManifest = manifest[\"sap.app\"];\n\t\tlet attributeIndex = 0;\n\n\t\tif (oAppManifest?.[\"crossNavigation\"]) {\n\t\t\tdelete oAppManifest[\"crossNavigation\"];\n\t\t}\n\t\tif (oAppManifest) {\n\t\t\tObject.assign(oAppManifest, {\n\t\t\t\ttype: \"card\",\n\t\t\t\tid: `user.${oInput.id}.${Date.now()}`,\n\t\t\t\ttitle: oInput.cardTitle || \"\",\n\t\t\t\tsubTitle: oInput.subTitle\n\t\t\t});\n\t\t}\n\n\t\tlet oNewManifest: ICardManifest = {\n\t\t\t\"sap.ui\": oUIManifest,\n\t\t\t\"sap.app\": this.createManifestSapApp(oAppManifest!),\n\t\t\t\"sap.card\": this.createManifestSapCard(manifest, oInput),\n\t\t\t\"sap.ui5\": this.createSapui5()\n\t\t};\n\t\tconst oContent = oNewManifest?.[\"sap.card\"]?.content;\n\n\t\toInput.columns.slice(0, COLUMN_LENGTH).forEach((column) => {\n\t\t\tconst columnValue = this._getAttributeValue(column);\n\t\t\tif (column.identifier && oContent?.item) {\n\t\t\t\t// If column.identifier is true, set it as the title\n\t\t\t\toContent.item.title = { value: columnValue, identifier: true };\n\t\t\t} else if (oContent?.item?.attributes) {\n\t\t\t\t// Otherwise, add it to the attributes\n\t\t\t\toContent.item.attributes[attributeIndex] = {\n\t\t\t\t\tvalue: columnValue,\n\t\t\t\t\tvisible: true,\n\t\t\t\t\t...(column.state && { state: column.state, showStateIcon: column.showStateIcon })\n\t\t\t\t};\n\t\t\t\tattributeIndex++;\n\t\t\t}\n\t\t});\n\n\t\t// if bSuppressRowNavigation true, remove content actions\n\t\tif (bSuppressRowNavigation && oContent?.item) {\n\t\t\toContent.item.actions = [];\n\t\t}\n\n\t\treturn {\n\t\t\t...oNewManifest,\n\t\t\t\"sap.insights\": {\n\t\t\t\tparentAppId: oInput.id,\n\t\t\t\tcardType: \"RT\",\n\t\t\t\tversions: {\n\t\t\t\t\tui5: `${oVersionInfo.version}-${oVersionInfo.buildTimestamp}`\n\t\t\t\t},\n\t\t\t\tvisible: true\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Get Attribute Value\n\t *\n\t * @param {object} attributeData - column object\n\t * @returns {string} returns attribute value\n\t * @private\n\t */\n\tprivate _getAttributeValue(attributeData: Attribute): string {\n\t\tlet attributeValue = !attributeData.value.startsWith(\"{\")\n\t\t\t? \"{= extension.formatters.stringFormatter(${\" + attributeData.path + \"}) }\"\n\t\t\t: attributeData.value;\n\t\tif (attributeData.type === \"Edm.Date\" || attributeData.type === \"Edm.DateTime\") {\n\t\t\tconst oDateFormatOptions = JSON.stringify({ pattern: Formatting.getDatePattern(\"short\") });\n\t\t\tattributeValue =\n\t\t\t\t\"{=${\" + attributeData.path + \"}?format.dateTime(${\" + attributeData.path + \"}, \" + oDateFormatOptions + \") : ''}\";\n\t\t}\n\n\t\treturn attributeValue;\n\t}\n\n\t//creates sap.app object structure for the card manifest of recommended card\n\tprivate createManifestSapApp(appManifest: ISapApp) {\n\t\tconst manifestAppData = deepExtend({}, appManifest) as ISapApp;\n\t\tif (manifestAppData?.dataSources?.mainService) {\n\t\t\tmanifestAppData.dataSources[\"filterService\"] = manifestAppData.dataSources.mainService;\n\t\t\tif (manifestAppData.dataSources[\"filterService\"]?.settings) {\n\t\t\t\tmanifestAppData.dataSources[\"filterService\"].settings[\"odataVersion\"] = \"2.0\";\n\t\t\t}\n\t\t}\n\n\t\treturn manifestAppData;\n\t}\n\n\t/**\n\t * Creates the manifest's SAP card object, sap.card based on the input card details.\n\t *\n\t * @param {oIAppManifestbject} manifest - The original manifest object of the application.\n\t * @param {IManifestCardData} oInput - The input object containing card details.\n\t * @returns {ISapCard} The SAP card configuration object.\n\t */\n\tprivate createManifestSapCard(manifest: IAppManifest, oInput: IManifestCardData): ISapCard {\n\t\tconst datasource = manifest[\"sap.app\"]?.dataSources;\n\t\tconst sServiceUrl = datasource?.mainService?.uri;\n\t\tconst entitySetName = oInput.entitySet;\n\t\tconst sCountPath = \"__count\";\n\t\tconst sText = {\n\t\t\ttext: \"{= ${\" + sCountPath + \"} === '0' ? '' : ${\" + sCountPath + \"} }\"\n\t\t};\n\n\t\tlet oCardConfig: ISapCard = {\n\t\t\ttype: \"List\"\n\t\t};\n\n\t\toCardConfig[\"configuration\"] = this.createManifestSapCardConfig(sServiceUrl || \"\", entitySetName);\n\t\toCardConfig[\"data\"] = this.createManifestSapCardData(sServiceUrl || \"\", oInput.url);\n\n\t\toCardConfig[\"header\"] = {\n\t\t\ttitle: oInput.cardTitle,\n\t\t\tsubTitle: \"\",\n\t\t\tactions: [],\n\t\t\tstatus: sText,\n\t\t\tdata: {\n\t\t\t\tpath: \"/content/d\"\n\t\t\t}\n\t\t};\n\n\t\toCardConfig[\"extension\"] = \"module:sap/insights/CardExtension\";\n\t\toCardConfig[\"content\"] = {\n\t\t\tdata: {\n\t\t\t\tpath: \"/content/d/results\"\n\t\t\t},\n\t\t\tmaxItems: 5,\n\t\t\titem: {\n\t\t\t\tactions: [],\n\t\t\t\tattributesLayoutType: \"OneColumn\",\n\t\t\t\tattributes: []\n\t\t\t}\n\t\t};\n\n\t\tthis.addCardActions(oCardConfig, oInput.semanticObject, oInput.action);\n\t\treturn oCardConfig;\n\t}\n\n\t/**\n\t * Sets the card actions for the given SAP card.\n\t *\n\t * @param {object} sapCard - The SAP card object to set the actions on.\n\t * @param {string} semObj - The semantic object for the navigation target.\n\t * @param {string} semanticAction - The semantic action for the navigation target.\n\t */\n\tprivate addCardActions(sapCard: ISapCard, semObj: string, semanticAction: string) {\n\t\tlet oHeaderParams: ICardActionParameters = {\n\t\t\tibnTarget: {\n\t\t\t\tsemanticObject: semObj,\n\t\t\t\taction: semanticAction\n\t\t\t},\n\t\t\tsensitiveProps: [],\n\t\t\tibnParams: {}\n\t\t};\n\n\t\tlet oHeaderParameterValue = [\n\t\t\t{\n\t\t\t\ttype: \"Navigation\",\n\t\t\t\tparameters: \"{= extension.formatters.getNavigationContext(${parameters>/headerState/value})}\"\n\t\t\t}\n\t\t];\n\n\t\tlet oContentParams = JSON.parse(JSON.stringify(oHeaderParams)) as ICardActionParameters;\n\t\tlet oContentParameterValue = [\n\t\t\t{\n\t\t\t\ttype: \"Navigation\",\n\t\t\t\tparameters: \"{= extension.formatters.getNavigationContext(${parameters>/contentState/value}, ${})}\"\n\t\t\t}\n\t\t];\n\n\t\tif (sapCard.configuration?.parameters) {\n\t\t\tsapCard.configuration.parameters.headerState = {\n\t\t\t\tvalue: JSON.stringify(oHeaderParams)\n\t\t\t};\n\t\t\tsapCard.configuration.parameters.contentState = {\n\t\t\t\tvalue: JSON.stringify(oContentParams)\n\t\t\t};\n\t\t}\n\t\tif (sapCard.header) {\n\t\t\tsapCard.header.actions = oHeaderParameterValue;\n\t\t}\n\t\tif (sapCard?.content?.item) {\n\t\t\tsapCard.content.item.actions = oContentParameterValue;\n\t\t}\n\t}\n\n\t/**\n\t * Creates the manifest sap card configuration object.\n\t *\n\t * @param {string} sServiceUrl - The service URL to be used in the request.\n\t * @param {string} entitySetName - The name of the entity set.\n\t * @returns {object} The SAP card configuration object.\n\t */\n\tprivate createManifestSapCardConfig(sServiceUrl: string, entitySetName: string): ISapCardConfig {\n\t\tconst oCardConfiguration = {\n\t\t\tparameters: {\n\t\t\t\t_relevantODataFilters: {\n\t\t\t\t\tvalue: []\n\t\t\t\t},\n\t\t\t\t_relevantODataParameters: {\n\t\t\t\t\tvalue: []\n\t\t\t\t},\n\t\t\t\t_entitySet: {\n\t\t\t\t\tvalue: entitySetName\n\t\t\t\t},\n\t\t\t\t_urlSuffix: {\n\t\t\t\t\tvalue: \"/Results\"\n\t\t\t\t}\n\t\t\t},\n\t\t\tdestinations: {\n\t\t\t\tservice: {\n\t\t\t\t\tname: \"(default)\",\n\t\t\t\t\tdefaultUrl: \"/\"\n\t\t\t\t}\n\t\t\t},\n\t\t\tcsrfTokens: {\n\t\t\t\ttoken1: {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\trequest: {\n\t\t\t\t\t\t\turl: \"{{destinations.service}}\" + sServiceUrl,\n\t\t\t\t\t\t\tmethod: \"HEAD\",\n\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\"X-CSRF-Token\": \"Fetch\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn oCardConfiguration;\n\t}\n\n\t//create sap.ui5 object for the card manifest\n\tprivate createSapui5(): ISapUI5App {\n\t\treturn {\n\t\t\t_version: \"1.1.0\",\n\t\t\tcontentDensities: { compact: true, cozy: true },\n\t\t\tdependencies: {\n\t\t\t\tlibs: {\n\t\t\t\t\t\"sap.insights\": {\n\t\t\t\t\t\tlazy: false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Creates the manifest data for an SAP card.\n\t *\n\t * @param {string} sServiceUrl - The service URL to be used in the request.\n\t * @param {string} urlExpand - The URL to expand in the batch request.\n\t * @returns {IRequestData} The SAP card data object containing the request configuration.\n\t */\n\tprivate createManifestSapCardData(sServiceUrl: string, urlExpand: string): IRequestData {\n\t\tconst oBatch = {\n\t\t\tcontent: {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\turl: urlExpand,\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: \"application/json\"\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tconst oSapCardData: IRequestData = {\n\t\t\trequest: {\n\t\t\t\turl: \"{{destinations.service}}\" + sServiceUrl + \"/$batch\",\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"X-CSRF-Token\": \"{{csrfTokens.token1}}\"\n\t\t\t\t},\n\t\t\t\tbatch: oBatch\n\t\t\t}\n\t\t};\n\n\t\treturn oSapCardData;\n\t}\n\n\t/**\n\t * This function returns card details required for the recommended card manifest\n\t * based on app manifest and annotations\n\t * @param {object} manifest - The original app manifest\n\t * @param {object} oInfo - The object containing details of lineitem, entityset, settings etc\n\t * @param {object} oParentApp - The parent app object\n\t * @param {object} oMetaModel - The OData metamodel\n\t * @returns {object} The card data object with title, subtitle, url, semanticObject, action, id and column details\n\t * @private\n\t */\n\tpublic _getManifestCardData(\n\t\tmanifest: IAppManifest,\n\t\toInfo: ILineItemDetails,\n\t\toParentApp: IAppInfoData,\n\t\toMetaModel: ODataMetaModel\n\t): IManifestCardData {\n\t\tconst manifestApp = manifest[\"sap.app\"];\n\t\tconst dataSources = manifestApp?.dataSources;\n\n\t\tconst mainServiceUri = dataSources?.mainService?.uri || \"\";\n\n\t\tconst lineItem = oInfo.lineItem as ILineItem[];\n\t\tconst entitySet = oInfo.entitySet;\n\t\tconst oEntitySet = oMetaModel.getODataEntitySet(entitySet) as IEntitySet;\n\t\tconst oEntityType = oMetaModel.getODataEntityType(oEntitySet?.entityType) as IEntityType;\n\t\tconst serviceUrl = `${mainServiceUri.replace(/\\/$/, \"\")}/${entitySet}`; // make '{mainServiceUri}/{entitySet}' format\n\n\t\t//get the column details for each of the lineitem columns\n\t\tconst aColumns = lineItem\n\t\t\t?.map((oColumn) => this._getColumnDetail(entitySet, oMetaModel, oColumn))\n\t\t\t.filter((oItem) => oItem !== undefined);\n\n\t\tconst oSelectExpand = this._getRelevantColumnPaths(aColumns);\n\t\t//get the complete select and expand parameters for url\n\t\tconst mParameters = this.getParameters(oInfo, oMetaModel, entitySet, oSelectExpand);\n\n\t\tconst urlSelectExpand = this.createCustomParams(mParameters);\n\t\tconst finalUrl = urlSelectExpand\n\t\t\t? `${serviceUrl}?$top=5&skip=0&${urlSelectExpand}&$inlinecount=allpages`\n\t\t\t: `${serviceUrl}?$top=5&skip=0`;\n\t\t//sort  the column based on their importance and then slice the first 4 columns\n\t\tconst aColumnSorted = (sortCollectionByImportance(aColumns) as IColumnData[])\n\t\t\t.map((column) => {\n\t\t\t\treturn {\n\t\t\t\t\tpath: column?.path,\n\t\t\t\t\ttype: column?.type,\n\t\t\t\t\tvalue: column?.value,\n\t\t\t\t\tidentifier: column?.identifier,\n\t\t\t\t\tstate: column?.state,\n\t\t\t\t\tshowStateIcon: column?.showStateIcon\n\t\t\t\t};\n\t\t\t})\n\t\t\t.slice(0, 4);\n\t\treturn {\n\t\t\tcardTitle: manifest?.[\"sap.app\"]?.title,\n\t\t\tsubTitle: oEntityType[UIAnnotations.CommonLabel] ? `Top 5 ${oEntityType[UIAnnotations.CommonLabel].String}` : \"\",\n\t\t\turl: finalUrl,\n\t\t\tsemanticObject: oParentApp?.semanticObject || \"\",\n\t\t\taction: oParentApp?.action || \"\",\n\t\t\tid: manifest?.[\"sap.app\"]?.id,\n\t\t\tcolumns: aColumnSorted,\n\t\t\tentitySet: entitySet\n\t\t};\n\t}\n\n\t/**\n\t * This function returns the column detail object for the given column's context\n\t * @param {string} entitySet - - The entity set name\n\t * @param {object} oMetaModel -  OData metamodel\n\t * @param {object} lineItemContext - The line item column context object\n\t * @returns {object} The column detail containing value, path, importance and type\n\t * @private\n\t */\n\tprivate _getColumnDetail(entitySet: string, oMetaModel: ODataMetaModel, lineItemContext: ILineItem) {\n\t\tlet oProperty;\n\t\tlet oEntitySet = oMetaModel.getODataEntitySet(entitySet) as IEntitySet;\n\t\tlet oEntityType = oMetaModel.getODataEntityType(oEntitySet.entityType) as IEntityType;\n\n\t\tif (lineItemContext.Value?.Path) {\n\t\t\toProperty = oMetaModel.getODataProperty(oEntityType, lineItemContext.Value.Path) as UIAnnotationValue;\n\t\t\tlet oPropertyHidden = oProperty[UIAnnotations.UIHidden];\n\n\t\t\t// if oProperty not hidden and oLineitemContext not hidden then only consider the column else return undefined\n\t\t\tif (oPropertyHidden?.Bool === \"true\" || oPropertyHidden?.Bool === true) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\t//check if lineItemContext is hidden or no oProperty is found\n\t\t\tif (this.isPropertyHidden(lineItemContext) || !oProperty || Object.keys(oProperty).length === 0) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\n\t\tlet oP13NDetails = this.createP13N(oEntitySet, oProperty, lineItemContext, oMetaModel);\n\t\toP13NDetails = oP13NDetails.replace(/\\\\/g, \"\"); // Remove the double backslashes\n\t\tlet columnDataObject = oP13NDetails ? (JSON.parse(oP13NDetails) as ColumnObjectData) : {};\n\n\t\tif (!this.isSupportedColumn(columnDataObject, lineItemContext, oMetaModel, oEntitySet)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (oProperty) {\n\t\t\tcolumnDataObject = this.getColumnObjectDetails(columnDataObject, oProperty, oEntityType, lineItemContext);\n\t\t\tif (lineItemContext?.[FieldAnnotationsType.Importance] !== undefined) {\n\t\t\t\tconst importance = lineItemContext[FieldAnnotationsType.Importance];\n\t\t\t\tcolumnDataObject.importance = importance;\n\t\t\t}\n\t\t}\n\n\t\treturn columnDataObject;\n\t}\n\n\t/**\n\t * Retrieves the column object details based on the provided property and entity type.\n\t *\n\t * @param {object} columnDataObject - The column information object to be populated.\n\t * @param {object} propertyDetails - The property object containing metadata about the column.\n\t * @param {object} entityType - The entity type object containing metadata about the entity.\n\t * @param {object} dataField - The data field object containing the lineitem column context object\n\t * @returns {object} The populated column information object.\n\t * @private\n\t */\n\tprivate getColumnObjectDetails(\n\t\tcolumnDataObject: ColumnObjectData,\n\t\tpropertyDetails: UIAnnotationValue,\n\t\tentityType: IEntityType,\n\t\tdataField: ILineItemContext\n\t) {\n\t\tlet sColumnKeyDescription = propertyDetails[UIAnnotations.CommonText]?.Path || \"\";\n\t\tsColumnKeyDescription = \"{\" + sColumnKeyDescription + \"}\";\n\t\tlet sColumnValue = propertyDetails.name ? \"{\" + propertyDetails.name + \"}\" : \"\";\n\t\tlet sNavigation = \"\";\n\t\tconst aSemKeyAnnotation = entityType[UIAnnotations.CommonSemanticKey];\n\t\tconst bIsPropertySemanticKey =\n\t\t\t!!aSemKeyAnnotation &&\n\t\t\taSemKeyAnnotation.some(function (oAnnotation) {\n\t\t\t\treturn oAnnotation.PropertyPath === propertyDetails.name;\n\t\t\t});\n\t\tlet bIsCriticality: boolean = false;\n\t\tlet criticalityAnnotation = undefined;\n\n\t\tif ((dataField?.Criticality && dataField?.Value?.Path) === propertyDetails.name) {\n\t\t\tcriticalityAnnotation = dataField;\n\t\t\tbIsCriticality = true;\n\t\t}\n\n\t\tif (propertyDetails[UIAnnotations.MeasuresISOCurrency]?.Path) {\n\t\t\tsColumnValue = sColumnValue.concat(\" \" + \"{\" + sNavigation + propertyDetails[UIAnnotations.MeasuresISOCurrency]?.Path + \"}\");\n\t\t}\n\t\tif (propertyDetails[UIAnnotations.MeasuresUnit]?.Path) {\n\t\t\tsColumnValue = sColumnValue.concat(\" \" + \"{\" + sNavigation + propertyDetails[UIAnnotations.MeasuresUnit]?.Path + \"}\");\n\t\t}\n\t\tif (propertyDetails[UIAnnotations.CommonText]?.Path) {\n\t\t\tlet sTextArragement = propertyDetails[UIAnnotations.CommonText]?.[UIAnnotations.UITextArrangement];\n\t\t\tif (!sTextArragement) {\n\t\t\t\tsTextArragement = entityType[UIAnnotations.UITextArrangement];\n\t\t\t}\n\t\t\tthis._setColumnTextValue(sTextArragement, columnDataObject, sColumnKeyDescription, sColumnValue);\n\t\t} else {\n\t\t\tcolumnDataObject[\"value\"] = sColumnValue;\n\t\t\tif (bIsPropertySemanticKey) {\n\t\t\t\tcolumnDataObject[\"identifier\"] = bIsPropertySemanticKey;\n\t\t\t}\n\t\t}\n\t\tif (bIsCriticality) {\n\t\t\tcolumnDataObject[\"state\"] = this.buildExpressionForCriticalityColor(criticalityAnnotation);\n\t\t\tcolumnDataObject[\"showStateIcon\"] =\n\t\t\t\tcriticalityAnnotation?.CriticalityRepresentation?.EnumMember !==\n\t\t\t\t\tFieldAnnotationsType.CriticalityRepresentationTypeWithoutIcon || true;\n\t\t}\n\t\tcolumnDataObject[\"path\"] = propertyDetails[UIAnnotations.CommonText]?.Path || propertyDetails.name;\n\t\tcolumnDataObject[\"type\"] = propertyDetails.type;\n\t\treturn columnDataObject;\n\t}\n\n\t/**\n\t * Build expression for the criticality annotation, kept same as the one used in LROP\n\t * @param {object} criticalityAnnotation - The criticality annotation object\n\t * @returns {string} The expression for the criticality color\n\t * @private\n\t */\n\tprivate buildExpressionForCriticalityColor(criticalityAnnotation?: ILineItemContext) {\n\t\tlet sFormatCriticalityExpression: CoreLib.ValueState | string = ValueState.None;\n\t\tlet sExpressionTemplate;\n\t\tlet oCriticalityProperty = criticalityAnnotation?.Criticality;\n\t\tenum CriticalityType {\n\t\t\tNegative = \"com.sap.vocabularies.UI.v1.CriticalityType/Negative\",\n\t\t\tCritical = \"com.sap.vocabularies.UI.v1.CriticalityType/Critical\",\n\t\t\tPositive = \"com.sap.vocabularies.UI.v1.CriticalityType/Positive\"\n\t\t}\n\t\tif (oCriticalityProperty) {\n\t\t\tsExpressionTemplate =\n\t\t\t\t\"'{'= ({0} === ''\" +\n\t\t\t\tCriticalityType.Negative +\n\t\t\t\t\"'') || ({0} === ''1'') || ({0} === 1) ? ''\" +\n\t\t\t\tValueState.Error +\n\t\t\t\t\"'' : \" +\n\t\t\t\t\"({0} === ''\" +\n\t\t\t\tCriticalityType.Critical +\n\t\t\t\t\"'') || ({0} === ''2'') || ({0} === 2) ? ''\" +\n\t\t\t\tValueState.Warning +\n\t\t\t\t\"'' : \" +\n\t\t\t\t\"({0} === ''\" +\n\t\t\t\tCriticalityType.Positive +\n\t\t\t\t\"'') || ({0} === ''3'') || ({0} === 3) ? ''\" +\n\t\t\t\tValueState.Success +\n\t\t\t\t\"'' : \" +\n\t\t\t\t\"''\" +\n\t\t\t\tValueState.None +\n\t\t\t\t\"'' '}'\";\n\t\t\tif (oCriticalityProperty?.Path) {\n\t\t\t\tconst sCriticalitySimplePath = \"${\" + oCriticalityProperty.Path + \"}\";\n\t\t\t\tsFormatCriticalityExpression = formatMessage(sExpressionTemplate, [sCriticalitySimplePath]);\n\t\t\t} else if (oCriticalityProperty?.EnumMember) {\n\t\t\t\tconst sCriticality = \"'\" + oCriticalityProperty.EnumMember + \"'\";\n\t\t\t\tsFormatCriticalityExpression = formatMessage(sExpressionTemplate, [sCriticality]);\n\t\t\t} else {\n\t\t\t\tLog.warning(\"Case not supported, returning the default sap.ui.core.ValueState.None\");\n\t\t\t}\n\t\t} else {\n\t\t\t// Any other cases are not valid, the default value of 'None' will be returned\n\t\t\tLog.warning(\"Case not supported, returning the default sap.ui.core.ValueState.None\");\n\t\t}\n\n\t\treturn sFormatCriticalityExpression;\n\t}\n\n\t/**\n\t * Sets display text format of column\n\t *\n\t * @private\n\t * @param {{EnumMember: string} | undefined} sTextArragement - sTextArragement object\n\t * @param { ColumnObjectData} columnDataObject - Object containing column details\n\t * @param {string} sColumnKeyDescription - Description field to include in text value\n\t * @param {string} sColumnValue - The value to include in Text value\n\t */\n\tprivate _setColumnTextValue(\n\t\tsTextArragement: { EnumMember: string } | undefined,\n\t\tcolumnDataObject: ColumnObjectData,\n\t\tsColumnKeyDescription: string,\n\t\tsColumnValue: string\n\t) {\n\t\tenum TextArrangementType {\n\t\t\tTextOnly = \"TextOnly\",\n\t\t\tTextLast = \"TextLast\",\n\t\t\tTextSeparate = \"TextSeparate\"\n\t\t}\n\t\tconst sTextArrangementType = sTextArragement?.EnumMember?.split(\"/\")[1];\n\t\tlet valueExpr;\n\n\t\tswitch (sTextArrangementType) {\n\t\t\tcase TextArrangementType.TextOnly:\n\t\t\t\tvalueExpr = `{= $${sColumnKeyDescription} === '' ? '' : $${sColumnKeyDescription} }`;\n\t\t\t\tbreak;\n\n\t\t\tcase TextArrangementType.TextLast:\n\t\t\t\tvalueExpr =\n\t\t\t\t\t`{= $${sColumnValue} === '' ? '' : $${sColumnValue} }` +\n\t\t\t\t\t`{= $${sColumnKeyDescription} === '' ? '' : ' (' + ($${sColumnKeyDescription}) + ')' }`;\n\t\t\t\tbreak;\n\n\t\t\tcase TextArrangementType.TextSeparate:\n\t\t\t\tvalueExpr = `{= $${sColumnValue} === '' ? '' : $${sColumnValue} }`;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tvalueExpr =\n\t\t\t\t\t`{= $${sColumnKeyDescription} === '' ? '' : $${sColumnKeyDescription} }` +\n\t\t\t\t\t`{= $${sColumnValue} === '' ? '' : ' (' + ($${sColumnValue}) + ')' }`;\n\t\t\t\tbreak;\n\t\t}\n\t\tcolumnDataObject[\"value\"] = valueExpr;\n\t}\n\n\t// get requestAtlLeastFields from PresentationVariant\n\tprivate _getRequestAtLeastFields(presentationVariant: IPresentationVariant): string[] | RequestAtleastFieldType[] | [] {\n\t\treturn presentationVariant && Array.isArray(presentationVariant.requestAtLeastFields)\n\t\t\t? presentationVariant.requestAtLeastFields\n\t\t\t: [];\n\t}\n\n\t/**\n\t * Creates a query string with custom parameters for OData requests.\n\t *\n\t * This method generates a query string containing `$expand` and `$select` parameters\n\t * based on the provided input object. The values are URL-encoded to ensure proper formatting.\n\t *\n\t * @param {object} mParameters - An object containing the parameters for the query string.\n\t * @param {string | undefined} mParameters.expand - The value for the `$expand` parameter, if any.\n\t * @param {string | undefined} mParameters.select - The value for the `$select` parameter, if any.\n\t * @returns {string} A query string containing the `$expand` and `$select` parameters, joined by `&`.\n\t * @private\n\t */\n\tprivate createCustomParams(mParameters: SelectExpandDetail): string {\n\t\tconst aCustomParams = [];\n\t\tif (mParameters?.expand) {\n\t\t\taCustomParams.push(\"$expand=\" + encodeURL(mParameters[\"expand\"]));\n\t\t}\n\t\tif (mParameters?.select) {\n\t\t\taCustomParams.push(\"$select=\" + encodeURL(mParameters[\"select\"]));\n\t\t}\n\t\treturn aCustomParams.join(\"&\");\n\t}\n\n\t/**\n\t * Retrieves an object from the OData meta model based on the given entity type and path.\n\t *\n\t * This method resolves the provided path to an absolute path if it is relative, using the entity type as the base.\n\t * It then retrieves the corresponding object from the meta model. Any \"@\" characters in the path are removed\n\t * to match the meta model's structure.\n\t *\n\t * @param {ODataMetaModel} metaModel - The OData meta model containing metadata about entities and annotations.\n\t * @param {string} entityTypeName - The entity type used as the base for resolving relative paths.\n\t * @param {string} path - The path to the object in the meta model. Can be relative or absolute.\n\t * @returns {IPresentationVariant | ILineItem[]} The object retrieved from the meta model, which can be a presentation variant or an array of nested objects.\n\t * @private\n\t */\n\tprivate getObject<T extends IPresentationVariant | ILineItem[]>(metaModel: ODataMetaModel, entityTypeName: string, path: string): T {\n\t\tif (path[0] !== \"/\") {\n\t\t\t// relative path - add path of annotation target, i.e. EntityType\n\t\t\tpath = (metaModel.getODataEntityType(entityTypeName, true) as string) + \"/\" + path; //*****check this */\n\t\t}\n\t\t// assumption: absolute paths in annotations are equal to corresponding paths in metaModel\n\t\t// any \"@\" are removed in the metaModel\n\t\treturn metaModel.getObject(path.replace(/@/g, \"\")) as T;\n\t}\n\n\t/**\n\t * Check If Page is List Report\n\t *\n\t * @param {object} page - page object\n\t * @returns {boolean} returns boolean\n\t * @private\n\t */\n\tpublic _isListReport(page?: IPageType): boolean {\n\t\treturn page?.component?.name === \"sap.suite.ui.generic.template.ListReport\";\n\t}\n\n\t/**\n\t * @param {IPageType[] | PageRecord} pages - pages object from manifest\n\t * @returns {ILrSettings} - returns the settings object for the ListReport\n\t */\n\tprivate getSettingsForPage(pages: IPageType[] | undefined | PageRecord): ILrSettings {\n\t\tif (!pages) {\n\t\t\treturn {};\n\t\t}\n\n\t\tlet lrSettings: ILrSettings = {};\n\n\t\t// Handling array and object structure in LR V2 manifest\n\t\tif (Array.isArray(pages) && this._isListReport(pages[0])) {\n\t\t\tconst listPage = pages[0];\n\t\t\tif (listPage?.component) {\n\t\t\t\tconst component = listPage.component;\n\t\t\t\tlrSettings = component?.settings || {};\n\t\t\t\tlrSettings.bSupressCardRowNavigation = this.shouldSuppressCardRowNavigation(listPage);\n\t\t\t}\n\t\t} else if (Object.keys(pages).length) {\n\t\t\tconst sListKey = Object.keys(pages).find((key) => this._isListReport((pages as PageRecord)[key] as IPageType));\n\t\t\tif (sListKey) {\n\t\t\t\tconst listPage = (pages as PageRecord)[sListKey] as IPageType;\n\n\t\t\t\tif (listPage?.component) {\n\t\t\t\t\tconst component = listPage.component;\n\t\t\t\t\tlrSettings = (component?.settings ?? {}) as ILrSettings;\n\t\t\t\t\tlrSettings.bSupressCardRowNavigation = this.shouldSuppressCardRowNavigation(listPage);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn lrSettings;\n\t}\n\n\t/**\n\t * Determines whether card row navigation should be suppressed for the card\n\t *\n\t * @param {IPageType} page - The ListReport page object from the manifest.\n\t * @returns {boolean} True if card row navigation should be suppressed\n\t */\n\tprivate shouldSuppressCardRowNavigation(listPage: IPageType): boolean {\n\t\t// LR only app or if external navigation from OP\n\t\tif (listPage.pages) {\n\t\t\t// If pages is an array, handle based on its length and navigation property\n\t\t\tif (Array.isArray(listPage.pages)) {\n\t\t\t\tif (listPage.pages.length === 0 || listPage.pages[0]?.navigation) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// If pages is an object, check if the object keys have navigation\n\t\t\t\tconst keys = Object.keys(listPage.pages);\n\t\t\t\tif (keys.length === 0 || (keys.length && (listPage.pages[keys[0]] as IPageType)?.navigation)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t//if no list pages return true\n\t\t\treturn true;\n\t\t}\n\n\t\t// Check for Quick variant selection X in settings\n\t\tif (listPage?.component?.settings?.quickVariantSelectionX) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @param {object} metaModel - metamodel object\n\t * @param {ILrSettings} ILrSettings - settings object from the manifest\n\t * @param {string} entitySetName - entity set of the application\n\t * @returns {object} - returns the normalized table settings\n\t * @private\n\t */\n\tprivate getNormalizedTableSettings(\n\t\tmetaModel: ODataMetaModel,\n\t\tlRVariantSettings: ILrSettings | IVariantSetting,\n\t\tentitySetName: string\n\t): ITableSettings {\n\t\tconst settings = deepExtend({}, lRVariantSettings) as ILrSettings;\n\n\t\t// 1. map boolean settings gridTable and treeTable to tableType\n\t\tif (settings && !settings.tableType) {\n\t\t\tif (settings.gridTable) {\n\t\t\t\tsettings.tableType = TABLE_TYPES.GRID;\n\t\t\t} else if (settings.treeTable) {\n\t\t\t\tsettings.tableType = TABLE_TYPES.TREE;\n\t\t\t}\n\t\t}\n\n\t\t// 2. map flat settings to structured ones\n\t\tsettings.tableSettings = settings.tableSettings || {};\n\t\tsettings.tableSettings.type = settings.tableSettings.type || settings.tableType;\n\n\t\tconst entitySet = metaModel.getODataEntitySet(entitySetName) as IEntitySet;\n\t\tconst entityTypeData = metaModel.getODataEntityType(entitySet.entityType) as IEntityType;\n\n\t\t// 3. determine type\n\t\tif (\n\t\t\tsettings.tableSettings.type !== TABLE_TYPES.STANDARD_LIST &&\n\t\t\tsettings.tableSettings.type !== TABLE_TYPES.OBJECT_LIST &&\n\t\t\tentitySetName\n\t\t) {\n\t\t\tsettings.tableSettings.type =\n\t\t\t\tsettings.tableSettings.type ||\n\t\t\t\t(entityTypeData[UIAnnotations.SapSemantics] === \"aggregate\" ? TABLE_TYPES.ANALYTICAL : TABLE_TYPES.RESPONSIVE);\n\t\t\tif (settings.tableSettings.type === TABLE_TYPES.ANALYTICAL && !(entityTypeData[UIAnnotations.SapSemantics] === \"aggregate\")) {\n\t\t\t\tsettings.tableSettings.type = TABLE_TYPES.GRID;\n\t\t\t}\n\t\t}\n\n\t\tif (entityTypeData[UIAnnotations.UIHeaderInfo]) {\n\t\t\tsettings.tableSettings.headerInfo = entityTypeData[UIAnnotations.UIHeaderInfo];\n\t\t}\n\n\t\t// 4. remove deprecated settings (to avoid new code to rely on them)\n\t\tdelete settings.gridTable;\n\t\tdelete settings.treeTable;\n\t\tdelete settings.tableType;\n\n\t\treturn settings.tableSettings;\n\t}\n\n\t/**\n\t * @param {object} metaModel - metamodel object\n\t * @param {string} entitySetName - entity set of the application\n\t * @param {object} tabItem - details of the variant tab\n\t * @returns {boolean} - returns true if the variant is a smart chart\n\t */\n\tprivate checkIfSmartChart(metaModel: ODataMetaModel, entitySetName: string, tabItem: IVariantSetting): boolean {\n\t\tlet entitySetData = metaModel.getODataEntitySet(entitySetName) as IEntitySet;\n\t\tlet entityTypeData = metaModel.getODataEntityType(entitySetData.entityType) as IEntityType;\n\t\tlet annotationName, annotationPath, variantData;\n\t\tannotationPath = tabItem.annotationPath;\n\t\t//variantData = !!annotationPath && (entityTypeData[annotationPath] as VariantInfo);\n\t\tvariantData = annotationPath ? (entityTypeData[annotationPath] as VariantInfo) : undefined;\n\n\t\tif (variantData?.PresentationVariant) {\n\t\t\t// oVariant is SelectionPresentationVariant\n\t\t\tif (variantData.PresentationVariant.Visualizations) {\n\t\t\t\tannotationName = variantData.PresentationVariant.Visualizations[0].AnnotationPath;\n\t\t\t} else if (variantData.PresentationVariant.Path) {\n\t\t\t\tlet sPresentationVariantPath = variantData.PresentationVariant.Path.split(\"@\")[1];\n\t\t\t\tlet oPresentationVariantAnnotation =\n\t\t\t\t\tsPresentationVariantPath && (entityTypeData[sPresentationVariantPath] as IPresentationVariant);\n\t\t\t\tannotationName = oPresentationVariantAnnotation ? oPresentationVariantAnnotation?.Visualizations?.[0].AnnotationPath : \"\";\n\t\t\t}\n\t\t} else if (variantData?.Visualizations) {\n\t\t\t// oVariant is PresentationVariant\n\t\t\tannotationName = variantData.Visualizations[0].AnnotationPath;\n\t\t}\n\n\t\treturn !!((annotationName ?? \"\").indexOf(UIAnnotations.UIChart) > -1);\n\t}\n\n\t/**\n\t * function returns true if the passed entityset / properties have mandatory properties\n\t *\n\t * @param {EntitySet} entitySetData - Entity set\n\t * @param {Array} propertiesSet - Additional Properties\n\t * @returns {boolean} returns boolean\n\t * @private\n\t */\n\tpublic hasMandatoryProperties(entitySetData?: IEntitySet, propertiesSet?: Property[]): boolean {\n\t\t// if entityset has required properties in filter restrictions return true\n\t\tif (entitySetData?.[\"Org.OData.Capabilities.V1.FilterRestrictions\"]?.[\"RequiredProperties\"]?.length) {\n\t\t\treturn true;\n\t\t} else if (propertiesSet?.length) {\n\t\t\t// iterate through all properties and return true if any property is mandatory or sap:rquired-in-filter is true\n\t\t\treturn propertiesSet.some((propertyDetail: Record<string, string> | Property) => {\n\t\t\t\treturn (\n\t\t\t\t\tObject.keys(propertyDetail).length &&\n\t\t\t\t\t((propertyDetail as UIAnnotationValue)[\"sap:parameter\"] === \"mandatory\" ||\n\t\t\t\t\t\t(propertyDetail as UIAnnotationValue)[\"sap:required-in-filter\"] === \"true\")\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Check if sEntitySet has association with parameterised entityset and if it has give parametersised entityset parameters\n\t * @param {object} metaModel OData MetaModel\n\t * @param {string} entitySetName of the EntitySet which has Parameter Entityset in association.\n\t * @param {boolean} infoParamsRequired If the full info of parameters is needed or only the name of params is needed.\n\t * @return {ParameterisedEntity} Contains name of Parameter EntitySet, keys of Parameter EntitySet and Name of Navigation property.\n\t * @private\n\t */\n\tpublic _getParametersisedEntitySetParams(\n\t\tmetaModel: ODataMetaModel,\n\t\tentitySetName: string,\n\t\tinfoParamsRequired: boolean\n\t): ParameterisedEntity {\n\t\tif (!metaModel) {\n\t\t\tthrow new Error(\"OData Model needs to be passed as an argument\");\n\t\t}\n\t\tconst oResult: ParameterisedEntity = { entitySetName: null, parameters: [], navPropertyName: null };\n\t\tconst entitySetData = metaModel.getODataEntitySet(entitySetName) as IEntitySet;\n\t\tconst entityTypeData = metaModel.getODataEntityType(entitySetData.entityType) as IEntityType;\n\t\tconst aNavigationProperties = entityTypeData.navigationProperty;\n\n\t\tif (!aNavigationProperties) {\n\t\t\treturn oResult;\n\t\t}\n\n\t\t// filter the parameter entityset for extracting it's key and it's entityset name\n\t\taNavigationProperties.forEach(function (oNavProperty) {\n\t\t\tconst oNavigationEntitySet = metaModel.getODataAssociationEnd(entityTypeData, oNavProperty.name);\n\t\t\tconst oNavigationEntityType = oNavigationEntitySet && (metaModel.getODataEntityType(oNavigationEntitySet.type) as IEntityType);\n\n\t\t\tif (oNavigationEntityType?.[UIAnnotations.SapSemantics] !== \"parameters\" || !oNavigationEntityType.key) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\toResult.entitySetName = metaModel.getODataAssociationSetEnd(entityTypeData, oNavProperty.name)?.entitySet;\n\t\t\tfor (let value of oNavigationEntityType.key.propertyRef) {\n\t\t\t\tif (infoParamsRequired) {\n\t\t\t\t\tconst navProp = oNavigationEntityType.property as Property[];\n\t\t\t\t\tfor (let navProperty of navProp) {\n\t\t\t\t\t\tif (navProperty.name === value.name) {\n\t\t\t\t\t\t\toResult.parameters.push(navProperty);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toResult.parameters.push(value.name);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst aSubNavigationProperties = oNavigationEntityType.navigationProperty;\n\t\t\t// Parameter entityset must have association back to main entityset.\n\t\t\tconst bBackAssociationPresent = aSubNavigationProperties?.some(function (oSubNavigationProperty) {\n\t\t\t\tconst sSubNavigationEntityType = metaModel.getODataAssociationEnd(\n\t\t\t\t\toNavigationEntityType,\n\t\t\t\t\toSubNavigationProperty?.name\n\t\t\t\t)?.type;\n\t\t\t\t//if entityset.entitytype is same as subnavigation entitytype then it's a back association\n\t\t\t\toResult.navPropertyName = sSubNavigationEntityType === entitySetData.entityType ? oSubNavigationProperty?.name : null;\n\t\t\t\treturn oResult.navPropertyName;\n\t\t\t});\n\n\t\t\treturn bBackAssociationPresent && oResult.navPropertyName && oResult.entitySetName;\n\t\t});\n\t\treturn oResult;\n\t}\n\n\t/**\n\t * This function check if a lineitem annotation column is visible or not\n\t * @param {object} lineItemAnnotations - The column details object\n\t * @returns {Boolean} The column visibility status {true/false}\n\t * @private\n\t */\n\tprivate isPropertyHidden(lineItemAnnotations: ILineItemContext): boolean {\n\t\tlet oFieldControl = lineItemAnnotations[UIAnnotations.CommonFieldControl];\n\t\tlet uiHidden = lineItemAnnotations[UIAnnotations.UIHidden];\n\n\t\t// Check for FieldControl Hidden\n\t\tif (oFieldControl?.EnumMember === FieldAnnotationsType.FieldControlHiddenType) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Check for UI Hidden\n\t\tif (uiHidden) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(uiHidden, \"Bool\")) {\n\t\t\t\treturn uiHidden?.Bool === \"true\";\n\t\t\t} else if (Object.prototype.hasOwnProperty.call(uiHidden, \"Path\")) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn true; // <Annotation Term=\"UI.Hidden\"/>\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates a P13N  string for a given entity set, property, and line item column.\n\t *\n\t * @param {Object} contextSet - The entity set object.\n\t * @param {Object} contextProp - The property details from metadata.\n\t * @param {Object} columnDataField - The line item column data field.\n\t * @param {Object} metaModel - The metadata model object.\n\t * @returns {string} The P13N string for the specified entity set and property.\n\t * @private\n\t */\n\tprivate createP13N(\n\t\tcontextSet: IEntitySet,\n\t\tcontextProp?: Property | UIAnnotationValue,\n\t\tcolumnDataField?: ILineItemContext,\n\t\tmetaModel?: ODataMetaModel\n\t): string {\n\t\tlet p13nDetails: string = \"\";\n\t\tlet additionalProperties: string[] = [];\n\t\tlet navigationPath: string = \"\";\n\t\tlet recordType = columnDataField?.RecordType;\n\t\tlet dataFieldValue = columnDataField?.Value as ExtendedLineItemContextValue;\n\t\tlet valuePath: string = dataFieldValue?.Path || \"\";\n\n\t\tif (\n\t\t\trecordType === FieldAnnotationsType.DataField ||\n\t\t\trecordType === FieldAnnotationsType.DataFieldForAnnotation ||\n\t\t\trecordType === FieldAnnotationsType.DataFieldWithUrl\n\t\t) {\n\t\t\tif (valuePath) {\n\t\t\t\tlet columnKey = this.createP13NColumnKey(columnDataField as ILineItemContext);\n\t\t\t\tp13nDetails = '\\\\{\"columnKey\":\"' + columnKey + '\", \"leadingProperty\":\"' + valuePath;\n\t\t\t\tnavigationPath = this.getNavigationPrefixPath(metaModel as ODataMetaModel, contextSet, valuePath);\n\t\t\t} else if (dataFieldValue?.Apply?.Name === \"odata.concat\") {\n\t\t\t\tdataFieldValue?.Apply?.Parameters.forEach(function (parameterDetails) {\n\t\t\t\t\tif (parameterDetails.Type === \"Path\") {\n\t\t\t\t\t\tif (!p13nDetails) {\n\t\t\t\t\t\t\tp13nDetails = '\\\\{\"columnKey\":\"' + parameterDetails?.Value + '\", \"leadingProperty\":\"' + parameterDetails?.Value;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tadditionalProperties.push(parameterDetails.Value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Append type information and additional properties\n\t\t\tp13nDetails += this.processAdditionalProperties(\n\t\t\t\tcontextProp as UIAnnotationValue,\n\t\t\t\tcolumnDataField as ILineItemContext,\n\t\t\t\tnavigationPath,\n\t\t\t\tadditionalProperties\n\t\t\t);\n\t\t\tif (recordType === FieldAnnotationsType.DataFieldWithUrl && columnDataField?.Url) {\n\t\t\t\tthis.processDataFieldWithUrl(columnDataField, additionalProperties);\n\t\t\t}\n\t\t\tif (p13nDetails && additionalProperties.length) {\n\t\t\t\tp13nDetails += '\", \"additionalProperty\":\"' + additionalProperties.join();\n\t\t\t}\n\t\t\tif (p13nDetails) {\n\t\t\t\tp13nDetails += '\"\\\\}';\n\t\t\t}\n\t\t}\n\t\treturn p13nDetails;\n\t}\n\n\t//process DataFieldUrl properties and add them to additionalProperties\n\tprivate processDataFieldWithUrl(columnDataField: ILineItemContext, additionalProperties: string[]): void {\n\t\tconst oDataFieldUrl = columnDataField.Url;\n\t\tif (oDataFieldUrl?.Apply?.Parameters) {\n\t\t\toDataFieldUrl.Apply.Parameters.forEach((oParameter) => {\n\t\t\t\tif (oParameter.Type === \"LabeledElement\" && oParameter.Value?.Path) {\n\t\t\t\t\tadditionalProperties.push(oParameter.Value.Path);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tif (oDataFieldUrl?.Path) {\n\t\t\tadditionalProperties.push(oDataFieldUrl.Path);\n\t\t}\n\t}\n\n\t/**\n\t * Creates a personalized column key based on the provided data field.\n\t * @param {Object} oDataField - The data field object containing metadata for generating the column key.\n\t * @returns {string} The generated column key based on the data field.\n\t */\n\tprivate createP13NColumnKey(dataFieldColumn: ILineItemContext): string {\n\t\tlet columnKeyName = \"\",\n\t\t\tfioriTemplatePrefix = \"template\",\n\t\t\tseperatorNotation = \"::\";\n\t\tlet recordType = dataFieldColumn.RecordType;\n\t\tlet dataFieldValue = dataFieldColumn?.Value;\n\t\tlet dataFieldSemanticObject = dataFieldColumn.SemanticObject?.String || \"\";\n\t\tlet dataFieldActionString = dataFieldColumn.Action?.String || \"\";\n\t\tlet dataFieldPath = dataFieldValue?.Path || \"\";\n\t\tlet annotationPath: string | undefined = \"\",\n\t\t\tisRelevantAnnotation = null;\n\t\tlet buildKey = function (parts: string[]) {\n\t\t\treturn fioriTemplatePrefix + seperatorNotation + parts.join(seperatorNotation);\n\t\t};\n\n\t\tswitch (recordType) {\n\t\t\tcase FieldAnnotationsType.DataField:\n\t\t\t\tcolumnKeyName = dataFieldPath;\n\t\t\t\tbreak;\n\n\t\t\tcase FieldAnnotationsType.DataFieldWithIntentBasedNavigation:\n\t\t\t\tcolumnKeyName = buildKey([\n\t\t\t\t\tFieldTypes.DataFieldWithIntentBasedNavigation,\n\t\t\t\t\tdataFieldSemanticObject,\n\t\t\t\t\tdataFieldActionString,\n\t\t\t\t\tdataFieldPath\n\t\t\t\t]);\n\t\t\t\tbreak;\n\n\t\t\tcase FieldAnnotationsType.DataFieldWithNavigationPath:\n\t\t\t\tcolumnKeyName = buildKey([FieldTypes.DataFieldWithNavigationPath, dataFieldPath]);\n\t\t\t\tbreak;\n\n\t\t\tcase FieldAnnotationsType.DataFieldForIntentBasedNavigation:\n\t\t\t\tcolumnKeyName = buildKey([FieldTypes.DataFieldForIntentBasedNavigation, dataFieldSemanticObject, dataFieldActionString]);\n\t\t\t\tbreak;\n\n\t\t\tcase FieldAnnotationsType.DataFieldForAction:\n\t\t\t\tcolumnKeyName = buildKey([FieldTypes.DataFieldForAction, dataFieldActionString]);\n\t\t\t\tbreak;\n\n\t\t\tcase FieldAnnotationsType.DataFieldForAnnotation:\n\t\t\t\tannotationPath = dataFieldColumn.Target?.AnnotationPath;\n\n\t\t\t\tisRelevantAnnotation =\n\t\t\t\t\tannotationPath &&\n\t\t\t\t\t(annotationPath.indexOf(FieldAnnotationsType.Contact) >= 0 ||\n\t\t\t\t\t\tannotationPath.indexOf(FieldAnnotationsType.DataPoint) >= 0 ||\n\t\t\t\t\t\tannotationPath.indexOf(FieldAnnotationsType.FieldGroup) >= 0 ||\n\t\t\t\t\t\tannotationPath.indexOf(FieldAnnotationsType.Chart) >= 0);\n\t\t\t\tif (isRelevantAnnotation) {\n\t\t\t\t\tcolumnKeyName = buildKey([FieldTypes.DataFieldForAnnotation, annotationPath as string]);\n\t\t\t\t\t//since DataFieldForAnnotation can contain an @ and this is not working with SmartTable.prototype._addTablePersonalisationToToolbar, it is removed\n\t\t\t\t\tcolumnKeyName = columnKeyName.replace(\"@\", \"\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t// Handle cases where the RecordType does not match any of the known types\n\t\t\t\tcolumnKeyName = \"\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn columnKeyName;\n\t}\n\n\t/**\n\t * Retrieves the navigation prefix path for a given entity type and value path.\n\t *\n\t * @param {object} oMetaModel - The meta model object.\n\t * @param {object} oContextSet - The context set object containing the entity type.\n\t * @param {string} sPath - The value path for which the navigation prefix is needed.\n\t * @returns {string} The navigation prefix path.\n\t */\n\tprivate getNavigationPrefixPath(oMetaModel: ODataMetaModel, oContextSet: IEntitySet, sPath: string): string {\n\t\tlet sNavigation = \"\";\n\t\tif (oMetaModel) {\n\t\t\tlet oEntityType = oMetaModel.getODataEntityType(oContextSet.entityType) as IEntityType;\n\t\t\tif (oEntityType) {\n\t\t\t\tsNavigation = this._getNavigationPrefix(oMetaModel, oEntityType, sPath);\n\t\t\t\tif (sNavigation) {\n\t\t\t\t\tsNavigation += \"/\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn sNavigation;\n\t}\n\n\t/**\n\t * Retrieves the navigation prefix for a given property within an entity type.\n\t * @param {Object} metaModel - The metadata model object.\n\t * @param {Object} entityTypeData - The entity type object.\n\t * @param {string} propertyName - The property path for which the navigation prefix is to be determined.\n\t * @returns {string} The navigation prefix for the specified property.\n\t */\n\tprivate _getNavigationPrefix(metaModel: ODataMetaModel, entityTypeData: IEntityType, propertyName: string): string {\n\t\tlet expandName = \"\";\n\t\tlet propertyParts = propertyName.split(\"/\");\n\n\t\tif (propertyParts.length > 1) {\n\t\t\tfor (let i = 0; i < propertyParts.length - 1; i++) {\n\t\t\t\tlet associationEndData = metaModel.getODataAssociationEnd(entityTypeData, propertyParts[i]);\n\t\t\t\tif (!associationEndData) {\n\t\t\t\t\treturn expandName;\n\t\t\t\t}\n\t\t\t\tif (associationEndData) {\n\t\t\t\t\tentityTypeData = metaModel.getODataEntityType(associationEndData.type) as IEntityType;\n\t\t\t\t\texpandName += (expandName ? \"/\" : \"\") + propertyParts[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn expandName;\n\t}\n\n\t/**\n\t * Processes additional properties for a given context property and data field.\n\t *\n\t * This method analyzes the provided context property and data field to extract additional properties\n\t * such as criticality, text annotations, unit annotations, and field control paths. It also determines\n\t * the type of the property (e.g., date, string) and appends this information to the P13N string.\n\t *\n\t * @param {UIAnnotationValue} oContextProp - The context property object containing metadata about the property.\n\t * @param {ILineItemContext} oDataField - The data field object containing line item metadata.\n\t * @param {string} sNavigationPath - The navigation path to be prefixed to certain properties.\n\t * @param {string[]} aAdditionalProperties - An array to which additional property paths will be added.\n\t * @returns {string} A P13N string containing additional property details such as type and unit.\n\t * @private\n\t */\n\tprivate processAdditionalProperties(\n\t\toContextProp: UIAnnotationValue,\n\t\toDataField: ILineItemContext,\n\t\tsNavigationPath: string,\n\t\taAdditionalProperties: string[]\n\t): string {\n\t\tlet additionalP13N = \"\";\n\n\t\t// Check for DateTime type with specific display format\n\t\tif (oContextProp?.type === \"Edm.DateTime\" && oContextProp?.[\"sap:display-format\"] === \"Date\") {\n\t\t\tadditionalP13N += '\", \"type\":\"date';\n\t\t} else if (oContextProp?.type === \"Edm.String\") {\n\t\t\tadditionalP13N += '\", \"type\":\"string';\n\t\t}\n\n\t\t// Add Criticality property if available\n\t\tif (oDataField?.Criticality?.Path) {\n\t\t\taAdditionalProperties.push(oDataField?.Criticality.Path);\n\t\t}\n\t\tlet oContextCommonText = oContextProp?.[UIAnnotations.CommonText];\n\n\t\t// Add Text annotation property if available\n\t\tif (oContextCommonText?.Path) {\n\t\t\taAdditionalProperties.push(sNavigationPath + oContextCommonText?.Path);\n\t\t}\n\n\t\t// Add Unit annotation property if available\n\t\tconst oUnitAnnotation = oContextProp\n\t\t\t? oContextProp[UIAnnotations.MeasuresISOCurrency] || oContextProp[UIAnnotations.MeasuresUnit]\n\t\t\t: null;\n\t\tif (oUnitAnnotation?.Path) {\n\t\t\taAdditionalProperties.push(oUnitAnnotation.Path);\n\t\t\tadditionalP13N += '\", \"unit\":\"' + oUnitAnnotation.Path;\n\t\t}\n\t\t// Add FieldControl property if available\n\t\tif (oContextProp?.[UIAnnotations.CommonFieldControl]?.Path) {\n\t\t\taAdditionalProperties.push(sNavigationPath + oContextProp[UIAnnotations.CommonFieldControl].Path);\n\t\t}\n\n\t\treturn additionalP13N;\n\t}\n\n\t/**\n\t * Determines whether a column is supported for card creation.\n\t *\n\t * This method checks conditions to determine if a column is eligible for inclusion in a card,\n\t * conditions are kept similar to RT cards restrictions in V2 LR.\n\t *\n\t * @param {Record<string, string>} columnDataObject - The column data object containing metadata about the column.\n\t * @param {ILineItemContext} dataFieldDetails - The data field object containing line item metadata.\n\t * @param {ODataMetaModel} metaModel - The OData meta model containing metadata about entities and properties.\n\t * @param {IEntitySet} entitySetData - The entity set to which the column belongs.\n\t * @returns {boolean} `true` if the column is supported for card creation, otherwise `false`.\n\t * @private\n\t */\n\tprivate isSupportedColumn(\n\t\tcolumnDataObject: ColumnObjectData,\n\t\tdataFieldDetails: ILineItemContext,\n\t\tmetaModel: ODataMetaModel,\n\t\tentitySetData: IEntitySet\n\t): boolean {\n\t\tlet sRecordType = dataFieldDetails.RecordType;\n\t\tif (\n\t\t\tsRecordType === FieldAnnotationsType.DataFieldForAnnotation ||\n\t\t\tsRecordType === FieldAnnotationsType.DataFieldForAction ||\n\t\t\tsRecordType === FieldAnnotationsType.DataFieldForIntentBasedNavigation ||\n\t\t\t!columnDataObject\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\tlet entityType = metaModel.getODataEntityType(entitySetData.entityType) as IEntityType;\n\t\tlet propertyDetails = metaModel.getODataProperty(entityType, columnDataObject.leadingProperty!) as UIAnnotationValue;\n\t\tlet columnKeyName = columnDataObject.columnKey;\n\n\t\tif (\n\t\t\tthis.checkMultiplicityForDataFieldAssociation(metaModel, entitySetData, dataFieldDetails) ||\n\t\t\t(columnKeyName &&\n\t\t\t\t(columnKeyName.indexOf(FieldTypes.DataFieldForAnnotation) > -1 ||\n\t\t\t\t\tcolumnKeyName.indexOf(FieldTypes.DataFieldForAction) > -1 ||\n\t\t\t\t\tcolumnKeyName.indexOf(FieldTypes.DataFieldForIntentBasedNavigation) > -1 ||\n\t\t\t\t\tpropertyDetails?.[UIAnnotations.UIIsImageURL]?.Bool === \"true\"))\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Checks the multiplicity of a data field's association in the OData model.\n\t *\n\t * This method verifies whether the association for a given data field has a multiplicity of `*` (many).\n\t * It traverses the navigation path of the data field to determine the multiplicity of the associated entity.\n\t *\n\t * @param {ODataMetaModel} metaModel - The OData meta model containing entity and association metadata.\n\t * @param {IEntitySet} entitySetData - The entity set to which the data field belongs.\n\t * @param {ILineItemContext} dataFieldValue - The data field whose association multiplicity is to be checked.\n\t * @returns {boolean} `true` if the association has a multiplicity of `*`, otherwise `false`.\n\t * @private\n\t */\n\tprivate checkMultiplicityForDataFieldAssociation(\n\t\tmetaModel: ODataMetaModel,\n\t\tentitySetData: IEntitySet,\n\t\tdataFieldValue: ILineItemContext\n\t): boolean {\n\t\tif (dataFieldValue?.Value?.Path) {\n\t\t\tlet dataFieldValuePath = dataFieldValue.Value.Path;\n\t\t\tlet entityTypeData = metaModel && (metaModel.getODataEntityType(entitySetData.entityType) as IEntityType);\n\t\t\tlet associationData: AssociationEnd | null | undefined;\n\t\t\tif (!(dataFieldValuePath.indexOf(\"/\") > -1) || !entityTypeData) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\twhile (dataFieldValuePath.indexOf(\"/\") > -1) {\n\t\t\t\t//if complex path exists then check for multiplicity\n\t\t\t\tlet navigationPropertyPath = dataFieldValuePath.split(\"/\")[0];\n\t\t\t\tdataFieldValuePath = dataFieldValuePath.split(\"/\").slice(1).join(\"/\");\n\t\t\t\tentityTypeData = (metaModel.getODataEntityType((associationData as AssociationEnd)?.type) as IEntityType) || entityTypeData;\n\t\t\t\tassociationData = metaModel.getODataAssociationEnd(entityTypeData, navigationPropertyPath) as AssociationEnd;\n\t\t\t}\n\t\t\tif (associationData && associationData.multiplicity === \"*\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"utils"}},{"offset":{"line":436,"column":0},"map":{"version":3,"names":["sap","ui","define","Formatting","Log","NavigationHandler","SelectionVariant","DateFormat","NumberFormat","ODataModel","dateFormatter","decimalFormatter","situationsModel","_getDateFormatter","datePattern","getDatePattern","getDateInstance","pattern","_getNumberFormatter","getFloatInstance","decimalSeparator","getNumberSymbol","groupingSeparator","groupingEnabled","getSituationMessage","rawText","params","arguments","length","undefined","split","composedText","replaceAll","forEach","param","SitnInstceAttribName","attributeSource","SitnInstceAttribSource","paramName","matchedAttributes","_InstanceAttributeValue","reduce","attribute","push","formattedValues","attributeMatched","rawVal","SitnInstceAttribValue","trim","formattedVal","SitnInstceAttribEntityType","format","parse","endsWith","substring","Number","join","executeNavigation","oData","ownerComponent","Promise","resolve","reject","navigationHandler","oSelectionVariant","_NavigationParam","map","SituationNotifParamName","addSelectOption","SituationNotifParameterVal","sNavigationParameters","toJSONString","navigate","SitnSemanticObject","SitnSemanticObjectAction","error","fetchNavigationTargetData","instanceId","situationEngineType","oContextBindingNavigation","_getSituationsModel","bindContext","$expand","$select","requestObject","SitnInstanceID","Error","message","serviceUrl","__exports","__esModule"],"sources":["SituationUtils.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Formatting from \"sap/base/i18n/Formatting\";\nimport Log from \"sap/base/Log\";\nimport NavigationHandler from \"sap/fe/navigation/NavigationHandler\";\nimport SelectionVariant from \"sap/fe/navigation/SelectionVariant\";\nimport Component from \"sap/ui/core/Component\";\nimport DateFormat from \"sap/ui/core/format/DateFormat\";\nimport NumberFormat from \"sap/ui/core/format/NumberFormat\";\nimport ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\n\nexport interface InstanceAttribute {\n\tSitnInstceKey: string;\n\tSitnInstceAttribName: string;\n\tSitnInstceAttribSource: string;\n\tSitnInstceAttribEntityType: string;\n\t_InstanceAttributeValue: InstanceAttributeValue[];\n}\n\nexport interface InstanceAttributeValue {\n\tSitnInstceKey: string;\n\tSitnInstceAttribName: string;\n\tSitnInstceAttribSource: string;\n\tSitnInstceAttribValue: string;\n}\n\nexport interface NavigationData {\n\tSitnInstanceID: string;\n\tSitnSemanticObject: string;\n\tSitnSemanticObjectAction: string;\n\t_NavigationParam: NavigationParam[];\n}\n\ninterface NavigationParam {\n\tSituationNotifParamName: string;\n\tSituationNotifParameterVal: string;\n}\n\nlet dateFormatter: DateFormat;\nlet decimalFormatter: NumberFormat;\nlet situationsModel!: ODataModel;\n\n/**\n * Gets the date formatter instance using the medium date pattern.\n *\n * @returns {DateFormat} The date formatter instance.\n */\nconst _getDateFormatter = (): DateFormat => {\n\tif (!dateFormatter) {\n\t\tconst datePattern = Formatting.getDatePattern(\"medium\") || \"dd/MM/yyyy\";\n\t\tdateFormatter = DateFormat.getDateInstance({ pattern: datePattern });\n\t}\n\n\treturn dateFormatter;\n};\n\n/**\n * Gets the number formatter instance using the settings retrieved from Configuration.\n *\n * @returns {NumberFormat} The number formatter instance.\n */\nconst _getNumberFormatter = (): NumberFormat => {\n\tif (!decimalFormatter) {\n\t\tdecimalFormatter = NumberFormat.getFloatInstance({\n\t\t\tdecimalSeparator: Formatting.getNumberSymbol(\"decimal\") || \".\",\n\t\t\tgroupingSeparator: Formatting.getNumberSymbol(\"group\") || \",\",\n\t\t\tgroupingEnabled: true\n\t\t});\n\t}\n\n\treturn decimalFormatter;\n};\n\n/**\n * Compose the situation message by replacing placeholders with formatted parameter values.\n *\n * @private\n * @param {string} rawText - The raw text containing placeholders.\n * @param {InstanceAttribute[]} params - An array of parameters to replace in the text.\n * @returns {string} The composed text with replaced placeholders.\n */\nexport const getSituationMessage = (rawText: string, params: InstanceAttribute[] = []): string => {\n\tif (!rawText?.split) {\n\t\treturn rawText;\n\t}\n\n\tlet composedText = rawText.replaceAll(\"\\n\", \" \");\n\n\tparams.forEach((param) => {\n\t\tif (param.SitnInstceAttribName?.length > 0) {\n\t\t\tconst attributeSource = `0${param.SitnInstceAttribSource}`;\n\t\t\tconst paramName = `${attributeSource}.${param.SitnInstceAttribName}`;\n\t\t\tconst matchedAttributes = param._InstanceAttributeValue.reduce(function (matchedAttributes, attribute) {\n\t\t\t\tif (\n\t\t\t\t\tattribute.SitnInstceAttribSource === param.SitnInstceAttribSource &&\n\t\t\t\t\tattribute.SitnInstceAttribName === param.SitnInstceAttribName\n\t\t\t\t) {\n\t\t\t\t\tmatchedAttributes.push(attribute);\n\t\t\t\t}\n\n\t\t\t\treturn matchedAttributes;\n\t\t\t}, [] as InstanceAttributeValue[]);\n\n\t\t\tconst formattedValues: string[] = [];\n\t\t\tmatchedAttributes.forEach((attributeMatched) => {\n\t\t\t\tlet rawVal = attributeMatched?.SitnInstceAttribValue?.trim() || \"\";\n\t\t\t\tlet formattedVal;\n\n\t\t\t\tswitch (param.SitnInstceAttribEntityType) {\n\t\t\t\t\tcase \"Edm.DateTime\":\n\t\t\t\t\t\tformattedVal = _getDateFormatter().format(_getDateFormatter().parse(rawVal));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Edm.Decimal\":\n\t\t\t\t\t\t// If the parameter string ends with a minus sign, move it to the first position\n\t\t\t\t\t\tif (rawVal.endsWith(\"-\")) {\n\t\t\t\t\t\t\trawVal = `-${rawVal.substring(0, rawVal.length - 1)}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tformattedVal = _getNumberFormatter().format(Number(rawVal));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tformattedVal = rawVal;\n\t\t\t\t}\n\n\t\t\t\tformattedValues.push(formattedVal);\n\t\t\t});\n\n\t\t\t// Replace placeholders with formatted values\n\t\t\tcomposedText = composedText.split(`{${paramName}}`).join(formattedValues.join(\", \"));\n\t\t}\n\t});\n\n\treturn composedText;\n};\n\n/**\n * Executes navigation based on provided data.\n *\n * @private\n * @param {NavigationData} oData - Data object containing navigation parameters.\n * @param {Component} ownerComponent - The owner component initiating the navigation.\n * @returns {Promise<void>} A promise that resolves or rejects based on the navigation result.\n */\nexport function executeNavigation(oData: NavigationData, ownerComponent: Component): Promise<void> {\n\treturn new Promise((resolve, reject) => {\n\t\t//@ts-expect-error: params\n\t\tconst navigationHandler = new NavigationHandler(ownerComponent);\n\t\tconst oSelectionVariant = new SelectionVariant();\n\t\toData._NavigationParam?.map(function (param) {\n\t\t\tif (param.SituationNotifParamName) {\n\t\t\t\toSelectionVariant.addSelectOption(param.SituationNotifParamName, \"I\", \"EQ\", param.SituationNotifParameterVal);\n\t\t\t}\n\t\t});\n\t\tconst sNavigationParameters = oSelectionVariant.toJSONString();\n\t\tnavigationHandler.navigate(\n\t\t\toData.SitnSemanticObject,\n\t\t\toData.SitnSemanticObjectAction,\n\t\t\tsNavigationParameters,\n\t\t\tresolve,\n\t\t\t(error: unknown) => reject(error as Error)\n\t\t);\n\t});\n}\n\n/**\n * Fetches navigation target data based on the provided instance ID.\n *\n * @private\n * @async\n * @param {string} instanceId - The instance ID for which to fetch navigation data.\n * @param {string} situationEngineType - Situation Engine Type\n * @returns {Promise<NavigationData>} A promise that resolves with an object containing navigation data.\n */\nexport function fetchNavigationTargetData(instanceId: string, situationEngineType: string): Promise<NavigationData> | undefined {\n\ttry {\n\t\tif (situationEngineType === \"1\") {\n\t\t\tconst oContextBindingNavigation = _getSituationsModel().bindContext(`/Navigation/${instanceId}`, undefined, {\n\t\t\t\t$expand: { _NavigationParam: { $select: [\"SituationNotifParamName\", \"SituationNotifParameterVal\"] } },\n\t\t\t\t$select: [\"SitnInstanceID\", \"SitnSemanticObject\", \"SitnSemanticObjectAction\"]\n\t\t\t});\n\t\t\treturn oContextBindingNavigation.requestObject();\n\t\t} else {\n\t\t\treturn Promise.resolve({\n\t\t\t\tSitnInstanceID: instanceId,\n\t\t\t\tSitnSemanticObject: \"SituationInstance\",\n\t\t\t\tSitnSemanticObjectAction: \"display\",\n\t\t\t\t_NavigationParam: [\n\t\t\t\t\t{\n\t\t\t\t\t\tSituationNotifParamName: \"ui-type\",\n\t\t\t\t\t\tSituationNotifParameterVal: \"extended\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tSituationNotifParamName: \"SitnInstceKey\",\n\t\t\t\t\t\tSituationNotifParameterVal: instanceId\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t});\n\t\t}\n\t} catch (error: unknown) {\n\t\tLog.error(error instanceof Error ? error.message : \"\");\n\t}\n}\n\n/**\n * Retrieves the Situations model. If the model does not exist, it creates a new one.\n *\n * @private\n * @returns {ODataModel} The Situations model instance.\n */\nfunction _getSituationsModel(): ODataModel {\n\tif (!situationsModel) {\n\t\tsituationsModel = new ODataModel({\n\t\t\tserviceUrl: \"/sap/opu/odata4/sap/a_sitn2mblinstce_v4/srvd/sap/a_sitn2mblinstce_srv/0002/\"\n\t\t});\n\t}\n\treturn situationsModel;\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"utils"}},{"offset":{"line":441,"column":0},"map":{"version":3,"names":["sap","ui","define","Log","Formatting","sap_m_library","Locale","DateFormat","_catch","body","recover","result","e","then","_fetchUserInfo","originId","userId","Promise","resolve","fetch","response","ok","Error","json","_response$json","d","data","userInfo","error","message","String","reject","Priority","TaskPriority","getTaskUrl","instanceId","targetAppUrl","taskInstanceURL","fetchUserDetails","Object","keys","includes","_isValidDate","dateString","length","year","parseInt","slice","month","day","date","Date","getFullYear","getMonth","getDate","_getParsedTime","time","NaN","dateRegex","yyyymmddRegex","isoRegex","dateMatch","match","test","parsedDate","getDateInstance","parse","getTime","isoMatch","formatDate","dateStr","pattern","arguments","undefined","getDatePattern","locale","getLanguageTag","language","dateFormat","getDateTimeInstance","value","formattedDate","isNaN","format","getPriority","priority","VERY_HIGH","VeryHigh","None","HIGH","High","MEDIUM","Medium","LOW","Low","__exports","__esModule"],"sources":["TaskUtils.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport Formatting from \"sap/base/i18n/Formatting\";\nimport { Priority } from \"sap/m/library\";\nimport Locale from \"sap/ui/core/Locale\";\nimport DateFormat from \"sap/ui/core/format/DateFormat\";\nimport { Response } from \"../ToDoPanel\";\n\ninterface UserInfo {\n\tEmail?: string;\n}\n\nexport enum TaskPriority {\n\tVERY_HIGH = \"VERY_HIGH\",\n\tHIGH = \"HIGH\",\n\tMEDIUM = \"MEDIUM\",\n\tLOW = \"LOW\"\n}\n\nconst userInfo: Record<string, UserInfo> = {};\n\n/**\n * Get the task URL for a given task.\n *\n * @private\n * @param {string} originId - The origin ID of the task.\n * @param {string} instanceId - The instance ID of the task.\n * @returns {string} The task URL.\n */\nexport function getTaskUrl(originId: string, instanceId: string, targetAppUrl: string): string {\n\tconst taskInstanceURL = `?showAdditionalAttributes=true&/detail/${originId}/${instanceId}/TaskCollection(SAP__Origin='${originId}',InstanceID='${instanceId}')`;\n\n\treturn targetAppUrl + taskInstanceURL;\n}\n\n/**\n * Fetches user details if required.\n *\n * @private\n * @param {string} originId - The origin ID.\n * @param {string} userId - The user ID.\n * @returns {Promise<UserInfo>} - A promise that resolves to the user information.\n */\nexport function fetchUserDetails(originId: string, userId: string): Promise<UserInfo> {\n\tif (Object.keys(userInfo).includes(userId)) {\n\t\treturn Promise.resolve(userInfo[userId]);\n\t} else {\n\t\treturn _fetchUserInfo(originId, userId);\n\t}\n}\n\n/**\n * Fetches user information for a specific user.\n *\n * @private\n * @param {string} originId - The origin ID.\n * @param {string} userId - The user ID.\n * @returns {Promise<UserInfo>} - A promise that resolves to the user information.\n */\nasync function _fetchUserInfo(originId: string, userId: string): Promise<UserInfo> {\n\ttry {\n\t\tconst response = await fetch(\n\t\t\t`/sap/opu/odata/IWPGW/TASKPROCESSING;mo;v=2/UserInfoCollection(SAP__Origin='${originId}',UniqueName='${userId}')?$format=json`\n\t\t);\n\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(`Failed to Fetch User Info for: ${userId}`);\n\t\t}\n\n\t\tconst { d: data } = (await response.json()) as Response;\n\t\tuserInfo[userId] = data as UserInfo;\n\t\treturn userInfo[userId];\n\t} catch (error: unknown) {\n\t\tLog.error(error instanceof Error ? error.message : String(error));\n\t\treturn {};\n\t}\n}\n\n/**\n * Check whether given dateString is of format YYYYMMDD and is a valid value for Date object.\n *\n * @param {string} dateString - The datestring to be checked for validity\n * @returns {Date} if its a valid date return the date else false\n * @private\n */\nfunction _isValidDate(dateString: string): boolean {\n\t// Check if the input has the correct length\n\tif (dateString.length !== 8) {\n\t\treturn false;\n\t}\n\n\t// Parse the date components\n\tconst year = parseInt(dateString.slice(0, 4), 10);\n\tconst month = parseInt(dateString.slice(4, 6), 10) - 1;\n\tconst day = parseInt(dateString.slice(6), 10);\n\n\t// Create a Date object with the parsed components\n\tconst date = new Date(year, month, day);\n\n\t// Check if the parsed date is valid\n\treturn date.getFullYear() === year && date.getMonth() === month && date.getDate() === day;\n}\n\n/**\n * Parses different time formats supplied from the back-ends. It returns UNIX time stamp in milliseconds.\n * If Time Format contains unexpected symbols or Format is not recognized NaN is returned.\n * Referenced from: cross.fnd.fiori.inbox.CustomAttributeComparator\n *\n * @param {string | number} time date format to be parsed. If int UNIX time stamp in milliseconds is assumed.\n * @returns {number} UNIX time stamp in milliseconds. (milliseconds that have elapsed since 00:00:00 UTC, Thursday, 1 January 1970)\n * @private\n */\nfunction _getParsedTime(time: string | number): number {\n\tif (time == null || time === \"00000000\") {\n\t\treturn NaN;\n\t}\n\n\tif (typeof time === \"number\") {\n\t\treturn time;\n\t}\n\n\t// Check for various time formats\n\tconst dateRegex = /\\/(Date)\\((\\d+)\\)\\//;\n\tconst yyyymmddRegex = /^\\d{8}$/;\n\tconst isoRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|([+-])(\\d{2}):(\\d{2}))?$/;\n\n\tconst dateMatch = time.match(dateRegex);\n\tif (dateMatch) {\n\t\t// Time Format \"/Date(869080830000)/\"\n\t\treturn parseInt(dateMatch[2], 10);\n\t}\n\n\tif (yyyymmddRegex.test(time) && _isValidDate(time)) {\n\t\t// Time Format \"YYYYMMDD\" (Old TGW format)\n\t\tconst parsedDate = DateFormat.getDateInstance().parse(time);\n\t\treturn parsedDate instanceof Date ? parsedDate.getTime() : NaN;\n\t}\n\n\tconst isoMatch = time.match(isoRegex);\n\tif (isoMatch) {\n\t\t// Time Format \"2018-01-05T00:00:00\" (BPM and TGW-cloud format, UTC)\n\t\treturn new Date(time).getTime();\n\t}\n\n\treturn NaN;\n}\n\n/**\n * Format a date string to a custom date and time format.\n *\n * @private\n * @param {string} dateStr - The date string to format.\n * @param {string} pattern - The pattern to be used for formatting the date.\n * @returns {string} The formatted date string.\n */\nexport function formatDate(dateStr: string, pattern: string = Formatting.getDatePattern(\"short\") || \"dd/MM/yyyy\"): string {\n\tconst locale = new Locale(Formatting.getLanguageTag().language);\n\tconst dateFormat = DateFormat.getDateTimeInstance({ pattern }, locale);\n\tconst value = _getParsedTime(dateStr);\n\tlet formattedDate = \"\";\n\n\tif (!isNaN(value)) {\n\t\tformattedDate = dateFormat.format(new Date(value));\n\t}\n\n\treturn formattedDate;\n}\n\n/**\n * Convert a priority string to a corresponding priority value.\n *\n * @private\n * @param {TaskPriority} priority - The task priority string.\n * @returns {string} The corresponding priority value.\n */\nexport function getPriority(priority: TaskPriority): Priority {\n\tif (priority === TaskPriority.VERY_HIGH) {\n\t\treturn Priority.VeryHigh ? Priority.VeryHigh : Priority.None;\n\t} else if (priority === TaskPriority.HIGH) {\n\t\treturn Priority.High;\n\t} else if (priority === TaskPriority.MEDIUM) {\n\t\treturn Priority.Medium;\n\t} else if (priority === TaskPriority.LOW) {\n\t\treturn Priority.Low;\n\t} else {\n\t\treturn Priority.None;\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"utils"}},{"offset":{"line":446,"column":0},"map":{"version":3,"names":["sap","ui","define","BaseObject","Container","UShellPersonalizer","extend","constructor","_constructor","persContainerId","oOwnerComponent","BaseObject.prototype.constructor.call","this","init","_init","_this","Promise","resolve","getServiceAsync","then","oPersonalizationService","oScope","keyCategory","constants","FIXED_KEY","writeFrequency","LOW","clientStorageAllowed","oPersId","container","item","oPersonalizer","getPersonalizer","e","reject","write","_write","oData","_this2","setPersData","read","_read","_this3","getPersData","oCacheInstances","getInstance","UShellPersonalizerInstance"],"sources":["UshellPersonalizer.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport BaseObject from \"sap/ui/base/Object\";\nimport Container from \"sap/ushell/Container\";\nimport { IAppPersonalization } from \"../interface/AppsInterface\";\nimport { IPage } from \"../interface/PageSpaceInterface\";\n\ninterface IPersonalizer {\n\tgetPersData: () => Promise<IPersonalizationData>;\n\tsetPersData: (oData: object) => Promise<void>;\n}\n\nexport interface IPersonalizationData {\n\toAdaptationData?: { showCustomNewsFeed: boolean; customNewsFeedKey: string };\n\tfavNewsFeed?: { items: string[]; showAllPreparationRequired?: boolean };\n\tdefaultNewsFeed?: { items: string[] };\n\tfavouritePages?: IPage[] | [];\n\tfavoriteApps?: IAppPersonalization[];\n\tshowRecommendation?: boolean;\n}\n\n/**\n *\n * Provides the UshellPersonalizer Class used for fetch and update end user (Ushell) personalisation.\n *\n * @extends sap.ui.BaseObject\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121.0\n *\n * @private\n * @experimental Since 1.121\n * @hidden\n *\n * @alias sap.cux.home.utils.UshellPersonalizer\n */\nexport default class UShellPersonalizer extends BaseObject {\n\tprivate persContainerId: string;\n\tprivate oOwnerComponent: object;\n\tprivate oPersonalizer!: IPersonalizer;\n\tstatic oCacheInstances: { [key: string]: UShellPersonalizer } = {};\n\n\tprivate constructor(persContainerId: string, oOwnerComponent: object) {\n\t\tsuper();\n\t\tthis.persContainerId = persContainerId;\n\t\tthis.oOwnerComponent = oOwnerComponent;\n\t}\n\n\tstatic async getInstance(persContainerId: string, oOwnerComponent: object) {\n\t\tif (UShellPersonalizer.oCacheInstances[persContainerId]) {\n\t\t\treturn Promise.resolve(UShellPersonalizer.oCacheInstances[persContainerId]);\n\t\t}\n\t\tconst UShellPersonalizerInstance = new UShellPersonalizer(persContainerId, oOwnerComponent);\n\t\tawait UShellPersonalizerInstance.init();\n\t\tUShellPersonalizer.oCacheInstances[persContainerId] = UShellPersonalizerInstance;\n\t\treturn UShellPersonalizer.oCacheInstances[persContainerId];\n\t}\n\n\tpublic async init() {\n\t\tconst oPersonalizationService: {\n\t\t\t\tconstants: {\n\t\t\t\t\tkeyCategory: { FIXED_KEY: string };\n\t\t\t\t\twriteFrequency: { LOW: string };\n\t\t\t\t};\n\t\t\t\tgetPersonalizer: (id: { container: string; item: string }, oScope: object, oOwnerComponent: object) => IPersonalizer;\n\t\t\t} = await Container.getServiceAsync(\"Personalization\"),\n\t\t\toScope = {\n\t\t\t\tkeyCategory: oPersonalizationService?.constants?.keyCategory?.FIXED_KEY,\n\t\t\t\twriteFrequency: oPersonalizationService?.constants?.writeFrequency?.LOW,\n\t\t\t\tclientStorageAllowed: true\n\t\t\t},\n\t\t\toPersId = {\n\t\t\t\tcontainer: this.persContainerId,\n\t\t\t\titem: \"settings\"\n\t\t\t};\n\t\tthis.oPersonalizer = oPersonalizationService?.getPersonalizer(oPersId, oScope, this.oOwnerComponent);\n\t}\n\n\tpublic async write(oData: IPersonalizationData) {\n\t\tawait this.oPersonalizer?.setPersData(oData);\n\t\treturn \"success\";\n\t}\n\tpublic async read(): Promise<IPersonalizationData> {\n\t\tconst oData = await this.oPersonalizer.getPersData();\n\t\treturn oData;\n\t}\n}\n"],"mappings":"AAAA;;;;AAAAA,IAAAC,GAAAC,mDAAA,uDAAAC,EAAAC,GAAA,aAuBA,MAgBqBC,EAA2BF,EAAUG,OAAA,yCAMjDC,YAAW,SAAAC,EAACC,EAAyBC,GAC5CC,6BAAAC,MACAA,KAAKH,gBAAkBA,EACvBG,KAAKF,gBAAkBA,CACxB,EAYaG,KAAI,SAAAC,IAAA,IAAG,MAAAC,EAcNH,KAAI,OAAAI,QAAAC,QAPNb,EAAUc,gBAAgB,oBAAkBC,KAAA,SANjDC,GAAN,MAOCC,EAAS,CACRC,YAAaF,GAAyBG,WAAWD,aAAaE,UAC9DC,eAAgBL,GAAyBG,WAAWE,gBAAgBC,IACpEC,qBAAsB,MAEvBC,EAAU,CACTC,UAAWd,EAAKN,gBAChBqB,KAAM,YAERf,EAAKgB,cAAgBX,GAAyBY,gBAAgBJ,EAASP,EAAQN,EAAKL,gBAAiB,EACtG,CAAC,MAAAuB,GAAA,OAAAjB,QAAAkB,OAAAD,EAAA,GAEYE,MAAK,SAAAC,EAACC,GAA2B,IAAE,MAAAC,EACzC1B,KAAI,OAAAI,QAAAC,QAAJqB,EAAKP,eAAeQ,YAAYF,IAAMlB,KAAA,WAC5C,MAAO,SAAU,EAClB,CAAC,MAAAc,GAAA,OAAAjB,QAAAkB,OAAAD,EAAA,GACYO,KAAI,SAAAC,IAAA,IAAkC,MAAAC,EAC9B9B,KAAI,OAAAI,QAAAC,QAAJyB,EAAKX,cAAcY,cAExC,CAAC,MAAAV,GAAA,OAAAjB,QAAAkB,OAAAD,EAAA,KAjDmB5B,EAIbuC,gBAAyD,CAAC,EAJ7CvC,EAYPwC,YAAW,SAAXA,EAAYpC,EAAyBC,GAAuB,IACxE,GAAIL,EAAmBuC,gBAAgBnC,GAAkB,CACxD,OAAOO,QAAQC,QAAQZ,EAAmBuC,gBAAgBnC,GAC3D,CACA,MAAMqC,EAA6B,IAAIzC,EAAmBI,EAAiBC,GAAiB,OAAAM,QAAAC,QACtF6B,EAA2BjC,QAAMM,KAAA,WACvCd,EAAmBuC,gBAAgBnC,GAAmBqC,EACtD,OAAOzC,EAAmBuC,gBAAgBnC,EAAiB,EAC5D,CAAC,MAAAwB,GAAA,OAAAjB,QAAAkB,OAAAD,EAAA,UApBmB5B,CAAkB","ignoreList":[],"sourceRoot":"utils"}},{"offset":{"line":451,"column":0},"map":{"version":3,"names":[],"sources":["library-preload.js?bundle-code-0"],"mappings":"AAAA;AACA","sourcesContent":["sap.ui.require.preload({\n"],"sourceRoot":""}},{"offset":{"line":453,"column":0},"map":{"version":3,"file":"AppsInterface.js","names":[],"sources":[],"mappings":"AAAA","ignoreList":[],"sourceRoot":"interface"}},{"offset":{"line":456,"column":0},"map":{"version":3,"file":"KeyUserInterface.js","names":[],"sources":[],"mappings":"AAAA","ignoreList":[],"sourceRoot":"interface"}},{"offset":{"line":459,"column":0},"map":{"version":3,"file":"LayoutInterface.js","names":[],"sources":[],"mappings":"AAAA","ignoreList":[],"sourceRoot":"interface"}},{"offset":{"line":462,"column":0},"map":{"version":3,"file":"PageSpaceInterface.js","names":[],"sources":[],"mappings":"AAAA","ignoreList":[],"sourceRoot":"interface"}}]}