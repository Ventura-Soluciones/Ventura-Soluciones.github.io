{"version":3,"file":"NewsPanel.js","names":["sap","ui","define","Log","GenericTile","SlideTile","EventBus","DateFormat","XMLModel","Container","__BaseNewsPanel","__MenuItem","__NewsGroup","__NewsItem","___library","___utils_Constants","___utils_DataFormatUtils","___utils_Device","___utils_FESRUtil","__HttpHelper","__PersonalisationUtils","__UshellPersonalizer","_interopRequireDefault","obj","__esModule","default","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","BaseNewsPanel","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","_for","test","update","body","stage","shouldContinue","updateValue","reject","_resumeAfterTest","_resumeAfterBody","_resumeAfterUpdate","MenuItem","_catch","recover","NewsGroup","NewsItem","NewsType","DEFAULT_NEWS_URL","recycleId","DeviceType","addFESRId","HttpHelper","PersonalisationUtils","UshellPersonalizer","BASE_URL","NEWS_FEED_READ_API","NEWS_FEED_TRANSLATION_API","DEFAULT_FEED_COUNT","fnImagePlaceholder","sPath","N","Array","from","length","i","CUSTOM_NEWS_FEED","TITLE","LINK","VALIDITY","PREPARATION_REQUIRED","EXCLUDE_FIELDS","IMAGE_URL","FESR_STEP_NAME","EMPTY_DATA_ERROR_CODE","CUSTOM_IMAGES","Finance","Manufacturing","Sales","NewsPanel","extend","metadata","library","properties","url","type","group","defaultValue","visibility","RSS","customFeedKey","customFileName","showCustom","newsAvailable","supportedFileFormats","aggregations","newsGroup","singularName","multiple","constructor","_constructor","id","settings","BaseNewsPanel.prototype.constructor.call","_defaultNewsPromise","customNewsFeedCache","Map","init","_init","BaseNewsPanel.prototype.init.call","oNewsTile","getId","displayTime","width","height","tiles","mode","frameType","addStyleClass","getNewsWrapper","addContent","setProperty","_i18nBundle","getText","_eventBus","getInstance","oManageMenuItem","title","icon","press","handleEditNews","addAggregation","defaultNewsEnabled","isURLParamEnabled","setUrl","_isURLParamEnabled","paramName","urlParams","URLSearchParams","window","location","search","get","toUpperCase","getData","_getData","_temp7","_temp5","fireEvent","adjustLayout","_temp4","sUrl","getProperty","Promise","resolve","initializeXmlModel","_this$initializeXmlMo","oNewsModel","setModel","setVisible","_temp3","bNewsLoad","setCustomNewsFeed","_temp2","sCustomNewsFeedKey","getCustomFeedKey","_temp","handleFeedError","getUrl","mandatoryNewsFeed","_temp6","favNewsFeed","setFavNewsFeed","getCurrentNewsGroup","_getCurrentNewsGroup","aValues","_defaultNews","aGroupId","split","groupId","currentGroup","find","oGroup","group_id","_getCustomFeedKey","_getUrl","_initializeXmlModel","_this2","oParent","getParent","setDefaultBindingMode","attachRequestCompleted","oEvent","panelLoadedFn","loaded","count","oDocument","getSource","loadNewsFeed","publish","showError","date","Date","attachRequestFailed","_loadNewsFeed","noOfFeeds","_this3","_temp9","querySelector","oBindingInfo","path","destroyAggregation","bindNewsTile","_temp8","extractAllImageUrls","_handleFeedError","generateErrorMessage","setURL","_setURL","_this4","_adjustLayout","getDeviceType","Mobile","setHeight","setWidth","removeStyleClass","_bindNewsTile","oSlideTile","getBinding","bindAggregation","templateShareable","factory","sId","oContext","newsInfo","getObject","oTile","getElementsByTagName","textContent","subTitle","imageUrl","footer","formatDate","sGroupId","newsId","subTitleNews","getTile","_extractAllImageUrls","_this5","_temp10","oItemElement","extractImage","oImageUrl","createElement","appendChild","_formatDate","timeStamp","relativeDateFormatter","getDateTimeInstance","style","relative","relativeStyle","format","getFavNewsFeed","_getFavNewsFeed","_extractImage","sHrefLink","fnLoadPlaceholderImage","sPrefix","require","toUrl","image","fetch","res","text","sHTML","aMatches","match","isArray","catch","isCSVFileFormat","_isCSVFileFormat","fileName","pop","toLowerCase","_setFavNewsFeed","defaultFeed","_this6","_getUserPersonalization","personalizer","read","persData","defaultNewsFeed","_setCustomNewsFeed","sFeedId","_this7","_temp12","aFeeds","Error","items","filter","oNewsFeed","includes","loadCustomNewsFeed","showAllPrepRequired","showAllPreparationRequired","push","_temp11","getCustomNewsFeed","_this7$getCustomNewsF","_this7$getCustomNewsF2","err","error","filterMandatoryNews","_filterMandatoryNews","newsGroups","isTopLevelMandatory","mandatory_text","isAnyArticleMandatory","_group_to_article","some","article","getDefaultNewsFeedDetails","_getDefaultNewsFeedDetails","newsResponse","aNews","JSON","parse","stringify","aDefaultNews","oDefaultFeedDict","map","oFeed","description","footer_text","getDefaultFeedImage","getMandatoryDefaultNewsFeed","_getMandatoryDefaultNewsFeed","getDefaultNewsResponse","_getDefaultNewsResponse","fetchDefaultNews","_fetchDefaultNews","_this8","response","ok","status","json","_response$json","_getCustomNewsFeed","_this9","aDefaultgroups","getCustomFeedData","_getCustomFeedData","_this10","newsDetailUrl","getNewsFeedDetailsUrl","changeId","has","set","getAuthNewsFeed","_this10$customNewsFee","authorizedNewsFeeds","oFeedDict","forEach","getCustomFeedImage","_getNewsFeedDetailsUrl","oNews","_getAuthNewsFeed","sNewsUrl","newsTitle","_this11","all","getAllAvailableApps","getNewsFeedDetails","_ref","aAvailableApps","aNewsFeed","arrangeNewsFeeds","_arrangeNewsFeeds","aAuthNewsFeed","Category","ImpactedArtifacts","aImpactedArtifacts","impactedArtifact","oImpactedArtifact","isAuthFeed","_isAuthFeed","fioriIdSplitter","aTokens","sFioriId","trim","index","findIndex","oApp","signature","parameters","_getAllAvailableApps","getServiceAsync","oService","_oAdapter","_aInbounds","message","_getNewsFeedDetails","_exit","_this12","_temp14","_result3","fnFormattedLabel","sLabel","replace","GetJSON","getTranslatedText","_ref2","translationResponse","aTranslation","filterNewsOnTitle","aFields","Object","keys","aExpandFields","oField","oTranslatedField","oTranslation","ColumnName","oTranslatedFieldName","TranslatedName","label","Link","expanded","expandFields","_temp13","newsFeedDetails","_this12$filterNewsOnT","_filterNewsOnTitle","newsDetail","LineOfBusiness","_getTranslatedText","_loadCustomNewsFeed","feeds","feedType","_this13","oXMLResponse","parseJsonToXml","unbindAggregation","setData","_parseJsonToXml","_transformJsonForXml","aData","data","item","_jsonToXml","xml","key","transformedJson","rootToken","replaceAll","parser","DOMParser","parseFromString","_getCustomFeedImage","sFileName","sFileBasePath","sFilePath","files","randomIndex","randomArray","Uint32Array","crypto","getRandomValues","_getDefaultFeedImage","imgId","bg_image_id","groupImg","_group_to_image","image_id","mimeType","mime_type","groupBgImg","bg_image","isValidBase64","base64Data","base64UrlToBase64","_base64UrlToBase","base64Url","base64","_isValidBase","input","base64Regex","paddingIndex","indexOf","lastPaddingIndex","lastIndexOf","persContainerId","getPersContainerId","ownerComponent","getOwnerComponent"],"sources":["NewsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport GenericTile from \"sap/m/GenericTile\";\nimport SlideTile from \"sap/m/SlideTile\";\nimport { FrameType } from \"sap/m/library\";\nimport Event from \"sap/ui/base/Event\";\nimport Component from \"sap/ui/core/Component\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport DateFormat from \"sap/ui/core/format/DateFormat\";\nimport Context from \"sap/ui/model/Context\";\nimport XMLModel from \"sap/ui/model/xml/XMLModel\";\nimport Container from \"sap/ushell/Container\";\nimport type { $BaseNewsPanelSettings } from \"./BaseNewsPanel\";\nimport BaseNewsPanel from \"./BaseNewsPanel\";\nimport MenuItem from \"./MenuItem\";\nimport NewsAndPagesContainer from \"./NewsAndPagesContainer\";\nimport NewsGroup from \"./NewsGroup\";\nimport NewsItem from \"./NewsItem\";\nimport { NewsType } from \"./library\";\nimport { DEFAULT_NEWS_URL } from \"./utils/Constants\";\nimport { recycleId } from \"./utils/DataFormatUtils\";\nimport { DeviceType } from \"./utils/Device\";\nimport { addFESRId } from \"./utils/FESRUtil\";\nimport HttpHelper from \"./utils/HttpHelper\";\nimport PersonalisationUtils from \"./utils/PersonalisationUtils\";\nimport UshellPersonalizer from \"./utils/UshellPersonalizer\";\n\ninterface IBindingInfo {\n\tpath: string;\n\tlength: number;\n}\n\ninterface INewsResponse {\n\tvalue: ICustomNewsFeed[];\n}\n\nexport interface ICustomNewsFeed {\n\ttitle: string;\n\tsubTitle?: string;\n\tdescription?: string;\n\tfooter_text?: Record<string, string>;\n\tmandatory_text?: string;\n\t_group_to_image?: Record<string, string>;\n\t_group_to_article?: ICustomNewsFeed[];\n\t[key: string]: unknown;\n}\n\nexport interface INewsItem {\n\tchangeId: string;\n\ttitle?: string;\n\tshowAllPreparationRequired?: boolean;\n}\n\ninterface ITranslatedText {\n\tColumnName?: string;\n\tTranslatedName?: string;\n}\n\ninterface IAppConfiguration {\n\t_oAdapter: {\n\t\t_aInbounds: IAvailableApp[];\n\t};\n}\n\ninterface ODataResponse {\n\t\"@odata.context\": string;\n\t\"@odata.metadataEtag\": string;\n\tvalue: ICustomNewsFeed[];\n}\n\ninterface IAvailableApp {\n\tsemanticObject?: string;\n\taction?: string;\n\tid?: string;\n\ttitle?: string;\n\tpermanentKey?: string;\n\tcontentProviderId?: string;\n\tresolutionResult?: {\n\t\t[key: string]: string;\n\t};\n\tdeviceTypes?: {\n\t\t[key: string]: boolean;\n\t};\n\tsignature: {\n\t\tparameters: {\n\t\t\t[key: string]: IAppParameter;\n\t\t};\n\t\tadditionalParameters?: string;\n\t};\n}\n\ninterface IAppParameter {\n\tdefaultValue?: {\n\t\tvalue: string;\n\t\tformat: string;\n\t};\n\trequired: boolean;\n}\ninterface IFavNewsFeed {\n\titems: string[];\n\tshowAllPreparationRequired?: boolean;\n}\nexport interface INewsLink {\n\t[key: string]: string;\n}\n\nexport interface INewsParam {\n\t[key: string]: { [key: string]: string };\n}\n\nexport type FileFormat = \"xlsx\" | \"csv\";\n\nconst BASE_URL = \"/sap/opu/odata4/ui2/insights_srv/srvd/ui2/\",\n\tNEWS_FEED_READ_API = BASE_URL + \"insights_read_srv/0001/\" + \"NEWS_FEED\",\n\tNEWS_FEED_TRANSLATION_API = BASE_URL + \"insights_read_srv/0001/\" + \"NewsFeedColumnTranslation\",\n\tDEFAULT_FEED_COUNT = 7,\n\tfnImagePlaceholder = function (sPath: string, N: number) {\n\t\treturn Array.from({ length: N }, function (v, i) {\n\t\t\treturn sPath + \"/\" + (i + 1) + \".jpg\";\n\t\t});\n\t};\n\nconst CUSTOM_NEWS_FEED = {\n\t\tTITLE: \"LineOfBusiness\",\n\t\tLINK: \"WhatsNewDocument\",\n\t\tVALIDITY: \"ValidAsOf\",\n\t\tPREPARATION_REQUIRED: \"PreparationRequired\",\n\t\tEXCLUDE_FIELDS: [\n\t\t\t\"ChangeId\",\n\t\t\t\"LineNumber\",\n\t\t\t\"LineOfBusiness\",\n\t\t\t\"SolutionArea\",\n\t\t\t\"Title\",\n\t\t\t\"Description\",\n\t\t\t\"Type\",\n\t\t\t\"ValidAsOf\",\n\t\t\t\"WhatsNewDocument\",\n\t\t\t\"Link\"\n\t\t],\n\t\tIMAGE_URL: \"sap/cux/home/img/CustomNewsFeed/\",\n\t\tFESR_STEP_NAME: \"custNewsSlide-press\",\n\t\tEMPTY_DATA_ERROR_CODE: \"NODATA\"\n\t},\n\tCUSTOM_IMAGES: { [key: string]: string[] } = {\n\t\t\"Application Platform and Infrastructure\": fnImagePlaceholder(\"ApplicationPlatformandInfrastructure\", 3),\n\t\t\"Asset Management\": fnImagePlaceholder(\"AssetManagement\", 3),\n\t\t\"Cross Applications\": fnImagePlaceholder(\"CrossApplications\", 3),\n\t\tFinance: fnImagePlaceholder(\"Finance\", 3),\n\t\tManufacturing: fnImagePlaceholder(\"Manufacturing\", 3),\n\t\t\"R&D / Engineering\": fnImagePlaceholder(\"RnDandEngineering\", 3),\n\t\tSales: fnImagePlaceholder(\"Sales\", 3),\n\t\t\"Sourcing and Procurement\": fnImagePlaceholder(\"SourcingandProcurement\", 3),\n\t\t\"Supply Chain\": fnImagePlaceholder(\"SupplyChain\", 3),\n\t\tdefault: [\"default.jpg\"]\n\t};\n\n/**\n *\n * Panel class for managing and storing News.\n *\n * @extends sap.cux.home.BaseNewsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @public\n *\n * @alias sap.cux.home.NewsPanel\n */\nexport default class NewsPanel extends BaseNewsPanel {\n\tprivate oNewsTile!: SlideTile;\n\tprivate oNewsModel!: XMLModel;\n\tprivate oManageMenuItem!: MenuItem;\n\tprivate image!: number;\n\tprivate customNewsFeedCache: Map<string, unknown>;\n\tprivate bNewsLoad!: boolean;\n\tprivate favNewsFeed!: IFavNewsFeed;\n\tprivate _eventBus!: EventBus;\n\tprivate _defaultNews!: ODataResponse;\n\tprivate mandatoryNewsFeed!: string[];\n\tprivate _defaultNewsPromise: Promise<ODataResponse> | null = null;\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * The URL of the news item.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\turl: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * Type of the news item.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\ttype: {\n\t\t\t\ttype: \"sap.cux.home.NewsType\",\n\t\t\t\tgroup: \"Misc\",\n\t\t\t\tvisibility: \"public\",\n\t\t\t\tdefaultValue: NewsType.RSS\n\t\t\t},\n\t\t\t/**\n\t\t\t * The key of custom news feed.\n\t\t\t *\n\t\t\t * @private\n\t\t\t */\n\t\t\tcustomFeedKey: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * The filename of custom news feed.\n\t\t\t *\n\t\t\t * @private\n\t\t\t */\n\t\t\tcustomFileName: { type: \"string\", group: \"Misc\", defaultValue: \"\" },\n\t\t\t/**\n\t\t\t * The flag for custom news feed is checked or not.\n\t\t\t *\n\t\t\t * @private\n\t\t\t */\n\t\t\tshowCustom: { type: \"boolean\", group: \"Misc\", defaultValue: false },\n\t\t\t/**\n\t\t\t * The flag to determine rss feed will load or not.\n\t\t\t *\n\t\t\t * @private\n\t\t\t */\n\t\t\tnewsAvailable: { type: \"boolean\", group: \"Misc\", defaultValue: true, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Supported file formats for news.\n\t\t\t *\n\t\t\t * @private\n\t\t\t */\n\t\t\tsupportedFileFormats: { type: \"FileFormat[]\", group: \"Misc\", defaultValue: [\"xlsx\"], visibility: \"hidden\" }\n\t\t},\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * newsGroup aggregation for News\n\t\t\t */\n\t\t\tnewsGroup: { type: \"sap.cux.home.NewsGroup\", singularName: \"newsGroup\", multiple: true, visibility: \"hidden\" }\n\t\t}\n\t};\n\n\tconstructor(idOrSettings?: string | $BaseNewsPanelSettings);\n\tconstructor(id?: string, settings?: $BaseNewsPanelSettings);\n\t/**\n\t * Constructor for a new News Panel.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $BaseNewsPanelSettings) {\n\t\tsuper(id, settings);\n\t\tthis.customNewsFeedCache = new Map();\n\t}\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\tthis.oNewsTile = new SlideTile(this.getId() + \"--idNewsSlide\", {\n\t\t\tdisplayTime: 20000,\n\t\t\twidth: \"100%\",\n\t\t\theight: \"17rem\",\n\t\t\ttiles: [\n\t\t\t\tnew GenericTile(this.getId() + \"--placeholder\", {\n\t\t\t\t\tstate: \"Loading\",\n\t\t\t\t\tmode: \"ArticleMode\",\n\t\t\t\t\tframeType: \"Stretch\" as FrameType\n\t\t\t\t})\n\t\t\t]\n\t\t}).addStyleClass(\"newsTileMaxWidth sapUiSmallMarginTop\");\n\t\taddFESRId(this.oNewsTile, \"newsSlidePress\");\n\t\tthis.getNewsWrapper().addContent(this.oNewsTile);\n\t\tthis.getNewsWrapper().addStyleClass(\"newsWrapper\");\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"newsTitle\"));\n\t\tthis._eventBus = EventBus.getInstance();\n\n\t\tthis.oManageMenuItem = new MenuItem(`${this.getId()}-manageNews`, {\n\t\t\ttitle: this._i18nBundle.getText(\"mngNews\"),\n\t\t\ticon: \"sap-icon://edit\",\n\t\t\tpress: this.handleEditNews.bind(this)\n\t\t});\n\t\tthis.addAggregation(\"menuItems\", this.oManageMenuItem);\n\t\taddFESRId(this.oManageMenuItem, \"manageNews\");\n\t\tlet defaultNewsEnabled = this.isURLParamEnabled(\"default-News\");\n\t\t// if Default News url param is enabled, show default news only\n\t\tif (defaultNewsEnabled) {\n\t\t\tthis.setUrl(DEFAULT_NEWS_URL);\n\t\t\tthis.setProperty(\"showCustom\", false);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param paramName name of parameter\n\t * This method checks if the URL parameter is enabled.\n\t * @returns {boolean} True if the parameter is enabled, false otherwise.\n\t * @private\n\t */\n\tpublic isURLParamEnabled(paramName: string): boolean {\n\t\tconst urlParams = new URLSearchParams(window.location.search);\n\t\treturn urlParams.get(paramName)?.toUpperCase() === \"TRUE\";\n\t}\n\n\t/**\n\t * Retrieves news data asynchronously.\n\t * If the news model is not initialized, it initializes the XML model and loads news feed data.\n\t * @private\n\t * @returns {Promise} A promise that resolves when the news data is retrieved.\n\t */\n\tpublic async getData() {\n\t\tlet sUrl: string = this.getUrl();\n\t\tlet defaultNewsEnabled = this.isURLParamEnabled(\"default-News\");\n\t\tthis.mandatoryNewsFeed = [];\n\t\tif (!this.favNewsFeed) {\n\t\t\tawait this.setFavNewsFeed(defaultNewsEnabled);\n\t\t}\n\n\t\tif (sUrl && sUrl !== DEFAULT_NEWS_URL && !this.getProperty(\"showCustom\")) {\n\t\t\t//rss feed scenario\n\t\t\tthis.oNewsModel = await this.initializeXmlModel(sUrl);\n\t\t\tthis.oNewsTile.setModel(this.oNewsModel);\n\t\t\tthis.oManageMenuItem.setVisible(false);\n\t\t} else if (sUrl == DEFAULT_NEWS_URL && !this.getProperty(\"showCustom\")) {\n\t\t\t// default news scenario\n\t\t\tthis.bNewsLoad = this.bNewsLoad || false;\n\t\t\tthis.oManageMenuItem.setVisible(true);\n\t\t\tvoid this.setCustomNewsFeed(\"\");\n\t\t} else if (this.getProperty(\"showCustom\")) {\n\t\t\t//custom news scenario\n\t\t\tthis.bNewsLoad = this.bNewsLoad || false;\n\t\t\tthis.oManageMenuItem.setVisible(true);\n\t\t\tconst sCustomNewsFeedKey = this.getCustomFeedKey();\n\t\t\tif (sCustomNewsFeedKey) {\n\t\t\t\tawait this.setCustomNewsFeed(sCustomNewsFeedKey);\n\t\t\t} else {\n\t\t\t\tthis.handleFeedError();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.handleFeedError();\n\t\t}\n\t\tthis.fireEvent(\"loaded\");\n\t\tthis.adjustLayout();\n\t}\n\n\t/**\n\t * Retrieves the current news group data based on the provided id.\n\t *\n\t * @param id - The group ID\n\t * @returns The news group object that matches the extracted group ID, or `undefined`\n\t *          if no matching group is found.\n\t * @private\n\t */\n\tpublic getCurrentNewsGroup(id: string) {\n\t\tlet aValues = this._defaultNews.value;\n\t\tlet aGroupId = id.split(\"-\");\n\t\t// find the groupid from the sId\n\t\tlet groupId = aGroupId?.[aGroupId.length - 1];\n\t\tlet currentGroup = aValues.find((oGroup) => oGroup.group_id === groupId);\n\t\treturn currentGroup;\n\t}\n\n\t/**\n\t * Returns the custom news feed key property of NewsPanel\n\t * @returns {string} custom news feed key\n\t */\n\tpublic getCustomFeedKey(): string {\n\t\treturn this.getProperty(\"customFeedKey\") as string;\n\t}\n\n\t/**\n\t * Returns the Url property of NewsPanel\n\t * @returns {any}\n\t */\n\tpublic getUrl(): string {\n\t\treturn this.getProperty(\"url\") as string;\n\t}\n\n\t/**\n\t * Initializes an XML model for managing news data.\n\t * This method returns a Promise that resolves to the initialized XML model.\n\t */\n\n\t/**\n\t * Initializes an XML model for managing news data.\n\t * This method returns a Promise that resolves to the initialized XML model.\n\t * @param {string} sUrl rss url to load the news feed\n\t * @returns {Promise<XMLModel>} XML Document containing the news feeds\n\t */\n\tprivate async initializeXmlModel(sUrl: string): Promise<XMLModel> {\n\t\tconst oParent = this.getParent() as NewsAndPagesContainer;\n\t\treturn new Promise((resolve) => {\n\t\t\tconst oNewsModel = new XMLModel(sUrl);\n\t\t\toNewsModel.setDefaultBindingMode(\"OneWay\");\n\t\t\toNewsModel.attachRequestCompleted((oEvent: Event) => {\n\t\t\t\tvoid (async () => {\n\t\t\t\t\tif (!this.bNewsLoad) {\n\t\t\t\t\t\toParent?.panelLoadedFn(\"News\", { loaded: true, count: DEFAULT_FEED_COUNT });\n\t\t\t\t\t\tthis.bNewsLoad = true;\n\t\t\t\t\t}\n\t\t\t\t\tconst oDocument = oEvent.getSource<XMLModel>().getData() as XMLDocument;\n\t\t\t\t\tawait this.loadNewsFeed(oDocument, 0);\n\t\t\t\t\tthis._eventBus.publish(\"KeyUserChanges\", \"newsFeedLoadFailed\", { showError: false, date: new Date() });\n\t\t\t\t\tresolve(oNewsModel);\n\t\t\t\t})();\n\t\t\t});\n\t\t\toNewsModel.attachRequestFailed(() => {\n\t\t\t\tthis.handleFeedError();\n\t\t\t\tif (!this.bNewsLoad) {\n\t\t\t\t\toParent?.panelLoadedFn(\"News\", { loaded: false, count: 0 });\n\t\t\t\t\tthis.bNewsLoad = true;\n\t\t\t\t}\n\t\t\t\tthis._eventBus.publish(\"KeyUserChanges\", \"newsFeedLoadFailed\", { showError: true, date: new Date() });\n\t\t\t\tresolve(oNewsModel);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Loads the news feed based on the provided document and number of feeds.\n\t * Determines the feed type (RSS, feed, custom) and binds the news tile accordingly.\n\t * @param {Document} oDocument - The document containing the news feed data.\n\t * @param {number} [noOfFeeds] - The number of feeds to be displayed. Defaults to a predefined value.\n\t */\n\tprivate async loadNewsFeed(oDocument: Document, noOfFeeds: number) {\n\t\tlet oBindingInfo: IBindingInfo;\n\t\tif (!oDocument?.querySelector(\"customFeed\") && !oDocument?.querySelector(\"defaultFeed\")) {\n\t\t\tawait this.extractAllImageUrls(oDocument, noOfFeeds || DEFAULT_FEED_COUNT);\n\t\t}\n\n\t\tif (!!oDocument?.querySelector(\"rss\") && !!oDocument?.querySelector(\"item\")) {\n\t\t\toBindingInfo = {\n\t\t\t\tpath: \"/channel/item/\",\n\t\t\t\tlength: noOfFeeds || DEFAULT_FEED_COUNT\n\t\t\t};\n\t\t} else if (!!oDocument?.querySelector(\"atom\") && !!oDocument?.querySelector(\"entry\")) {\n\t\t\toBindingInfo = {\n\t\t\t\tpath: \"/entry/\",\n\t\t\t\tlength: noOfFeeds || DEFAULT_FEED_COUNT\n\t\t\t};\n\t\t} else if (\n\t\t\t(!!oDocument?.querySelector(\"customFeed\") || !!oDocument?.querySelector(\"defaultFeed\")) &&\n\t\t\t!!oDocument?.querySelector(\"item\")\n\t\t) {\n\t\t\tthis.destroyAggregation(\"newsItems\");\n\t\t\toBindingInfo = {\n\t\t\t\tpath: \"/item/\",\n\t\t\t\tlength: noOfFeeds || DEFAULT_FEED_COUNT\n\t\t\t};\n\t\t} else {\n\t\t\tthis.handleFeedError();\n\t\t\treturn;\n\t\t}\n\t\tthis.bindNewsTile(this.oNewsTile, oBindingInfo);\n\t}\n\n\t/**\n\t * Handles errors that occur during the loading of the news feed.\n\t * @returns {void}\n\t */\n\tpublic handleFeedError(): void {\n\t\tif (this.getProperty(\"showCustom\") || this.getUrl() === DEFAULT_NEWS_URL) {\n\t\t\tthis.generateErrorMessage().setVisible(true);\n\t\t\tthis.oNewsTile.setVisible(false);\n\t\t} else {\n\t\t\t(this.getNewsWrapper()?.getParent() as FlexBox).setVisible(false);\n\t\t\tthis.setProperty(\"newsAvailable\", false);\n\t\t\tthis.oManageMenuItem.setVisible(false);\n\t\t}\n\t}\n\n\tpublic async setURL(url: string) {\n\t\tthis.setProperty(\"showCustom\", false);\n\t\tthis.setProperty(\"newsAvailable\", true);\n\t\tthis.generateErrorMessage().setVisible(false);\n\t\t(this.getNewsWrapper()?.getParent() as FlexBox).setVisible(true);\n\t\tthis.oNewsTile.setVisible(true);\n\t\tthis.setProperty(\"url\", url);\n\t\tawait this.getData();\n\t}\n\n\t/**\n\t * Adjust layout based on the device type\n\t *\n\t * @private\n\t */\n\tpublic adjustLayout() {\n\t\tif (this.getDeviceType() === DeviceType.Mobile) {\n\t\t\tthis.oNewsTile.setHeight(\"11rem\");\n\t\t\tthis.generateErrorMessage().setWidth(\"100%\");\n\t\t\tthis.oNewsTile.removeStyleClass(\"sapUiSmallMarginTop\");\n\t\t} else {\n\t\t\tthis.oNewsTile.setHeight(\"17rem\");\n\t\t\t(this.getNewsWrapper()?.getParent() as FlexBox).setWidth(\"100%\");\n\t\t}\n\t}\n\n\t/**\n\t * Binds the news tile with the provided binding information.\n\t * @param {sap.m.SlideTile} oSlideTile - The SlideTile control to be bound.\n\t * @param {IBindingInfo} oBindingInfo - The binding information containing the path and length of the aggregation.\n\t */\n\tprivate bindNewsTile(oSlideTile: SlideTile, oBindingInfo: IBindingInfo): void {\n\t\tif (oBindingInfo) {\n\t\t\tif (!oSlideTile.getBinding(\"tiles\")) {\n\t\t\t\toSlideTile.bindAggregation(\"tiles\", {\n\t\t\t\t\tpath: oBindingInfo.path,\n\t\t\t\t\tlength: oBindingInfo.length,\n\t\t\t\t\ttemplateShareable: false,\n\t\t\t\t\tfactory: (sId: string, oContext: Context) => {\n\t\t\t\t\t\tconst newsInfo = oContext.getObject() as XMLDocument;\n\t\t\t\t\t\tlet oTile;\n\t\t\t\t\t\tif (newsInfo.getElementsByTagName(\"link\").length > 0) {\n\t\t\t\t\t\t\toTile = new NewsItem(recycleId(`${sId}-news-item`), {\n\t\t\t\t\t\t\t\turl: newsInfo.getElementsByTagName(\"link\")[0].textContent as string,\n\t\t\t\t\t\t\t\ttitle: newsInfo.getElementsByTagName(\"title\")[0].textContent as string,\n\t\t\t\t\t\t\t\tsubTitle: newsInfo.getElementsByTagName(\"description\")[0].textContent as string,\n\t\t\t\t\t\t\t\timageUrl: newsInfo.getElementsByTagName(\"imageUrl\")[0].textContent as string,\n\t\t\t\t\t\t\t\tfooter: this.formatDate(newsInfo.getElementsByTagName(\"pubDate\")[0].textContent as string)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet sGroupId = (newsInfo.getElementsByTagName(\"id\")?.[0]?.textContent as string) ?? \"\";\n\t\t\t\t\t\t\tlet newsId = sGroupId ? sId + \"-newsgroup-\" + sGroupId : sId + \"-newsgroup\";\n\t\t\t\t\t\t\tlet subTitleNews = newsInfo.getElementsByTagName(\"subTitle\")?.[0]?.textContent ?? \"\";\n\t\t\t\t\t\t\toTile = new NewsGroup(recycleId(newsId), {\n\t\t\t\t\t\t\t\ttitle: newsInfo.getElementsByTagName(\"title\")[0].textContent as string,\n\t\t\t\t\t\t\t\tsubTitle: subTitleNews || (this._i18nBundle.getText(\"newsFeedDescription\") as string),\n\t\t\t\t\t\t\t\timageUrl: newsInfo.getElementsByTagName(\"imageUrl\")?.[0]?.textContent as string,\n\t\t\t\t\t\t\t\tfooter: newsInfo.getElementsByTagName(\"footer\")?.[0]?.textContent as string\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.addAggregation(\"newsItems\", oTile, true);\n\t\t\t\t\t\treturn oTile.getTile();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Extracts images for all the news tiles\n\t * @param {Document} oDocument - The document containing the news feed data.\n\t * @param {number} [noOfFeeds] - The number of feeds to be displayed. Defaults to a predefined value.\n\t */\n\tprivate async extractAllImageUrls(oDocument: Document, noOfFeeds: number) {\n\t\tfor (let i = 0; i < noOfFeeds; i++) {\n\t\t\tconst oItemElement = oDocument?.getElementsByTagName(\"item\")[i];\n\t\t\tconst sUrl: string = await this.extractImage(oItemElement.getElementsByTagName(\"link\")[0].textContent as string);\n\t\t\tconst oImageUrl = oDocument.createElement(\"imageUrl\");\n\t\t\toImageUrl.textContent = sUrl;\n\t\t\toItemElement.appendChild(oImageUrl);\n\t\t}\n\t}\n\n\t/**\n\t * Converts the given date to a relative date-time format.\n\t * @param {string} timeStamp - The timestamp to be converted.\n\t * @returns {string} The date in relative date-time format.\n\t */\n\tprivate formatDate(timeStamp: string): string {\n\t\tconst relativeDateFormatter = DateFormat.getDateTimeInstance({\n\t\t\tstyle: \"medium\",\n\t\t\trelative: true,\n\t\t\trelativeStyle: \"short\"\n\t\t});\n\t\treturn relativeDateFormatter.format(new Date(timeStamp));\n\t}\n\n\t/**\n\t * Returns the favourite news feed for the custom news\n\t * @returns {IFavNewsFeed}\n\t * @private\n\t */\n\tpublic getFavNewsFeed() {\n\t\treturn this.favNewsFeed;\n\t}\n\n\t/**\n\t * Extracts the image URL from the provided HREF link or link.\n\t * @param {string} sHrefLink - The HREF link containing the image URL.\n\t * @returns {Promise} A promise that resolves to the extracted image URL.\n\t */\n\tprivate extractImage(sHrefLink: string): Promise<string> {\n\t\tconst fnLoadPlaceholderImage = () => {\n\t\t\tconst sPrefix = sap.ui.require.toUrl(\"sap/cux/home/utils\");\n\t\t\tthis.image = this.image ? this.image + 1 : 1;\n\t\t\tthis.image = this.image < 9 ? this.image : 1;\n\t\t\treturn `${sPrefix}/imgNews/${this.image}.jpg`;\n\t\t};\n\n\t\treturn fetch(sHrefLink)\n\t\t\t.then((res) => res.text())\n\t\t\t.then((sHTML) => {\n\t\t\t\tconst aMatches = sHTML.match(/<meta[^>]*property=[\"']og:image[\"'][^>]*content=[\"']([^\"']+)[\"'][^>]*>/i);\n\t\t\t\treturn Array.isArray(aMatches) && aMatches[1] ? aMatches[1] : fnLoadPlaceholderImage();\n\t\t\t})\n\t\t\t.catch(fnLoadPlaceholderImage);\n\t}\n\n\t/**\n\t * Checks if the custom file format is CSV based on the custom file name.\n\t *\n\t * @param {string} fileName - The custom file name.\n\t * @returns {boolean} True if the file format is CSV, otherwise false.\n\t */\n\tprivate isCSVFileFormat(fileName: string): boolean {\n\t\treturn fileName.split(\".\").pop()?.toLowerCase() === (\"csv\" as string);\n\t}\n\t/**\n\t * Sets the favorite news feed for the user by retrieving personalization data.\n\t *\n\t * This method asynchronously fetches the user's personalization data and updates\n\t * the `favNewsFeed` property with the favorite news feed information.\n\t *\n\t * @returns {Promise<void>} A promise that resolves when the favorite news feed is set.\n\t * @private\n\t */\n\tprivate async setFavNewsFeed(defaultFeed?: boolean): Promise<void> {\n\t\tconst personalizer = await this._getUserPersonalization();\n\t\tconst persData = await personalizer?.read();\n\t\tthis.favNewsFeed = (defaultFeed ? persData?.defaultNewsFeed : persData?.favNewsFeed) as IFavNewsFeed;\n\t}\n\n\t/**\n\t * This method retrieves the count and feeds of the custom news feed asynchronously.\n\t * If the count is not zero, it loads the custom news feed data and returns the feeds.\n\t * @param {string} sFeedId - The ID of the custom news feed to set.\n\t * @returns {Promise} A promise that resolves to an array of news feeds.\n\t * @private\n\t */\n\tpublic async setCustomNewsFeed(sFeedId: string): Promise<void> {\n\t\ttry {\n\t\t\tthis.oNewsTile.setVisible(true);\n\t\t\tthis.generateErrorMessage().setVisible(false);\n\t\t\tawait this.setFavNewsFeed(!sFeedId);\n\t\t\tconst customFileName = this.getProperty(\"customFileName\") as string;\n\t\t\tconst showAllPrepRequired = this.isCSVFileFormat(customFileName)\n\t\t\t\t? false\n\t\t\t\t: (this.favNewsFeed?.showAllPreparationRequired ?? true);\n\n\t\t\tif (this.isCSVFileFormat(customFileName)) {\n\t\t\t\tCUSTOM_NEWS_FEED.EXCLUDE_FIELDS.push(\"PreparationRequired\");\n\t\t\t}\n\t\t\tlet aFeeds;\n\t\t\tif (sFeedId) {\n\t\t\t\taFeeds = await this.getCustomNewsFeed(sFeedId, showAllPrepRequired);\n\t\t\t} else {\n\t\t\t\taFeeds = await this.getCustomNewsFeed(\"\", true);\n\t\t\t}\n\n\t\t\tif (aFeeds.length === 0) {\n\t\t\t\tthrow new Error(\"Error: No news feed available\");\n\t\t\t}\n\t\t\t//filer selected feeds from all news feed\n\t\t\tif (this.favNewsFeed?.items?.length) {\n\t\t\t\taFeeds = aFeeds.filter((oNewsFeed) => {\n\t\t\t\t\t//return this.favNewsFeed?.items.includes(oNewsFeed.title) || this.mandatoryNewsFeed.includes(oNewsFeed.title);\n\t\t\t\t\treturn this.favNewsFeed?.items.includes(oNewsFeed.title);\n\t\t\t\t});\n\t\t\t} else if (this.favNewsFeed?.items?.length === 0) {\n\t\t\t\t(this.getParent() as NewsAndPagesContainer)?.panelLoadedFn(\"News\", { loaded: true, count: 0 });\n\t\t\t\tthrow new Error(\"Error: No fav news feed available\");\n\t\t\t}\n\t\t\tawait this.loadCustomNewsFeed(aFeeds, sFeedId ? \"customFeed\" : \"defaultFeed\");\n\t\t} catch (err) {\n\t\t\tLog.error(err as string);\n\t\t\tthis.handleFeedError();\n\t\t}\n\t}\n\n\t/**\n\t * Filters the provided list of news groups to include only those that are marked as mandatory.\n\t *\n\t * A news group is considered mandatory if:\n\t * - Its `mandatory_text` property (at the top level) is set to \"TRUE\" (case-insensitive).\n\t * - Any of its associated articles (in the `_group_to_article` array) has a `mandatory_text` property set to \"TRUE\" (case-insensitive).\n\t *\n\t * If any article within a group is marked as mandatory, the group's `mandatory_text` property\n\t * is updated to \"TRUE\".\n\t *\n\t * @param newsGroups - An array of news groups to filter. Each group is expected to implement the `ICustomNewsFeed` interface.\n\t * @returns An array of news groups that are marked as mandatory.\n\t * @private\n\t */\n\tprivate filterMandatoryNews(newsGroups: ICustomNewsFeed[]) {\n\t\treturn newsGroups.filter((group) => {\n\t\t\t// Check top-level mandatory_text\n\t\t\tconst isTopLevelMandatory = group.mandatory_text?.toUpperCase() === \"TRUE\";\n\n\t\t\t// Check if any inner _group_to_article has mandatory_text true\n\t\t\tconst isAnyArticleMandatory = group._group_to_article?.some(function (article) {\n\t\t\t\t//make mandatory_test true at group level if any article is mandatory\n\t\t\t\tif (article.mandatory_text?.toUpperCase() === \"TRUE\") {\n\t\t\t\t\tgroup.mandatory_text = \"TRUE\";\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn isTopLevelMandatory || isAnyArticleMandatory;\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves the default news feed details from the given OData response.\n\t *\n\t * @param newsResponse - The OData response containing the news feed data.\n\t * @param showAllPreparationRequired - A boolean flag indicating whether to filter news items that require preparation.\n\t * @returns An array of default news feed items.\n\t * @private\n\t */\n\tprivate getDefaultNewsFeedDetails(newsResponse: ODataResponse) {\n\t\tlet aNews: ICustomNewsFeed[] = JSON.parse(JSON.stringify(newsResponse.value || [])) as ICustomNewsFeed[];\n\t\tconst aDefaultNews: ICustomNewsFeed[] = [];\n\t\tconst oDefaultFeedDict = {} as Record<string, string>;\n\t\tthis.mandatoryNewsFeed = [];\n\t\tif (aNews?.length > 0) {\n\t\t\tthis.mandatoryNewsFeed = this.filterMandatoryNews(aNews).map((oFeed) => oFeed.title);\n\n\t\t\tfor (const oFeed of aNews) {\n\t\t\t\tconst title = oFeed.title;\n\t\t\t\tlet subTitle = \"\";\n\t\t\t\tif (!oDefaultFeedDict[title]) {\n\t\t\t\t\tsubTitle = oFeed.subTitle || oFeed.description || \"\";\n\t\t\t\t\taDefaultNews.push({\n\t\t\t\t\t\ttitle: title,\n\t\t\t\t\t\tfooter: oFeed.footer_text,\n\t\t\t\t\t\timageUrl: this.getDefaultFeedImage(oFeed),\n\t\t\t\t\t\tid: oFeed.group_id,\n\t\t\t\t\t\tsubTitle: subTitle || \"\"\n\t\t\t\t\t});\n\t\t\t\t\toDefaultFeedDict[title] = title;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn aDefaultNews;\n\t}\n\n\t/**\n\t * Returns the mandatory news feed details\n\t * If the mandatory news feed is not set, it returns an empty array.\n\t *\n\t * @returns {ICustomNewsFeed[]} The mandatory news feed details.\n\t * @private\n\t */\n\tpublic getMandatoryDefaultNewsFeed() {\n\t\treturn this.mandatoryNewsFeed || [];\n\t}\n\n\t/**\n\t * Retrieves the default news response, either from cache or by fetching it.\n\t * @returns {Promise<ODataResponse>} A promise that resolves to the default news data\n\t * @private\n\t */\n\tprivate getDefaultNewsResponse(): Promise<ODataResponse> {\n\t\t// Return cached data if available\n\t\tif (this._defaultNews) {\n\t\t\treturn Promise.resolve(this._defaultNews);\n\t\t}\n\n\t\tif (!this._defaultNewsPromise) {\n\t\t\tthis._defaultNewsPromise = this.fetchDefaultNews();\n\t\t}\n\n\t\treturn this._defaultNewsPromise;\n\t}\n\n\t/**\n\t * Fetches the default news data from the server.\n\t * @returns {Promise<ODataResponse>} A promise that resolves to the fetched news data\n\t * @throws {Error} If the network request fails or returns a non-OK status\n\t * @private\n\t */\n\tprivate async fetchDefaultNews(): Promise<ODataResponse> {\n\t\ttry {\n\t\t\tconst response = await fetch(DEFAULT_NEWS_URL);\n\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(`HTTP error! status: ${response.status}`);\n\t\t\t}\n\n\t\t\tthis._defaultNews = (await response.json()) as ODataResponse;\n\t\t\treturn this._defaultNews;\n\t\t} catch (error) {\n\t\t\tthis._defaultNewsPromise = null;\n\t\t\tLog.error(error as string);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves a custom news feed based on the provided feed ID.\n\t * If no feed ID is provided, it returns the default news feed.\n\t *\n\t * @param {string} sFeedId - The ID of the custom news feed to retrieve. If not provided, the default news feed is returned.\n\t * @param {boolean} showAllPreparationRequired - A flag indicating whether to show all preparation required.\n\t * @returns {Promise<ICustomNewsFeed[]>} A promise that resolves to an array of custom news feed items.\n\t * @private\n\t */\n\tpublic async getCustomNewsFeed(sFeedId: string, showAllPreparationRequired: boolean): Promise<ICustomNewsFeed[]> {\n\t\tif (!sFeedId) {\n\t\t\tawait this.getDefaultNewsResponse();\n\t\t\tlet aDefaultgroups = this.getDefaultNewsFeedDetails(this._defaultNews);\n\t\t\treturn aDefaultgroups;\n\t\t} else {\n\t\t\treturn this.getCustomFeedData(sFeedId, showAllPreparationRequired);\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves custom news feed items identified by the provided feed ID and settings.\n\t * It processes the response data and returns an array of custom news feed items.\n\t * @param {string} sFeedId - The ID of the custom news feed.\n\t * @param {boolean} showAllPreparationRequired - Indicates whether to show all preparation required.\n\t * @returns {Promise} A Promise that resolves to an array of custom news feed items.\n\t * @private\n\t */\n\tprivate async getCustomFeedData(sFeedId: string, showAllPreparationRequired: boolean): Promise<ICustomNewsFeed[]> {\n\t\ttry {\n\t\t\tconst newsDetailUrl = this.getNewsFeedDetailsUrl({ changeId: sFeedId, showAllPreparationRequired });\n\t\t\tif (!this.customNewsFeedCache.has(newsDetailUrl)) {\n\t\t\t\tthis.customNewsFeedCache.set(newsDetailUrl, this.getAuthNewsFeed(newsDetailUrl));\n\t\t\t}\n\t\t\tconst authorizedNewsFeeds = (await this.customNewsFeedCache.get(newsDetailUrl)) as ICustomNewsFeed[];\n\t\t\tconst oFeedDict: { [key: string]: string } = {};\n\t\t\tconst aFeeds: ICustomNewsFeed[] = [];\n\t\t\tif (authorizedNewsFeeds?.length > 0) {\n\t\t\t\tauthorizedNewsFeeds.forEach((oFeed: ICustomNewsFeed) => {\n\t\t\t\t\tconst title = oFeed[CUSTOM_NEWS_FEED.TITLE] as INewsLink;\n\t\t\t\t\tif (!oFeedDict[title.value]) {\n\t\t\t\t\t\taFeeds.push({\n\t\t\t\t\t\t\ttitle: title.value,\n\t\t\t\t\t\t\tfooter: (oFeed[CUSTOM_NEWS_FEED.VALIDITY] as INewsLink).value,\n\t\t\t\t\t\t\timageUrl: this.getCustomFeedImage(title.value)\n\t\t\t\t\t\t});\n\t\t\t\t\t\toFeedDict[title.value] = title.value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn aFeeds; // group details\n\t\t} catch (err) {\n\t\t\tLog.error(err as string);\n\t\t\tthrow new Error(err as string);\n\t\t}\n\t}\n\n\t/**\n\t * Generates the URL for retrieving news feed details based on the provided news object.\n\t * The generated URL limits the number of results to 999.\n\t * @param {INewsItem} oNews - The news object containing properties such as changeId, title, and showAllPreparationRequired.\n\t * @returns {string} The URL for retrieving news feed details.\n\t */\n\tpublic getNewsFeedDetailsUrl(oNews: INewsItem) {\n\t\tlet sUrl = NEWS_FEED_READ_API + \"?$filter=ChangeId eq \" + \"'\" + oNews.changeId + \"'\";\n\t\tconst customFileName = this.getProperty(\"customFileName\") as string;\n\t\tif (!this.isCSVFileFormat(customFileName) && oNews.showAllPreparationRequired) {\n\t\t\tsUrl = sUrl + \" and PreparationRequired eq true\";\n\t\t}\n\t\treturn sUrl + \"&$top=999\";\n\t}\n\n\t/**\n\t * Retrieves the news feed from the specified URL after applying authorization filtering based on the available apps.\n\t * If the news feed contains impacted artifacts, it checks if the current user has access to any of the impacted apps.\n\t * If the user has access to at least one impacted app, the news feed is included in the returned array.\n\t * @param {string} sNewsUrl - The URL of the news feed.\n\t * @returns {Array} The filtered array of news feed items authorized for the user.\n\t */\n\tpublic async getAuthNewsFeed(sNewsUrl: string, newsTitle?: string) {\n\t\ttry {\n\t\t\tconst [aAvailableApps, aNewsFeed] = await Promise.all([\n\t\t\t\tthis.getAllAvailableApps(),\n\t\t\t\tthis.getNewsFeedDetails(sNewsUrl, newsTitle)\n\t\t\t]);\n\t\t\tif (aAvailableApps.length === 0) {\n\t\t\t\treturn aNewsFeed;\n\t\t\t}\n\t\t\treturn this.arrangeNewsFeeds(aNewsFeed, aAvailableApps);\n\t\t} catch (err) {\n\t\t\tLog.error(err as string);\n\t\t}\n\t}\n\n\t/**\n\t * If the news feed contains impacted artifacts, it checks if the current user has access to any of the impacted apps.\n\t * If the user has access to at least one impacted app, the news feed is included in the returned array.\n\t * @param {ICustomNewsFeed[]} aNewsFeed - array of news feed\n\t * @param {IAvailableApp[]} aAvailableApps - array of all availabel apps\n\t * @returns {Array} The filtered array of news feed items authorized for the user.\n\t */\n\tprivate arrangeNewsFeeds(aNewsFeed: ICustomNewsFeed[], aAvailableApps: IAvailableApp[]) {\n\t\tconst aAuthNewsFeed: ICustomNewsFeed[] = [];\n\n\t\taNewsFeed.forEach((oNewsFeed: ICustomNewsFeed) => {\n\t\t\tif ((oNewsFeed.Category as INewsLink).value !== \"App\" || !(oNewsFeed.ImpactedArtifacts as INewsLink).value) {\n\t\t\t\taAuthNewsFeed.push(oNewsFeed);\n\t\t\t} else {\n\t\t\t\tconst aImpactedArtifacts: string[] = (oNewsFeed.ImpactedArtifacts as INewsLink).value.split(\"\\n\");\n\t\t\t\tfor (let impactedArtifact of aImpactedArtifacts) {\n\t\t\t\t\tconst oImpactedArtifact = impactedArtifact;\n\t\t\t\t\tif (oImpactedArtifact && this.isAuthFeed(aAvailableApps, impactedArtifact)) {\n\t\t\t\t\t\taAuthNewsFeed.push(oNewsFeed);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn aAuthNewsFeed;\n\t}\n\n\t/**\n\t * takes all available apps list and the impacted atifact from the news and returns if it's valid\n\t * @param {IAvailableApp[]} aAvailableApps - Array of all available apps\n\t * @param {string} oImpactedArtifact - impacted artifact form the news\n\t * @returns {boolean} checks if the news is authenticated with the available apps list\n\t */\n\tprivate isAuthFeed(aAvailableApps: IAvailableApp[], oImpactedArtifact: string) {\n\t\tconst fioriIdSplitter = \"|\";\n\t\tif (oImpactedArtifact.includes(fioriIdSplitter)) {\n\t\t\tconst aTokens = oImpactedArtifact.split(fioriIdSplitter);\n\t\t\tconst sFioriId = (aTokens[aTokens.length - 1] || \"\").trim();\n\t\t\tif (sFioriId) {\n\t\t\t\tconst index = aAvailableApps.findIndex((oApp: IAvailableApp) => {\n\t\t\t\t\treturn sFioriId === oApp?.signature?.parameters[\"sap-fiori-id\"]?.defaultValue?.value;\n\t\t\t\t});\n\t\t\t\treturn index > -1;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Retrieves all available apps from the ClientSideTargetResolution service for authorization filtering.\n\t * @returns {Array} An array of available apps.\n\t */\n\tprivate async getAllAvailableApps(): Promise<IAvailableApp[]> {\n\t\ttry {\n\t\t\tconst oService = await Container.getServiceAsync<IAppConfiguration>(\"ClientSideTargetResolution\");\n\t\t\treturn oService?._oAdapter._aInbounds || [];\n\t\t} catch (err) {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tLog.error(err.message);\n\t\t\t}\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the news feed details from the specified URL, including translation and formatting of field labels.\n\t * @param {string} sUrl - The URL of the news feed details.\n\t * @returns {Array} The array of news feed items with translated and formatted field labels.\n\t */\n\tprivate async getNewsFeedDetails(sUrl: string, newsTitle?: string): Promise<ICustomNewsFeed[]> {\n\t\tif (this.customNewsFeedCache.has(sUrl)) {\n\t\t\tconst newsFeedDetails = await this.customNewsFeedCache.get(sUrl);\n\t\t\treturn this.filterNewsOnTitle(newsFeedDetails as ICustomNewsFeed[], newsTitle);\n\t\t}\n\n\t\tconst fnFormattedLabel = (sLabel: string) => sLabel.replace(/([a-z0-9])([A-Z])/g, \"$1 $2\");\n\t\tconst [newsResponse, translationResponse] = await Promise.all([\n\t\t\tHttpHelper.GetJSON(sUrl) as Promise<{ value: ICustomNewsFeed[] }>,\n\t\t\tthis.getTranslatedText(this.getCustomFeedKey())\n\t\t]);\n\t\tlet aNews: ICustomNewsFeed[] = JSON.parse(JSON.stringify((newsResponse as INewsResponse).value || [])) as ICustomNewsFeed[];\n\t\tconst aTranslation = JSON.parse(JSON.stringify((translationResponse as INewsResponse).value || [])) as ITranslatedText[];\n\t\taNews = this.filterNewsOnTitle(aNews, newsTitle);\n\t\treturn aNews.map((oNews: ICustomNewsFeed) => {\n\t\t\tconst aFields = Object.keys(oNews);\n\t\t\tconst aExpandFields: INewsLink[] = [];\n\t\t\taFields.forEach((oField) => {\n\t\t\t\tconst oTranslatedField = aTranslation.find(\n\t\t\t\t\t(oTranslation: ITranslatedText) => oTranslation?.ColumnName?.toUpperCase() === oField.toUpperCase()\n\t\t\t\t);\n\t\t\t\tconst oTranslatedFieldName = (oTranslatedField?.TranslatedName as string) || fnFormattedLabel(oField);\n\t\t\t\toNews[oField] = { label: oTranslatedFieldName, value: oNews[oField] as string } as INewsLink;\n\t\t\t\tif (!CUSTOM_NEWS_FEED.EXCLUDE_FIELDS.includes(oField)) {\n\t\t\t\t\taExpandFields.push(oNews[oField] as INewsLink);\n\t\t\t\t}\n\t\t\t});\n\t\t\toNews.Link = {\n\t\t\t\tlabel: this._i18nBundle.getText(\"readMoreLink\") as string,\n\t\t\t\tvalue: oNews[CUSTOM_NEWS_FEED.LINK] as string,\n\t\t\t\ttext: \"Link\"\n\t\t\t};\n\t\t\toNews.expanded = aNews.length === 1;\n\t\t\toNews.expandFields = aExpandFields;\n\t\t\treturn oNews;\n\t\t});\n\t}\n\n\t/**\n\t * Filters the news feed data based on the LOB title for the news detail dialog\n\t *\n\t * @private\n\t * @param {ICustomNewsFeed[]} aNews complete news feed data\n\t * @param {?string} [newsTitle] title of the line of business to be filtered on\n\t * @returns {ICustomNewsFeed[]} filtered news feed for provided LOB title\n\t */\n\tprivate filterNewsOnTitle(aNews: ICustomNewsFeed[], newsTitle?: string): ICustomNewsFeed[] {\n\t\tif (newsTitle) {\n\t\t\treturn aNews.filter((newsDetail: ICustomNewsFeed) => {\n\t\t\t\treturn (newsDetail.LineOfBusiness as INewsLink).value === newsTitle;\n\t\t\t});\n\t\t}\n\t\treturn aNews;\n\t}\n\n\t/**\n\t * Retrieves translated text for news feed fields based on the specified feed ID.\n\t * @param {string} sFeedId - The ID of the custom news feed\n\t * @returns {Promise} A promise resolving to the translated text for news feed fields.\n\t */\n\tprivate getTranslatedText(sFeedId: string) {\n\t\ttry {\n\t\t\tconst sUrl = NEWS_FEED_TRANSLATION_API + \"?$filter=Changeid eq '\" + sFeedId + \"'\";\n\t\t\tif (!this.customNewsFeedCache.has(sUrl)) {\n\t\t\t\tthis.customNewsFeedCache.set(sUrl, HttpHelper.GetJSON(sUrl) as Promise<ICustomNewsFeed[]>);\n\t\t\t}\n\t\t\treturn this.customNewsFeedCache.get(sUrl);\n\t\t} catch (err) {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tLog.error(err.message);\n\t\t\t}\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Loads custom news feed into the news panel after parsing JSON feed data to XML format.\n\t * @param {Array} feeds - The array of custom news feed items.\n\t */\n\tprivate async loadCustomNewsFeed(feeds: ICustomNewsFeed[], feedType: string) {\n\t\tconst oXMLResponse = this.parseJsonToXml(JSON.parse(JSON.stringify(feeds)) as JSON[], feedType);\n\t\tconst oParent = this.getParent() as NewsAndPagesContainer;\n\t\tif (!this.oNewsModel) {\n\t\t\tthis.oNewsModel = new XMLModel(oXMLResponse);\n\t\t\tif (!this.bNewsLoad) {\n\t\t\t\toParent?.panelLoadedFn(\"News\", { loaded: true, count: DEFAULT_FEED_COUNT });\n\t\t\t\tthis.bNewsLoad = true;\n\t\t\t}\n\t\t\tthis.oNewsTile.setModel(this.oNewsModel);\n\t\t} else {\n\t\t\tthis.oNewsTile.unbindAggregation(\"tiles\", false); // Unbind the bound aggregation\n\t\t\tthis.oNewsTile.destroyAggregation(\"tiles\"); // Removes old tiles\n\t\t\tthis.oNewsModel.setData(oXMLResponse);\n\t\t}\n\t\tawait this.loadNewsFeed(oXMLResponse, feeds.length);\n\t}\n\n\t/**\n\t * Parses JSON data into XML format.\n\t * @param {JSON[]} json - The JSON data to be parsed into XML.\n\t * @returns {XMLDocument} The XML document representing the parsed JSON data.\n\t */\n\tprivate parseJsonToXml(json: JSON[], feedType: string): XMLDocument {\n\t\tconst _transformJsonForXml = (aData: JSON[]) => aData.map((data: JSON) => ({ item: data }));\n\t\tconst _jsonToXml = (json: JSON) => {\n\t\t\tlet xml = \"\";\n\t\t\tlet key: string;\n\t\t\tfor (key in json) {\n\t\t\t\tconst value = json[key as keyof typeof json];\n\t\t\t\tif (value) {\n\t\t\t\t\tif (typeof value === \"object\") {\n\t\t\t\t\t\txml += `<${key}>${_jsonToXml(value)}</${key}>`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\txml += `<${key}>${value as string}</${key}>`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn xml.replace(/<\\/?\\d+>/g, \"\");\n\t\t};\n\t\tconst transformedJson: JSON = JSON.parse(JSON.stringify(_transformJsonForXml(json))) as JSON;\n\t\tlet xml = \"<?xml version='1.0' encoding='UTF-8'?>\";\n\t\tconst rootToken = feedType;\n\t\txml += `<${rootToken}>`;\n\t\txml += _jsonToXml(transformedJson);\n\t\txml += `</${rootToken}>`;\n\t\txml = xml.replaceAll(\"&\", \"&amp;\");\n\t\tconst parser = new DOMParser();\n\t\treturn parser.parseFromString(xml, \"text/xml\");\n\t}\n\n\t/**\n\t * Randomly selects an image from the available images for the feed item.\n\t * @param {string} sFileName - The file name of the custom news feed item.\n\t * @returns {string} The URL of the image for the feed item.\n\t * @private\n\t */\n\tprivate getCustomFeedImage(sFileName: string) {\n\t\tconst sFileBasePath = sap.ui.require.toUrl(CUSTOM_NEWS_FEED.IMAGE_URL);\n\t\tlet sFilePath = sFileBasePath + CUSTOM_IMAGES.default[0];\n\t\tconst files = CUSTOM_IMAGES[sFileName] || [];\n\t\tlet randomIndex = 0;\n\t\tif (files.length > 0) {\n\t\t\tconst randomArray = new window.Uint32Array(1);\n\t\t\twindow.crypto.getRandomValues(randomArray);\n\t\t\trandomIndex = randomArray[0] % 3;\n\t\t\tsFilePath = sFileBasePath + files[randomIndex];\n\t\t}\n\t\treturn sFilePath;\n\t}\n\n\t/**\n\t * Retrieves the default feed image for a given news feed.\n\t *\n\t * @param {ICustomNewsFeed} oFeed - The custom news feed object.\n\t * @returns {string} The base64 encoded image string with the appropriate MIME type, or an empty string if no valid image is found.\n\t * @private\n\t */\n\tprivate getDefaultFeedImage(oFeed: ICustomNewsFeed): string {\n\t\tconst imgId = oFeed?.bg_image_id;\n\t\tconst groupImg = oFeed?._group_to_image;\n\n\t\tif (!groupImg || groupImg.image_id !== imgId) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tlet mimeType = groupImg.mime_type;\n\t\tconst groupBgImg = groupImg.bg_image;\n\n\t\tif (!groupBgImg) {\n\t\t\treturn \"\";\n\t\t}\n\t\tif (mimeType === \"application/octet-stream\") {\n\t\t\tmimeType = \"image/jpeg\";\n\t\t}\n\t\tif (!this.isValidBase64(groupBgImg)) {\n\t\t\tconst base64Data = this.base64UrlToBase64(groupBgImg);\n\t\t\treturn `data:${mimeType};base64,${base64Data}`;\n\t\t}\n\t\treturn `data:${mimeType};base64,${groupBgImg}`;\n\t}\n\n\t/**\n\t * Converts a base64 URL string to a standard base64 string.\n\t *\n\t * @param {string} base64Url - The base64 URL string to convert.\n\t * @returns {string} The converted base64 string.\n\t * @private\n\t */\n\tprivate base64UrlToBase64(base64Url: string) {\n\t\tlet base64 = base64Url?.replace(/_/g, \"/\").replace(/-/g, \"+\");\n\n\t\t// Add padding if missing (Base64 should be a multiple of 4)\n\t\twhile (base64.length % 4 !== 0) {\n\t\t\tbase64 += \"=\";\n\t\t}\n\t\treturn base64;\n\t}\n\n\t/**\n\t * Checks if a string is a valid base64 encoded string.\n\t * @param input The string to validate\n\t * @returns boolean indicating if the string is valid base64\n\t * @private\n\t */\n\tprivate isValidBase64(input: string): boolean {\n\t\t// Check if the string exists and isn't empty\n\t\tif (!input || input.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Canonical base64 strings use these characters\n\t\t// A-Z, a-z, 0-9, +, /, and = for padding\n\t\tconst base64Regex = /^[A-Za-z0-9+/]*={0,2}$/;\n\n\t\t// Check if the string matches the base64 character set\n\t\tif (!base64Regex.test(input)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if the length is valid\n\t\t// Base64 strings have a length that is a multiple of 4\n\t\tif (input.length % 4 !== 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check padding rules\n\t\tif (input.includes(\"=\")) {\n\t\t\t// If there is padding, it must be at the end\n\t\t\tconst paddingIndex = input.indexOf(\"=\");\n\t\t\tconst lastPaddingIndex = input.lastIndexOf(\"=\");\n\t\t\t// Padding should only occur at the end\n\t\t\tif (paddingIndex !== input.length - (input.length - paddingIndex)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Can only have 1 or 2 padding characters\n\t\t\tif (input.length - paddingIndex > 2) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Make sure all padding is at the end\n\t\t\tif (paddingIndex !== lastPaddingIndex && lastPaddingIndex !== paddingIndex + 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate _getUserPersonalization() {\n\t\tconst persContainerId = PersonalisationUtils.getPersContainerId(this);\n\t\tconst ownerComponent = PersonalisationUtils.getOwnerComponent(this) as Component;\n\t\treturn UshellPersonalizer.getInstance(persContainerId, ownerComponent);\n\t}\n}\n"],"mappings":"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","ignoreList":[]}