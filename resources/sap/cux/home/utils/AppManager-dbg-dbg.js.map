{"version":3,"file":"AppManager-dbg-dbg.js","names":["sap","ui","define","Log","ResourceBundle","VersionInfo","BaseObject","ODataModelV2","Config","Container","___AnalyticalCardSkeleton","___Constants","___DataFormatUtils","__HttpHelper","__RecommendedCardUtil","_interopRequireDefault","obj","__esModule","default","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","callback","e","_this","_isSettledPact","thenable","_forTo","array","body","check","i","reject","_cycle","length","AnalyticalCardSkeleton","_forOf","target","step","next","done","return","_fixup","TypeError","values","push","COLUMN_LENGTH","_catch","recover","DEFAULT_BG_COLOR","FALLBACK_ICON","FEATURE_TOGGLES","FEATURE_TOGGLE_SRVC_URL","MYHOME_PAGE_ID","MYHOME_SPACE_ID","MYINSIGHT_SECTION_ID","RECOMMENDATION_SRVC_URL","RECOMMENDED_CARD_LIMIT","createBookMarkData","getLeanURL","HttpHelper","RecommendedCardUtil","CONSTANTS","MUST_INCLUDE_RECOMMEDED_APPS","_parseSBParameters","oParam","oParsedParams","JSON","parse","oError","error","Error","message","String","undefined","_getTileProperties","vizConfigFLP","oTileProperties","_instantiationData","chip","configuration","oConfig","tileConfiguration","oTileConfig","TILE_PROPERTIES","_getAppId","sAppId","semanticObject","action","semanticAction","_getTargetUrl","sTargetURL","evaluationId","_isSmartBusinessTile","oVisualization","vizType","startsWith","_getAppTitleSubTitle","oApp","oAppTileInfo","bags","sb_tileProperties","texts","title","subtitle","description","_linkDuplicateVizs","aVizs","forEach","oDuplicateViz","filter","oViz","appId","visualization","id","persConfig","sectionIndex","duplicateApps","_isGUIVisualization","parameters","_isMustIncludeRecommendation","recViz","fioriId","includes","_isVisualizationAlreadyAdded","favoriteVisualizations","some","favViz","AppManager","aRequestQueue","bInsightsSectionPresent","vizDataModified","_oVizCacheData","_favPageVisualizations","componentData","fioriAppData","constructor","recommendedUtilInstance","getInstance","Instance","_fetchRequestFromQueue","bForceRefresh","Promise","resolve","getServiceAsync","oSpaceContentService","oPageLoadPromise","oRequestedPage","find","oRequest","pageId","getPage","pageLoadPromise","_fetchDynamicVizs","fetchFavVizs","aFavApps","oDynApp","isCount","isSmartBusinessTile","_getSections","arguments","_this2","oPage","aSections","sections","iRecentAppSectionIndex","findIndex","oSection","_temp2","_temp","_oMoveAppsPromise","moveSection","_fetchMyHomeVizs","_this3","oVizInstantiationService","iSectionIndex","visualizations","iVisualizationIndex","vizConfig","oVizInfo","oldAppId","targetURL","url","leanURL","BGColor","key","isFav","isSection","icon","icons","indicatorDataSource","path","contentProviderId","instantiateVisualization","setActive","vizInstance","sectionTitle","sectionId","visualizationIndex","isDefaultSection","isPresetSection","preset","_copyDynamicVizs","_this4","aDynamicVizs","all","map","oDynViz","addVisualization","vizId","bPreventGrouping","_this5","aMyHomeVizs","aVisibleFavVizs","_filterDuplicateVizs","_addGroupInformation","fetchInsightApps","sSectionTitle","_this6","_temp5","fnFetchInsightsApps","_temp4","insightsSectionIndex","_temp3","last","addSection","sectionProperties","visualizationId","spaceContentService","removeVisualizations","_ref","vizIds","_this7","_temp7","targetSection","_temp6","deleteVisualization","updateVisualizations","_ref2","sourceSectionIndex","sourceVisualizationIndex","oVisualizationData","updateVisualization","createInsightSection","_exit","_this8","_temp9","_result","_temp8","iMyInsightSectionIndex","_this8$addSection","visible","mProperties","getSectionVisualizations","forceRefresh","_this9","aApps","apps","addBookMark","bookmark","moveConfig","_this10","oBookmarkService","getContentNodes","aContentNodes","oMyHomeSpace","contentNode","children","addBookmark","moveVisualization","getVisualization","_this11","sectionVisualizations","sectionVisualization","_this12","targetSectionIndex","targetVisualizationIndex","aVisibleFavoriteVizs","bReturnDuplicateVizs","iVizIndex","iFirstIndex","oTempApp","aFavoriteVizs","aRecentVizs","oExistingSection","index","badge","toString","oPagesService","iPageIndex","getPageIndex","_getFeatureToggles","sFeatureToggleUrl","FEATURE_TOGGLE_KEYS","Object","keys","toggleFilter","sToggleKey","join","GetJSON","_HttpHelper$GetJSON","oResponse","isFeatureEnabled","sToggleId","_this13","aFeatureToggles","oToggle","oFeatureToggle","ToggleId","State","isURLParamEnabled","param","urlParams","URLSearchParams","window","location","search","get","toLowerCase","_getRecommenedFioriIds","_exit2","_this14","_temp11","_result3","recommendedFioriIds","_temp10","_HttpHelper$GetJSON2","response","app_id","_Promise$resolve","_getCatalogApps","_exit3","_this15","_temp14","_result4","catalogAppData","_temp13","SearchableContent","getApps","includeAppsWithoutVisualizations","_this15$catalogAppDat","_temp12","isAddCardToInsightsHidden","page","component","settings","tableSettings","addCardtoInsightsHidden","_checkValidManifests","manifest","dataSources","hasRequiredDataSource","mainService","pages","Array","isArray","_isListReport","pageValues","_getOdataModel","oManifest","datasource","annotationUrls","annotations","name","uri","Boolean","oDataModel","annotationURI","loadAnnotationsJoined","attachMetadataLoaded","attachMetadataFailed","_getEntitySet","entitySet","loadI18n","manifestUrl","_this16","_temp16","_RBManifestMap","absoluteUrl","i18nBundleUrl","URL","href","_temp15","create","bundleUrl","async","terminologies","oResourceBundle","getI18nValueOrDefaultString","sValue","oRB","sPath","substring","getText","_getAnalyticalCardManifest","stringify","getProcessedManifest","metaModel","manifestObj","parentApp","versionInfo","_this17","_temp19","_createCardManifest","cardInput","suppressRowNavigation","mainEntitySetName","mainEntitySet","getODataEntitySet","lineItemDetails","getLineItemDetails","lineItem","entitySetName","entityType","getODataEntityType","lrSettings","hasMandatoryProperties","property","parameterDetails","_getParametersisedEntitySetParams","paramEntitySet","_getManifestCardData","columns","headerInfo","cardTitle","TypeNamePlural","_temp18","i18n","appTitle","_temp17","i18nResourceBundle","fetchMetaModels","validManifests","_this18","odataPromises","_this18$_getOdataMode","getMetaModel","combineManifestsAndMetaModels","aMetaModel","reduce","combined","processManifests","combinedDetails","aCSTR","_this19","item","resolutionResult","ui5ComponentName","processAppList","aList","aAppComponentIds","aComponent","list","oComponent","oData","matchingData","entry","_getCardManifest","_this20","getFioriAppData","_ref3","aCatalog","aFioriData","load","_VersionInfo$load","flat","processedList","fetchManifests","manifests","cards","card","appIdList","fioriData","catalogData","appPromises","_exit4","aApp","_temp20","catalog","applicationDependencies","fetch","json","_response$json","_url$manifest","_result6","results","_removeDuplicateCards","aCards","oCardDict","aResult","oCard","sCardTitle","descriptorContent","header","getRecommenedCards","_this21","aAppIds","aManifests","aRecManifests","slice","aRecommendedCards","rec","getRecommendedVisualizations","_this22","_temp23","_recommendedVisualizations","_temp22","_temp21","finalRecommendations","mustIncludeRecommendations","_getVisualizationsByFioriIds","_ref4","recommendedVisualizations","concat","_getInboundApps","service","_oAdapter","_aInbounds","_this23","_temp25","_temp24","inbounds","oItem","signature","defaultValue","componentId","semanticData","combinedData","fioriIds","_this24","visitedVisualizations","Map","_ref5","catalogApps","authorizedApps","inbound","app","matchingVizualizations","catalogApp","guiVisualizations","matchingVizualization","nonGuiVisualizations","recommendedVisualization","has","set","_getAllFavPageApps","shouldReload","_exit5","_this25","_temp27","_result7","_temp26","loadedPages","pageIDs","pageIds","shouldLoadMissingApps","every","_this25$_favPageVisua","_loadAllPageVisualizations","_this25$_loadAllPageV","_this25$_favPageVisua2","shouldFetchDistinctApps","getBgColor","favPageVisualizations","getPages","pageData","aPages","section","oVizApp"],"sources":["AppManager.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport VersionInfo from \"sap/ui/VersionInfo\";\nimport BaseObject from \"sap/ui/base/Object\";\nimport ODataMetaModel, { Property } from \"sap/ui/model/odata/ODataMetaModel\";\nimport ODataModelV2 from \"sap/ui/model/odata/v2/ODataModel\";\nimport Config from \"sap/ushell/Config\";\nimport Container from \"sap/ushell/Container\";\nimport Bookmark from \"sap/ushell/services/BookmarkV2\";\nimport ClientSideTargetResolution from \"sap/ushell/services/ClientSideTargetResolution\";\nimport SearchableContent, { AppData } from \"sap/ushell/services/SearchableContent\";\nimport SpaceContent from \"sap/ushell/services/SpaceContent\";\nimport VisualizationInstantiation from \"sap/ushell/services/VisualizationInstantiation\";\nimport {\n\tICustomVisualization,\n\tICustomVizInstance,\n\tIParseSBParameters,\n\tISection,\n\tISectionAndVisualization,\n\tIVisualization\n} from \"../interface/AppsInterface\";\nimport {\n\tIAppInfo,\n\tIAppInfoData,\n\tIAppManifest,\n\tICard,\n\tICardDetails,\n\tICardManifest,\n\tIEntitySet,\n\tIEntityType,\n\tIHeaderInfo,\n\tIPageType,\n\tIVersionInfo,\n\tPageRecord\n} from \"../interface/CardsInterface\";\nimport { IPage } from \"../interface/PageSpaceInterface\";\nimport { AnalyticalCardSkeleton } from \"./AnalyticalCardSkeleton\";\nimport {\n\tCOLUMN_LENGTH,\n\tDEFAULT_BG_COLOR,\n\tFALLBACK_ICON,\n\tFEATURE_TOGGLES,\n\tFEATURE_TOGGLE_SRVC_URL,\n\tMYHOME_PAGE_ID,\n\tMYHOME_SPACE_ID,\n\tMYINSIGHT_SECTION_ID,\n\tRECOMMENDATION_SRVC_URL,\n\tRECOMMENDED_CARD_LIMIT\n} from \"./Constants\";\nimport { createBookMarkData, getLeanURL } from \"./DataFormatUtils\";\nimport HttpHelper from \"./HttpHelper\";\nimport RecommendedCardUtil from \"./RecommendedCardUtil\";\n\nconst CONSTANTS = {\n\tMUST_INCLUDE_RECOMMEDED_APPS: [\"F0862\", \"F1823\"] //My Inbox and Manage Timesheet apps\n};\n\ninterface IFeatureToggles {\n\tTASK_ACTIONS: string;\n}\n\ninterface ICombinedManifestDetails {\n\tmanifest: IValidManifest;\n\tmetaModel: ODataMetaModel;\n}\n\ninterface IValidManifest {\n\turl: string;\n\tmanifest: IAppManifest;\n}\n\nconst _parseSBParameters = (oParam: object | string | undefined): IParseSBParameters | undefined => {\n\tlet oParsedParams: IParseSBParameters | undefined = {};\n\tif (oParam) {\n\t\tif (typeof oParam === \"object\") {\n\t\t\toParsedParams = oParam;\n\t\t} else {\n\t\t\ttry {\n\t\t\t\toParsedParams = JSON.parse(oParam) as object;\n\t\t\t} catch (oError) {\n\t\t\t\tLog.error(oError instanceof Error ? oError.message : String(oError));\n\t\t\t\toParsedParams = undefined;\n\t\t\t}\n\t\t}\n\t}\n\treturn oParsedParams;\n};\n\nconst _getTileProperties = (vizConfigFLP?: IVisualization): IParseSBParameters | undefined => {\n\tlet oTileProperties: IParseSBParameters | undefined = {};\n\tif (vizConfigFLP?._instantiationData?.chip?.configuration) {\n\t\tconst oConfig: IParseSBParameters | undefined = _parseSBParameters(vizConfigFLP._instantiationData.chip.configuration);\n\t\tif (oConfig?.tileConfiguration) {\n\t\t\tconst oTileConfig: IParseSBParameters | undefined = _parseSBParameters(oConfig.tileConfiguration);\n\t\t\tif (oTileConfig) {\n\t\t\t\toTileProperties = _parseSBParameters(oTileConfig.TILE_PROPERTIES);\n\t\t\t}\n\t\t}\n\t}\n\treturn oTileProperties;\n};\n\nconst _getAppId = (vizConfigFLP: IVisualization | undefined): string => {\n\tlet sAppId = \"\";\n\tlet oTileProperties: IParseSBParameters | undefined = {};\n\tif (vizConfigFLP?.target?.semanticObject && vizConfigFLP?.target?.action) {\n\t\tsAppId = `#${vizConfigFLP.target.semanticObject}-${vizConfigFLP.target.action}`;\n\t} else if (vizConfigFLP?._instantiationData?.chip?.configuration) {\n\t\toTileProperties = _getTileProperties(vizConfigFLP);\n\t\tif (oTileProperties?.semanticObject && oTileProperties?.semanticAction) {\n\t\t\tsAppId = `#${oTileProperties?.semanticObject}-${oTileProperties?.semanticAction}`;\n\t\t}\n\t}\n\treturn sAppId;\n};\n\nconst _getTargetUrl = (vizConfigFLP: IVisualization | undefined) => {\n\tlet sTargetURL = _getAppId(vizConfigFLP) || \"\";\n\tconst oTileProperties = _getTileProperties(vizConfigFLP);\n\tif (oTileProperties?.evaluationId) {\n\t\tsTargetURL += \"?EvaluationId=\" + oTileProperties.evaluationId;\n\t}\n\treturn sTargetURL;\n};\n\nconst _isSmartBusinessTile = (oVisualization: IVisualization): boolean => {\n\treturn oVisualization.vizType?.startsWith(\"X-SAP-UI2-CHIP:SSB\");\n};\n\n// get App Title in case of value not present at root level\nconst _getAppTitleSubTitle = (oApp: IVisualization, vizConfigFLP: IVisualization): { title: string; subtitle: string } => {\n\tconst oAppTileInfo = vizConfigFLP?._instantiationData?.chip?.bags?.sb_tileProperties?.texts;\n\treturn {\n\t\ttitle: oApp.title ? oApp.title : oAppTileInfo?.title || \"\",\n\t\tsubtitle: oApp.subtitle ? oApp.subtitle : oAppTileInfo?.description || \"\"\n\t};\n};\n\n/**\n * Link Duplicate Visualizations to a single visualization\n *\n * @param {object[]} aVizs - array of visualizations\n * @returns {object[]} arry of visualizations after linking duplicate visualizations\n * @private\n */\nconst _linkDuplicateVizs = (aVizs: ICustomVisualization[]) => {\n\taVizs.forEach((oDuplicateViz) => {\n\t\taVizs\n\t\t\t.filter(\n\t\t\t\t(oViz) =>\n\t\t\t\t\toViz.appId === oDuplicateViz.appId &&\n\t\t\t\t\toViz?.visualization?.id !== oDuplicateViz?.visualization?.id &&\n\t\t\t\t\toViz.persConfig?.sectionIndex === oDuplicateViz.persConfig?.sectionIndex\n\t\t\t)\n\t\t\t.forEach((oViz) => {\n\t\t\t\toViz?.persConfig?.duplicateApps?.push(oDuplicateViz);\n\t\t\t});\n\t});\n\n\treturn aVizs;\n};\n\nconst _isGUIVisualization = (visualization: AppData) => {\n\treturn visualization?.target?.parameters?.[\"sap-ui-tech-hint\"]?.value?.value === \"GUI\";\n};\n\nconst _isMustIncludeRecommendation = (recViz: ICustomVisualization) => {\n\treturn recViz.fioriId && CONSTANTS.MUST_INCLUDE_RECOMMEDED_APPS.includes(recViz.fioriId);\n};\n\nconst _isVisualizationAlreadyAdded = (visualization: ICustomVisualization, favoriteVisualizations: ICustomVisualization[]) => {\n\treturn !favoriteVisualizations.some(\n\t\t(favViz) =>\n\t\t\tfavViz.visualization?.target?.semanticObject === visualization.visualization?.target?.semanticObject &&\n\t\t\tfavViz.visualization?.target?.action === visualization.visualization?.target?.action\n\t);\n};\n\n/**\n *\n * @class Provides the AppManager Class used for fetch and process user apps.\n *\n * @extends sap.ui.BaseObject\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121.0\n *\n * @private\n * @experimental Since 1.121\n * @hidden\n *\n * @alias sap.cux.home.util.AppManager\n */\n\nexport default class AppManager extends BaseObject {\n\tprivate aRequestQueue: { pageId: string; pageLoadPromise: Promise<IPage> }[] = [];\n\tprivate _oMoveAppsPromise!: Promise<void>;\n\tprivate bInsightsSectionPresent: boolean = false;\n\tpublic insightsSectionIndex!: number;\n\tstatic Instance: AppManager;\n\tprivate recommendedFioriIds!: string[];\n\tprivate versionInfo!: IVersionInfo;\n\tprivate _RBManifestMap!: Record<string, ResourceBundle>;\n\tprivate _recommendedVisualizations!: ICustomVisualization[];\n\tprivate vizDataModified: boolean = false;\n\tprivate _oVizCacheData: { [key: string]: ICustomVizInstance } = {};\n\tprivate _favPageVisualizations: ICustomVisualization[] = [];\n\tprivate componentData: IAppInfo = {};\n\tprivate fioriAppData: IAppInfo = {};\n\tprivate recommendedUtilInstance: RecommendedCardUtil;\n\tprivate catalogAppData!: Promise<AppData[]> | undefined;\n\n\tprivate constructor() {\n\t\tsuper();\n\t\tthis.recommendedUtilInstance = RecommendedCardUtil.getInstance();\n\t}\n\n\tstatic getInstance() {\n\t\tif (!AppManager.Instance) {\n\t\t\tAppManager.Instance = new AppManager();\n\t\t}\n\t\treturn AppManager.Instance;\n\t}\n\t/**\n\t * Returns page load promise from the request queue if it exists, adds it to the queue if it doesn't\n\t *\n\t * @param {string} sPageId - page id\n\t * @param {boolean} bForceRefresh - force reload of data if true\n\t * @returns {Promise} - returns a promise which resolves with the requested page data\n\t * @private\n\t */\n\tprivate async _fetchRequestFromQueue(bForceRefresh: boolean): Promise<IPage> {\n\t\tconst oSpaceContentService = await Container.getServiceAsync<SpaceContent>(\"SpaceContent\");\n\t\tlet oPageLoadPromise: Promise<IPage>;\n\t\tthis.aRequestQueue = this.aRequestQueue || [];\n\n\t\t//Check if request already exists in the queue, if not add it\n\t\tconst oRequestedPage = this.aRequestQueue.find((oRequest) => oRequest.pageId === MYHOME_PAGE_ID);\n\t\tif (!oRequestedPage || bForceRefresh === true || this.vizDataModified === true) {\n\t\t\tthis.vizDataModified = false;\n\t\t\toPageLoadPromise = oSpaceContentService.getPage(MYHOME_PAGE_ID);\n\t\t\tif (oRequestedPage) {\n\t\t\t\toRequestedPage.pageLoadPromise = oPageLoadPromise;\n\t\t\t} else {\n\t\t\t\tthis.aRequestQueue.push({\n\t\t\t\t\tpageId: MYHOME_PAGE_ID,\n\t\t\t\t\tpageLoadPromise: oPageLoadPromise\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\toPageLoadPromise = oRequestedPage.pageLoadPromise;\n\t\t}\n\n\t\treturn oPageLoadPromise;\n\t}\n\t/**\n\t * Returns all dynamic visualizations present in MyHome page\n\t *\n\t * @param {boolean} bForceRefresh - force reload of visualizations data\n\t * @returns {Promise} - resolves to array of all dynamic visualizations in MyHome page\n\t * @private\n\t */\n\tprivate _fetchDynamicVizs(bForceRefresh: boolean) {\n\t\treturn this.fetchFavVizs(bForceRefresh, true).then((aFavApps: ICustomVisualization[]) =>\n\t\t\taFavApps.filter((oDynApp) => oDynApp.isCount || oDynApp.isSmartBusinessTile)\n\t\t);\n\t}\n\t/**\n\t * Returns all the sections that are available in the MyHome page\n\t *\n\t * @param {boolean} bForceRefresh - force reload of visualizations data\n\t * @returns {Promise} - resolves to array of all sections available in MyHome page\n\t * @private\n\t */\n\tpublic async _getSections(bForceRefresh: boolean = false): Promise<ISection[]> {\n\t\tconst oPage: IPage = await this._fetchRequestFromQueue(bForceRefresh);\n\t\tconst aSections = (oPage && oPage.sections) || [],\n\t\t\tiRecentAppSectionIndex: number = aSections.findIndex((oSection) => oSection.default);\n\t\tif (iRecentAppSectionIndex > 0) {\n\t\t\tif (this._oMoveAppsPromise !== undefined) {\n\t\t\t\tthis._oMoveAppsPromise = this.moveSection(iRecentAppSectionIndex, 0);\n\t\t\t\tawait this._oMoveAppsPromise;\n\t\t\t}\n\t\t\treturn this._getSections(true);\n\t\t} else {\n\t\t\treturn aSections;\n\t\t}\n\t}\n\t/**\n\t * Models and returns all visualizations available in MyHome page\n\t *\n\t * @param {bool} bForceRefresh - force reload of visualizations data\n\t * @returns {Promise} - resolves to array of all apps available in MyHome page\n\t * @private\n\t */\n\tprivate async _fetchMyHomeVizs(bForceRefresh: boolean): Promise<ICustomVisualization[]> {\n\t\tconst aVizs: ICustomVisualization[] = [];\n\t\tthis._oVizCacheData = this._oVizCacheData || {};\n\t\tconst aSections = await this._getSections(bForceRefresh);\n\t\tconst oVizInstantiationService = await Container.getServiceAsync<VisualizationInstantiation>(\"VisualizationInstantiation\");\n\t\taSections.forEach((oSection: ISection, iSectionIndex: number) => {\n\t\t\toSection?.visualizations?.forEach((oVisualization: IVisualization, iVisualizationIndex: number) => {\n\t\t\t\tconst vizConfig = oVisualization.vizConfig,\n\t\t\t\t\toVizInfo = vizConfig?.[\"sap.app\"] || ({ title: \"?\" } as IVisualization),\n\t\t\t\t\toViz = {} as ICustomVisualization;\n\n\t\t\t\toViz.oldAppId = _getAppId(vizConfig?.[\"sap.flp\"]);\n\t\t\t\toViz.appId = oVisualization?.targetURL; // Using targetURL as unique identifier as in certian scenario vizConfig can be empty.\n\t\t\t\toViz.url = oVisualization?.targetURL;\n\t\t\t\tif (!oViz.url && _isSmartBusinessTile(oVisualization)) {\n\t\t\t\t\toViz.url = _getTargetUrl(vizConfig?.[\"sap.flp\"]);\n\t\t\t\t}\n\t\t\t\toViz.leanURL = getLeanURL(oViz.url);\n\t\t\t\toViz.title = oVisualization?.title || _getAppTitleSubTitle(oVizInfo, oVisualization)?.title;\n\t\t\t\toViz.subtitle = oVisualization.subtitle || _getAppTitleSubTitle(oVizInfo, oVisualization).subtitle;\n\t\t\t\toViz.BGColor = DEFAULT_BG_COLOR().key;\n\t\t\t\toViz.isFav = true;\n\t\t\t\toViz.isSection = false;\n\t\t\t\toViz.icon = vizConfig?.[\"sap.ui\"]?.icons?.icon || FALLBACK_ICON;\n\t\t\t\tif (oVisualization?.indicatorDataSource) {\n\t\t\t\t\toViz.isCount = true;\n\t\t\t\t\toViz.indicatorDataSource = oVisualization.indicatorDataSource.path;\n\t\t\t\t\toViz.contentProviderId = oVisualization.contentProviderId;\n\t\t\t\t}\n\t\t\t\toViz.isSmartBusinessTile = _isSmartBusinessTile(oVisualization);\n\t\t\t\tif (oViz.isSmartBusinessTile) {\n\t\t\t\t\tif (!this._oVizCacheData[oViz.appId]) {\n\t\t\t\t\t\tthis._oVizCacheData[oViz.appId] = oVizInstantiationService.instantiateVisualization(\n\t\t\t\t\t\t\toVisualization\n\t\t\t\t\t\t) as ICustomVizInstance;\n\t\t\t\t\t\tthis._oVizCacheData[oViz.appId].setActive(true);\n\t\t\t\t\t}\n\t\t\t\t\toViz.vizInstance = this._oVizCacheData[oViz.appId];\n\t\t\t\t}\n\t\t\t\t// Add FLP Personalization Config\n\t\t\t\toViz.persConfig = {\n\t\t\t\t\tpageId: MYHOME_PAGE_ID,\n\t\t\t\t\tsectionTitle: oSection.title,\n\t\t\t\t\tsectionId: oSection.id,\n\t\t\t\t\tsectionIndex: iSectionIndex,\n\t\t\t\t\tvisualizationIndex: iVisualizationIndex,\n\t\t\t\t\tisDefaultSection: oSection.default,\n\t\t\t\t\tisPresetSection: oSection.preset,\n\t\t\t\t\tduplicateApps: []\n\t\t\t\t};\n\t\t\t\toViz.visualization = oVisualization;\n\t\t\t\t// Title and Subtitle in visualization are required in Insights Dialog.\n\t\t\t\toViz.visualization.title = oViz.title;\n\t\t\t\toViz.visualization.subtitle = oViz.subtitle;\n\t\t\t\taVizs.push(oViz);\n\t\t\t});\n\t\t});\n\t\treturn aVizs;\n\t}\n\t/**\n\t * Copies all Dynamic visualizations to Insights section\n\t *\n\t * @returns {Promise} - resolves to void and copy all the visualizations\n\t * @private\n\t */\n\tprivate async _copyDynamicVizs() {\n\t\tconst aDynamicVizs: ICustomVisualization[] = await this._fetchDynamicVizs(true);\n\t\treturn Promise.all(\n\t\t\taDynamicVizs.map((oDynViz: ICustomVisualization) => {\n\t\t\t\treturn this.addVisualization(oDynViz.visualization!.vizId, MYINSIGHT_SECTION_ID);\n\t\t\t})\n\t\t);\n\t}\n\t/**\n\t * Returns a list of all favorite vizualizations in MyHome page\n\t *\n\t * @param {boolean} bForceRefresh - force reload of vizualizations data\n\t * @param {boolean} bPreventGrouping - prevent vizualizations grouping\n\t * @returns {Promise} - resolves to array of favourite vizualizations in MyHome page\n\t * @private\n\t */\n\tpublic async fetchFavVizs(bForceRefresh: boolean, bPreventGrouping?: boolean): Promise<ISectionAndVisualization[]> {\n\t\tconst aMyHomeVizs = await this._fetchMyHomeVizs(bForceRefresh);\n\t\tconst aVisibleFavVizs = aMyHomeVizs.filter(\n\t\t\t(oViz) => oViz.persConfig && oViz.persConfig.sectionId !== MYINSIGHT_SECTION_ID && oViz.url && oViz.title\n\t\t);\n\n\t\tif (bPreventGrouping) {\n\t\t\treturn this._filterDuplicateVizs(_linkDuplicateVizs(aVisibleFavVizs), false);\n\t\t} else {\n\t\t\treturn this._addGroupInformation(aVisibleFavVizs);\n\t\t}\n\t}\n\t/**\n\t * Returns all vizualizations present in the Insights Section\n\t *\n\t * @param {boolean} bForceRefresh - force reload insights vizualizations data\n\t * @param {string} sSectionTitle - optional, title of insights section to be used while creating insights section\n\t * @returns {Promise} - resolves to an array with all vizualizations in Insights section\n\t */\n\tpublic async fetchInsightApps(bForceRefresh: boolean, sSectionTitle: string) {\n\t\tconst fnFetchInsightsApps = async () => {\n\t\t\tconst aVizs = await this._fetchMyHomeVizs(bForceRefresh);\n\t\t\treturn aVizs.filter((oViz) => oViz.persConfig?.sectionId === MYINSIGHT_SECTION_ID && oViz.url && oViz.title);\n\t\t};\n\n\t\tif (!this.bInsightsSectionPresent) {\n\t\t\tconst aSections: ISection[] = await this._getSections(bForceRefresh);\n\t\t\tthis.insightsSectionIndex = aSections.findIndex(function (oSection) {\n\t\t\t\treturn oSection.id === MYINSIGHT_SECTION_ID;\n\t\t\t});\n\n\t\t\tif (\n\t\t\t\tthis.insightsSectionIndex === -1 &&\n\t\t\t\t(Config.last(\"/core/shell/enablePersonalization\") || Config.last(\"/core/catalog/enabled\")) &&\n\t\t\t\tthis.bInsightsSectionPresent === false\n\t\t\t) {\n\t\t\t\tthis.bInsightsSectionPresent = true;\n\t\t\t\tawait this.addSection({\n\t\t\t\t\tsectionIndex: aSections?.length,\n\t\t\t\t\tsectionProperties: {\n\t\t\t\t\t\tid: MYINSIGHT_SECTION_ID,\n\t\t\t\t\t\ttitle: sSectionTitle\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tawait this._copyDynamicVizs();\n\t\t\t} else {\n\t\t\t\tthis.bInsightsSectionPresent = true;\n\t\t\t}\n\t\t}\n\n\t\treturn await fnFetchInsightsApps();\n\t}\n\n\t/**\n\t * Add visualization to a particular section\n\t *\n\t * @param {string} visualizationId - The id of the visualization to add.\n\t * @param {string} sectionId - The id of the section the visualization should be added to (optional parameter)\n\t * @returns {Promise} resolves to void after adding app to a section\n\t * @private\n\t */\n\tpublic async addVisualization(visualizationId: string, sectionId: string | undefined = undefined): Promise<void> {\n\t\tconst spaceContentService = await Container.getServiceAsync<SpaceContent>(\"SpaceContent\");\n\t\tawait spaceContentService.addVisualization(MYHOME_PAGE_ID, sectionId, visualizationId);\n\t}\n\n\t/**\n\t * @param {object} mProperties - map of properties\n\t * @param {string} mProperties.sectionId - section id from which visualizations should be removed\n\t * @param {object[]} mProperties.appIds - array of url of visualizations that has to be deleted\n\t * @param {boolean} mProperties.ignoreDuplicateApps - if true doesn't remove the duplicate apps, else removes the duplicate apps as well\n\t * @private\n\t * @returns {Promise} resolves after all visualizations are deleted\n\t */\n\tpublic async removeVisualizations({ sectionId, vizIds }: { sectionId: string; vizIds: string[] }) {\n\t\tconst spaceContentService = await Container.getServiceAsync<SpaceContent>(\"SpaceContent\");\n\t\tfor (const vizId of vizIds) {\n\t\t\tconst sections = await this._getSections(true);\n\t\t\tconst sectionIndex = sections.findIndex((oSection) => oSection.id === sectionId);\n\t\t\tconst targetSection = sectionIndex > -1 ? sections[sectionIndex] : null;\n\t\t\tconst visualizationIndex = targetSection?.visualizations?.findIndex((oVisualization) => oVisualization.id === vizId) ?? -1;\n\t\t\tif (visualizationIndex > -1) {\n\t\t\t\tawait spaceContentService.deleteVisualization(MYHOME_PAGE_ID, sectionIndex, visualizationIndex);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {object} mProperties - map of properties\n\t * @param {string} mProperties.pageId - page id from which visualizations should be updated\n\t * @param {object[]} mProperties.sourceSectionIndex - section index in which visualization that has to be updated\n\t * @param {boolean} mProperties.sourceVisualizationIndex - visualization index in the which should be updated\n\t * @param {boolean} mProperties.oVisualizationData - visualization data which will be updated for the vizualisation\n\t * @private\n\t * @returns {Promise} resolves to void\n\t */\n\tpublic async updateVisualizations({\n\t\tpageId,\n\t\tsourceSectionIndex,\n\t\tsourceVisualizationIndex,\n\t\toVisualizationData\n\t}: {\n\t\tpageId: string;\n\t\tsourceSectionIndex: number;\n\t\tsourceVisualizationIndex: number;\n\t\toVisualizationData: { displayFormatHint: string };\n\t}) {\n\t\tconst spaceContentService = await Container.getServiceAsync<SpaceContent>(\"SpaceContent\");\n\t\treturn spaceContentService.updateVisualization(pageId, sourceSectionIndex, sourceVisualizationIndex, oVisualizationData);\n\t}\n\n\t/**\n\t * Create Insight Section if not already present\n\t *\n\t * @param {string} sSectionTitle - optional, section title\n\t * @returns {Promise} - resolves to insight section created\n\t */\n\tpublic async createInsightSection(sSectionTitle: string) {\n\t\tif (!this.bInsightsSectionPresent) {\n\t\t\tconst aSections = await this._getSections();\n\t\t\tconst iMyInsightSectionIndex = aSections.findIndex(function (oSection) {\n\t\t\t\treturn oSection.id === MYINSIGHT_SECTION_ID;\n\t\t\t});\n\n\t\t\t//check if myinsight section exists, if not create one\n\t\t\tif (\n\t\t\t\tiMyInsightSectionIndex === -1 &&\n\t\t\t\t(Config.last(\"/core/shell/enablePersonalization\") || Config.last(\"/core/catalog/enabled\"))\n\t\t\t) {\n\t\t\t\treturn this.addSection({\n\t\t\t\t\tsectionIndex: aSections.length,\n\t\t\t\t\tsectionProperties: {\n\t\t\t\t\t\tid: MYINSIGHT_SECTION_ID,\n\t\t\t\t\t\ttitle: sSectionTitle,\n\t\t\t\t\t\tvisible: true\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Adds a section\n\t *\n\t * @param {object} mProperties - map of properties\n\t * @param {string} mProperties.sectionIndex - section index\n\t * @param {object} mProperties.sectionProperties - section properties\n\t * @returns {Promise} resolves to void and creates the section\n\t * @private\n\t */\n\tpublic async addSection(mProperties: ISection) {\n\t\tconst { sectionIndex, sectionProperties } = mProperties;\n\t\tconst oSpaceContentService = await Container.getServiceAsync<SpaceContent>(\"SpaceContent\");\n\t\tawait oSpaceContentService.addSection(MYHOME_PAGE_ID, sectionIndex, {\n\t\t\t...sectionProperties,\n\t\t\tvisible: true\n\t\t});\n\t}\n\n\t/**\n\t * Returns visualizations for a given section\n\t * @param {string} sectionId - section id\n\t * @param {boolean} [forceRefresh=false] - force reload of data if true\n\t * @returns {Promise} resolves to array of visualizations\n\t * @private\n\t */\n\tpublic async getSectionVisualizations(sectionId?: string, forceRefresh = false): Promise<ICustomVisualization[]> {\n\t\tconst aApps: ISectionAndVisualization[] = await this.fetchFavVizs(forceRefresh);\n\t\tif (sectionId) {\n\t\t\treturn aApps.find((oViz) => oViz.isSection && oViz.id === sectionId)?.apps || [];\n\t\t} else {\n\t\t\treturn aApps.filter((oViz) => !oViz.isSection); //return recently added apps\n\t\t}\n\t}\n\n\t/**\n\t * Adds a bookmark.\n\t * @private\n\t * @param {Object} bookmark - The bookmark data object.\n\t * @returns {Promise<void>} - A Promise that resolves once the bookmark is added.\n\t */\n\tpublic async addBookMark(\n\t\tbookmark: IVisualization,\n\t\tmoveConfig?: {\n\t\t\tsourceSectionIndex: number;\n\t\t\tsourceVisualizationIndex: number;\n\t\t\ttargetSectionIndex: number;\n\t\t\ttargetVisualizationIndex: number;\n\t\t}\n\t) {\n\t\tconst oBookmarkService: Bookmark = await Container.getServiceAsync(\"BookmarkV2\");\n\t\tconst aContentNodes = await oBookmarkService.getContentNodes();\n\t\tconst oMyHomeSpace = aContentNodes.find((contentNode) => contentNode.id === MYHOME_SPACE_ID);\n\t\tconst contentNode = oMyHomeSpace?.children?.find((contentNode) => contentNode.id === MYHOME_PAGE_ID);\n\t\tawait oBookmarkService.addBookmark(createBookMarkData(bookmark), contentNode);\n\t\tif (moveConfig) {\n\t\t\treturn this.moveVisualization(moveConfig);\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Retrieves the visualization with the specified appId within the specified section.\n\t * @param {string} appId - appId of the visualization for.\n\t * @param {string} sectionId - The ID of the section containing the visualization.\n\t * @param {boolean} [forceRefresh=false] - Whether to force a refresh of the section's cache.\n\t * @returns {Promise<object|null>} A promise that resolves with the visualization object if found, or null if not found.\n\t * @private\n\t */\n\tpublic async getVisualization(appId: string, sectionId?: string, forceRefresh = false) {\n\t\tconst sectionVisualizations = await this.getSectionVisualizations(sectionId, forceRefresh);\n\t\treturn sectionVisualizations.find((sectionVisualization) => sectionVisualization.appId === appId);\n\t}\n\n\t/**\n\t * Moves a visualization from source section to target section.\n\t * @param {object} moveConfig - Configuration object containing details for moving the visualization.\n\t * @param {number} moveConfig.sourceSectionIndex - Index of the source section.\n\t * @param {number} moveConfig.sourceVisualizationIndex - Index of the visualization within the source section.\n\t * @param {number} moveConfig.targetSectionIndex - Index of the target section.\n\t * @param {number} moveConfig.targetVisualizationIndex - Index at which the visualization will be placed within the target section.\n\t * @returns {Promise<void>} A promise that resolves to void after the move operation.\n\t * @private\n\t */\n\tpublic async moveVisualization(moveConfig: {\n\t\tsourceSectionIndex: number;\n\t\tsourceVisualizationIndex: number;\n\t\ttargetSectionIndex: number;\n\t\ttargetVisualizationIndex: number;\n\t}) {\n\t\tconst spaceContentService = await Container.getServiceAsync<SpaceContent>(\"SpaceContent\");\n\t\tthis.vizDataModified = true;\n\t\treturn spaceContentService.moveVisualization(\n\t\t\tMYHOME_PAGE_ID,\n\t\t\tmoveConfig.sourceSectionIndex,\n\t\t\tmoveConfig.sourceVisualizationIndex,\n\t\t\tmoveConfig.targetSectionIndex,\n\t\t\tmoveConfig.targetVisualizationIndex\n\t\t);\n\t}\n\n\t/**\n\t * Filters out duplicate visualizations from a list of all visualizations\n\t *\n\t * @param {object[]} aVisibleFavoriteVizs - array containing list of all visualizations\n\t * @param {boolean} bReturnDuplicateVizs - flag when set to true, returns only the duplicate apps\n\t * @returns {object[]} filtered array of vizualisations\n\t * @private\n\t */\n\tpublic _filterDuplicateVizs(aVisibleFavoriteVizs: ICustomVisualization[], bReturnDuplicateVizs: boolean) {\n\t\treturn aVisibleFavoriteVizs.filter((oViz, iVizIndex, aVizs) => {\n\t\t\tconst iFirstIndex = aVizs.findIndex((oTempApp) => oTempApp.appId === oViz.appId);\n\t\t\treturn bReturnDuplicateVizs ? iFirstIndex !== iVizIndex : iFirstIndex === iVizIndex;\n\t\t});\n\t}\n\n\t/**\n\t * Add Grouping Information to visualizations list, and return concatenated list.\n\t *\n\t * @param {object[]} aFavoriteVizs - list of all favorite visualizations\n\t * @returns {object[]} - concatenated list contaning grouping information as well\n\t * @private\n\t */\n\tprivate _addGroupInformation(aFavoriteVizs: ICustomVisualization[]) {\n\t\tconst aRecentVizs: ICustomVisualization[] = [],\n\t\t\taSections: ISection[] = [];\n\t\tlet oExistingSection: ISection | undefined;\n\n\t\t_linkDuplicateVizs(aFavoriteVizs).forEach((oViz) => {\n\t\t\tif (oViz.persConfig?.isDefaultSection) {\n\t\t\t\taRecentVizs.push(oViz);\n\t\t\t} else {\n\t\t\t\toExistingSection = aSections.find((oSection) => oSection.isSection && oSection.id === oViz.persConfig?.sectionId);\n\n\t\t\t\tif (!oExistingSection) {\n\t\t\t\t\taSections.push({\n\t\t\t\t\t\tid: oViz.persConfig?.sectionId,\n\t\t\t\t\t\tindex: oViz.persConfig?.sectionIndex,\n\t\t\t\t\t\ttitle: oViz.persConfig?.sectionTitle || \"\",\n\t\t\t\t\t\tbadge: \"1\",\n\t\t\t\t\t\tBGColor: DEFAULT_BG_COLOR().key,\n\t\t\t\t\t\ticon: \"sap-icon://folder-full\",\n\t\t\t\t\t\tisSection: true,\n\t\t\t\t\t\tisPresetSection: oViz.persConfig?.isPresetSection,\n\t\t\t\t\t\tapps: [oViz]\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\toExistingSection.apps?.push(oViz);\n\t\t\t\t\toExistingSection.badge = oExistingSection.apps?.length.toString();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t//filter out duplicate apps only from recent apps list\n\t\treturn [...aSections, ...this._filterDuplicateVizs(aRecentVizs, false)];\n\t}\n\n\t/**\n\t * Move a section within a page\n\t *\n\t * @param {number} sourceSectionIndex - source index (previous index of the section in the page before move)\n\t * @param {number} targetSectionIndex - target index (desired index of the section in the page after move)\n\t * @returns {Promise} resolves to void  and moves the section to desired index within the page\n\t * @private\n\t */\n\tpublic async moveSection(sourceSectionIndex: number, targetSectionIndex: number): Promise<void> {\n\t\treturn Container.getServiceAsync(\"Pages\").then(function (oPagesService: {\n\t\t\tgetPageIndex: (id: string) => number;\n\t\t\tmoveSection: (index: number, sourceIndex: number, targetIndex: number) => void;\n\t\t}) {\n\t\t\tconst iPageIndex: number = oPagesService.getPageIndex(MYHOME_PAGE_ID);\n\t\t\treturn oPagesService.moveSection(iPageIndex, sourceSectionIndex, targetSectionIndex);\n\t\t} as () => void);\n\t}\n\n\t/**\n\t * Returns array of all feature toggles\n\t *\n\t * @returns {object[]} - returns array of all feature toggles.\n\t */\n\tprivate async _getFeatureToggles() {\n\t\tlet sFeatureToggleUrl = FEATURE_TOGGLE_SRVC_URL + \"?$filter=\";\n\t\tconst FEATURE_TOGGLE_KEYS = Object.keys(FEATURE_TOGGLES);\n\t\tconst toggleFilter = FEATURE_TOGGLE_KEYS.map((sToggleKey) => {\n\t\t\treturn \"ToggleId eq '\" + FEATURE_TOGGLES[sToggleKey as keyof IFeatureToggles] + \"'\";\n\t\t}).join(\" or \");\n\t\tsFeatureToggleUrl = sFeatureToggleUrl + \"(\" + toggleFilter + \")\";\n\t\tconst oResponse = (await HttpHelper.GetJSON(sFeatureToggleUrl)) as {\n\t\t\terror: { message: string };\n\t\t\tvalue: Array<{ ToggleId: string; State: string }>;\n\t\t};\n\t\tif (oResponse?.error) {\n\t\t\tthrow new Error(oResponse.error.message);\n\t\t}\n\t\treturn oResponse?.value || [];\n\t}\n\n\t/**\n\t * Checks if feature is enabled or not.\n\t *\n\t * @param {string} sToggleId - feature toggle id\n\t * @returns {boolean} - returns true if feature is enabled.\n\t */\n\tpublic async isFeatureEnabled(sToggleId: string) {\n\t\ttry {\n\t\t\tconst aFeatureToggles = await this._getFeatureToggles();\n\t\t\tconst oToggle = aFeatureToggles.find((oFeatureToggle) => {\n\t\t\t\treturn oFeatureToggle.ToggleId === sToggleId;\n\t\t\t});\n\t\t\treturn !oToggle || oToggle.State === \"\" ? false : true;\n\t\t} catch (error) {\n\t\t\tLog.error(\"Unable to load feature toggles: \" + (error as Error).message);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Checks if a specific URL parameter is enabled (set to \"true\").\n\t *\n\t * @param {string} param - The name of the URL parameter to check.\n\t * @returns {boolean} `true` if the URL parameter exists and is set to \"true\" (case-insensitive), otherwise `false`.\n\t */\n\tpublic isURLParamEnabled(param: string): boolean {\n\t\tconst urlParams = new URLSearchParams(window.location.search);\n\t\treturn urlParams?.get(param)?.toLowerCase() === \"true\" || false;\n\t}\n\n\t/**\n\t * Fetch Recommended Fiori IDs\n\t *\n\t * @returns {Promise} resolves to array of recommended fiori ids\n\t * @private\n\t */\n\tprivate async _getRecommenedFioriIds(bForceRefresh: boolean = false): Promise<string[]> {\n\t\tif (!this.recommendedFioriIds || bForceRefresh) {\n\t\t\ttry {\n\t\t\t\tconst response = (await HttpHelper.GetJSON(RECOMMENDATION_SRVC_URL)) as {\n\t\t\t\t\terror: { message: string };\n\t\t\t\t\tvalue: Array<{ app_id: string }>;\n\t\t\t\t};\n\t\t\t\tthis.recommendedFioriIds =\n\t\t\t\t\tresponse?.value?.map((oApp) => {\n\t\t\t\t\t\treturn oApp.app_id;\n\t\t\t\t\t}) || [];\n\t\t\t} catch (error) {\n\t\t\t\tLog.error(\"Unable to load recommendations: \" + (error as Error).message);\n\t\t\t\treturn Promise.resolve([]);\n\t\t\t}\n\t\t}\n\t\treturn this.recommendedFioriIds;\n\t}\n\n\t/**\n\t * Fetch Catalog Apps\n\t *\n\t * @returns {Promise} resolves to array of Catalog Apps\n\t * @private\n\t */\n\tpublic async _getCatalogApps() {\n\t\tif (!this.catalogAppData) {\n\t\t\ttry {\n\t\t\t\tconst SearchableContent = await Container.getServiceAsync<SearchableContent>(\"SearchableContent\");\n\t\t\t\tthis.catalogAppData = SearchableContent.getApps({ includeAppsWithoutVisualizations: false });\n\t\t\t\treturn this.catalogAppData;\n\t\t\t} catch (error) {\n\t\t\t\tthis.catalogAppData = undefined;\n\t\t\t\tLog.error(error instanceof Error ? \"Error while fetching catalog apps:\" + error.message : String(error));\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(this.catalogAppData);\n\t}\n\n\t/**\n\t * Checks whether page settings contains addCardtoInsightsHidden\n\t * @param {object} page - page object\n\t * @returns {boolean} returns boolean\n\t * @private\n\t */\n\tprivate isAddCardToInsightsHidden(page?: IPageType) {\n\t\treturn page?.component?.settings?.tableSettings?.addCardtoInsightsHidden;\n\t}\n\n\t/**\n\t * check Valid Manifests\n\t *\n\t * @returns {boolean} returns boolean\n\t * @private\n\t */\n\n\tprivate _checkValidManifests(manifest: IAppManifest): boolean {\n\t\tconst dataSources = manifest[\"sap.app\"]?.dataSources;\n\n\t\t// Ensure dataSources has the correct structure for `mainService`\n\t\tconst hasRequiredDataSource = manifest[\"sap.ui.generic.app\"] && dataSources?.mainService;\n\n\t\tif (!hasRequiredDataSource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst pages = manifest[\"sap.ui.generic.app\"]?.pages;\n\t\t// if its not list report component or if listreport page settings has\n\t\t// isAddCardToInsightsHidden as true, then do not recommend the card\n\t\tif (Array.isArray(pages)) {\n\t\t\treturn this.recommendedUtilInstance._isListReport(pages[0]) && !this.isAddCardToInsightsHidden(pages[0]);\n\t\t}\n\n\t\tconst pageValues = Object.values(pages as PageRecord);\n\t\tif (pageValues.length > 0) {\n\t\t\treturn pageValues.some((page) => {\n\t\t\t\treturn (\n\t\t\t\t\ttypeof page === \"object\" && this.recommendedUtilInstance._isListReport(page) && !this.isAddCardToInsightsHidden(page)\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Get OData Model\n\t *\n\t * @param {object} manifest - manifest object\n\t * @returns {ODataModelV2} returns OData Model\n\t * @private\n\t */\n\tprivate _getOdataModel(oManifest: IAppManifest): Promise<ODataModelV2> {\n\t\treturn new Promise(function (resolve) {\n\t\t\tconst datasource = oManifest?.[\"sap.app\"]?.dataSources;\n\t\t\tconst mainService = datasource?.mainService;\n\t\t\tlet annotationUrls: string[] = (mainService?.settings?.annotations || [])\n\t\t\t\t.map((name: string) => datasource?.[name]?.uri || \"\")\n\t\t\t\t.filter(Boolean);\n\n\t\t\tconst oDataModel = new ODataModelV2(mainService?.uri as string, {\n\t\t\t\tannotationURI: annotationUrls,\n\t\t\t\tloadAnnotationsJoined: true\n\t\t\t});\n\t\t\toDataModel.attachMetadataLoaded(() => {\n\t\t\t\tresolve(oDataModel);\n\t\t\t});\n\t\t\toDataModel.attachMetadataFailed(() => {\n\t\t\t\tresolve(oDataModel);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Get Entity Set\n\t *\n\t * @param {object} manifest - manifest object\n\t * @returns {string} returns entity set\n\t * @private\n\t */\n\tprivate _getEntitySet(manifest: IAppManifest): string | undefined {\n\t\tconst pages = manifest[\"sap.ui.generic.app\"]?.pages;\n\t\tif (Array.isArray(pages)) {\n\t\t\treturn pages[0].entitySet;\n\t\t} else if (pages) {\n\t\t\tfor (const key in pages) {\n\t\t\t\tconst oApp = pages[key] as IPageType;\n\t\t\t\tif (this.recommendedUtilInstance._isListReport(oApp)) {\n\t\t\t\t\treturn oApp.entitySet;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Load I18n\n\t *\n\t * @param {object} manifest - manifest object\n\t * @param {string} manifestUrl - manifest url\n\t * @returns {object} returns resource bundle\n\t * @private\n\t */\n\tprivate async loadI18n(manifest: IAppManifest, manifestUrl: string) {\n\t\t// construct abslute url for properties file relative to manifest url\n\t\tconst i18nBundleUrl = manifest?.[\"sap.app\"]?.[\"i18n\"]?.[\"bundleUrl\"] as string;\n\t\tconst absoluteUrl = new URL(i18nBundleUrl, manifestUrl).href;\n\t\tthis._RBManifestMap = this._RBManifestMap || {};\n\t\tif (!this._RBManifestMap[absoluteUrl]) {\n\t\t\tconst oResourceBundle = await ResourceBundle.create({\n\t\t\t\t// specify url of the base .properties file\n\t\t\t\tbundleUrl: absoluteUrl,\n\t\t\t\tasync: true,\n\t\t\t\tterminologies: manifest[\"sap.app\"]?.[\"i18n\"]?.[\"terminologies\"]\n\t\t\t});\n\t\t\tthis._RBManifestMap[absoluteUrl] = oResourceBundle;\n\t\t}\n\t\treturn this._RBManifestMap[absoluteUrl];\n\t}\n\n\t/**\n\t * Get I18n Value Or Default String\n\t *\n\t * @param {string} sValue - value\n\t * @param {object} oResourceBundle - resource bundle object\n\t * @returns {string} returns string\n\t * @private\n\t */\n\tprivate getI18nValueOrDefaultString(sValue: string, oRB: ResourceBundle) {\n\t\tlet sPath = \"\";\n\t\tif (sValue && sValue.startsWith(\"{{\")) {\n\t\t\tsPath = sValue.substring(2, sValue.length - 2);\n\t\t} else if (sValue && sValue.startsWith(\"{\")) {\n\t\t\tsPath = sValue.substring(1, sValue.length - 1);\n\t\t}\n\t\treturn sPath ? oRB.getText(sPath) : sValue;\n\t}\n\n\t/**\n\t * Retrieves a copy of the analytical card manifest.\n\t *\n\t *\n\t * @private\n\t * @returns {ICardManifest} A copy of the analytical card manifest.\n\t */\n\tpublic _getAnalyticalCardManifest() {\n\t\treturn JSON.parse(JSON.stringify(AnalyticalCardSkeleton)) as ICardManifest;\n\t}\n\n\t/**\n\t * Processes the app manifest and generates a recommended card manifest if the app meets the required conditions.\n\t *\n\t * @param {ODataMetaModel} metaModel - The OData meta model containing metadata about entities and properties.\n\t * @param {IValidManifest} manifestObj - An object containing the app manifest and its URL.\n\t * @param {AppInfoData | undefined} parentApp - The parent app information, if available.\n\t * @param {IVersionInfo} versionInfo - The version and build timestamp of the app.\n\t * @returns {Promise<ICardManifest | undefined>} A promise that resolves to the generated card manifest if the app is eligible,\n\t * or `undefined` if the app does not meet the required conditions.\n\t * @private\n\t */\n\tprivate async getProcessedManifest(\n\t\tmetaModel: ODataMetaModel,\n\t\tmanifestObj: IValidManifest,\n\t\tparentApp: IAppInfoData | undefined,\n\t\tversionInfo: IVersionInfo\n\t): Promise<ICardManifest | undefined> {\n\t\ttry {\n\t\t\tconst manifest = manifestObj.manifest;\n\t\t\tconst mainEntitySetName = this._getEntitySet(manifest);\n\t\t\tif (!mainEntitySetName) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst mainEntitySet = metaModel.getODataEntitySet(mainEntitySetName) as IEntitySet;\n\t\t\tconst lineItemDetails = this.recommendedUtilInstance.getLineItemDetails(metaModel, manifest, mainEntitySetName);\n\n\t\t\tif (!lineItemDetails?.lineItem) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst entitySetName = lineItemDetails.entitySet || mainEntitySetName;\n\t\t\tconst entitySet = (\n\t\t\t\tentitySetName === mainEntitySetName ? mainEntitySet : metaModel.getODataEntitySet(entitySetName)\n\t\t\t) as IEntitySet;\n\t\t\tconst entityType = metaModel.getODataEntityType(entitySet.entityType) as IEntityType;\n\t\t\tconst suppressRowNavigation = lineItemDetails?.lrSettings?.[\"bSupressCardRowNavigation\"];\n\n\t\t\t// Check for mandatory properties\n\t\t\tif (this.recommendedUtilInstance.hasMandatoryProperties(entitySet, entityType?.property)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\t// Check for parameterized entity sets\n\t\t\tconst parameterDetails = this.recommendedUtilInstance._getParametersisedEntitySetParams(metaModel, entitySetName, true);\n\t\t\tif (parameterDetails?.entitySetName && parameterDetails?.parameters?.length) {\n\t\t\t\tconst paramEntitySet = metaModel.getODataEntitySet(parameterDetails.entitySetName) as IEntitySet;\n\t\t\t\tif (this.recommendedUtilInstance.hasMandatoryProperties(paramEntitySet, parameterDetails.parameters as Property[])) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst cardInput = this.recommendedUtilInstance._getManifestCardData(manifest, lineItemDetails, parentApp!, metaModel);\n\n\t\t\t// Ensure the card has at least 3 columns\n\t\t\tif (cardInput.columns.length < COLUMN_LENGTH) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\t// Resolve card title\n\t\t\tconst headerInfo = lineItemDetails?.headerInfo as IHeaderInfo;\n\t\t\tconst cardTitle = headerInfo.TypeNamePlural?.String || \"\";\n\t\t\tcardInput.cardTitle = cardTitle || cardInput.cardTitle;\n\n\t\t\t// Resolve i18n title if necessary\n\t\t\tif (!cardTitle && manifest[\"sap.app\"]?.i18n) {\n\t\t\t\tconst i18nBundleUrl = manifest[\"sap.app\"].i18n.bundleUrl;\n\t\t\t\tconst appTitle = manifest[\"sap.app\"].title;\n\t\t\t\tif (i18nBundleUrl && (appTitle.startsWith(\"i18n>\") || appTitle.startsWith(\"{\"))) {\n\t\t\t\t\tconst i18nResourceBundle = await this.loadI18n(manifest, manifestObj.url);\n\t\t\t\t\tcardInput.cardTitle = this.getI18nValueOrDefaultString(cardInput.cardTitle!, i18nResourceBundle);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.recommendedUtilInstance._createCardManifest(cardInput, versionInfo, manifest, suppressRowNavigation);\n\t\t} catch (oError: unknown) {\n\t\t\tLog.error(\"Error while processing manifest\", oError instanceof Error ? oError.message : String(oError));\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Fetches the OData meta models for a given list of valid manifests.\n\t * @param {IValidManifest[]} validManifests - An array of valid manifest objects\n\t * @returns {Promise<(ODataMetaModel | undefined)[]>} A promise that resolves to an array of OData meta models.\n\t * Each element corresponds to a manifest in the input array, and may be `undefined` if the meta model could not be fetched.\n\t * @private\n\t */\n\tprivate async fetchMetaModels(validManifests: IValidManifest[]): Promise<(ODataMetaModel | undefined)[]> {\n\t\tconst odataPromises = validManifests.map(async (manifestObj) => {\n\t\t\ttry {\n\t\t\t\treturn (await this._getOdataModel(manifestObj.manifest))?.getMetaModel();\n\t\t\t} catch (oError: unknown) {\n\t\t\t\tLog.error(\"Error while fetching metamodel\", oError instanceof Error ? oError.message : String(oError));\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t});\n\n\t\treturn await Promise.all(odataPromises);\n\t}\n\n\t/**\n\t * Combines the valid manifests with their corresponding OData meta models.\n\t * @param {IValidManifest[]} validManifests - An array of valid manifest objects\n\t * @param {ODataMetaModel[]} aMetaModel - An array of OData meta models\n\t * @returns {ICombinedManifestDetails[]} An array of objects containing the manifest and the corresponding meta model.\n\t * @private\n\t */\n\tprivate combineManifestsAndMetaModels(\n\t\tvalidManifests: IValidManifest[],\n\t\taMetaModel: (ODataMetaModel | undefined)[]\n\t): ICombinedManifestDetails[] {\n\t\treturn validManifests.reduce<ICombinedManifestDetails[]>((combined, manifestObj, index) => {\n\t\t\tconst metaModel = aMetaModel[index];\n\t\t\tif (metaModel) {\n\t\t\t\tcombined.push({ manifest: manifestObj, metaModel });\n\t\t\t}\n\t\t\treturn combined;\n\t\t}, []);\n\t}\n\n\t/**\n\t * Process the manifest and meta model to get the card manifest\n\t * @param {ICombinedManifestDetails[]} combinedDetails - An array of objects containing the manifest and the corresponding meta model.\n\t * @param {IAppInfoData[]} aCSTR - An array of app info data\n\t * @returns {Promise<(ICardManifest | undefined)[]>} A promise that resolves to an array of recommended card manifests.\n\t * @private\n\t */\n\tprivate async processManifests(\n\t\tcombinedDetails: ICombinedManifestDetails[],\n\t\taCSTR: IAppInfoData[]\n\t): Promise<(ICardManifest | undefined)[]> {\n\t\treturn Promise.all(\n\t\t\tcombinedDetails.map((item) => {\n\t\t\t\tconst parentApp = aCSTR.find((oApp) => oApp.resolutionResult?.ui5ComponentName === item.manifest.manifest?.[\"sap.app\"]?.id);\n\t\t\t\treturn this.getProcessedManifest(item.metaModel, item.manifest, parentApp, this.versionInfo);\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t * Processes the app list to generate a list of Fiori IDs.\n\t *\n\t * If `aList` is not provided, it uses `aAppComponentIds` and `aComponent` to generate the list of Fiori IDs.\n\t * It matches the `semanticObject` and `action` of each component in `aAppComponentIds` with the entries in `aComponent`.\n\t * If a match is found, the corresponding `fioriId` is added to the list.\n\t *\n\t * @param {string[]} [aList] - An optional array of Fiori IDs to return directly.\n\t * @param {ICardDetails[]} [aAppComponentIds] - An array of app component details to process.\n\t * @param {IAppInfo} [aComponent] - A mapping of component IDs to their corresponding data entries.\n\t * @returns {string[]} - A list of Fiori IDs.\n\t */\n\tprivate processAppList(aList?: string[], aAppComponentIds?: ICardDetails[], aComponent?: IAppInfo): string[] {\n\t\tif (!aList && aAppComponentIds && aAppComponentIds.length) {\n\t\t\treturn aAppComponentIds.reduce((list, oComponent) => {\n\t\t\t\tconst oData: IAppInfoData[] = aComponent?.[oComponent.id] || [];\n\t\t\t\tconst matchingData = oData.find(\n\t\t\t\t\t(entry) => entry.semanticObject === oComponent.target?.semanticObject && entry.action === oComponent.target?.action\n\t\t\t\t);\n\n\t\t\t\treturn matchingData ? [...list, matchingData.fioriId!] : list;\n\t\t\t}, [] as string[]);\n\t\t}\n\t\treturn aList || [];\n\t}\n\n\t/**\n\t * Fetch Card Mainfest\n\t *\n\t * @param {string[]} aAppIds - array of app ids\n\t * @returns {Promise} resolves to array of card manifest\n\t * @private\n\t */\n\tpublic async _getCardManifest(aList?: string[], aAppComponentIds?: ICardDetails[]): Promise<ICardManifest[]> {\n\t\ttry {\n\t\t\tconst [aCatalog, aFioriData] = await Promise.all([this._getCatalogApps(), this.getFioriAppData()]);\n\t\t\tthis.versionInfo = (await VersionInfo.load()) as IVersionInfo;\n\n\t\t\tconst aCSTR: IAppInfoData[] = Object.values(aFioriData).flat();\n\t\t\tconst aComponent = this.componentData;\n\t\t\t// in case of replacing old recommended cards fioriIds are not available hence make use of componnetname\n\t\t\t// and semanticobject and action to find fioriId, and populate aList to recreate recommended card again\n\t\t\tconst processedList = this.processAppList(aList, aAppComponentIds, aComponent);\n\n\t\t\tconst manifests = await this.fetchManifests(processedList, aFioriData, aCatalog);\n\t\t\tconst validManifests = manifests.filter((manifestObj) => this._checkValidManifests(manifestObj.manifest));\n\n\t\t\tconst aMetaModel = await this.fetchMetaModels(validManifests);\n\t\t\tconst combinedDetails = this.combineManifestsAndMetaModels(validManifests, aMetaModel);\n\n\t\t\tconst cards = await this.processManifests(combinedDetails, aCSTR);\n\t\t\treturn cards.filter((card) => card !== undefined);\n\t\t} catch (oError: unknown) {\n\t\t\tLog.error(\"Error while fetching card manifest\", oError instanceof Error ? oError.message : String(oError));\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Fetch the app manifest for the given app ids\n\t * @param {string[]} appIdList - array of app ids\n\t * @param {AppInfo} fioriData - fiori data\n\t * @param {AppData[]} catalogData - catalog data\n\t * @returns {Promise} resolves to array of manifests\n\t * @private\n\t */\n\tprivate async fetchManifests(appIdList: string[], fioriData: IAppInfo, catalogData: AppData[]): Promise<IValidManifest[]> {\n\t\ttry {\n\t\t\tconst appPromises = appIdList.map(async (appId) => {\n\t\t\t\tconst aApp: IAppInfoData[] = fioriData[appId] || [];\n\t\t\t\tfor (const oApp of aApp) {\n\t\t\t\t\tconst oViz = catalogData.find(\n\t\t\t\t\t\t(catalog) => oApp.semanticObject === catalog.target?.semanticObject && oApp.action === catalog.target?.action\n\t\t\t\t\t);\n\t\t\t\t\tconst manifestUrl = oApp?.resolutionResult?.applicationDependencies?.manifest;\n\t\t\t\t\tif (oViz && manifestUrl) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst response = await fetch(manifestUrl);\n\t\t\t\t\t\t\tconst manifest = (await response.json()) as IAppManifest;\n\t\t\t\t\t\t\treturn { url: response.url, manifest };\n\t\t\t\t\t\t} catch (error: unknown) {\n\t\t\t\t\t\t\tLog.error(\"Error while fetching manifest\", error instanceof Error ? error.message : String(error));\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// No valid manifest found in this appId's entries\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t\tconst results = await Promise.all(appPromises);\n\t\t\treturn results.filter((manifest): manifest is IValidManifest => manifest !== undefined);\n\t\t} catch (oError) {\n\t\t\tLog.error(\"Error while processing manifests\", oError instanceof Error ? oError.message : String(oError));\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Remove Duplicate Cards\n\t *\n\t * @param {object[]} aCards - array of cards\n\t * @returns {object[]} returns array of cards\n\t * @private\n\t */\n\tprivate _removeDuplicateCards(aCards: ICard[]): ICard[] {\n\t\tconst oCardDict: Record<string, boolean> = {};\n\t\tconst aResult: ICard[] = [];\n\t\taCards.forEach((oCard) => {\n\t\t\tconst sCardTitle = oCard?.descriptorContent?.[\"sap.card\"]?.header?.title || \"\";\n\t\t\tif (!oCardDict[sCardTitle]) {\n\t\t\t\taResult.push(oCard);\n\t\t\t\toCardDict[sCardTitle] = true;\n\t\t\t}\n\t\t});\n\t\treturn aResult;\n\t}\n\n\t/**\n\t * Fetch Recommended Cards\n\t *\n\t * @returns {Promise<ICard[] | []> } resolves to array of recommended cards\n\t * @private\n\t */\n\tpublic async getRecommenedCards(): Promise<ICard[] | []> {\n\t\ttry {\n\t\t\tconst aAppIds = await this._getRecommenedFioriIds();\n\t\t\tconst aManifests = await this._getCardManifest(aAppIds);\n\t\t\tconst aRecManifests = aManifests?.slice(0, RECOMMENDED_CARD_LIMIT);\n\t\t\tconst aRecommendedCards = aRecManifests?.map((manifest) => {\n\t\t\t\tlet id;\n\t\t\t\tif (manifest?.[\"sap.card\"]) {\n\t\t\t\t\tmanifest[\"sap.card\"].rec = true;\n\t\t\t\t\tid = manifest[\"sap.app\"]?.id;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tid,\n\t\t\t\t\tdescriptorContent: manifest\n\t\t\t\t};\n\t\t\t});\n\t\t\treturn this._removeDuplicateCards(aRecommendedCards as ICard[]);\n\t\t} catch (error) {\n\t\t\tLog.error(\"Error while fetching recommended cards:\", error instanceof Error ? error.message : String(error));\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves a list of recommended visualizations for the user.\n\t *\n\t * The final list is composed of up to 10 recommendations, with must-include visualizations prioritized.\n\t * If no recommended visualizations are available or if an error occurs, it returns an empty array.\n\t *\n\t * @private\n\t * @async\n\t * @param {boolean} [forceRefresh=false] - If `true`, forces a refresh of the recommended visualizations\n\t *                                         regardless of whether they are cached.\n\t * @returns {Promise<ICustomVisualization[]>} A promise that resolves to an array of recommended visualizations.\n\t *                                            The array is limited to 10 visualizations, including must-include recommendations.\n\t */\n\tpublic async getRecommendedVisualizations(forceRefresh: boolean = false) {\n\t\tif (!this._recommendedVisualizations || forceRefresh) {\n\t\t\tconst recommendedFioriIds = await this._getRecommenedFioriIds(forceRefresh);\n\t\t\tif (recommendedFioriIds.length) {\n\t\t\t\tlet finalRecommendations: ICustomVisualization[] = [];\n\t\t\t\tlet mustIncludeRecommendations: ICustomVisualization[] = [];\n\t\t\t\tlet [recommendedVisualizations, favoriteVisualizations] = await Promise.all([\n\t\t\t\t\tthis._getVisualizationsByFioriIds(recommendedFioriIds),\n\t\t\t\t\tthis._fetchMyHomeVizs(forceRefresh)\n\t\t\t\t]);\n\t\t\t\t//filter out recommendations that are already added\n\t\t\t\trecommendedVisualizations = recommendedVisualizations.filter((recViz) =>\n\t\t\t\t\t_isVisualizationAlreadyAdded(recViz, favoriteVisualizations)\n\t\t\t\t);\n\t\t\t\trecommendedVisualizations.forEach((recViz) => {\n\t\t\t\t\tif (_isMustIncludeRecommendation(recViz)) {\n\t\t\t\t\t\tmustIncludeRecommendations.push(recViz);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfinalRecommendations.push(recViz);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t//return only 10 recommended apps along with 'MyInbox' and 'Manage My Timesheet' if user has access to these apps.\n\t\t\t\tthis._recommendedVisualizations = finalRecommendations\n\t\t\t\t\t.slice(0, 10 - mustIncludeRecommendations.length)\n\t\t\t\t\t.concat(mustIncludeRecommendations);\n\t\t\t} else {\n\t\t\t\tthis._recommendedVisualizations = [];\n\t\t\t}\n\t\t}\n\t\treturn this._recommendedVisualizations;\n\t}\n\n\t/**\n\t * Asynchronously retrieves the list of inbound applications from the SAP Fiori client-side target resolution service.\n\t *\n\t * @private\n\t * @async\n\t * @returns {Promise<Array>} A promise that resolves to an array of inbound applications.\n\t *                            If an error occurs or the inbound applications are not available, it resolves to an empty array.\n\t */\n\tprivate async _getInboundApps() {\n\t\ttry {\n\t\t\tconst service = await Container.getServiceAsync<ClientSideTargetResolution>(\"ClientSideTargetResolution\");\n\t\t\treturn service?._oAdapter?._aInbounds || [];\n\t\t} catch (error) {\n\t\t\tLog.error(\"Error while fetching inbound apps: \" + (error as Error).message);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves Fiori app data and stores it in the `fioriAppData` and `componentData` properties.\n\t *\n\t * This method fetches inbound applications using the `_getInboundApps` method and processes them to extract\n\t * Fiori app IDs (`sap-fiori-id`) and their associated semantic data. It also maps UI5 component names to their\n\t * corresponding Fiori app IDs for later use.\n\t *\n\t * @returns {Promise<IAppInfo>} A promise that resolves to an object containing Fiori app data\n\t * @private\n\t */\n\tprivate async getFioriAppData(): Promise<IAppInfo> {\n\t\ttry {\n\t\t\tif (!Object.keys(this.componentData).length) {\n\t\t\t\tthis.componentData = {};\n\t\t\t\tthis.fioriAppData = {};\n\t\t\t\tconst inbounds = await this._getInboundApps();\n\t\t\t\tinbounds.forEach((oItem) => {\n\t\t\t\t\tconst fioriId = oItem?.signature?.parameters?.[\"sap-fiori-id\"]?.defaultValue?.value;\n\t\t\t\t\tconst componentId = oItem?.resolutionResult?.ui5ComponentName;\n\t\t\t\t\tif (fioriId) {\n\t\t\t\t\t\tconst semanticData: IAppInfoData = {\n\t\t\t\t\t\t\taction: oItem.action,\n\t\t\t\t\t\t\tsemanticObject: oItem.semanticObject,\n\t\t\t\t\t\t\tresolutionResult: oItem.resolutionResult\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.fioriAppData[fioriId] = this.fioriAppData[fioriId] || [];\n\t\t\t\t\t\tthis.fioriAppData[fioriId].push(semanticData);\n\n\t\t\t\t\t\t// store data along with fioriId in componentData, this can be used later to find the\n\t\t\t\t\t\t// fioriId for those apps when only ui5ComponentName is known\n\t\t\t\t\t\tif (componentId) {\n\t\t\t\t\t\t\tconst combinedData: IAppInfoData = { ...semanticData, fioriId };\n\n\t\t\t\t\t\t\tthis.componentData[componentId] = this.componentData[componentId] || [];\n\t\t\t\t\t\t\tthis.componentData[componentId].push(combinedData);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn this.fioriAppData;\n\t\t} catch (oError) {\n\t\t\tLog.error(oError instanceof Error ? oError.message : String(oError));\n\t\t\treturn {};\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves visualizations based on a list of Fiori IDs.\n\t *\n\t * This function processes the given Fiori IDs to find associated visualizations. It does so by fetching\n\t * inbound applications and catalog apps, then matching the Fiori IDs to filter out and gather relevant visualizations.\n\t * The function distinguishes between GUI and non-GUI visualizations, prioritizing non-GUI visualizations if both types are found.\n\t * It also ensures that each visualization is unique based on its URL and title, avoiding duplicates.\n\t *\n\t * @private\n\t * @async\n\t * @param {string[]} fioriIds - An array of Fiori IDs to search for visualizations.\n\t * @returns {Promise<ICustomVisualization[]>} A promise that resolves to an array of unique visualizations associated with the provided Fiori IDs.\n\t */\n\tprivate async _getVisualizationsByFioriIds(fioriIds: string[]) {\n\t\tconst visualizations: ICustomVisualization[] = [];\n\t\tconst visitedVisualizations: Map<string, boolean> = new Map<string, boolean>();\n\t\tconst [inbounds, catalogApps] = await Promise.all([this._getInboundApps(), this._getCatalogApps()]);\n\t\tfioriIds.forEach((fioriId) => {\n\t\t\t// get all inbounds with the fiori id\n\t\t\tconst authorizedApps = inbounds.filter(function (inbound) {\n\t\t\t\treturn inbound?.signature.parameters[\"sap-fiori-id\"]?.defaultValue?.value === fioriId;\n\t\t\t});\n\t\t\tauthorizedApps.forEach((app) => {\n\t\t\t\t//filter apps that matched semantic object action\n\t\t\t\tlet matchingVizualizations = catalogApps.filter((catalogApp) => {\n\t\t\t\t\treturn catalogApp?.target?.semanticObject === app.semanticObject && catalogApp.target.action === app.action;\n\t\t\t\t});\n\n\t\t\t\tconst guiVisualizations = matchingVizualizations.filter((matchingVizualization) =>\n\t\t\t\t\t_isGUIVisualization(matchingVizualization)\n\t\t\t\t);\n\t\t\t\tconst nonGuiVisualizations = matchingVizualizations.filter(\n\t\t\t\t\t(matchingVizualization) => !_isGUIVisualization(matchingVizualization)\n\t\t\t\t);\n\t\t\t\t//if both gui and non-gui visualizations exists, then consider only non-gui visualizations for recommendation.\n\t\t\t\tif (guiVisualizations.length > 0 && nonGuiVisualizations.length > 0) {\n\t\t\t\t\tmatchingVizualizations = [...nonGuiVisualizations];\n\t\t\t\t}\n\n\t\t\t\tmatchingVizualizations.forEach((matchingVizualization) => {\n\t\t\t\t\tlet visualization = matchingVizualization.visualizations[0];\n\t\t\t\t\tlet recommendedVisualization: ICustomVisualization = {\n\t\t\t\t\t\ttitle: visualization.title,\n\t\t\t\t\t\tsubtitle: visualization.subtitle,\n\t\t\t\t\t\ticon: visualization.icon,\n\t\t\t\t\t\turl: visualization.targetURL,\n\t\t\t\t\t\tvizId: visualization.vizId,\n\t\t\t\t\t\tfioriId: fioriId,\n\t\t\t\t\t\tvisualization: visualization\n\t\t\t\t\t};\n\t\t\t\t\t//if app with same url or title already recommended, then don't consider it.\n\t\t\t\t\tif (\n\t\t\t\t\t\t!visitedVisualizations.has(recommendedVisualization.url!) ||\n\t\t\t\t\t\t!visitedVisualizations.has(recommendedVisualization.title!)\n\t\t\t\t\t) {\n\t\t\t\t\t\tvisitedVisualizations.set(recommendedVisualization.url!, true);\n\t\t\t\t\t\tvisitedVisualizations.set(recommendedVisualization.title!, true);\n\t\t\t\t\t\tvisualizations.push(recommendedVisualization);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\treturn visualizations;\n\t}\n\n\t/**\n\t * Retrieves visualizations for all favorite pages based on the provided parameters.\n\t * @param {Array} pages - An array of favorite pages.\n\t * @param {boolean} shouldReload - A flag indicating whether to reload page visualizations.\n\t * @returns {Promise<ICustomVisualization[]>} A promise that resolves with an array of favorite page visualizations.\n\t * @private\n\t */\n\tpublic async _getAllFavPageApps(pages: IPage[], shouldReload?: boolean): Promise<ICustomVisualization[]> {\n\t\ttry {\n\t\t\tif (pages) {\n\t\t\t\tthis._favPageVisualizations = this._favPageVisualizations || [];\n\t\t\t\t//Check to ensure that missing visualization data is loaded, if any\n\t\t\t\tconst loadedPages = this._favPageVisualizations.reduce((pageIDs: string[], visualization) => {\n\t\t\t\t\tif (visualization.pageId && !pageIDs.includes(visualization.pageId)) {\n\t\t\t\t\t\tpageIDs.push(visualization.pageId);\n\t\t\t\t\t}\n\t\t\t\t\treturn pageIDs;\n\t\t\t\t}, []);\n\t\t\t\tconst pageIds = pages.map((page) => page.pageId);\n\t\t\t\tconst shouldLoadMissingApps = loadedPages.length === 0 || !loadedPages.every((pageId) => pageIds.includes(pageId));\n\t\t\t\tif (!shouldReload && !shouldLoadMissingApps) {\n\t\t\t\t\treturn this._favPageVisualizations;\n\t\t\t\t} else {\n\t\t\t\t\tthis._favPageVisualizations = await this._loadAllPageVisualizations(pages);\n\t\t\t\t\treturn this._favPageVisualizations;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [];\n\t\t} catch (error) {\n\t\t\tLog.error(error as string);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Loads visualizations for all specified pages.\n\t * @param {Array} pages - An array of pages.\n\t * @param {boolean} [shouldFetchDistinctApps=false] - A flag indicating whether to fetch distinct pages.\n\t * @returns {Promise<ICustomVisualization[]>} A promise that resolves with an array of page visualizations.\n\t * @private\n\t */\n\tprivate async _loadAllPageVisualizations(pages: IPage[], shouldFetchDistinctApps = false): Promise<ICustomVisualization[]> {\n\t\tconst getBgColor = (pageId: string | undefined) => {\n\t\t\treturn pages.find((page) => page.pageId === pageId)?.BGColor ?? DEFAULT_BG_COLOR().key;\n\t\t};\n\n\t\ttry {\n\t\t\tconst favPageVisualizations: ICustomVisualization[] = [];\n\t\t\tconst spaceContentService = await Container.getServiceAsync<SpaceContent>(\"SpaceContent\");\n\t\t\tconst pageData = await spaceContentService.getPages(pages.map((oPage) => oPage.pageId) as string[]);\n\t\t\tconst aPages = Object.values(pageData);\n\n\t\t\tfor (const page of aPages) {\n\t\t\t\tconst sections = page.sections || [];\n\t\t\t\tfor (const section of sections) {\n\t\t\t\t\tconst visualizations = section.visualizations || [];\n\t\t\t\t\tfor (const visualization of visualizations) {\n\t\t\t\t\t\tconst app = {\n\t\t\t\t\t\t\tappId: visualization.targetURL,\n\t\t\t\t\t\t\tvizId: visualization.vizId,\n\t\t\t\t\t\t\ticon: visualization.icon,\n\t\t\t\t\t\t\tBGColor: getBgColor(page.id) as string,\n\t\t\t\t\t\t\tpageId: page.id\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (!shouldFetchDistinctApps || !favPageVisualizations.some((oVizApp) => oVizApp.appId === app.appId)) {\n\t\t\t\t\t\t\tfavPageVisualizations.push(app);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn favPageVisualizations;\n\t\t} catch (error) {\n\t\t\tLog.error(error as string);\n\t\t\treturn [];\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[]}