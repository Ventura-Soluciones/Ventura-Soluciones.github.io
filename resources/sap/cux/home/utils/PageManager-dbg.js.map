{"version":3,"file":"PageManager-dbg.js","names":["sap","ui","define","BaseObject","EventBus","Config","Container","__ColorUtils","___Constants","___PagesIconsConstants","__UShellPersonalizer","_interopRequireDefault","obj","__esModule","default","ColorUtils","DEFAULT_BG_COLOR","FALLBACK_ICON","fnFetchLegendColor","MYHOME_SPACE_ID","PAGE_SELECTION_LIMIT","PAGES","SPACES","UShellPersonalizer","PageManager","extend","constructor","_constructor","persContainerId","oOwnerComponent","BaseObject.prototype.constructor.call","this","colorUtils","_eventBus","getInstance","_getPersonalization","fetchAllAvailableSpaces","_fetchAllAvailableSpaces","_this","_aSpaces","Promise","resolve","getServiceAsync","then","oBookmarkService","getContentNodes","_oBookmarkService$get","aSpaces","filter","oSpace","id","forEach","BGColor","applyColorToAllPages","e","reject","fetchAllAvailablePages","_fetchAllAvailablePages","bFetchDistinctPages","arguments","length","undefined","_this2","_aPages","Array","isArray","children","oPage","find","oExistingPage","push","title","label","icon","isIconLoaded","pageId","spaceId","spaceTitle","url","_getDefaultPages","aAvailablePages","aFavoritePages","slice","getFavPages","_getIconForPage","oFavPage","oIcon","includes","_applyIconsForFavPages","aFavPages","aPageWithoutIcon","_getFavPages","bUpdatePersonalisation","_this3","_temp4","selected","getFreeColor","addColor","_temp3","_temp2","oPersonalizer","read","oPersData","favouritePages","write","publish","_temp","_this3$_getPersonaliz","getFavoritePages","_getFavoritePages","bForceUpdate","bSpaceEnabled","encodeURIComponent","last","oGetFavPagesPromise","_getFavPages2","_this4","_this4$_getPersonaliz","_temp8","_temp7","_this4$_getDefaultPag","aPages","oAvailablePage","_temp6","_this4$getFavPages","_temp5","_this4$_getDefaultPag2","applyColorPersonalizations","_applyColorPersonalizations","personalizations","_this5","_temp10","allSpaces","personalization","isPagePersonalization","spaceObj","space","pageObj","page","availablePageObj","colorObj","isSpacePersonalization","favPageObj","favPage","favpageBGColor","oldColor","pageBackgroundColor","_temp9","applyIconPersonalizations","_applyIconPersonalizations","_this6","_temp12","isSpaceIconPersonalization","isPageIconPersonalization","oldIcon","_temp11","oCacheInstances","pageManagerInstance"],"sources":["PageManager.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport BaseObject from \"sap/ui/base/Object\";\nimport Component from \"sap/ui/core/Component\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport Config from \"sap/ushell/Config\";\nimport Container from \"sap/ushell/Container\";\nimport Bookmark from \"sap/ushell/services/BookmarkV2\";\nimport { ISpacePagePersonalization } from \"../interface/KeyUserInterface\";\nimport { IColor, IPage, ISpace } from \"../interface/PageSpaceInterface\";\nimport ColorUtils from \"./ColorUtils\";\nimport { DEFAULT_BG_COLOR, FALLBACK_ICON, fnFetchLegendColor, MYHOME_SPACE_ID, PAGE_SELECTION_LIMIT } from \"./Constants\";\nimport { PAGES, SPACES } from \"./PagesIconsConstants\";\nimport UShellPersonalizer from \"./UshellPersonalizer\";\n\n/**\n *\n * Provides the PageManager Class used for fetch and process user pages.\n *\n * @extends sap.ui.BaseObject\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121.0\n *\n * @private\n * @experimental Since 1.121\n * @hidden\n *\n * @alias sap.cux.home.utils.PageManager\n */\n\nexport default class PageManager extends BaseObject {\n\tcolorUtils: typeof ColorUtils = ColorUtils;\n\tpersContainerId: string;\n\toOwnerComponent: Component;\n\t_aSpaces!: ISpace[];\n\t_aPages!: IPage[];\n\taFavPages!: IPage[];\n\toPersonalizer!: UShellPersonalizer;\n\toGetFavPagesPromise!: Promise<IPage[]>;\n\tstatic oCacheInstances: { [key: string]: PageManager } = {};\n\tprivate _eventBus: EventBus;\n\tprivate constructor(persContainerId: string, oOwnerComponent: Component) {\n\t\tsuper();\n\t\tthis.persContainerId = persContainerId;\n\t\tthis.oOwnerComponent = oOwnerComponent;\n\t\tthis._eventBus = EventBus.getInstance();\n\t}\n\n\tstatic getInstance(persContainerId: string, oOwnerComponent: Component) {\n\t\tif (PageManager.oCacheInstances[persContainerId]) {\n\t\t\treturn PageManager.oCacheInstances[persContainerId];\n\t\t}\n\t\tconst pageManagerInstance = new PageManager(persContainerId, oOwnerComponent);\n\t\tPageManager.oCacheInstances[persContainerId] = pageManagerInstance;\n\t\treturn pageManagerInstance;\n\t}\n\n\tprivate _getPersonalization() {\n\t\treturn UShellPersonalizer.getInstance(this.persContainerId, this.oOwnerComponent);\n\t}\n\n\tpublic async fetchAllAvailableSpaces(): Promise<ISpace[]> {\n\t\tif (this._aSpaces) {\n\t\t\treturn Promise.resolve(this._aSpaces);\n\t\t}\n\t\tconst oBookmarkService: Bookmark = await Container.getServiceAsync(\"BookmarkV2\");\n\t\tconst aSpaces = (await oBookmarkService.getContentNodes()) as ISpace[];\n\t\t// Filter MyHome Space from Spaces\n\t\tthis._aSpaces = aSpaces.filter((oSpace) => oSpace.id !== MYHOME_SPACE_ID);\n\n\t\t// Add Initial Default Color for Spaces\n\t\tthis._aSpaces.forEach(function (oSpace) {\n\t\t\toSpace.BGColor = DEFAULT_BG_COLOR();\n\t\t\toSpace.applyColorToAllPages = false;\n\t\t});\n\n\t\treturn this._aSpaces;\n\t}\n\tpublic async fetchAllAvailablePages(bFetchDistinctPages: boolean = false): Promise<IPage[]> {\n\t\tif (this._aPages) {\n\t\t\treturn Promise.resolve(this._aPages);\n\t\t}\n\t\tconst aSpaces = await this.fetchAllAvailableSpaces();\n\t\tthis._aPages = [];\n\t\taSpaces.forEach((oSpace: ISpace) => {\n\t\t\tif (Array.isArray(oSpace.children)) {\n\t\t\t\toSpace.children.forEach((oPage: IPage) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!bFetchDistinctPages ||\n\t\t\t\t\t\t(bFetchDistinctPages && !this._aPages.find((oExistingPage) => oExistingPage.id === oPage.id))\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._aPages.push({\n\t\t\t\t\t\t\ttitle: oPage.label,\n\t\t\t\t\t\t\ticon: FALLBACK_ICON,\n\t\t\t\t\t\t\tisIconLoaded: false,\n\t\t\t\t\t\t\tpageId: oPage.id,\n\t\t\t\t\t\t\tspaceId: oSpace.id,\n\t\t\t\t\t\t\tspaceTitle: oSpace.label,\n\t\t\t\t\t\t\turl: \"#Launchpad-openFLPPage?pageId=\" + oPage.id + \"&spaceId=\" + oSpace.id\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn this._aPages;\n\t}\n\tprivate _getDefaultPages(aAvailablePages: IPage[]): Promise<IPage[]> {\n\t\tconst aFavoritePages = aAvailablePages.slice(0, PAGE_SELECTION_LIMIT) || [];\n\t\treturn this.getFavPages(aFavoritePages);\n\t}\n\t// Get icons from icon constants file\n\tprivate _getIconForPage(oFavPage: IPage) {\n\t\t// Check for icon in page icon constants file\n\t\tlet oIcon = PAGES.find((oPage) => oFavPage.pageId?.includes(oPage.id));\n\n\t\tif (!oIcon) {\n\t\t\t// Check for icon in space icon constants file\n\t\t\toIcon = SPACES.find((oSpace) => oFavPage.spaceId?.includes(oSpace.id));\n\t\t}\n\n\t\toFavPage.icon = oIcon?.icon || FALLBACK_ICON;\n\t\toFavPage.isIconLoaded = true;\n\t}\n\tprivate _applyIconsForFavPages(aFavPages: IPage[]) {\n\t\tconst aPageWithoutIcon = aFavPages.filter((oPage) => !oPage.isIconLoaded);\n\t\taPageWithoutIcon.forEach((oPage: IPage) => {\n\t\t\tthis._getIconForPage(oPage);\n\t\t});\n\t}\n\tpublic async getFavPages(aFavPages: IPage[], bUpdatePersonalisation: boolean = false) {\n\t\taFavPages.forEach((oPage: IPage) => {\n\t\t\toPage.selected = true;\n\t\t\tif (!oPage.BGColor) {\n\t\t\t\toPage.BGColor = this.colorUtils.getFreeColor();\n\t\t\t} else {\n\t\t\t\tthis.colorUtils.addColor(oPage.BGColor as string);\n\t\t\t}\n\t\t});\n\n\t\t// Update the Personalisation model\n\t\tif (bUpdatePersonalisation) {\n\t\t\tif (!this.oPersonalizer) {\n\t\t\t\tthis.oPersonalizer = await this._getPersonalization();\n\t\t\t}\n\t\t\tlet oPersData = await this.oPersonalizer.read();\n\t\t\tif (!oPersData) oPersData = { favouritePages: [] };\n\t\t\toPersData.favouritePages = aFavPages;\n\t\t\tawait this.oPersonalizer.write(oPersData);\n\t\t\tthis._eventBus.publish(\"pageChannel\", \"pageUpdated\");\n\t\t}\n\n\t\t// Fetch and apply Icons for Favorite Pages\n\t\tif (aFavPages.length) {\n\t\t\tthis._applyIconsForFavPages(aFavPages);\n\t\t}\n\t\treturn aFavPages;\n\t}\n\tpublic getFavoritePages(bForceUpdate: boolean = false) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n\t\tconst bSpaceEnabled = encodeURIComponent(Config.last(\"/core/spaces/enabled\"));\n\t\tif (!bSpaceEnabled) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\t\tif (this.aFavPages && !bForceUpdate) {\n\t\t\treturn Promise.resolve(this.aFavPages);\n\t\t}\n\t\tif (this.oGetFavPagesPromise === undefined) {\n\t\t\tthis.oGetFavPagesPromise = this._getFavPages(bForceUpdate);\n\t\t}\n\t\treturn this.oGetFavPagesPromise;\n\t}\n\n\tprivate async _getFavPages(bForceUpdate: boolean) {\n\t\tthis.oPersonalizer = await this._getPersonalization();\n\t\tconst oPersData = await this.oPersonalizer.read();\n\t\tconst aFavoritePages: IPage[] | undefined = oPersData?.favouritePages;\n\t\tconst aAvailablePages = await this.fetchAllAvailablePages(true);\n\t\t// Set first 8 available pages are favorite if no favorite page data is present\n\t\tif (!aFavoritePages) {\n\t\t\tthis.aFavPages = await this._getDefaultPages(aAvailablePages);\n\t\t} else {\n\t\t\tlet aPages: IPage[] = [],\n\t\t\t\toExistingPage;\n\t\t\taFavoritePages?.forEach((oPage: IPage) => {\n\t\t\t\toExistingPage = aAvailablePages.find(function (oAvailablePage) {\n\t\t\t\t\treturn oAvailablePage.pageId === oPage.pageId;\n\t\t\t\t});\n\t\t\t\tif (oExistingPage) {\n\t\t\t\t\toExistingPage.BGColor = oPage.BGColor;\n\t\t\t\t\taPages.push(oExistingPage);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// To send Maximum of 8 Pages (BCP incident: 2270169293)\n\t\t\taPages = aPages.slice(0, PAGE_SELECTION_LIMIT);\n\t\t\tif (aPages.length || !aFavoritePages?.length) {\n\t\t\t\tthis.aFavPages = await this.getFavPages(aPages, aPages.length !== aFavoritePages?.length || bForceUpdate);\n\t\t\t} else if (!aPages.length && aFavoritePages.length) {\n\t\t\t\t//Clean unaccessible page data\n\t\t\t\toPersData.favouritePages = [];\n\t\t\t\tawait this.oPersonalizer.write(oPersData);\n\t\t\t\tthis.aFavPages = await this._getDefaultPages(aAvailablePages);\n\t\t\t}\n\t\t}\n\t\treturn this.aFavPages;\n\t}\n\n\tpublic async applyColorPersonalizations(personalizations?: ISpacePagePersonalization[]) {\n\t\tif (!personalizations?.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.aFavPages) {\n\t\t\tawait this.getFavoritePages();\n\t\t}\n\n\t\tconst allSpaces = await this.fetchAllAvailableSpaces();\n\n\t\tpersonalizations.forEach((personalization) => {\n\t\t\tconst isPagePersonalization = !!personalization.pageId;\n\t\t\t//corresponding space obj of the master list of all spaces\n\t\t\tconst spaceObj = allSpaces?.find((space) => space.id === personalization.spaceId);\n\t\t\tconst pageObj = spaceObj?.children.find((page) => page.id === personalization.pageId);\n\t\t\t//corresponding page obj of the list of favorite/visible pages\n\t\t\tconst oPage = this.aFavPages.find((oPage) => oPage.pageId === personalization.pageId);\n\t\t\t//corresponding page obj of the master list of all pages\n\t\t\tconst availablePageObj = this._aPages?.find((page) => page.pageId === personalization.pageId);\n\t\t\t// Update the Personalisation model for space\n\t\t\tif (!isPagePersonalization && spaceObj) {\n\t\t\t\tconst colorObj = fnFetchLegendColor(personalization.BGColor as string);\n\t\t\t\tspaceObj.BGColor = colorObj;\n\t\t\t\tspaceObj.applyColorToAllPages = personalization.applyColorToAllPages;\n\t\t\t\tspaceObj.isSpacePersonalization = true;\n\n\t\t\t\t// Update the color for all pages in the space if applied\n\t\t\t\tspaceObj.children.forEach((oPage) => {\n\t\t\t\t\tconst favPageObj = this.aFavPages.find((favPage) => favPage.pageId === oPage.id);\n\t\t\t\t\tif (favPageObj) {\n\t\t\t\t\t\tconst favpageBGColor = favPageObj.isPagePersonalization ? favPageObj.oldColor : DEFAULT_BG_COLOR();\n\t\t\t\t\t\tfavPageObj.BGColor = spaceObj.applyColorToAllPages ? personalization.BGColor : favpageBGColor;\n\t\t\t\t\t\toPage.BGColor = favPageObj.BGColor;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * setting personalization color for unchecked pages\n\t\t\t\t\t\t * updating color for the children of master list of spaces\n\t\t\t\t\t\t * updating color for the available pages corresponding to the space id\n\t\t\t\t\t\t */\n\t\t\t\t\t\toPage.BGColor = spaceObj.applyColorToAllPages ? personalization.BGColor : DEFAULT_BG_COLOR();\n\t\t\t\t\t\tthis._aPages.forEach((page) => {\n\t\t\t\t\t\t\tif (page.spaceId === spaceObj.id) {\n\t\t\t\t\t\t\t\tpage.BGColor = oPage.BGColor;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (pageObj) {\n\t\t\t\t// Update the Personalisation model for page\n\t\t\t\tconst pageBackgroundColor = spaceObj?.applyColorToAllPages\n\t\t\t\t\t? ({ ...spaceObj.BGColor } as IColor)\n\t\t\t\t\t: fnFetchLegendColor(personalization.BGColor as string);\n\t\t\t\t//updating color for the favourite page\n\t\t\t\tif (oPage) {\n\t\t\t\t\toPage.isPagePersonalization = true;\n\t\t\t\t\toPage.BGColor = pageBackgroundColor;\n\t\t\t\t\toPage.oldColor = fnFetchLegendColor(personalization.BGColor as string);\n\t\t\t\t}\n\t\t\t\t//updating color for the children of master list of spaces\n\t\t\t\tpageObj.isPagePersonalization = true;\n\t\t\t\tpageObj.BGColor = pageBackgroundColor;\n\t\t\t\tpageObj.oldColor = fnFetchLegendColor(personalization.BGColor as string);\n\t\t\t\t//updating color for the page of master list of pages/available page\n\t\t\t\tif (availablePageObj) {\n\t\t\t\t\tavailablePageObj.isPagePersonalization = true;\n\t\t\t\t\tavailablePageObj.BGColor = pageBackgroundColor;\n\t\t\t\t\tavailablePageObj.oldColor = fnFetchLegendColor(personalization.BGColor as string);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._eventBus.publish(\"pageChannel\", \"pageUpdated\");\n\t}\n\n\tpublic async applyIconPersonalizations(personalizations?: ISpacePagePersonalization[]) {\n\t\tif (!personalizations?.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.aFavPages) {\n\t\t\tawait this._getFavPages(false);\n\t\t}\n\t\tconst allSpaces = await this.fetchAllAvailableSpaces();\n\n\t\tpersonalizations.forEach((personalization) => {\n\t\t\tconst isPagePersonalization = !!personalization.pageId;\n\t\t\tconst spaceObj = allSpaces?.find((space) => space.id === personalization.spaceId);\n\n\t\t\t// Update the Personalisation model for space\n\t\t\tif (!isPagePersonalization) {\n\t\t\t\tif (spaceObj) {\n\t\t\t\t\tspaceObj.icon = personalization.icon;\n\t\t\t\t\tspaceObj.isSpaceIconPersonalization = true;\n\n\t\t\t\t\t// Update the icon for all pages in the space if applied\n\t\t\t\t\tspaceObj.children.forEach((oPage) => {\n\t\t\t\t\t\tif (!oPage.isPageIconPersonalization) {\n\t\t\t\t\t\t\tconst favPageObj = this.aFavPages.find((favPage) => favPage.pageId === oPage.id);\n\t\t\t\t\t\t\tif (favPageObj) {\n\t\t\t\t\t\t\t\tfavPageObj.icon = spaceObj.icon || FALLBACK_ICON;\n\t\t\t\t\t\t\t\toPage.icon = spaceObj.icon || FALLBACK_ICON;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Update the Personalisation model for page\n\t\t\t\tconst pageObj = spaceObj?.children.find((page) => page.id === personalization.pageId);\n\t\t\t\tconst oPage = this.aFavPages.find((oPage) => oPage.pageId === personalization.pageId);\n\t\t\t\tif (pageObj && oPage) {\n\t\t\t\t\toPage.isPageIconPersonalization = true;\n\t\t\t\t\tpageObj.isPageIconPersonalization = true;\n\t\t\t\t\toPage.icon = personalization.icon;\n\t\t\t\t\tpageObj.icon = personalization.icon;\n\t\t\t\t\toPage.oldIcon = personalization.oldIcon;\n\t\t\t\t\tpageObj.oldIcon = personalization.oldIcon;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis._eventBus.publish(\"pageChannel\", \"pageUpdated\");\n\t}\n}\n"],"mappings":";;;;AAAAA,IAAAC,GAAAC,OAAA,8KAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,sBAAAC,EAAAC,GAAA,OAAAA,KAAAC,mBAAAD,EAAAE,UAAA,YAAAF,EAAAE,QAAAF,CAAA,OAaOG,EAAUJ,EAAAJ,GAAA,MACRS,EAAgBR,EAAA,0BAAES,EAAaT,EAAA,uBAAEU,EAAkBV,EAAA,4BAAEW,EAAeX,EAAA,yBAAEY,EAAoBZ,EAAA,8BAC1Fa,EAAKZ,EAAA,eAAEa,EAAMb,EAAA,gBACfc,EAAkBZ,EAAAD,GAEzB,MAiBqBc,EAAoBrB,EAAUsB,OAAA,kCAW1CC,YAAW,SAAAC,EAACC,EAAyBC,GAC5CC,6BAAAC,MAAQA,KAXTC,WAAgCjB,EAY/BgB,KAAKH,gBAAkBA,EACvBG,KAAKF,gBAAkBA,EACvBE,KAAKE,UAAY7B,EAAS8B,aAC3B,EAWQC,oBAAmB,SAAAA,IAC1B,OAAOZ,EAAmBW,YAAYH,KAAKH,gBAAiBG,KAAKF,gBAClE,EAEaO,wBAAuB,SAAAC,IAAA,IAAsB,MAAAC,EACrDP,KAAJ,GAAIO,EAAKC,SAAU,CAClB,OAAOC,QAAQC,QAAQH,EAAKC,SAC7B,CAAC,OAAAC,QAAAC,QACwCnC,EAAUoC,gBAAgB,eAAaC,KAAA,SAA1EC,GAA0B,OAAAJ,QAAAC,QACTG,EAAiBC,mBAAiBF,KAAA,SAAAG,GAAzD,MAAMC,EAAOD,EAEbR,EAAKC,SAAWQ,EAAQC,OAAQC,GAAWA,EAAOC,KAAO/B,GAGzDmB,EAAKC,SAASY,QAAQ,SAAUF,GAC/BA,EAAOG,QAAUpC,IACjBiC,EAAOI,qBAAuB,KAC/B,GAEA,OAAOf,EAAKC,QAAS,IACtB,CAAC,MAAAe,GAAA,OAAAd,QAAAe,OAAAD,EAAA,GACYE,uBAAsB,SAAAC,IAAA,IAACC,EAA4BC,UAAAC,OAAA,GAAAD,UAAA,KAAAE,UAAAF,UAAA,GAAG,MAAK,IAAoB,MAAAG,EACvF/B,KAAJ,GAAI+B,EAAKC,QAAS,CACjB,OAAOvB,QAAQC,QAAQqB,EAAKC,QAC7B,CAAC,OAAAvB,QAAAC,QACqBqB,EAAK1B,2BAAyBO,KAAA,SAA9CI,GACNe,EAAKC,QAAU,GACfhB,EAAQI,QAASF,IAChB,GAAIe,MAAMC,QAAQhB,EAAOiB,UAAW,CACnCjB,EAAOiB,SAASf,QAASgB,IACxB,IACET,GACAA,IAAwBI,EAAKC,QAAQK,KAAMC,GAAkBA,EAAcnB,KAAOiB,EAAMjB,IACxF,CACDY,EAAKC,QAAQO,KAAK,CACjBC,MAAOJ,EAAMK,MACbC,KAAMxD,EACNyD,aAAc,MACdC,OAAQR,EAAMjB,GACd0B,QAAS3B,EAAOC,GAChB2B,WAAY5B,EAAOuB,MACnBM,IAAK,iCAAmCX,EAAMjB,GAAK,YAAcD,EAAOC,IAE1E,GAEF,IAED,OAAOY,EAAKC,OAAQ,EACrB,CAAC,MAAAT,GAAA,OAAAd,QAAAe,OAAAD,EAAA,GACOyB,iBAAgB,SAAAA,EAACC,GACxB,MAAMC,EAAiBD,EAAgBE,MAAM,EAAG9D,IAAyB,GACzE,OAAOW,KAAKoD,YAAYF,EACzB,EAEQG,gBAAe,SAAAA,EAACC,GAEvB,IAAIC,EAAQjE,EAAM+C,KAAMD,GAAUkB,EAASV,QAAQY,SAASpB,EAAMjB,KAElE,IAAKoC,EAAO,CAEXA,EAAQhE,EAAO8C,KAAMnB,GAAWoC,EAAST,SAASW,SAAStC,EAAOC,IACnE,CAEAmC,EAASZ,KAAOa,GAAOb,MAAQxD,EAC/BoE,EAASX,aAAe,IACzB,EACQc,uBAAsB,SAAAA,EAACC,GAC9B,MAAMC,EAAmBD,EAAUzC,OAAQmB,IAAWA,EAAMO,cAC5DgB,EAAiBvC,QAASgB,IACzBpC,KAAKqD,gBAAgBjB,EAAM,EAE7B,EACagB,YAAW,SAAAQ,EAACF,GAAkB,IAAEG,EAA+BjC,UAAAC,OAAA,GAAAD,UAAA,KAAAE,UAAAF,UAAA,GAAG,MAAK,IAAE,MAAAkC,EAInE9D,KAAI,SAAA+D,IAmBtB,GAAIL,EAAU7B,OAAQ,CACrBiC,EAAKL,uBAAuBC,EAC7B,CACA,OAAOA,CAAU,CAzBjBA,EAAUtC,QAASgB,IAClBA,EAAM4B,SAAW,KACjB,IAAK5B,EAAMf,QAAS,CACnBe,EAAMf,QAAUyC,EAAK7D,WAAWgE,cACjC,KAAO,CACNH,EAAK7D,WAAWiE,SAAS9B,EAAMf,QAChC,IAGD,MAAA8C,EAAA,cACIN,EAAsB,UAAAO,IAAA,OAAA3D,QAAAC,QAIHoD,EAAKO,cAAcC,QAAM1D,KAAA,SAA3C2D,GACJ,IAAKA,EAAWA,EAAY,CAAEC,eAAgB,IAC9CD,EAAUC,eAAiBd,EAAU,OAAAjD,QAAAC,QAC/BoD,EAAKO,cAAcI,MAAMF,IAAU3D,KAAA,WACzCkD,EAAK5D,UAAUwE,QAAQ,cAAe,cAAe,WAAAC,EAAA,eAPhDb,EAAKO,cAAa,QAAA5D,QAAAC,QACKoD,EAAK1D,uBAAqBQ,KAAA,SAAAgE,GAArDd,EAAKO,cAAaO,CAAoC,IAMF,GANE,OAAAD,KAAA/D,KAAA+D,EAAA/D,KAAAwD,KAAAO,EAAA,EAHxD,GAGwD,OAAAlE,QAAAC,QAAAyD,KAAAvD,KAAAuD,EAAAvD,KAAAmD,KAAAI,GAczD,CAAC,MAAA5C,GAAA,OAAAd,QAAAe,OAAAD,EAAA,GACMsD,iBAAgB,SAAAC,IAAgC,IAA/BC,EAAqBnD,UAAAC,OAAA,GAAAD,UAAA,KAAAE,UAAAF,UAAA,GAAG,MAE/C,MAAMoD,EAAgBC,mBAAmB3G,EAAO4G,KAAK,yBACrD,IAAKF,EAAe,CACnB,OAAOvE,QAAQC,QAAQ,GACxB,CACA,GAAIV,KAAK0D,YAAcqB,EAAc,CACpC,OAAOtE,QAAQC,QAAQV,KAAK0D,UAC7B,CACA,GAAI1D,KAAKmF,sBAAwBrD,UAAW,CAC3C9B,KAAKmF,oBAAsBnF,KAAK4D,aAAamB,EAC9C,CACA,OAAO/E,KAAKmF,mBACb,EAEcvB,aAAY,SAAAwB,EAACL,GAAqB,IAAE,MAAAM,EACjDrF,KAAI,OAAAS,QAAAC,QAAuB2E,EAAKjF,uBAAqBQ,KAAA,SAAA0E,GAArDD,EAAKhB,cAAaiB,EAAoC,OAAA7E,QAAAC,QAC9B2E,EAAKhB,cAAcC,QAAM1D,KAAA,SAA3C2D,GACN,MAAMrB,EAAsCqB,GAAWC,eAAe,OAAA/D,QAAAC,QACxC2E,EAAK5D,uBAAuB,OAAKb,KAAA,SAAzDqC,GAAe,SAAAsC,IA2BrB,OAAOF,EAAK3B,SAAU,OAAA8B,EAAA,eAzBjBtC,EAAc,QAAAzC,QAAAC,QACK2E,EAAKrC,iBAAiBC,IAAgBrC,KAAA,SAAA6E,GAA7DJ,EAAK3B,UAAS+B,CAAgD,QAE9D,IAAIC,EAAkB,GACrBpD,EACDY,GAAgB9B,QAASgB,IACxBE,EAAgBW,EAAgBZ,KAAK,SAAUsD,GAC9C,OAAOA,EAAe/C,SAAWR,EAAMQ,MACxC,GACA,GAAIN,EAAe,CAClBA,EAAcjB,QAAUe,EAAMf,QAC9BqE,EAAOnD,KAAKD,EACb,IAGDoD,EAASA,EAAOvC,MAAM,EAAG9D,GAAsB,MAAAuG,EAAA,cAC3CF,EAAO7D,SAAWqB,GAAgBrB,OAAM,QAAApB,QAAAC,QACpB2E,EAAKjC,YAAYsC,EAAQA,EAAO7D,SAAWqB,GAAgBrB,QAAUkD,IAAanE,KAAA,SAAAiF,GAAzGR,EAAK3B,UAASmC,CAA4F,cAAAC,EAAA,eAC/FJ,EAAO7D,QAAUqB,EAAerB,OAAM,CAEjD0C,EAAUC,eAAiB,GAAG,OAAA/D,QAAAC,QACxB2E,EAAKhB,cAAcI,MAAMF,IAAU3D,KAAA,kBAAAH,QAAAC,QAClB2E,EAAKrC,iBAAiBC,IAAgBrC,KAAA,SAAAmF,GAA7DV,EAAK3B,UAASqC,CAAgD,MAL4C,GAK5C,GAAAD,KAAAlF,KAAA,OAAAkF,EAAAlF,KAAA,eAPhB,GAOgB,GAAAgF,KAAAhF,KAAA,OAAAgF,EAAAhF,KAAA,eAG1C,GA1BtB,OAAA4E,KAAA5E,KAAA4E,EAAA5E,KAAA2E,KAAAC,EAAA,MA2BD,CAAC,MAAAjE,GAAA,OAAAd,QAAAe,OAAAD,EAAA,GAEYyE,2BAA0B,SAAAC,EAACC,GAA8C,IAAE,MAAAC,EAKlFnG,KAAI,SAAAoG,IAAA,OAAA3F,QAAAC,QAIeyF,EAAK9F,2BAAyBO,KAAA,SAAhDyF,GAENH,EAAiB9E,QAASkF,IACzB,MAAMC,IAA0BD,EAAgB1D,OAEhD,MAAM4D,EAAWH,GAAWhE,KAAMoE,GAAUA,EAAMtF,KAAOmF,EAAgBzD,SACzE,MAAM6D,EAAUF,GAAUrE,SAASE,KAAMsE,GAASA,EAAKxF,KAAOmF,EAAgB1D,QAE9E,MAAMR,EAAQ+D,EAAKzC,UAAUrB,KAAMD,GAAUA,EAAMQ,SAAW0D,EAAgB1D,QAE9E,MAAMgE,EAAmBT,EAAKnE,SAASK,KAAMsE,GAASA,EAAK/D,SAAW0D,EAAgB1D,QAEtF,IAAK2D,GAAyBC,EAAU,CACvC,MAAMK,EAAW1H,EAAmBmH,EAAgBjF,SACpDmF,EAASnF,QAAUwF,EACnBL,EAASlF,qBAAuBgF,EAAgBhF,qBAChDkF,EAASM,uBAAyB,KAGlCN,EAASrE,SAASf,QAASgB,IAC1B,MAAM2E,EAAaZ,EAAKzC,UAAUrB,KAAM2E,GAAYA,EAAQpE,SAAWR,EAAMjB,IAC7E,GAAI4F,EAAY,CACf,MAAME,EAAiBF,EAAWR,sBAAwBQ,EAAWG,SAAWjI,IAChF8H,EAAW1F,QAAUmF,EAASlF,qBAAuBgF,EAAgBjF,QAAU4F,EAC/E7E,EAAMf,QAAU0F,EAAW1F,OAC5B,KAAO,CAMNe,EAAMf,QAAUmF,EAASlF,qBAAuBgF,EAAgBjF,QAAUpC,IAC1EkH,EAAKnE,QAAQZ,QAASuF,IACrB,GAAIA,EAAK9D,UAAY2D,EAASrF,GAAI,CACjCwF,EAAKtF,QAAUe,EAAMf,OACtB,GAEF,GAEF,MAAO,GAAIqF,EAAS,CAEnB,MAAMS,EAAsBX,GAAUlF,qBAClC,IAAKkF,EAASnF,SACflC,EAAmBmH,EAAgBjF,SAEtC,GAAIe,EAAO,CACVA,EAAMmE,sBAAwB,KAC9BnE,EAAMf,QAAU8F,EAChB/E,EAAM8E,SAAW/H,EAAmBmH,EAAgBjF,QACrD,CAEAqF,EAAQH,sBAAwB,KAChCG,EAAQrF,QAAU8F,EAClBT,EAAQQ,SAAW/H,EAAmBmH,EAAgBjF,SAEtD,GAAIuF,EAAkB,CACrBA,EAAiBL,sBAAwB,KACzCK,EAAiBvF,QAAU8F,EAC3BP,EAAiBM,SAAW/H,EAAmBmH,EAAgBjF,QAChE,CACD,IAGD8E,EAAKjG,UAAUwE,QAAQ,cAAe,cAAe,GAvErD,IAAKwB,GAAkBrE,OAAQ,CAC9B,OAAApB,QAAAC,SACD,CAAC,MAAA0G,EAAA,eAEIjB,EAAKzC,UAAS,QAAAjD,QAAAC,QACZyF,EAAKtB,oBAAkBjE,KAAA,eAH7B,GAG6B,OAAAH,QAAAC,QAAA0G,KAAAxG,KAAAwG,EAAAxG,KAAAwF,KAAAgB,GAmE/B,CAAC,MAAA7F,GAAA,OAAAd,QAAAe,OAAAD,EAAA,GAEY8F,0BAAyB,SAAAC,EAACpB,GAA8C,IAAE,MAAAqB,EAKjFvH,KAAI,SAAAwH,IAAA,OAAA/G,QAAAC,QAGe6G,EAAKlH,2BAAyBO,KAAA,SAAhDyF,GAENH,EAAiB9E,QAASkF,IACzB,MAAMC,IAA0BD,EAAgB1D,OAChD,MAAM4D,EAAWH,GAAWhE,KAAMoE,GAAUA,EAAMtF,KAAOmF,EAAgBzD,SAGzE,IAAK0D,EAAuB,CAC3B,GAAIC,EAAU,CACbA,EAAS9D,KAAO4D,EAAgB5D,KAChC8D,EAASiB,2BAA6B,KAGtCjB,EAASrE,SAASf,QAASgB,IAC1B,IAAKA,EAAMsF,0BAA2B,CACrC,MAAMX,EAAaQ,EAAK7D,UAAUrB,KAAM2E,GAAYA,EAAQpE,SAAWR,EAAMjB,IAC7E,GAAI4F,EAAY,CACfA,EAAWrE,KAAO8D,EAAS9D,MAAQxD,EACnCkD,EAAMM,KAAO8D,EAAS9D,MAAQxD,CAC/B,CACD,GAEF,CACD,KAAO,CAEN,MAAMwH,EAAUF,GAAUrE,SAASE,KAAMsE,GAASA,EAAKxF,KAAOmF,EAAgB1D,QAC9E,MAAMR,EAAQmF,EAAK7D,UAAUrB,KAAMD,GAAUA,EAAMQ,SAAW0D,EAAgB1D,QAC9E,GAAI8D,GAAWtE,EAAO,CACrBA,EAAMsF,0BAA4B,KAClChB,EAAQgB,0BAA4B,KACpCtF,EAAMM,KAAO4D,EAAgB5D,KAC7BgE,EAAQhE,KAAO4D,EAAgB5D,KAC/BN,EAAMuF,QAAUrB,EAAgBqB,QAChCjB,EAAQiB,QAAUrB,EAAgBqB,OACnC,CACD,IAEDJ,EAAKrH,UAAUwE,QAAQ,cAAe,cAAe,GA5CrD,IAAKwB,GAAkBrE,OAAQ,CAC9B,OAAApB,QAAAC,SACD,CAAC,MAAAkH,EAAA,eAEIL,EAAK7D,UAAS,QAAAjD,QAAAC,QACZ6G,EAAK3D,aAAa,QAAMhD,KAAA,eAH9B,GAG8B,OAAAH,QAAAC,QAAAkH,KAAAhH,KAAAgH,EAAAhH,KAAA4G,KAAAI,GAwChC,CAAC,MAAArG,GAAA,OAAAd,QAAAe,OAAAD,EAAA,KAzSmB9B,EASboI,gBAAkD,CAAC,EATtCpI,EAkBbU,YAAW,SAAXA,EAAYN,EAAyBC,GAC3C,GAAIL,EAAYoI,gBAAgBhI,GAAkB,CACjD,OAAOJ,EAAYoI,gBAAgBhI,EACpC,CACA,MAAMiI,EAAsB,IAAIrI,EAAYI,EAAiBC,GAC7DL,EAAYoI,gBAAgBhI,GAAmBiI,EAC/C,OAAOA,CACR,EAAC,OAzBmBrI,CAAW","ignoreList":[]}