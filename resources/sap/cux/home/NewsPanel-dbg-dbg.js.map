{"version":3,"file":"NewsPanel-dbg-dbg.js","names":["sap","ui","define","Log","GenericTile","SlideTile","EventBus","DateFormat","XMLModel","Container","__BaseNewsPanel","__MenuItem","__NewsGroup","__NewsItem","___library","___utils_Constants","___utils_DataFormatUtils","___utils_Device","___utils_FESRUtil","__HttpHelper","__PersonalisationUtils","__UshellPersonalizer","_interopRequireDefault","obj","__esModule","default","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","BaseNewsPanel","prototype","onFulfilled","onRejected","result","callback","e","_this","_isSettledPact","thenable","_for","test","update","body","stage","shouldContinue","updateValue","reject","_resumeAfterTest","_resumeAfterBody","_resumeAfterUpdate","MenuItem","_catch","recover","NewsGroup","NewsItem","NewsType","DEFAULT_NEWS_URL","recycleId","DeviceType","addFESRId","HttpHelper","PersonalisationUtils","UshellPersonalizer","BASE_URL","NEWS_FEED_READ_API","NEWS_FEED_TRANSLATION_API","DEFAULT_FEED_COUNT","fnImagePlaceholder","sPath","N","Array","from","length","i","CUSTOM_NEWS_FEED","TITLE","LINK","VALIDITY","PREPARATION_REQUIRED","EXCLUDE_FIELDS","IMAGE_URL","FESR_STEP_NAME","EMPTY_DATA_ERROR_CODE","CUSTOM_IMAGES","Finance","Manufacturing","Sales","NewsPanel","extend","metadata","library","properties","url","type","group","defaultValue","visibility","RSS","customFeedKey","customFileName","showCustom","newsAvailable","supportedFileFormats","aggregations","newsGroup","singularName","multiple","constructor","_constructor","id","settings","BaseNewsPanel.prototype.constructor.call","_defaultNewsPromise","customNewsFeedCache","Map","init","_init","BaseNewsPanel.prototype.init.call","oNewsTile","getId","displayTime","width","height","tiles","mode","frameType","addStyleClass","getNewsWrapper","addContent","setProperty","_i18nBundle","getText","_eventBus","getInstance","oManageMenuItem","title","icon","press","handleEditNews","addAggregation","defaultNewsEnabled","isURLParamEnabled","setUrl","_isURLParamEnabled","paramName","urlParams","URLSearchParams","window","location","search","get","toUpperCase","getData","_getData","_temp7","_temp5","fireEvent","adjustLayout","_temp4","sUrl","getProperty","Promise","resolve","initializeXmlModel","_this$initializeXmlMo","oNewsModel","setModel","setVisible","_temp3","bNewsLoad","setCustomNewsFeed","_temp2","sCustomNewsFeedKey","getCustomFeedKey","_temp","handleFeedError","getUrl","mandatoryNewsFeed","_temp6","favNewsFeed","setFavNewsFeed","getCurrentNewsGroup","_getCurrentNewsGroup","aValues","_defaultNews","aGroupId","split","groupId","currentGroup","find","oGroup","group_id","_getCustomFeedKey","_getUrl","_initializeXmlModel","_this2","oParent","getParent","setDefaultBindingMode","attachRequestCompleted","oEvent","panelLoadedFn","loaded","count","oDocument","getSource","loadNewsFeed","publish","showError","date","Date","attachRequestFailed","_loadNewsFeed","noOfFeeds","_this3","_temp9","querySelector","oBindingInfo","path","destroyAggregation","bindNewsTile","_temp8","extractAllImageUrls","_handleFeedError","generateErrorMessage","setURL","_setURL","_this4","_adjustLayout","getDeviceType","Mobile","setHeight","setWidth","removeStyleClass","_bindNewsTile","oSlideTile","getBinding","bindAggregation","templateShareable","factory","sId","oContext","newsInfo","getObject","oTile","getElementsByTagName","textContent","subTitle","imageUrl","footer","formatDate","sGroupId","newsId","subTitleNews","getTile","_extractAllImageUrls","_this5","_temp10","oItemElement","extractImage","oImageUrl","createElement","appendChild","_formatDate","timeStamp","relativeDateFormatter","getDateTimeInstance","style","relative","relativeStyle","format","getFavNewsFeed","_getFavNewsFeed","_extractImage","sHrefLink","fnLoadPlaceholderImage","sPrefix","require","toUrl","image","fetch","res","text","sHTML","aMatches","match","isArray","catch","isCSVFileFormat","_isCSVFileFormat","fileName","pop","toLowerCase","_setFavNewsFeed","defaultFeed","_this6","_getUserPersonalization","personalizer","read","persData","defaultNewsFeed","_setCustomNewsFeed","sFeedId","_this7","_temp12","aFeeds","Error","items","filter","oNewsFeed","includes","loadCustomNewsFeed","showAllPrepRequired","showAllPreparationRequired","push","_temp11","getCustomNewsFeed","_this7$getCustomNewsF","_this7$getCustomNewsF2","err","error","filterMandatoryNews","_filterMandatoryNews","newsGroups","isTopLevelMandatory","mandatory_text","isAnyArticleMandatory","_group_to_article","some","article","getDefaultNewsFeedDetails","_getDefaultNewsFeedDetails","newsResponse","aNews","JSON","parse","stringify","aDefaultNews","oDefaultFeedDict","map","oFeed","description","footer_text","getDefaultFeedImage","getMandatoryDefaultNewsFeed","_getMandatoryDefaultNewsFeed","getDefaultNewsResponse","_getDefaultNewsResponse","fetchDefaultNews","_fetchDefaultNews","_this8","response","ok","status","json","_response$json","_getCustomNewsFeed","_this9","aDefaultgroups","getCustomFeedData","_getCustomFeedData","_this10","newsDetailUrl","getNewsFeedDetailsUrl","changeId","has","set","getAuthNewsFeed","_this10$customNewsFee","authorizedNewsFeeds","oFeedDict","forEach","getCustomFeedImage","_getNewsFeedDetailsUrl","oNews","_getAuthNewsFeed","sNewsUrl","newsTitle","_this11","all","getAllAvailableApps","getNewsFeedDetails","_ref","aAvailableApps","aNewsFeed","arrangeNewsFeeds","_arrangeNewsFeeds","aAuthNewsFeed","Category","ImpactedArtifacts","aImpactedArtifacts","impactedArtifact","oImpactedArtifact","isAuthFeed","_isAuthFeed","fioriIdSplitter","aTokens","sFioriId","trim","index","findIndex","oApp","signature","parameters","_getAllAvailableApps","getServiceAsync","oService","_oAdapter","_aInbounds","message","_getNewsFeedDetails","_exit","_this12","_temp14","_result3","fnFormattedLabel","sLabel","replace","GetJSON","getTranslatedText","_ref2","translationResponse","aTranslation","filterNewsOnTitle","aFields","Object","keys","aExpandFields","oField","oTranslatedField","oTranslation","ColumnName","oTranslatedFieldName","TranslatedName","label","Link","expanded","expandFields","_temp13","newsFeedDetails","_this12$filterNewsOnT","_filterNewsOnTitle","newsDetail","LineOfBusiness","_getTranslatedText","_loadCustomNewsFeed","feeds","feedType","_this13","oXMLResponse","parseJsonToXml","unbindAggregation","setData","_parseJsonToXml","_transformJsonForXml","aData","data","item","_jsonToXml","xml","key","transformedJson","rootToken","replaceAll","parser","DOMParser","parseFromString","_getCustomFeedImage","sFileName","sFileBasePath","sFilePath","files","randomIndex","randomArray","Uint32Array","crypto","getRandomValues","_getDefaultFeedImage","imgId","bg_image_id","groupImg","_group_to_image","image_id","mimeType","mime_type","groupBgImg","bg_image","isValidBase64","base64Data","base64UrlToBase64","_base64UrlToBase","base64Url","base64","_isValidBase","input","base64Regex","paddingIndex","indexOf","lastPaddingIndex","lastIndexOf","persContainerId","getPersContainerId","ownerComponent","getOwnerComponent"],"sources":["NewsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport GenericTile from \"sap/m/GenericTile\";\nimport SlideTile from \"sap/m/SlideTile\";\nimport { FrameType } from \"sap/m/library\";\nimport Event from \"sap/ui/base/Event\";\nimport Component from \"sap/ui/core/Component\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport DateFormat from \"sap/ui/core/format/DateFormat\";\nimport Context from \"sap/ui/model/Context\";\nimport XMLModel from \"sap/ui/model/xml/XMLModel\";\nimport Container from \"sap/ushell/Container\";\nimport type { $BaseNewsPanelSettings } from \"./BaseNewsPanel\";\nimport BaseNewsPanel from \"./BaseNewsPanel\";\nimport MenuItem from \"./MenuItem\";\nimport NewsAndPagesContainer from \"./NewsAndPagesContainer\";\nimport NewsGroup from \"./NewsGroup\";\nimport NewsItem from \"./NewsItem\";\nimport { NewsType } from \"./library\";\nimport { DEFAULT_NEWS_URL } from \"./utils/Constants\";\nimport { recycleId } from \"./utils/DataFormatUtils\";\nimport { DeviceType } from \"./utils/Device\";\nimport { addFESRId } from \"./utils/FESRUtil\";\nimport HttpHelper from \"./utils/HttpHelper\";\nimport PersonalisationUtils from \"./utils/PersonalisationUtils\";\nimport UshellPersonalizer from \"./utils/UshellPersonalizer\";\n\ninterface IBindingInfo {\n\tpath: string;\n\tlength: number;\n}\n\ninterface INewsResponse {\n\tvalue: ICustomNewsFeed[];\n}\n\nexport interface ICustomNewsFeed {\n\ttitle: string;\n\tsubTitle?: string;\n\tdescription?: string;\n\tfooter_text?: Record<string, string>;\n\tmandatory_text?: string;\n\t_group_to_image?: Record<string, string>;\n\t_group_to_article?: ICustomNewsFeed[];\n\t[key: string]: unknown;\n}\n\nexport interface INewsItem {\n\tchangeId: string;\n\ttitle?: string;\n\tshowAllPreparationRequired?: boolean;\n}\n\ninterface ITranslatedText {\n\tColumnName?: string;\n\tTranslatedName?: string;\n}\n\ninterface IAppConfiguration {\n\t_oAdapter: {\n\t\t_aInbounds: IAvailableApp[];\n\t};\n}\n\ninterface ODataResponse {\n\t\"@odata.context\": string;\n\t\"@odata.metadataEtag\": string;\n\tvalue: ICustomNewsFeed[];\n}\n\ninterface IAvailableApp {\n\tsemanticObject?: string;\n\taction?: string;\n\tid?: string;\n\ttitle?: string;\n\tpermanentKey?: string;\n\tcontentProviderId?: string;\n\tresolutionResult?: {\n\t\t[key: string]: string;\n\t};\n\tdeviceTypes?: {\n\t\t[key: string]: boolean;\n\t};\n\tsignature: {\n\t\tparameters: {\n\t\t\t[key: string]: IAppParameter;\n\t\t};\n\t\tadditionalParameters?: string;\n\t};\n}\n\ninterface IAppParameter {\n\tdefaultValue?: {\n\t\tvalue: string;\n\t\tformat: string;\n\t};\n\trequired: boolean;\n}\ninterface IFavNewsFeed {\n\titems: string[];\n\tshowAllPreparationRequired?: boolean;\n}\nexport interface INewsLink {\n\t[key: string]: string;\n}\n\nexport interface INewsParam {\n\t[key: string]: { [key: string]: string };\n}\n\nexport type FileFormat = \"xlsx\" | \"csv\";\n\nconst BASE_URL = \"/sap/opu/odata4/ui2/insights_srv/srvd/ui2/\",\n\tNEWS_FEED_READ_API = BASE_URL + \"insights_read_srv/0001/\" + \"NEWS_FEED\",\n\tNEWS_FEED_TRANSLATION_API = BASE_URL + \"insights_read_srv/0001/\" + \"NewsFeedColumnTranslation\",\n\tDEFAULT_FEED_COUNT = 7,\n\tfnImagePlaceholder = function (sPath: string, N: number) {\n\t\treturn Array.from({ length: N }, function (v, i) {\n\t\t\treturn sPath + \"/\" + (i + 1) + \".jpg\";\n\t\t});\n\t};\n\nconst CUSTOM_NEWS_FEED = {\n\t\tTITLE: \"LineOfBusiness\",\n\t\tLINK: \"WhatsNewDocument\",\n\t\tVALIDITY: \"ValidAsOf\",\n\t\tPREPARATION_REQUIRED: \"PreparationRequired\",\n\t\tEXCLUDE_FIELDS: [\n\t\t\t\"ChangeId\",\n\t\t\t\"LineNumber\",\n\t\t\t\"LineOfBusiness\",\n\t\t\t\"SolutionArea\",\n\t\t\t\"Title\",\n\t\t\t\"Description\",\n\t\t\t\"Type\",\n\t\t\t\"ValidAsOf\",\n\t\t\t\"WhatsNewDocument\",\n\t\t\t\"Link\"\n\t\t],\n\t\tIMAGE_URL: \"sap/cux/home/img/CustomNewsFeed/\",\n\t\tFESR_STEP_NAME: \"custNewsSlide-press\",\n\t\tEMPTY_DATA_ERROR_CODE: \"NODATA\"\n\t},\n\tCUSTOM_IMAGES: { [key: string]: string[] } = {\n\t\t\"Application Platform and Infrastructure\": fnImagePlaceholder(\"ApplicationPlatformandInfrastructure\", 3),\n\t\t\"Asset Management\": fnImagePlaceholder(\"AssetManagement\", 3),\n\t\t\"Cross Applications\": fnImagePlaceholder(\"CrossApplications\", 3),\n\t\tFinance: fnImagePlaceholder(\"Finance\", 3),\n\t\tManufacturing: fnImagePlaceholder(\"Manufacturing\", 3),\n\t\t\"R&D / Engineering\": fnImagePlaceholder(\"RnDandEngineering\", 3),\n\t\tSales: fnImagePlaceholder(\"Sales\", 3),\n\t\t\"Sourcing and Procurement\": fnImagePlaceholder(\"SourcingandProcurement\", 3),\n\t\t\"Supply Chain\": fnImagePlaceholder(\"SupplyChain\", 3),\n\t\tdefault: [\"default.jpg\"]\n\t};\n\n/**\n *\n * Panel class for managing and storing News.\n *\n * @extends sap.cux.home.BaseNewsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @public\n *\n * @alias sap.cux.home.NewsPanel\n */\nexport default class NewsPanel extends BaseNewsPanel {\n\tprivate oNewsTile!: SlideTile;\n\tprivate oNewsModel!: XMLModel;\n\tprivate oManageMenuItem!: MenuItem;\n\tprivate image!: number;\n\tprivate customNewsFeedCache: Map<string, unknown>;\n\tprivate bNewsLoad!: boolean;\n\tprivate favNewsFeed!: IFavNewsFeed;\n\tprivate _eventBus!: EventBus;\n\tprivate _defaultNews!: ODataResponse;\n\tprivate mandatoryNewsFeed!: string[];\n\tprivate _defaultNewsPromise: Promise<ODataResponse> | null = null;\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * The URL of the news item.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\turl: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * Type of the news item.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\ttype: {\n\t\t\t\ttype: \"sap.cux.home.NewsType\",\n\t\t\t\tgroup: \"Misc\",\n\t\t\t\tvisibility: \"public\",\n\t\t\t\tdefaultValue: NewsType.RSS\n\t\t\t},\n\t\t\t/**\n\t\t\t * The key of custom news feed.\n\t\t\t *\n\t\t\t * @private\n\t\t\t */\n\t\t\tcustomFeedKey: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * The filename of custom news feed.\n\t\t\t *\n\t\t\t * @private\n\t\t\t */\n\t\t\tcustomFileName: { type: \"string\", group: \"Misc\", defaultValue: \"\" },\n\t\t\t/**\n\t\t\t * The flag for custom news feed is checked or not.\n\t\t\t *\n\t\t\t * @private\n\t\t\t */\n\t\t\tshowCustom: { type: \"boolean\", group: \"Misc\", defaultValue: false },\n\t\t\t/**\n\t\t\t * The flag to determine rss feed will load or not.\n\t\t\t *\n\t\t\t * @private\n\t\t\t */\n\t\t\tnewsAvailable: { type: \"boolean\", group: \"Misc\", defaultValue: true, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Supported file formats for news.\n\t\t\t *\n\t\t\t * @private\n\t\t\t */\n\t\t\tsupportedFileFormats: { type: \"FileFormat[]\", group: \"Misc\", defaultValue: [\"xlsx\"], visibility: \"hidden\" }\n\t\t},\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * newsGroup aggregation for News\n\t\t\t */\n\t\t\tnewsGroup: { type: \"sap.cux.home.NewsGroup\", singularName: \"newsGroup\", multiple: true, visibility: \"hidden\" }\n\t\t}\n\t};\n\n\tconstructor(idOrSettings?: string | $BaseNewsPanelSettings);\n\tconstructor(id?: string, settings?: $BaseNewsPanelSettings);\n\t/**\n\t * Constructor for a new News Panel.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $BaseNewsPanelSettings) {\n\t\tsuper(id, settings);\n\t\tthis.customNewsFeedCache = new Map();\n\t}\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\tthis.oNewsTile = new SlideTile(this.getId() + \"--idNewsSlide\", {\n\t\t\tdisplayTime: 20000,\n\t\t\twidth: \"100%\",\n\t\t\theight: \"17rem\",\n\t\t\ttiles: [\n\t\t\t\tnew GenericTile(this.getId() + \"--placeholder\", {\n\t\t\t\t\tstate: \"Loading\",\n\t\t\t\t\tmode: \"ArticleMode\",\n\t\t\t\t\tframeType: \"Stretch\" as FrameType\n\t\t\t\t})\n\t\t\t]\n\t\t}).addStyleClass(\"newsTileMaxWidth sapUiSmallMarginTop\");\n\t\taddFESRId(this.oNewsTile, \"newsSlidePress\");\n\t\tthis.getNewsWrapper().addContent(this.oNewsTile);\n\t\tthis.getNewsWrapper().addStyleClass(\"newsWrapper\");\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"newsTitle\"));\n\t\tthis._eventBus = EventBus.getInstance();\n\n\t\tthis.oManageMenuItem = new MenuItem(`${this.getId()}-manageNews`, {\n\t\t\ttitle: this._i18nBundle.getText(\"mngNews\"),\n\t\t\ticon: \"sap-icon://edit\",\n\t\t\tpress: this.handleEditNews.bind(this)\n\t\t});\n\t\tthis.addAggregation(\"menuItems\", this.oManageMenuItem);\n\t\taddFESRId(this.oManageMenuItem, \"manageNews\");\n\t\tlet defaultNewsEnabled = this.isURLParamEnabled(\"default-News\");\n\t\t// if Default News url param is enabled, show default news only\n\t\tif (defaultNewsEnabled) {\n\t\t\tthis.setUrl(DEFAULT_NEWS_URL);\n\t\t\tthis.setProperty(\"showCustom\", false);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param paramName name of parameter\n\t * This method checks if the URL parameter is enabled.\n\t * @returns {boolean} True if the parameter is enabled, false otherwise.\n\t * @private\n\t */\n\tpublic isURLParamEnabled(paramName: string): boolean {\n\t\tconst urlParams = new URLSearchParams(window.location.search);\n\t\treturn urlParams.get(paramName)?.toUpperCase() === \"TRUE\";\n\t}\n\n\t/**\n\t * Retrieves news data asynchronously.\n\t * If the news model is not initialized, it initializes the XML model and loads news feed data.\n\t * @private\n\t * @returns {Promise} A promise that resolves when the news data is retrieved.\n\t */\n\tpublic async getData() {\n\t\tlet sUrl: string = this.getUrl();\n\t\tlet defaultNewsEnabled = this.isURLParamEnabled(\"default-News\");\n\t\tthis.mandatoryNewsFeed = [];\n\t\tif (!this.favNewsFeed) {\n\t\t\tawait this.setFavNewsFeed(defaultNewsEnabled);\n\t\t}\n\n\t\tif (sUrl && sUrl !== DEFAULT_NEWS_URL && !this.getProperty(\"showCustom\")) {\n\t\t\t//rss feed scenario\n\t\t\tthis.oNewsModel = await this.initializeXmlModel(sUrl);\n\t\t\tthis.oNewsTile.setModel(this.oNewsModel);\n\t\t\tthis.oManageMenuItem.setVisible(false);\n\t\t} else if (sUrl == DEFAULT_NEWS_URL && !this.getProperty(\"showCustom\")) {\n\t\t\t// default news scenario\n\t\t\tthis.bNewsLoad = this.bNewsLoad || false;\n\t\t\tthis.oManageMenuItem.setVisible(true);\n\t\t\tvoid this.setCustomNewsFeed(\"\");\n\t\t} else if (this.getProperty(\"showCustom\")) {\n\t\t\t//custom news scenario\n\t\t\tthis.bNewsLoad = this.bNewsLoad || false;\n\t\t\tthis.oManageMenuItem.setVisible(true);\n\t\t\tconst sCustomNewsFeedKey = this.getCustomFeedKey();\n\t\t\tif (sCustomNewsFeedKey) {\n\t\t\t\tawait this.setCustomNewsFeed(sCustomNewsFeedKey);\n\t\t\t} else {\n\t\t\t\tthis.handleFeedError();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.handleFeedError();\n\t\t}\n\t\tthis.fireEvent(\"loaded\");\n\t\tthis.adjustLayout();\n\t}\n\n\t/**\n\t * Retrieves the current news group data based on the provided id.\n\t *\n\t * @param id - The group ID\n\t * @returns The news group object that matches the extracted group ID, or `undefined`\n\t *          if no matching group is found.\n\t * @private\n\t */\n\tpublic getCurrentNewsGroup(id: string) {\n\t\tlet aValues = this._defaultNews.value;\n\t\tlet aGroupId = id.split(\"-\");\n\t\t// find the groupid from the sId\n\t\tlet groupId = aGroupId?.[aGroupId.length - 1];\n\t\tlet currentGroup = aValues.find((oGroup) => oGroup.group_id === groupId);\n\t\treturn currentGroup;\n\t}\n\n\t/**\n\t * Returns the custom news feed key property of NewsPanel\n\t * @returns {string} custom news feed key\n\t */\n\tpublic getCustomFeedKey(): string {\n\t\treturn this.getProperty(\"customFeedKey\") as string;\n\t}\n\n\t/**\n\t * Returns the Url property of NewsPanel\n\t * @returns {any}\n\t */\n\tpublic getUrl(): string {\n\t\treturn this.getProperty(\"url\") as string;\n\t}\n\n\t/**\n\t * Initializes an XML model for managing news data.\n\t * This method returns a Promise that resolves to the initialized XML model.\n\t */\n\n\t/**\n\t * Initializes an XML model for managing news data.\n\t * This method returns a Promise that resolves to the initialized XML model.\n\t * @param {string} sUrl rss url to load the news feed\n\t * @returns {Promise<XMLModel>} XML Document containing the news feeds\n\t */\n\tprivate async initializeXmlModel(sUrl: string): Promise<XMLModel> {\n\t\tconst oParent = this.getParent() as NewsAndPagesContainer;\n\t\treturn new Promise((resolve) => {\n\t\t\tconst oNewsModel = new XMLModel(sUrl);\n\t\t\toNewsModel.setDefaultBindingMode(\"OneWay\");\n\t\t\toNewsModel.attachRequestCompleted((oEvent: Event) => {\n\t\t\t\tvoid (async () => {\n\t\t\t\t\tif (!this.bNewsLoad) {\n\t\t\t\t\t\toParent?.panelLoadedFn(\"News\", { loaded: true, count: DEFAULT_FEED_COUNT });\n\t\t\t\t\t\tthis.bNewsLoad = true;\n\t\t\t\t\t}\n\t\t\t\t\tconst oDocument = oEvent.getSource<XMLModel>().getData() as XMLDocument;\n\t\t\t\t\tawait this.loadNewsFeed(oDocument, 0);\n\t\t\t\t\tthis._eventBus.publish(\"KeyUserChanges\", \"newsFeedLoadFailed\", { showError: false, date: new Date() });\n\t\t\t\t\tresolve(oNewsModel);\n\t\t\t\t})();\n\t\t\t});\n\t\t\toNewsModel.attachRequestFailed(() => {\n\t\t\t\tthis.handleFeedError();\n\t\t\t\tif (!this.bNewsLoad) {\n\t\t\t\t\toParent?.panelLoadedFn(\"News\", { loaded: false, count: 0 });\n\t\t\t\t\tthis.bNewsLoad = true;\n\t\t\t\t}\n\t\t\t\tthis._eventBus.publish(\"KeyUserChanges\", \"newsFeedLoadFailed\", { showError: true, date: new Date() });\n\t\t\t\tresolve(oNewsModel);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Loads the news feed based on the provided document and number of feeds.\n\t * Determines the feed type (RSS, feed, custom) and binds the news tile accordingly.\n\t * @param {Document} oDocument - The document containing the news feed data.\n\t * @param {number} [noOfFeeds] - The number of feeds to be displayed. Defaults to a predefined value.\n\t */\n\tprivate async loadNewsFeed(oDocument: Document, noOfFeeds: number) {\n\t\tlet oBindingInfo: IBindingInfo;\n\t\tif (!oDocument?.querySelector(\"customFeed\") && !oDocument?.querySelector(\"defaultFeed\")) {\n\t\t\tawait this.extractAllImageUrls(oDocument, noOfFeeds || DEFAULT_FEED_COUNT);\n\t\t}\n\n\t\tif (!!oDocument?.querySelector(\"rss\") && !!oDocument?.querySelector(\"item\")) {\n\t\t\toBindingInfo = {\n\t\t\t\tpath: \"/channel/item/\",\n\t\t\t\tlength: noOfFeeds || DEFAULT_FEED_COUNT\n\t\t\t};\n\t\t} else if (!!oDocument?.querySelector(\"atom\") && !!oDocument?.querySelector(\"entry\")) {\n\t\t\toBindingInfo = {\n\t\t\t\tpath: \"/entry/\",\n\t\t\t\tlength: noOfFeeds || DEFAULT_FEED_COUNT\n\t\t\t};\n\t\t} else if (\n\t\t\t(!!oDocument?.querySelector(\"customFeed\") || !!oDocument?.querySelector(\"defaultFeed\")) &&\n\t\t\t!!oDocument?.querySelector(\"item\")\n\t\t) {\n\t\t\tthis.destroyAggregation(\"newsItems\");\n\t\t\toBindingInfo = {\n\t\t\t\tpath: \"/item/\",\n\t\t\t\tlength: noOfFeeds || DEFAULT_FEED_COUNT\n\t\t\t};\n\t\t} else {\n\t\t\tthis.handleFeedError();\n\t\t\treturn;\n\t\t}\n\t\tthis.bindNewsTile(this.oNewsTile, oBindingInfo);\n\t}\n\n\t/**\n\t * Handles errors that occur during the loading of the news feed.\n\t * @returns {void}\n\t */\n\tpublic handleFeedError(): void {\n\t\tif (this.getProperty(\"showCustom\") || this.getUrl() === DEFAULT_NEWS_URL) {\n\t\t\tthis.generateErrorMessage().setVisible(true);\n\t\t\tthis.oNewsTile.setVisible(false);\n\t\t} else {\n\t\t\t(this.getNewsWrapper()?.getParent() as FlexBox).setVisible(false);\n\t\t\tthis.setProperty(\"newsAvailable\", false);\n\t\t\tthis.oManageMenuItem.setVisible(false);\n\t\t}\n\t}\n\n\tpublic async setURL(url: string) {\n\t\tthis.setProperty(\"showCustom\", false);\n\t\tthis.setProperty(\"newsAvailable\", true);\n\t\tthis.generateErrorMessage().setVisible(false);\n\t\t(this.getNewsWrapper()?.getParent() as FlexBox).setVisible(true);\n\t\tthis.oNewsTile.setVisible(true);\n\t\tthis.setProperty(\"url\", url);\n\t\tawait this.getData();\n\t}\n\n\t/**\n\t * Adjust layout based on the device type\n\t *\n\t * @private\n\t */\n\tpublic adjustLayout() {\n\t\tif (this.getDeviceType() === DeviceType.Mobile) {\n\t\t\tthis.oNewsTile.setHeight(\"11rem\");\n\t\t\tthis.generateErrorMessage().setWidth(\"100%\");\n\t\t\tthis.oNewsTile.removeStyleClass(\"sapUiSmallMarginTop\");\n\t\t} else {\n\t\t\tthis.oNewsTile.setHeight(\"17rem\");\n\t\t\t(this.getNewsWrapper()?.getParent() as FlexBox).setWidth(\"100%\");\n\t\t}\n\t}\n\n\t/**\n\t * Binds the news tile with the provided binding information.\n\t * @param {sap.m.SlideTile} oSlideTile - The SlideTile control to be bound.\n\t * @param {IBindingInfo} oBindingInfo - The binding information containing the path and length of the aggregation.\n\t */\n\tprivate bindNewsTile(oSlideTile: SlideTile, oBindingInfo: IBindingInfo): void {\n\t\tif (oBindingInfo) {\n\t\t\tif (!oSlideTile.getBinding(\"tiles\")) {\n\t\t\t\toSlideTile.bindAggregation(\"tiles\", {\n\t\t\t\t\tpath: oBindingInfo.path,\n\t\t\t\t\tlength: oBindingInfo.length,\n\t\t\t\t\ttemplateShareable: false,\n\t\t\t\t\tfactory: (sId: string, oContext: Context) => {\n\t\t\t\t\t\tconst newsInfo = oContext.getObject() as XMLDocument;\n\t\t\t\t\t\tlet oTile;\n\t\t\t\t\t\tif (newsInfo.getElementsByTagName(\"link\").length > 0) {\n\t\t\t\t\t\t\toTile = new NewsItem(recycleId(`${sId}-news-item`), {\n\t\t\t\t\t\t\t\turl: newsInfo.getElementsByTagName(\"link\")[0].textContent as string,\n\t\t\t\t\t\t\t\ttitle: newsInfo.getElementsByTagName(\"title\")[0].textContent as string,\n\t\t\t\t\t\t\t\tsubTitle: newsInfo.getElementsByTagName(\"description\")[0].textContent as string,\n\t\t\t\t\t\t\t\timageUrl: newsInfo.getElementsByTagName(\"imageUrl\")[0].textContent as string,\n\t\t\t\t\t\t\t\tfooter: this.formatDate(newsInfo.getElementsByTagName(\"pubDate\")[0].textContent as string)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet sGroupId = (newsInfo.getElementsByTagName(\"id\")?.[0]?.textContent as string) ?? \"\";\n\t\t\t\t\t\t\tlet newsId = sGroupId ? sId + \"-newsgroup-\" + sGroupId : sId + \"-newsgroup\";\n\t\t\t\t\t\t\tlet subTitleNews = newsInfo.getElementsByTagName(\"subTitle\")?.[0]?.textContent ?? \"\";\n\t\t\t\t\t\t\toTile = new NewsGroup(recycleId(newsId), {\n\t\t\t\t\t\t\t\ttitle: newsInfo.getElementsByTagName(\"title\")[0].textContent as string,\n\t\t\t\t\t\t\t\tsubTitle: subTitleNews || (this._i18nBundle.getText(\"newsFeedDescription\") as string),\n\t\t\t\t\t\t\t\timageUrl: newsInfo.getElementsByTagName(\"imageUrl\")?.[0]?.textContent as string,\n\t\t\t\t\t\t\t\tfooter: newsInfo.getElementsByTagName(\"footer\")?.[0]?.textContent as string\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.addAggregation(\"newsItems\", oTile, true);\n\t\t\t\t\t\treturn oTile.getTile();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Extracts images for all the news tiles\n\t * @param {Document} oDocument - The document containing the news feed data.\n\t * @param {number} [noOfFeeds] - The number of feeds to be displayed. Defaults to a predefined value.\n\t */\n\tprivate async extractAllImageUrls(oDocument: Document, noOfFeeds: number) {\n\t\tfor (let i = 0; i < noOfFeeds; i++) {\n\t\t\tconst oItemElement = oDocument?.getElementsByTagName(\"item\")[i];\n\t\t\tconst sUrl: string = await this.extractImage(oItemElement.getElementsByTagName(\"link\")[0].textContent as string);\n\t\t\tconst oImageUrl = oDocument.createElement(\"imageUrl\");\n\t\t\toImageUrl.textContent = sUrl;\n\t\t\toItemElement.appendChild(oImageUrl);\n\t\t}\n\t}\n\n\t/**\n\t * Converts the given date to a relative date-time format.\n\t * @param {string} timeStamp - The timestamp to be converted.\n\t * @returns {string} The date in relative date-time format.\n\t */\n\tprivate formatDate(timeStamp: string): string {\n\t\tconst relativeDateFormatter = DateFormat.getDateTimeInstance({\n\t\t\tstyle: \"medium\",\n\t\t\trelative: true,\n\t\t\trelativeStyle: \"short\"\n\t\t});\n\t\treturn relativeDateFormatter.format(new Date(timeStamp));\n\t}\n\n\t/**\n\t * Returns the favourite news feed for the custom news\n\t * @returns {IFavNewsFeed}\n\t * @private\n\t */\n\tpublic getFavNewsFeed() {\n\t\treturn this.favNewsFeed;\n\t}\n\n\t/**\n\t * Extracts the image URL from the provided HREF link or link.\n\t * @param {string} sHrefLink - The HREF link containing the image URL.\n\t * @returns {Promise} A promise that resolves to the extracted image URL.\n\t */\n\tprivate extractImage(sHrefLink: string): Promise<string> {\n\t\tconst fnLoadPlaceholderImage = () => {\n\t\t\tconst sPrefix = sap.ui.require.toUrl(\"sap/cux/home/utils\");\n\t\t\tthis.image = this.image ? this.image + 1 : 1;\n\t\t\tthis.image = this.image < 9 ? this.image : 1;\n\t\t\treturn `${sPrefix}/imgNews/${this.image}.jpg`;\n\t\t};\n\n\t\treturn fetch(sHrefLink)\n\t\t\t.then((res) => res.text())\n\t\t\t.then((sHTML) => {\n\t\t\t\tconst aMatches = sHTML.match(/<meta[^>]*property=[\"']og:image[\"'][^>]*content=[\"']([^\"']+)[\"'][^>]*>/i);\n\t\t\t\treturn Array.isArray(aMatches) && aMatches[1] ? aMatches[1] : fnLoadPlaceholderImage();\n\t\t\t})\n\t\t\t.catch(fnLoadPlaceholderImage);\n\t}\n\n\t/**\n\t * Checks if the custom file format is CSV based on the custom file name.\n\t *\n\t * @param {string} fileName - The custom file name.\n\t * @returns {boolean} True if the file format is CSV, otherwise false.\n\t */\n\tprivate isCSVFileFormat(fileName: string): boolean {\n\t\treturn fileName.split(\".\").pop()?.toLowerCase() === (\"csv\" as string);\n\t}\n\t/**\n\t * Sets the favorite news feed for the user by retrieving personalization data.\n\t *\n\t * This method asynchronously fetches the user's personalization data and updates\n\t * the `favNewsFeed` property with the favorite news feed information.\n\t *\n\t * @returns {Promise<void>} A promise that resolves when the favorite news feed is set.\n\t * @private\n\t */\n\tprivate async setFavNewsFeed(defaultFeed?: boolean): Promise<void> {\n\t\tconst personalizer = await this._getUserPersonalization();\n\t\tconst persData = await personalizer?.read();\n\t\tthis.favNewsFeed = (defaultFeed ? persData?.defaultNewsFeed : persData?.favNewsFeed) as IFavNewsFeed;\n\t}\n\n\t/**\n\t * This method retrieves the count and feeds of the custom news feed asynchronously.\n\t * If the count is not zero, it loads the custom news feed data and returns the feeds.\n\t * @param {string} sFeedId - The ID of the custom news feed to set.\n\t * @returns {Promise} A promise that resolves to an array of news feeds.\n\t * @private\n\t */\n\tpublic async setCustomNewsFeed(sFeedId: string): Promise<void> {\n\t\ttry {\n\t\t\tthis.oNewsTile.setVisible(true);\n\t\t\tthis.generateErrorMessage().setVisible(false);\n\t\t\tawait this.setFavNewsFeed(!sFeedId);\n\t\t\tconst customFileName = this.getProperty(\"customFileName\") as string;\n\t\t\tconst showAllPrepRequired = this.isCSVFileFormat(customFileName)\n\t\t\t\t? false\n\t\t\t\t: (this.favNewsFeed?.showAllPreparationRequired ?? true);\n\n\t\t\tif (this.isCSVFileFormat(customFileName)) {\n\t\t\t\tCUSTOM_NEWS_FEED.EXCLUDE_FIELDS.push(\"PreparationRequired\");\n\t\t\t}\n\t\t\tlet aFeeds;\n\t\t\tif (sFeedId) {\n\t\t\t\taFeeds = await this.getCustomNewsFeed(sFeedId, showAllPrepRequired);\n\t\t\t} else {\n\t\t\t\taFeeds = await this.getCustomNewsFeed(\"\", true);\n\t\t\t}\n\n\t\t\tif (aFeeds.length === 0) {\n\t\t\t\tthrow new Error(\"Error: No news feed available\");\n\t\t\t}\n\t\t\t//filer selected feeds from all news feed\n\t\t\tif (this.favNewsFeed?.items?.length) {\n\t\t\t\taFeeds = aFeeds.filter((oNewsFeed) => {\n\t\t\t\t\t//return this.favNewsFeed?.items.includes(oNewsFeed.title) || this.mandatoryNewsFeed.includes(oNewsFeed.title);\n\t\t\t\t\treturn this.favNewsFeed?.items.includes(oNewsFeed.title);\n\t\t\t\t});\n\t\t\t} else if (this.favNewsFeed?.items?.length === 0) {\n\t\t\t\t(this.getParent() as NewsAndPagesContainer)?.panelLoadedFn(\"News\", { loaded: true, count: 0 });\n\t\t\t\tthrow new Error(\"Error: No fav news feed available\");\n\t\t\t}\n\t\t\tawait this.loadCustomNewsFeed(aFeeds, sFeedId ? \"customFeed\" : \"defaultFeed\");\n\t\t} catch (err) {\n\t\t\tLog.error(err as string);\n\t\t\tthis.handleFeedError();\n\t\t}\n\t}\n\n\t/**\n\t * Filters the provided list of news groups to include only those that are marked as mandatory.\n\t *\n\t * A news group is considered mandatory if:\n\t * - Its `mandatory_text` property (at the top level) is set to \"TRUE\" (case-insensitive).\n\t * - Any of its associated articles (in the `_group_to_article` array) has a `mandatory_text` property set to \"TRUE\" (case-insensitive).\n\t *\n\t * If any article within a group is marked as mandatory, the group's `mandatory_text` property\n\t * is updated to \"TRUE\".\n\t *\n\t * @param newsGroups - An array of news groups to filter. Each group is expected to implement the `ICustomNewsFeed` interface.\n\t * @returns An array of news groups that are marked as mandatory.\n\t * @private\n\t */\n\tprivate filterMandatoryNews(newsGroups: ICustomNewsFeed[]) {\n\t\treturn newsGroups.filter((group) => {\n\t\t\t// Check top-level mandatory_text\n\t\t\tconst isTopLevelMandatory = group.mandatory_text?.toUpperCase() === \"TRUE\";\n\n\t\t\t// Check if any inner _group_to_article has mandatory_text true\n\t\t\tconst isAnyArticleMandatory = group._group_to_article?.some(function (article) {\n\t\t\t\t//make mandatory_test true at group level if any article is mandatory\n\t\t\t\tif (article.mandatory_text?.toUpperCase() === \"TRUE\") {\n\t\t\t\t\tgroup.mandatory_text = \"TRUE\";\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn isTopLevelMandatory || isAnyArticleMandatory;\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves the default news feed details from the given OData response.\n\t *\n\t * @param newsResponse - The OData response containing the news feed data.\n\t * @param showAllPreparationRequired - A boolean flag indicating whether to filter news items that require preparation.\n\t * @returns An array of default news feed items.\n\t * @private\n\t */\n\tprivate getDefaultNewsFeedDetails(newsResponse: ODataResponse) {\n\t\tlet aNews: ICustomNewsFeed[] = JSON.parse(JSON.stringify(newsResponse.value || [])) as ICustomNewsFeed[];\n\t\tconst aDefaultNews: ICustomNewsFeed[] = [];\n\t\tconst oDefaultFeedDict = {} as Record<string, string>;\n\t\tthis.mandatoryNewsFeed = [];\n\t\tif (aNews?.length > 0) {\n\t\t\tthis.mandatoryNewsFeed = this.filterMandatoryNews(aNews).map((oFeed) => oFeed.title);\n\n\t\t\tfor (const oFeed of aNews) {\n\t\t\t\tconst title = oFeed.title;\n\t\t\t\tlet subTitle = \"\";\n\t\t\t\tif (!oDefaultFeedDict[title]) {\n\t\t\t\t\tsubTitle = oFeed.subTitle || oFeed.description || \"\";\n\t\t\t\t\taDefaultNews.push({\n\t\t\t\t\t\ttitle: title,\n\t\t\t\t\t\tfooter: oFeed.footer_text,\n\t\t\t\t\t\timageUrl: this.getDefaultFeedImage(oFeed),\n\t\t\t\t\t\tid: oFeed.group_id,\n\t\t\t\t\t\tsubTitle: subTitle || \"\"\n\t\t\t\t\t});\n\t\t\t\t\toDefaultFeedDict[title] = title;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn aDefaultNews;\n\t}\n\n\t/**\n\t * Returns the mandatory news feed details\n\t * If the mandatory news feed is not set, it returns an empty array.\n\t *\n\t * @returns {ICustomNewsFeed[]} The mandatory news feed details.\n\t * @private\n\t */\n\tpublic getMandatoryDefaultNewsFeed() {\n\t\treturn this.mandatoryNewsFeed || [];\n\t}\n\n\t/**\n\t * Retrieves the default news response, either from cache or by fetching it.\n\t * @returns {Promise<ODataResponse>} A promise that resolves to the default news data\n\t * @private\n\t */\n\tprivate getDefaultNewsResponse(): Promise<ODataResponse> {\n\t\t// Return cached data if available\n\t\tif (this._defaultNews) {\n\t\t\treturn Promise.resolve(this._defaultNews);\n\t\t}\n\n\t\tif (!this._defaultNewsPromise) {\n\t\t\tthis._defaultNewsPromise = this.fetchDefaultNews();\n\t\t}\n\n\t\treturn this._defaultNewsPromise;\n\t}\n\n\t/**\n\t * Fetches the default news data from the server.\n\t * @returns {Promise<ODataResponse>} A promise that resolves to the fetched news data\n\t * @throws {Error} If the network request fails or returns a non-OK status\n\t * @private\n\t */\n\tprivate async fetchDefaultNews(): Promise<ODataResponse> {\n\t\ttry {\n\t\t\tconst response = await fetch(DEFAULT_NEWS_URL);\n\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(`HTTP error! status: ${response.status}`);\n\t\t\t}\n\n\t\t\tthis._defaultNews = (await response.json()) as ODataResponse;\n\t\t\treturn this._defaultNews;\n\t\t} catch (error) {\n\t\t\tthis._defaultNewsPromise = null;\n\t\t\tLog.error(error as string);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves a custom news feed based on the provided feed ID.\n\t * If no feed ID is provided, it returns the default news feed.\n\t *\n\t * @param {string} sFeedId - The ID of the custom news feed to retrieve. If not provided, the default news feed is returned.\n\t * @param {boolean} showAllPreparationRequired - A flag indicating whether to show all preparation required.\n\t * @returns {Promise<ICustomNewsFeed[]>} A promise that resolves to an array of custom news feed items.\n\t * @private\n\t */\n\tpublic async getCustomNewsFeed(sFeedId: string, showAllPreparationRequired: boolean): Promise<ICustomNewsFeed[]> {\n\t\tif (!sFeedId) {\n\t\t\tawait this.getDefaultNewsResponse();\n\t\t\tlet aDefaultgroups = this.getDefaultNewsFeedDetails(this._defaultNews);\n\t\t\treturn aDefaultgroups;\n\t\t} else {\n\t\t\treturn this.getCustomFeedData(sFeedId, showAllPreparationRequired);\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves custom news feed items identified by the provided feed ID and settings.\n\t * It processes the response data and returns an array of custom news feed items.\n\t * @param {string} sFeedId - The ID of the custom news feed.\n\t * @param {boolean} showAllPreparationRequired - Indicates whether to show all preparation required.\n\t * @returns {Promise} A Promise that resolves to an array of custom news feed items.\n\t * @private\n\t */\n\tprivate async getCustomFeedData(sFeedId: string, showAllPreparationRequired: boolean): Promise<ICustomNewsFeed[]> {\n\t\ttry {\n\t\t\tconst newsDetailUrl = this.getNewsFeedDetailsUrl({ changeId: sFeedId, showAllPreparationRequired });\n\t\t\tif (!this.customNewsFeedCache.has(newsDetailUrl)) {\n\t\t\t\tthis.customNewsFeedCache.set(newsDetailUrl, this.getAuthNewsFeed(newsDetailUrl));\n\t\t\t}\n\t\t\tconst authorizedNewsFeeds = (await this.customNewsFeedCache.get(newsDetailUrl)) as ICustomNewsFeed[];\n\t\t\tconst oFeedDict: { [key: string]: string } = {};\n\t\t\tconst aFeeds: ICustomNewsFeed[] = [];\n\t\t\tif (authorizedNewsFeeds?.length > 0) {\n\t\t\t\tauthorizedNewsFeeds.forEach((oFeed: ICustomNewsFeed) => {\n\t\t\t\t\tconst title = oFeed[CUSTOM_NEWS_FEED.TITLE] as INewsLink;\n\t\t\t\t\tif (!oFeedDict[title.value]) {\n\t\t\t\t\t\taFeeds.push({\n\t\t\t\t\t\t\ttitle: title.value,\n\t\t\t\t\t\t\tfooter: (oFeed[CUSTOM_NEWS_FEED.VALIDITY] as INewsLink).value,\n\t\t\t\t\t\t\timageUrl: this.getCustomFeedImage(title.value)\n\t\t\t\t\t\t});\n\t\t\t\t\t\toFeedDict[title.value] = title.value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn aFeeds; // group details\n\t\t} catch (err) {\n\t\t\tLog.error(err as string);\n\t\t\tthrow new Error(err as string);\n\t\t}\n\t}\n\n\t/**\n\t * Generates the URL for retrieving news feed details based on the provided news object.\n\t * The generated URL limits the number of results to 999.\n\t * @param {INewsItem} oNews - The news object containing properties such as changeId, title, and showAllPreparationRequired.\n\t * @returns {string} The URL for retrieving news feed details.\n\t */\n\tpublic getNewsFeedDetailsUrl(oNews: INewsItem) {\n\t\tlet sUrl = NEWS_FEED_READ_API + \"?$filter=ChangeId eq \" + \"'\" + oNews.changeId + \"'\";\n\t\tconst customFileName = this.getProperty(\"customFileName\") as string;\n\t\tif (!this.isCSVFileFormat(customFileName) && oNews.showAllPreparationRequired) {\n\t\t\tsUrl = sUrl + \" and PreparationRequired eq true\";\n\t\t}\n\t\treturn sUrl + \"&$top=999\";\n\t}\n\n\t/**\n\t * Retrieves the news feed from the specified URL after applying authorization filtering based on the available apps.\n\t * If the news feed contains impacted artifacts, it checks if the current user has access to any of the impacted apps.\n\t * If the user has access to at least one impacted app, the news feed is included in the returned array.\n\t * @param {string} sNewsUrl - The URL of the news feed.\n\t * @returns {Array} The filtered array of news feed items authorized for the user.\n\t */\n\tpublic async getAuthNewsFeed(sNewsUrl: string, newsTitle?: string) {\n\t\ttry {\n\t\t\tconst [aAvailableApps, aNewsFeed] = await Promise.all([\n\t\t\t\tthis.getAllAvailableApps(),\n\t\t\t\tthis.getNewsFeedDetails(sNewsUrl, newsTitle)\n\t\t\t]);\n\t\t\tif (aAvailableApps.length === 0) {\n\t\t\t\treturn aNewsFeed;\n\t\t\t}\n\t\t\treturn this.arrangeNewsFeeds(aNewsFeed, aAvailableApps);\n\t\t} catch (err) {\n\t\t\tLog.error(err as string);\n\t\t}\n\t}\n\n\t/**\n\t * If the news feed contains impacted artifacts, it checks if the current user has access to any of the impacted apps.\n\t * If the user has access to at least one impacted app, the news feed is included in the returned array.\n\t * @param {ICustomNewsFeed[]} aNewsFeed - array of news feed\n\t * @param {IAvailableApp[]} aAvailableApps - array of all availabel apps\n\t * @returns {Array} The filtered array of news feed items authorized for the user.\n\t */\n\tprivate arrangeNewsFeeds(aNewsFeed: ICustomNewsFeed[], aAvailableApps: IAvailableApp[]) {\n\t\tconst aAuthNewsFeed: ICustomNewsFeed[] = [];\n\n\t\taNewsFeed.forEach((oNewsFeed: ICustomNewsFeed) => {\n\t\t\tif ((oNewsFeed.Category as INewsLink).value !== \"App\" || !(oNewsFeed.ImpactedArtifacts as INewsLink).value) {\n\t\t\t\taAuthNewsFeed.push(oNewsFeed);\n\t\t\t} else {\n\t\t\t\tconst aImpactedArtifacts: string[] = (oNewsFeed.ImpactedArtifacts as INewsLink).value.split(\"\\n\");\n\t\t\t\tfor (let impactedArtifact of aImpactedArtifacts) {\n\t\t\t\t\tconst oImpactedArtifact = impactedArtifact;\n\t\t\t\t\tif (oImpactedArtifact && this.isAuthFeed(aAvailableApps, impactedArtifact)) {\n\t\t\t\t\t\taAuthNewsFeed.push(oNewsFeed);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn aAuthNewsFeed;\n\t}\n\n\t/**\n\t * takes all available apps list and the impacted atifact from the news and returns if it's valid\n\t * @param {IAvailableApp[]} aAvailableApps - Array of all available apps\n\t * @param {string} oImpactedArtifact - impacted artifact form the news\n\t * @returns {boolean} checks if the news is authenticated with the available apps list\n\t */\n\tprivate isAuthFeed(aAvailableApps: IAvailableApp[], oImpactedArtifact: string) {\n\t\tconst fioriIdSplitter = \"|\";\n\t\tif (oImpactedArtifact.includes(fioriIdSplitter)) {\n\t\t\tconst aTokens = oImpactedArtifact.split(fioriIdSplitter);\n\t\t\tconst sFioriId = (aTokens[aTokens.length - 1] || \"\").trim();\n\t\t\tif (sFioriId) {\n\t\t\t\tconst index = aAvailableApps.findIndex((oApp: IAvailableApp) => {\n\t\t\t\t\treturn sFioriId === oApp?.signature?.parameters[\"sap-fiori-id\"]?.defaultValue?.value;\n\t\t\t\t});\n\t\t\t\treturn index > -1;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Retrieves all available apps from the ClientSideTargetResolution service for authorization filtering.\n\t * @returns {Array} An array of available apps.\n\t */\n\tprivate async getAllAvailableApps(): Promise<IAvailableApp[]> {\n\t\ttry {\n\t\t\tconst oService = await Container.getServiceAsync<IAppConfiguration>(\"ClientSideTargetResolution\");\n\t\t\treturn oService?._oAdapter._aInbounds || [];\n\t\t} catch (err) {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tLog.error(err.message);\n\t\t\t}\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the news feed details from the specified URL, including translation and formatting of field labels.\n\t * @param {string} sUrl - The URL of the news feed details.\n\t * @returns {Array} The array of news feed items with translated and formatted field labels.\n\t */\n\tprivate async getNewsFeedDetails(sUrl: string, newsTitle?: string): Promise<ICustomNewsFeed[]> {\n\t\tif (this.customNewsFeedCache.has(sUrl)) {\n\t\t\tconst newsFeedDetails = await this.customNewsFeedCache.get(sUrl);\n\t\t\treturn this.filterNewsOnTitle(newsFeedDetails as ICustomNewsFeed[], newsTitle);\n\t\t}\n\n\t\tconst fnFormattedLabel = (sLabel: string) => sLabel.replace(/([a-z0-9])([A-Z])/g, \"$1 $2\");\n\t\tconst [newsResponse, translationResponse] = await Promise.all([\n\t\t\tHttpHelper.GetJSON(sUrl) as Promise<{ value: ICustomNewsFeed[] }>,\n\t\t\tthis.getTranslatedText(this.getCustomFeedKey())\n\t\t]);\n\t\tlet aNews: ICustomNewsFeed[] = JSON.parse(JSON.stringify((newsResponse as INewsResponse).value || [])) as ICustomNewsFeed[];\n\t\tconst aTranslation = JSON.parse(JSON.stringify((translationResponse as INewsResponse).value || [])) as ITranslatedText[];\n\t\taNews = this.filterNewsOnTitle(aNews, newsTitle);\n\t\treturn aNews.map((oNews: ICustomNewsFeed) => {\n\t\t\tconst aFields = Object.keys(oNews);\n\t\t\tconst aExpandFields: INewsLink[] = [];\n\t\t\taFields.forEach((oField) => {\n\t\t\t\tconst oTranslatedField = aTranslation.find(\n\t\t\t\t\t(oTranslation: ITranslatedText) => oTranslation?.ColumnName?.toUpperCase() === oField.toUpperCase()\n\t\t\t\t);\n\t\t\t\tconst oTranslatedFieldName = (oTranslatedField?.TranslatedName as string) || fnFormattedLabel(oField);\n\t\t\t\toNews[oField] = { label: oTranslatedFieldName, value: oNews[oField] as string } as INewsLink;\n\t\t\t\tif (!CUSTOM_NEWS_FEED.EXCLUDE_FIELDS.includes(oField)) {\n\t\t\t\t\taExpandFields.push(oNews[oField] as INewsLink);\n\t\t\t\t}\n\t\t\t});\n\t\t\toNews.Link = {\n\t\t\t\tlabel: this._i18nBundle.getText(\"readMoreLink\") as string,\n\t\t\t\tvalue: oNews[CUSTOM_NEWS_FEED.LINK] as string,\n\t\t\t\ttext: \"Link\"\n\t\t\t};\n\t\t\toNews.expanded = aNews.length === 1;\n\t\t\toNews.expandFields = aExpandFields;\n\t\t\treturn oNews;\n\t\t});\n\t}\n\n\t/**\n\t * Filters the news feed data based on the LOB title for the news detail dialog\n\t *\n\t * @private\n\t * @param {ICustomNewsFeed[]} aNews complete news feed data\n\t * @param {?string} [newsTitle] title of the line of business to be filtered on\n\t * @returns {ICustomNewsFeed[]} filtered news feed for provided LOB title\n\t */\n\tprivate filterNewsOnTitle(aNews: ICustomNewsFeed[], newsTitle?: string): ICustomNewsFeed[] {\n\t\tif (newsTitle) {\n\t\t\treturn aNews.filter((newsDetail: ICustomNewsFeed) => {\n\t\t\t\treturn (newsDetail.LineOfBusiness as INewsLink).value === newsTitle;\n\t\t\t});\n\t\t}\n\t\treturn aNews;\n\t}\n\n\t/**\n\t * Retrieves translated text for news feed fields based on the specified feed ID.\n\t * @param {string} sFeedId - The ID of the custom news feed\n\t * @returns {Promise} A promise resolving to the translated text for news feed fields.\n\t */\n\tprivate getTranslatedText(sFeedId: string) {\n\t\ttry {\n\t\t\tconst sUrl = NEWS_FEED_TRANSLATION_API + \"?$filter=Changeid eq '\" + sFeedId + \"'\";\n\t\t\tif (!this.customNewsFeedCache.has(sUrl)) {\n\t\t\t\tthis.customNewsFeedCache.set(sUrl, HttpHelper.GetJSON(sUrl) as Promise<ICustomNewsFeed[]>);\n\t\t\t}\n\t\t\treturn this.customNewsFeedCache.get(sUrl);\n\t\t} catch (err) {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tLog.error(err.message);\n\t\t\t}\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Loads custom news feed into the news panel after parsing JSON feed data to XML format.\n\t * @param {Array} feeds - The array of custom news feed items.\n\t */\n\tprivate async loadCustomNewsFeed(feeds: ICustomNewsFeed[], feedType: string) {\n\t\tconst oXMLResponse = this.parseJsonToXml(JSON.parse(JSON.stringify(feeds)) as JSON[], feedType);\n\t\tconst oParent = this.getParent() as NewsAndPagesContainer;\n\t\tif (!this.oNewsModel) {\n\t\t\tthis.oNewsModel = new XMLModel(oXMLResponse);\n\t\t\tif (!this.bNewsLoad) {\n\t\t\t\toParent?.panelLoadedFn(\"News\", { loaded: true, count: DEFAULT_FEED_COUNT });\n\t\t\t\tthis.bNewsLoad = true;\n\t\t\t}\n\t\t\tthis.oNewsTile.setModel(this.oNewsModel);\n\t\t} else {\n\t\t\tthis.oNewsTile.unbindAggregation(\"tiles\", false); // Unbind the bound aggregation\n\t\t\tthis.oNewsTile.destroyAggregation(\"tiles\"); // Removes old tiles\n\t\t\tthis.oNewsModel.setData(oXMLResponse);\n\t\t}\n\t\tawait this.loadNewsFeed(oXMLResponse, feeds.length);\n\t}\n\n\t/**\n\t * Parses JSON data into XML format.\n\t * @param {JSON[]} json - The JSON data to be parsed into XML.\n\t * @returns {XMLDocument} The XML document representing the parsed JSON data.\n\t */\n\tprivate parseJsonToXml(json: JSON[], feedType: string): XMLDocument {\n\t\tconst _transformJsonForXml = (aData: JSON[]) => aData.map((data: JSON) => ({ item: data }));\n\t\tconst _jsonToXml = (json: JSON) => {\n\t\t\tlet xml = \"\";\n\t\t\tlet key: string;\n\t\t\tfor (key in json) {\n\t\t\t\tconst value = json[key as keyof typeof json];\n\t\t\t\tif (value) {\n\t\t\t\t\tif (typeof value === \"object\") {\n\t\t\t\t\t\txml += `<${key}>${_jsonToXml(value)}</${key}>`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\txml += `<${key}>${value as string}</${key}>`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn xml.replace(/<\\/?\\d+>/g, \"\");\n\t\t};\n\t\tconst transformedJson: JSON = JSON.parse(JSON.stringify(_transformJsonForXml(json))) as JSON;\n\t\tlet xml = \"<?xml version='1.0' encoding='UTF-8'?>\";\n\t\tconst rootToken = feedType;\n\t\txml += `<${rootToken}>`;\n\t\txml += _jsonToXml(transformedJson);\n\t\txml += `</${rootToken}>`;\n\t\txml = xml.replaceAll(\"&\", \"&amp;\");\n\t\tconst parser = new DOMParser();\n\t\treturn parser.parseFromString(xml, \"text/xml\");\n\t}\n\n\t/**\n\t * Randomly selects an image from the available images for the feed item.\n\t * @param {string} sFileName - The file name of the custom news feed item.\n\t * @returns {string} The URL of the image for the feed item.\n\t * @private\n\t */\n\tprivate getCustomFeedImage(sFileName: string) {\n\t\tconst sFileBasePath = sap.ui.require.toUrl(CUSTOM_NEWS_FEED.IMAGE_URL);\n\t\tlet sFilePath = sFileBasePath + CUSTOM_IMAGES.default[0];\n\t\tconst files = CUSTOM_IMAGES[sFileName] || [];\n\t\tlet randomIndex = 0;\n\t\tif (files.length > 0) {\n\t\t\tconst randomArray = new window.Uint32Array(1);\n\t\t\twindow.crypto.getRandomValues(randomArray);\n\t\t\trandomIndex = randomArray[0] % 3;\n\t\t\tsFilePath = sFileBasePath + files[randomIndex];\n\t\t}\n\t\treturn sFilePath;\n\t}\n\n\t/**\n\t * Retrieves the default feed image for a given news feed.\n\t *\n\t * @param {ICustomNewsFeed} oFeed - The custom news feed object.\n\t * @returns {string} The base64 encoded image string with the appropriate MIME type, or an empty string if no valid image is found.\n\t * @private\n\t */\n\tprivate getDefaultFeedImage(oFeed: ICustomNewsFeed): string {\n\t\tconst imgId = oFeed?.bg_image_id;\n\t\tconst groupImg = oFeed?._group_to_image;\n\n\t\tif (!groupImg || groupImg.image_id !== imgId) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tlet mimeType = groupImg.mime_type;\n\t\tconst groupBgImg = groupImg.bg_image;\n\n\t\tif (!groupBgImg) {\n\t\t\treturn \"\";\n\t\t}\n\t\tif (mimeType === \"application/octet-stream\") {\n\t\t\tmimeType = \"image/jpeg\";\n\t\t}\n\t\tif (!this.isValidBase64(groupBgImg)) {\n\t\t\tconst base64Data = this.base64UrlToBase64(groupBgImg);\n\t\t\treturn `data:${mimeType};base64,${base64Data}`;\n\t\t}\n\t\treturn `data:${mimeType};base64,${groupBgImg}`;\n\t}\n\n\t/**\n\t * Converts a base64 URL string to a standard base64 string.\n\t *\n\t * @param {string} base64Url - The base64 URL string to convert.\n\t * @returns {string} The converted base64 string.\n\t * @private\n\t */\n\tprivate base64UrlToBase64(base64Url: string) {\n\t\tlet base64 = base64Url?.replace(/_/g, \"/\").replace(/-/g, \"+\");\n\n\t\t// Add padding if missing (Base64 should be a multiple of 4)\n\t\twhile (base64.length % 4 !== 0) {\n\t\t\tbase64 += \"=\";\n\t\t}\n\t\treturn base64;\n\t}\n\n\t/**\n\t * Checks if a string is a valid base64 encoded string.\n\t * @param input The string to validate\n\t * @returns boolean indicating if the string is valid base64\n\t * @private\n\t */\n\tprivate isValidBase64(input: string): boolean {\n\t\t// Check if the string exists and isn't empty\n\t\tif (!input || input.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Canonical base64 strings use these characters\n\t\t// A-Z, a-z, 0-9, +, /, and = for padding\n\t\tconst base64Regex = /^[A-Za-z0-9+/]*={0,2}$/;\n\n\t\t// Check if the string matches the base64 character set\n\t\tif (!base64Regex.test(input)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if the length is valid\n\t\t// Base64 strings have a length that is a multiple of 4\n\t\tif (input.length % 4 !== 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check padding rules\n\t\tif (input.includes(\"=\")) {\n\t\t\t// If there is padding, it must be at the end\n\t\t\tconst paddingIndex = input.indexOf(\"=\");\n\t\t\tconst lastPaddingIndex = input.lastIndexOf(\"=\");\n\t\t\t// Padding should only occur at the end\n\t\t\tif (paddingIndex !== input.length - (input.length - paddingIndex)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Can only have 1 or 2 padding characters\n\t\t\tif (input.length - paddingIndex > 2) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Make sure all padding is at the end\n\t\t\tif (paddingIndex !== lastPaddingIndex && lastPaddingIndex !== paddingIndex + 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate _getUserPersonalization() {\n\t\tconst persContainerId = PersonalisationUtils.getPersContainerId(this);\n\t\tconst ownerComponent = PersonalisationUtils.getOwnerComponent(this) as Component;\n\t\treturn UshellPersonalizer.getInstance(persContainerId, ownerComponent);\n\t}\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AAHAA,GAAA,CAAAC,EAAA,CAAAC,MAAA,waAAAC,GAAA,EAAAC,WAAA,EAAAC,SAAA,EAAAC,QAAA,EAAAC,UAAA,EAAAC,QAAA,EAAAC,SAAA,EAAAC,eAAA,EAAAC,UAAA,EAAAC,WAAA,EAAAC,UAAA,EAAAC,UAAA,EAAAC,kBAAA,EAAAC,wBAAA,EAAAC,eAAA,EAAAC,iBAAA,EAAAC,YAAA,EAAAC,sBAAA,EAAAC,oBAAA;EAAA;;EAAA,SAAAC,uBAAAC,GAAA;IAAA,OAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,CAAAE,OAAA,mBAAAF,GAAA,CAAAE,OAAA,GAAAF,GAAA;EAAA;EAuCO,SAAAG,QAAiBC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAE;IAC3C,IAAI,CAACF,IAAI,CAACG,CAAC,EAAE;MACZ,IAAID,KAAK,YAAAE,KAAiB,EAAE;QAC3B,IAAIF,KAAK,CAACC,CAAC,EAAE;UACZ,IAAIF,KAAK,GAAG,CAAC,EAAE;YACdA,KAAK,GAAGC,KAAK,CAACC,CAAC;UAChB;UACAD,KAAK,GAAGA,KAAK,CAACG,CAAC;QAChB,CAAC,MAAM;UACNH,KAAK,CAACI,CAAC,GAAGP,OAAA,CAAQQ,IAAI,CAAC,IAAI,EAAEP,IAAI,EAAEC,KAAK,CAAC;UACzC;QACD;MACD;MACA,IAAIC,KAAK,IAAIA,KAAK,CAACM,IAAI,EAAE;QACxBN,KAAK,CAACM,IAAI,CAACT,OAAA,CAAQQ,IAAI,CAAC,IAAI,EAAEP,IAAI,EAAEC,KAAK,CAAC,EAAEF,OAAA,CAAQQ,IAAI,CAAC,IAAI,EAAEP,IAAI,EAAE,CAAC,CAAC,CAAC;QACxE;MACD;MACAA,IAAI,CAACG,CAAC,GAAGF,KAAK;MACdD,IAAI,CAACK,CAAC,GAAGH,KAAK;MACd,MAAMO,QAAQ,GAAGT,IAAI,CAACM,CAAC;MACvB,IAAIG,QAAQ,EAAE;QACbA,QAAQ,CAACT,IAAI,CAAC;MACf;IACD;EACD;EAAC,MA7CMU,aAAa,GAAAf,sBAAA,CAAAZ,eAAA;EAAA,MAjBPqB,KAAA,GAAQ,aAAc,YAAW;IAC7C,SAAAA,MAAA,EAAiB,CAAC;IAClBA,KAAA,CAAMO,SAAS,CAACH,IAAI,GAAG,UAASI,WAAW,EAAEC,UAAU,EAAE;MACxD,MAAMC,MAAM,GAAG,IAAAV,KAAA,CAAU,CAAC;MAC1B,MAAMH,KAAK,GAAG,IAAI,CAACE,CAAC;MACpB,IAAIF,KAAK,EAAE;QACV,MAAMc,QAAQ,GAAGd,KAAK,GAAG,CAAC,GAAGW,WAAW,GAAGC,UAAU;QACrD,IAAIE,QAAQ,EAAE;UACb,IAAI;YACHhB,OAAA,CAAQe,MAAM,EAAE,CAAC,EAAEC,QAAQ,CAAC,IAAI,CAACV,CAAC,CAAC,CAAC;UACrC,CAAC,CAAC,OAAOW,CAAC,EAAE;YACXjB,OAAA,CAAQe,MAAM,EAAE,CAAC,EAAEE,CAAC,CAAC;UACtB;UACA,OAAOF,MAAM;QACd,CAAC,MAAM;UACN,OAAO,IAAI;QACZ;MACD;MACA,IAAI,CAACR,CAAC,GAAG,UAASW,KAAK,EAAE;QACxB,IAAI;UACH,MAAMf,KAAK,GAAGe,KAAK,CAACZ,CAAC;UACrB,IAAIY,KAAK,CAACd,CAAC,GAAG,CAAC,EAAE;YAChBJ,OAAA,CAAQe,MAAM,EAAE,CAAC,EAAEF,WAAW,GAAGA,WAAW,CAACV,KAAK,CAAC,GAAGA,KAAK,CAAC;UAC7D,CAAC,MAAM,IAAIW,UAAU,EAAE;YACtBd,OAAA,CAAQe,MAAM,EAAE,CAAC,EAAED,UAAU,CAACX,KAAK,CAAC,CAAC;UACtC,CAAC,MAAM;YACNH,OAAA,CAAQe,MAAM,EAAE,CAAC,EAAEZ,KAAK,CAAC;UAC1B;QACD,CAAC,CAAC,OAAOc,CAAC,EAAE;UACXjB,OAAA,CAAQe,MAAM,EAAE,CAAC,EAAEE,CAAC,CAAC;QACtB;MACD,CAAC;MACD,OAAOF,MAAM;IACd,CAAC;IACD,OAAAV,KAAA;EACD,CAAC,CAAE,CAAC;EA6BG,SAASc,cAAcA,CAACC,QAAQ,EAAE;IACxC,OAAOA,QAAQ,YAAYf,KAAK,IAAIe,QAAQ,CAAChB,CAAC,GAAG,CAAC;EACnD;EA4LO,SAASiB,IAAIA,CAACC,IAAI,EAAEC,MAAM,EAAEC,IAAI,EAAE;IACxC,IAAIC,KAAK;IACT,SAAS;MACR,IAAIC,cAAc,GAAGJ,IAAI,CAAC,CAAC;MAC3B,IAAIH,cAAc,CAACO,cAAc,CAAC,EAAE;QACnCA,cAAc,GAAGA,cAAc,CAACpB,CAAC;MAClC;MACA,IAAI,CAACoB,cAAc,EAAE;QACpB,OAAOX,MAAM;MACd;MACA,IAAIW,cAAc,CAACjB,IAAI,EAAE;QACxBgB,KAAK,GAAG,CAAC;QACT;MACD;MACA,IAAIV,MAAM,GAAGS,IAAI,CAAC,CAAC;MACnB,IAAIT,MAAM,IAAIA,MAAM,CAACN,IAAI,EAAE;QAC1B,IAAIU,cAAc,CAACJ,MAAM,CAAC,EAAE;UAC3BA,MAAM,GAAGA,MAAM,CAACX,CAAC;QAClB,CAAC,MAAM;UACNqB,KAAK,GAAG,CAAC;UACT;QACD;MACD;MACA,IAAIF,MAAM,EAAE;QACX,IAAII,WAAW,GAAGJ,MAAM,CAAC,CAAC;QAC1B,IAAII,WAAW,IAAIA,WAAW,CAAClB,IAAI,IAAI,CAACU,cAAc,CAACQ,WAAW,CAAC,EAAE;UACpEF,KAAK,GAAG,CAAC;UACT;QACD;MACD;IACD;IACA,IAAIxB,IAAI,GAAG,IAAII,KAAK,CAAC,CAAC;IACtB,IAAIuB,MAAM,GAAG5B,OAAO,CAACQ,IAAI,CAAC,IAAI,EAAEP,IAAI,EAAE,CAAC,CAAC;IACxC,CAACwB,KAAK,KAAK,CAAC,GAAGC,cAAc,CAACjB,IAAI,CAACoB,gBAAgB,CAAC,GAAGJ,KAAK,KAAK,CAAC,GAAGV,MAAM,CAACN,IAAI,CAACqB,gBAAgB,CAAC,GAAGH,WAAW,CAAClB,IAAI,CAACsB,kBAAkB,CAAC,EAAEtB,IAAI,CAAC,KAAK,CAAC,EAAEmB,MAAM,CAAC;IAC/J,OAAO3B,IAAI;IACX,SAAS6B,gBAAgBA,CAAC3B,KAAK,EAAE;MAChCY,MAAM,GAAGZ,KAAK;MACd,GAAG;QACF,IAAIoB,MAAM,EAAE;UACXI,WAAW,GAAGJ,MAAM,CAAC,CAAC;UACtB,IAAII,WAAW,IAAIA,WAAW,CAAClB,IAAI,IAAI,CAACU,cAAc,CAACQ,WAAW,CAAC,EAAE;YACpEA,WAAW,CAAClB,IAAI,CAACsB,kBAAkB,CAAC,CAACtB,IAAI,CAAC,KAAK,CAAC,EAAEmB,MAAM,CAAC;YACzD;UACD;QACD;QACAF,cAAc,GAAGJ,IAAI,CAAC,CAAC;QACvB,IAAI,CAACI,cAAc,IAAKP,cAAc,CAACO,cAAc,CAAC,IAAI,CAACA,cAAc,CAACpB,CAAE,EAAE;UAC7EN,OAAO,CAACC,IAAI,EAAE,CAAC,EAAEc,MAAM,CAAC;UACxB;QACD;QACA,IAAIW,cAAc,CAACjB,IAAI,EAAE;UACxBiB,cAAc,CAACjB,IAAI,CAACoB,gBAAgB,CAAC,CAACpB,IAAI,CAAC,KAAK,CAAC,EAAEmB,MAAM,CAAC;UAC1D;QACD;QACAb,MAAM,GAAGS,IAAI,CAAC,CAAC;QACf,IAAIL,cAAc,CAACJ,MAAM,CAAC,EAAE;UAC3BA,MAAM,GAAGA,MAAM,CAACT,CAAC;QAClB;MACD,CAAC,QAAQ,CAACS,MAAM,IAAI,CAACA,MAAM,CAACN,IAAI;MAChCM,MAAM,CAACN,IAAI,CAACqB,gBAAgB,CAAC,CAACrB,IAAI,CAAC,KAAK,CAAC,EAAEmB,MAAM,CAAC;IACnD;IACA,SAASC,gBAAgBA,CAACH,cAAc,EAAE;MACzC,IAAIA,cAAc,EAAE;QACnBX,MAAM,GAAGS,IAAI,CAAC,CAAC;QACf,IAAIT,MAAM,IAAIA,MAAM,CAACN,IAAI,EAAE;UAC1BM,MAAM,CAACN,IAAI,CAACqB,gBAAgB,CAAC,CAACrB,IAAI,CAAC,KAAK,CAAC,EAAEmB,MAAM,CAAC;QACnD,CAAC,MAAM;UACNE,gBAAgB,CAACf,MAAM,CAAC;QACzB;MACD,CAAC,MAAM;QACNf,OAAO,CAACC,IAAI,EAAE,CAAC,EAAEc,MAAM,CAAC;MACzB;IACD;IACA,SAASgB,kBAAkBA,CAAA,EAAG;MAC7B,IAAIL,cAAc,GAAGJ,IAAI,CAAC,CAAC,EAAE;QAC5B,IAAII,cAAc,CAACjB,IAAI,EAAE;UACxBiB,cAAc,CAACjB,IAAI,CAACoB,gBAAgB,CAAC,CAACpB,IAAI,CAAC,KAAK,CAAC,EAAEmB,MAAM,CAAC;QAC3D,CAAC,MAAM;UACNC,gBAAgB,CAACH,cAAc,CAAC;QACjC;MACD,CAAC,MAAM;QACN1B,OAAO,CAACC,IAAI,EAAE,CAAC,EAAEc,MAAM,CAAC;MACzB;IACD;EACD;EAAC,MAhUMiB,QAAQ,GAAApC,sBAAA,CAAAX,UAAA;EA+hBR,SAASgD,MAAMA,CAACT,IAAI,EAAEU,OAAO,EAAE;IACrC,IAAI;MACH,IAAInB,MAAM,GAAGS,IAAI,CAAC,CAAC;IACpB,CAAC,CAAC,OAAMP,CAAC,EAAE;MACV,OAAOiB,OAAO,CAACjB,CAAC,CAAC;IAClB;IACA,IAAIF,MAAM,IAAIA,MAAM,CAACN,IAAI,EAAE;MAC1B,OAAOM,MAAM,CAACN,IAAI,CAAC,KAAK,CAAC,EAAEyB,OAAO,CAAC;IACpC;IACA,OAAOnB,MAAM;EACd;EAAC,MAviBMoB,SAAS,GAAAvC,sBAAA,CAAAV,WAAA;EAAA,MACTkD,QAAQ,GAAAxC,sBAAA,CAAAT,UAAA;EAAA,MACNkD,QAAQ,GAAAjD,UAAA;EAAA,MACRkD,gBAAgB,GAAAjD,kBAAA;EAAA,MAChBkD,SAAS,GAAAjD,wBAAA;EAAA,MACTkD,UAAU,GAAAjD,eAAA;EAAA,MACVkD,SAAS,GAAAjD,iBAAA;EAAA,MACXkD,UAAU,GAAA9C,sBAAA,CAAAH,YAAA;EAAA,MACVkD,oBAAoB,GAAA/C,sBAAA,CAAAF,sBAAA;EAAA,MACpBkD,kBAAkB,GAAAhD,sBAAA,CAAAD,oBAAA;EAuFzB,MAAMkD,QAAQ,GAAG,4CAA4C;IAC5DC,kBAAkB,GAAGD,QAAQ,GAAG,yBAAyB,GAAG,WAAW;IACvEE,yBAAyB,GAAGF,QAAQ,GAAG,yBAAyB,GAAG,2BAA2B;IAC9FG,kBAAkB,GAAG,CAAC;IACtBC,kBAAkB,GAAG,SAAAA,CAAUC,KAAa,EAAEC,CAAS,EAAE;MACxD,OAAOC,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAEH;MAAE,CAAC,EAAE,UAAU7C,CAAC,EAAEiD,CAAC,EAAE;QAChD,OAAOL,KAAK,GAAG,GAAG,IAAIK,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;MACtC,CAAC,CAAC;IACH,CAAC;EAEF,MAAMC,gBAAgB,GAAG;MACvBC,KAAK,EAAE,gBAAgB;MACvBC,IAAI,EAAE,kBAAkB;MACxBC,QAAQ,EAAE,WAAW;MACrBC,oBAAoB,EAAE,qBAAqB;MAC3CC,cAAc,EAAE,CACf,UAAU,EACV,YAAY,EACZ,gBAAgB,EAChB,cAAc,EACd,OAAO,EACP,aAAa,EACb,MAAM,EACN,WAAW,EACX,kBAAkB,EAClB,MAAM,CACN;MACDC,SAAS,EAAE,kCAAkC;MAC7CC,cAAc,EAAE,qBAAqB;MACrCC,qBAAqB,EAAE;IACxB,CAAC;IACDC,aAA0C,GAAG;MAC5C,yCAAyC,EAAEhB,kBAAkB,CAAC,sCAAsC,EAAE,CAAC,CAAC;MACxG,kBAAkB,EAAEA,kBAAkB,CAAC,iBAAiB,EAAE,CAAC,CAAC;MAC5D,oBAAoB,EAAEA,kBAAkB,CAAC,mBAAmB,EAAE,CAAC,CAAC;MAChEiB,OAAO,EAAEjB,kBAAkB,CAAC,SAAS,EAAE,CAAC,CAAC;MACzCkB,aAAa,EAAElB,kBAAkB,CAAC,eAAe,EAAE,CAAC,CAAC;MACrD,mBAAmB,EAAEA,kBAAkB,CAAC,mBAAmB,EAAE,CAAC,CAAC;MAC/DmB,KAAK,EAAEnB,kBAAkB,CAAC,OAAO,EAAE,CAAC,CAAC;MACrC,0BAA0B,EAAEA,kBAAkB,CAAC,wBAAwB,EAAE,CAAC,CAAC;MAC3E,cAAc,EAAEA,kBAAkB,CAAC,aAAa,EAAE,CAAC,CAAC;MACpDlD,OAAO,EAAE,CAAC,aAAa;IACxB,CAAC;;EAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAfA,MAgBqBsE,SAAS,GAAS1D,aAAa,CAAA2D,MAAA;IAanCC,QAAQ,EAAoB;MAC3CC,OAAO,EAAE,cAAc;MACvBC,UAAU,EAAE;QACX;AACH;AACA;AACA;AACA;QACGC,GAAG,EAAE;UAAEC,IAAI,EAAE,QAAQ;UAAEC,KAAK,EAAE,MAAM;UAAEC,YAAY,EAAE,EAAE;UAAEC,UAAU,EAAE;QAAS,CAAC;QAC9E;AACH;AACA;AACA;AACA;QACGH,IAAI,EAAE;UACLA,IAAI,EAAE,uBAAuB;UAC7BC,KAAK,EAAE,MAAM;UACbE,UAAU,EAAE,QAAQ;UACpBD,YAAY,EAAExC,QAAQ,CAAC0C;QACxB,CAAC;QACD;AACH;AACA;AACA;AACA;QACGC,aAAa,EAAE;UAAEL,IAAI,EAAE,QAAQ;UAAEC,KAAK,EAAE,MAAM;UAAEC,YAAY,EAAE,EAAE;UAAEC,UAAU,EAAE;QAAS,CAAC;QACxF;AACH;AACA;AACA;AACA;QACGG,cAAc,EAAE;UAAEN,IAAI,EAAE,QAAQ;UAAEC,KAAK,EAAE,MAAM;UAAEC,YAAY,EAAE;QAAG,CAAC;QACnE;AACH;AACA;AACA;AACA;QACGK,UAAU,EAAE;UAAEP,IAAI,EAAE,SAAS;UAAEC,KAAK,EAAE,MAAM;UAAEC,YAAY,EAAE;QAAM,CAAC;QACnE;AACH;AACA;AACA;AACA;QACGM,aAAa,EAAE;UAAER,IAAI,EAAE,SAAS;UAAEC,KAAK,EAAE,MAAM;UAAEC,YAAY,EAAE,IAAI;UAAEC,UAAU,EAAE;QAAS,CAAC;QAC3F;AACH;AACA;AACA;AACA;QACGM,oBAAoB,EAAE;UAAET,IAAI,EAAE,cAAc;UAAEC,KAAK,EAAE,MAAM;UAAEC,YAAY,EAAE,CAAC,MAAM,CAAC;UAAEC,UAAU,EAAE;QAAS;MAC3G,CAAC;MACDO,YAAY,EAAE;QACb;AACH;AACA;QACGC,SAAS,EAAE;UAAEX,IAAI,EAAE,wBAAwB;UAAEY,YAAY,EAAE,WAAW;UAAEC,QAAQ,EAAE,IAAI;UAAEV,UAAU,EAAE;QAAS;MAC9G;IACD,CAAC;IAID;AACD;AACA;AACA;AACA;AACA;IACQW,WAAW,WAAAC,aAACC,EAAW,EAAEC,QAAiC,EAAE;MAClEC,wCAAA,OAAMF,EAAE,EAAEC,QAAQ;MAAE,KAtEbE,mBAAmB,GAAkC,IAAI;MAuEhE,IAAI,CAACC,mBAAmB,GAAG,IAAIC,GAAG,CAAC,CAAC;IACrC,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;IACQC,IAAI,WAAAC,MAAA,EAAS;MACnBC,iCAAA;MAEA,IAAI,CAACC,SAAS,GAAG,IAAIzH,SAAS,CAAC,IAAI,CAAC0H,KAAK,CAAC,CAAC,GAAG,eAAe,EAAE;QAC9DC,WAAW,EAAE,KAAK;QAClBC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,CACN,IAAI/H,WAAW,CAAC,IAAI,CAAC2H,KAAK,CAAC,CAAC,GAAG,eAAe,EAAE;UAC/CnG,KAAK,EAAE,SAAS;UAChBwG,IAAI,EAAE,aAAa;UACnBC,SAAS,EAAE;QACZ,CAAC,CAAC;MAEJ,CAAC,CAAC,CAACC,aAAa,CAAC,sCAAsC,CAAC;MACxDnE,SAAS,CAAC,IAAI,CAAC2D,SAAS,EAAE,gBAAgB,CAAC;MAC3C,IAAI,CAACS,cAAc,CAAC,CAAC,CAACC,UAAU,CAAC,IAAI,CAACV,SAAS,CAAC;MAChD,IAAI,CAACS,cAAc,CAAC,CAAC,CAACD,aAAa,CAAC,aAAa,CAAC;MAClD,IAAI,CAACG,WAAW,CAAC,OAAO,EAAE,IAAI,CAACC,WAAW,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;MAChE,IAAI,CAACC,SAAS,GAAGtI,QAAQ,CAACuI,WAAW,CAAC,CAAC;MAEvC,IAAI,CAACC,eAAe,GAAG,IAAIpF,QAAQ,CAAC,GAAG,IAAI,CAACqE,KAAK,CAAC,CAAC,aAAa,EAAE;QACjEgB,KAAK,EAAE,IAAI,CAACL,WAAW,CAACC,OAAO,CAAC,SAAS,CAAC;QAC1CK,IAAI,EAAE,iBAAiB;QACvBC,KAAK,EAAE,IAAI,CAACC,cAAc,CAAChH,IAAI,CAAC,IAAI;MACrC,CAAC,CAAC;MACF,IAAI,CAACiH,cAAc,CAAC,WAAW,EAAE,IAAI,CAACL,eAAe,CAAC;MACtD3E,SAAS,CAAC,IAAI,CAAC2E,eAAe,EAAE,YAAY,CAAC;MAC7C,IAAIM,kBAAkB,GAAG,IAAI,CAACC,iBAAiB,CAAC,cAAc,CAAC;MAC/D;MACA,IAAID,kBAAkB,EAAE;QACvB,IAAI,CAACE,MAAM,CAACtF,gBAAgB,CAAC;QAC7B,IAAI,CAACyE,WAAW,CAAC,YAAY,EAAE,KAAK,CAAC;MACtC;IACD,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;AACA;IACQY,iBAAiB,WAAAE,mBAACC,SAAiB,EAAW;MACpD,MAAMC,SAAS,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;MAC7D,OAAOJ,SAAS,CAACK,GAAG,CAACN,SAAS,CAAC,EAAEO,WAAW,CAAC,CAAC,KAAK,MAAM;IAC1D,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;IACcC,OAAO,WAAAC,SAAA;MAAA,IAAG;QAAA,MAAArH,KAAA,GACH,IAAI;QAAA,SAAAsH,OAAA;UAAA,SAAAC,OAAA;YA8BvBvH,KAAA,CAAKwH,SAAS,CAAC,QAAQ,CAAC;YACxBxH,KAAA,CAAKyH,YAAY,CAAC,CAAC;UAAC;UAAA,MAAAC,MAAA;YAAA,IAxBhBC,IAAI,IAAIA,IAAI,KAAKvG,gBAAgB,IAAI,CAACpB,KAAA,CAAK4H,WAAW,CAAC,YAAY,CAAC;cACvE;cAAA,OAAAC,OAAA,CAAAC,OAAA,CACwB9H,KAAA,CAAK+H,kBAAkB,CAACJ,IAAI,CAAC,EAAApI,IAAA,WAAAyI,qBAAA;gBAArDhI,KAAA,CAAKiI,UAAU,GAAAD,qBAAsC;gBACrDhI,KAAA,CAAKkF,SAAS,CAACgD,QAAQ,CAAClI,KAAA,CAAKiI,UAAU,CAAC;gBACxCjI,KAAA,CAAKkG,eAAe,CAACiC,UAAU,CAAC,KAAK,CAAC;cAAC;YAAA;cAAA,MAAAC,MAAA;gBAAA,IAC7BT,IAAI,IAAIvG,gBAAgB,IAAI,CAACpB,KAAA,CAAK4H,WAAW,CAAC,YAAY,CAAC;kBACrE;kBACA5H,KAAA,CAAKqI,SAAS,GAAGrI,KAAA,CAAKqI,SAAS,IAAI,KAAK;kBACxCrI,KAAA,CAAKkG,eAAe,CAACiC,UAAU,CAAC,IAAI,CAAC;kBACrC,KAAKnI,KAAA,CAAKsI,iBAAiB,CAAC,EAAE,CAAC;gBAAC;kBAAA,MAAAC,MAAA;oBAAA,IACtBvI,KAAA,CAAK4H,WAAW,CAAC,YAAY,CAAC;sBACxC;sBACA5H,KAAA,CAAKqI,SAAS,GAAGrI,KAAA,CAAKqI,SAAS,IAAI,KAAK;sBACxCrI,KAAA,CAAKkG,eAAe,CAACiC,UAAU,CAAC,IAAI,CAAC;sBACrC,MAAMK,kBAAkB,GAAGxI,KAAA,CAAKyI,gBAAgB,CAAC,CAAC;sBAAC,MAAAC,KAAA;wBAAA,IAC/CF,kBAAkB;0BAAA,OAAAX,OAAA,CAAAC,OAAA,CACf9H,KAAA,CAAKsI,iBAAiB,CAACE,kBAAkB,CAAC,EAAAjJ,IAAA;wBAAA;0BAEhDS,KAAA,CAAK2I,eAAe,CAAC,CAAC;wBAAC;sBAAA;sBAAA,IAAAD,KAAA,IAAAA,KAAA,CAAAnJ,IAAA,SAAAmJ,KAAA,CAAAnJ,IAAA;oBAAA;sBAGxBS,KAAA,CAAK2I,eAAe,CAAC,CAAC;oBAAC;kBAAA;kBAAA,IAAAJ,MAAA,IAAAA,MAAA,CAAAhJ,IAAA,SAAAgJ,MAAA,CAAAhJ,IAAA;gBAAA;cAAA;cAAA,IAAA6I,MAAA,IAAAA,MAAA,CAAA7I,IAAA,SAAA6I,MAAA,CAAA7I,IAAA;YAAA;UAAA;UAAA,OAAAmI,MAAA,IAAAA,MAAA,CAAAnI,IAAA,GAAAmI,MAAA,CAAAnI,IAAA,CAAAgI,MAAA,IAAAA,MAAA,CAAAG,MAAA;QAAA;QA5BxB,IAAIC,IAAY,GAAG3H,KAAA,CAAK4I,MAAM,CAAC,CAAC;QAChC,IAAIpC,kBAAkB,GAAGxG,KAAA,CAAKyG,iBAAiB,CAAC,cAAc,CAAC;QAC/DzG,KAAA,CAAK6I,iBAAiB,GAAG,EAAE;QAAC,MAAAC,MAAA;UAAA,IACxB,CAAC9I,KAAA,CAAK+I,WAAW;YAAA,OAAAlB,OAAA,CAAAC,OAAA,CACd9H,KAAA,CAAKgJ,cAAc,CAACxC,kBAAkB,CAAC,EAAAjH,IAAA;UAAA;QAAA;QAAA,OAAAsI,OAAA,CAAAC,OAAA,CAAAgB,MAAA,IAAAA,MAAA,CAAAvJ,IAAA,GAAAuJ,MAAA,CAAAvJ,IAAA,CAAA+H,MAAA,IAAAA,MAAA,CAAAwB,MAAA;MA4B/C,CAAC,QAAA/I,CAAA;QAAA,OAAA8H,OAAA,CAAAnH,MAAA,CAAAX,CAAA;MAAA;IAAA;IAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;IACQkJ,mBAAmB,WAAAC,qBAACzE,EAAU,EAAE;MACtC,IAAI0E,OAAO,GAAG,IAAI,CAACC,YAAY,CAACnK,KAAK;MACrC,IAAIoK,QAAQ,GAAG5E,EAAE,CAAC6E,KAAK,CAAC,GAAG,CAAC;MAC5B;MACA,IAAIC,OAAO,GAAGF,QAAQ,GAAGA,QAAQ,CAACjH,MAAM,GAAG,CAAC,CAAC;MAC7C,IAAIoH,YAAY,GAAGL,OAAO,CAACM,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACC,QAAQ,KAAKJ,OAAO,CAAC;MACxE,OAAOC,YAAY;IACpB,CAAC;IAED;AACD;AACA;AACA;IACQf,gBAAgB,WAAAmB,kBAAA,EAAW;MACjC,OAAO,IAAI,CAAChC,WAAW,CAAC,eAAe,CAAC;IACzC,CAAC;IAED;AACD;AACA;AACA;IACQgB,MAAM,WAAAiB,QAAA,EAAW;MACvB,OAAO,IAAI,CAACjC,WAAW,CAAC,KAAK,CAAC;IAC/B,CAAC;IAED;AACD;AACA;AACA;IAEC;AACD;AACA;AACA;AACA;AACA;IACeG,kBAAkB,WAAA+B,oBAACnC,IAAY;MAAA,IAAqB;QAAA,MAAAoC,MAAA,GACjD,IAAI;QAApB,MAAMC,OAAO,GAAGD,MAAA,CAAKE,SAAS,CAAC,CAA0B;QACzD,OAAApC,OAAA,CAAAC,OAAA,CAAO,IAAID,OAAO,CAAEC,OAAO,IAAK;UAC/B,MAAMG,UAAU,GAAG,IAAIrK,QAAQ,CAAC+J,IAAI,CAAC;UACrCM,UAAU,CAACiC,qBAAqB,CAAC,QAAQ,CAAC;UAC1CjC,UAAU,CAACkC,sBAAsB,CAAEC,MAAa,IAAK;YACpD,KAAK;cAAA,IAAa;gBACjB,IAAI,CAACL,MAAA,CAAK1B,SAAS,EAAE;kBACpB2B,OAAO,EAAEK,aAAa,CAAC,MAAM,EAAE;oBAAEC,MAAM,EAAE,IAAI;oBAAEC,KAAK,EAAEzI;kBAAmB,CAAC,CAAC;kBAC3EiI,MAAA,CAAK1B,SAAS,GAAG,IAAI;gBACtB;gBACA,MAAMmC,SAAS,GAAGJ,MAAM,CAACK,SAAS,CAAW,CAAC,CAACrD,OAAO,CAAC,CAAgB;gBAAC,OAAAS,OAAA,CAAAC,OAAA,CAClEiC,MAAA,CAAKW,YAAY,CAACF,SAAS,EAAE,CAAC,CAAC,EAAAjL,IAAA;kBACrCwK,MAAA,CAAK/D,SAAS,CAAC2E,OAAO,CAAC,gBAAgB,EAAE,oBAAoB,EAAE;oBAAEC,SAAS,EAAE,KAAK;oBAAEC,IAAI,EAAE,IAAIC,IAAI,CAAC;kBAAE,CAAC,CAAC;kBACtGhD,OAAO,CAACG,UAAU,CAAC;gBAAC;cACrB,CAAC,QAAAlI,CAAA;gBAAA,OAAA8H,OAAA,CAAAnH,MAAA,CAAAX,CAAA;cAAA;YAAA,EAAE,CAAC;UACL,CAAC,CAAC;UACFkI,UAAU,CAAC8C,mBAAmB,CAAC,MAAM;YACpChB,MAAA,CAAKpB,eAAe,CAAC,CAAC;YACtB,IAAI,CAACoB,MAAA,CAAK1B,SAAS,EAAE;cACpB2B,OAAO,EAAEK,aAAa,CAAC,MAAM,EAAE;gBAAEC,MAAM,EAAE,KAAK;gBAAEC,KAAK,EAAE;cAAE,CAAC,CAAC;cAC3DR,MAAA,CAAK1B,SAAS,GAAG,IAAI;YACtB;YACA0B,MAAA,CAAK/D,SAAS,CAAC2E,OAAO,CAAC,gBAAgB,EAAE,oBAAoB,EAAE;cAAEC,SAAS,EAAE,IAAI;cAAEC,IAAI,EAAE,IAAIC,IAAI,CAAC;YAAE,CAAC,CAAC;YACrGhD,OAAO,CAACG,UAAU,CAAC;UACpB,CAAC,CAAC;QACH,CAAC,CAAC;MACH,CAAC,QAAAlI,CAAA;QAAA,OAAA8H,OAAA,CAAAnH,MAAA,CAAAX,CAAA;MAAA;IAAA;IAED;AACD;AACA;AACA;AACA;AACA;IACe2K,YAAY,WAAAM,cAACR,SAAmB,EAAES,SAAiB;MAAA,IAAE;QAAA,MAAAC,MAAA,GAG3D,IAAI;QAAA,SAAAC,OAAA;UAGX,IAAI,CAAC,CAACX,SAAS,EAAEY,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,CAACZ,SAAS,EAAEY,aAAa,CAAC,MAAM,CAAC,EAAE;YAC5EC,YAAY,GAAG;cACdC,IAAI,EAAE,gBAAgB;cACtBlJ,MAAM,EAAE6I,SAAS,IAAInJ;YACtB,CAAC;UACF,CAAC,MAAM,IAAI,CAAC,CAAC0I,SAAS,EAAEY,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAACZ,SAAS,EAAEY,aAAa,CAAC,OAAO,CAAC,EAAE;YACrFC,YAAY,GAAG;cACdC,IAAI,EAAE,SAAS;cACflJ,MAAM,EAAE6I,SAAS,IAAInJ;YACtB,CAAC;UACF,CAAC,MAAM,IACN,CAAC,CAAC,CAAC0I,SAAS,EAAEY,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAACZ,SAAS,EAAEY,aAAa,CAAC,aAAa,CAAC,KACtF,CAAC,CAACZ,SAAS,EAAEY,aAAa,CAAC,MAAM,CAAC,EACjC;YACDF,MAAA,CAAKK,kBAAkB,CAAC,WAAW,CAAC;YACpCF,YAAY,GAAG;cACdC,IAAI,EAAE,QAAQ;cACdlJ,MAAM,EAAE6I,SAAS,IAAInJ;YACtB,CAAC;UACF,CAAC,MAAM;YACNoJ,MAAA,CAAKvC,eAAe,CAAC,CAAC;YACtB;UACD;UACAuC,MAAA,CAAKM,YAAY,CAACN,MAAA,CAAKhG,SAAS,EAAEmG,YAAY,CAAC;QAAC;QA5BhD,IAAIA,YAA0B;QAAC,MAAAI,MAAA;UAAA,IAC3B,CAACjB,SAAS,EAAEY,aAAa,CAAC,YAAY,CAAC,IAAI,CAACZ,SAAS,EAAEY,aAAa,CAAC,aAAa,CAAC;YAAA,OAAAvD,OAAA,CAAAC,OAAA,CAChFoD,MAAA,CAAKQ,mBAAmB,CAAClB,SAAS,EAAES,SAAS,IAAInJ,kBAAkB,CAAC,EAAAvC,IAAA;UAAA;QAAA;QAAA,OAAAsI,OAAA,CAAAC,OAAA,CAAA2D,MAAA,IAAAA,MAAA,CAAAlM,IAAA,GAAAkM,MAAA,CAAAlM,IAAA,CAAA4L,MAAA,IAAAA,MAAA,CAAAM,MAAA;MA2B5E,CAAC,QAAA1L,CAAA;QAAA,OAAA8H,OAAA,CAAAnH,MAAA,CAAAX,CAAA;MAAA;IAAA;IAED;AACD;AACA;AACA;IACQ4I,eAAe,WAAAgD,iBAAA,EAAS;MAC9B,IAAI,IAAI,CAAC/D,WAAW,CAAC,YAAY,CAAC,IAAI,IAAI,CAACgB,MAAM,CAAC,CAAC,KAAKxH,gBAAgB,EAAE;QACzE,IAAI,CAACwK,oBAAoB,CAAC,CAAC,CAACzD,UAAU,CAAC,IAAI,CAAC;QAC5C,IAAI,CAACjD,SAAS,CAACiD,UAAU,CAAC,KAAK,CAAC;MACjC,CAAC,MAAM;QACN,CAAC,IAAI,CAACxC,cAAc,CAAC,CAAC,EAAEsE,SAAS,CAAC,CAAC,EAAa9B,UAAU,CAAC,KAAK,CAAC;QACjE,IAAI,CAACtC,WAAW,CAAC,eAAe,EAAE,KAAK,CAAC;QACxC,IAAI,CAACK,eAAe,CAACiC,UAAU,CAAC,KAAK,CAAC;MACvC;IACD,CAAC;IAEY0D,MAAM,WAAAC,QAACtI,GAAW;MAAA,IAAE;QAAA,MAAAuI,MAAA,GAChC,IAAI;QAAJA,MAAA,CAAKlG,WAAW,CAAC,YAAY,EAAE,KAAK,CAAC;QACrCkG,MAAA,CAAKlG,WAAW,CAAC,eAAe,EAAE,IAAI,CAAC;QACvCkG,MAAA,CAAKH,oBAAoB,CAAC,CAAC,CAACzD,UAAU,CAAC,KAAK,CAAC;QAC7C,CAAC4D,MAAA,CAAKpG,cAAc,CAAC,CAAC,EAAEsE,SAAS,CAAC,CAAC,EAAa9B,UAAU,CAAC,IAAI,CAAC;QAChE4D,MAAA,CAAK7G,SAAS,CAACiD,UAAU,CAAC,IAAI,CAAC;QAC/B4D,MAAA,CAAKlG,WAAW,CAAC,KAAK,EAAErC,GAAG,CAAC;QAAC,OAAAqE,OAAA,CAAAC,OAAA,CACvBiE,MAAA,CAAK3E,OAAO,CAAC,CAAC,EAAA7H,IAAA;MACrB,CAAC,QAAAQ,CAAA;QAAA,OAAA8H,OAAA,CAAAnH,MAAA,CAAAX,CAAA;MAAA;IAAA;IAED;AACD;AACA;AACA;AACA;IACQ0H,YAAY,WAAAuE,cAAA,EAAG;MACrB,IAAI,IAAI,CAACC,aAAa,CAAC,CAAC,KAAK3K,UAAU,CAAC4K,MAAM,EAAE;QAC/C,IAAI,CAAChH,SAAS,CAACiH,SAAS,CAAC,OAAO,CAAC;QACjC,IAAI,CAACP,oBAAoB,CAAC,CAAC,CAACQ,QAAQ,CAAC,MAAM,CAAC;QAC5C,IAAI,CAAClH,SAAS,CAACmH,gBAAgB,CAAC,qBAAqB,CAAC;MACvD,CAAC,MAAM;QACN,IAAI,CAACnH,SAAS,CAACiH,SAAS,CAAC,OAAO,CAAC;QACjC,CAAC,IAAI,CAACxG,cAAc,CAAC,CAAC,EAAEsE,SAAS,CAAC,CAAC,EAAamC,QAAQ,CAAC,MAAM,CAAC;MACjE;IACD,CAAC;IAED;AACD;AACA;AACA;AACA;IACSZ,YAAY,WAAAc,cAACC,UAAqB,EAAElB,YAA0B,EAAQ;MAC7E,IAAIA,YAAY,EAAE;QACjB,IAAI,CAACkB,UAAU,CAACC,UAAU,CAAC,OAAO,CAAC,EAAE;UACpCD,UAAU,CAACE,eAAe,CAAC,OAAO,EAAE;YACnCnB,IAAI,EAAED,YAAY,CAACC,IAAI;YACvBlJ,MAAM,EAAEiJ,YAAY,CAACjJ,MAAM;YAC3BsK,iBAAiB,EAAE,KAAK;YACxBC,OAAO,EAAEA,CAACC,GAAW,EAAEC,QAAiB,KAAK;cAC5C,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,SAAS,CAAC,CAAgB;cACpD,IAAIC,KAAK;cACT,IAAIF,QAAQ,CAACG,oBAAoB,CAAC,MAAM,CAAC,CAAC7K,MAAM,GAAG,CAAC,EAAE;gBACrD4K,KAAK,GAAG,IAAI9L,QAAQ,CAACG,SAAS,CAAC,GAAGuL,GAAG,YAAY,CAAC,EAAE;kBACnDpJ,GAAG,EAAEsJ,QAAQ,CAACG,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAACC,WAAqB;kBACnE/G,KAAK,EAAE2G,QAAQ,CAACG,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAACC,WAAqB;kBACtEC,QAAQ,EAAEL,QAAQ,CAACG,oBAAoB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAACC,WAAqB;kBAC/EE,QAAQ,EAAEN,QAAQ,CAACG,oBAAoB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAACC,WAAqB;kBAC5EG,MAAM,EAAE,IAAI,CAACC,UAAU,CAACR,QAAQ,CAACG,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAACC,WAAqB;gBAC1F,CAAC,CAAC;cACH,CAAC,MAAM;gBACN,IAAIK,QAAQ,GAAIT,QAAQ,CAACG,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAEC,WAAW,IAAe,EAAE;gBACtF,IAAIM,MAAM,GAAGD,QAAQ,GAAGX,GAAG,GAAG,aAAa,GAAGW,QAAQ,GAAGX,GAAG,GAAG,YAAY;gBAC3E,IAAIa,YAAY,GAAGX,QAAQ,CAACG,oBAAoB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAEC,WAAW,IAAI,EAAE;gBACpFF,KAAK,GAAG,IAAI/L,SAAS,CAACI,SAAS,CAACmM,MAAM,CAAC,EAAE;kBACxCrH,KAAK,EAAE2G,QAAQ,CAACG,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAACC,WAAqB;kBACtEC,QAAQ,EAAEM,YAAY,IAAK,IAAI,CAAC3H,WAAW,CAACC,OAAO,CAAC,qBAAqB,CAAY;kBACrFqH,QAAQ,EAAEN,QAAQ,CAACG,oBAAoB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAEC,WAAqB;kBAC/EG,MAAM,EAAEP,QAAQ,CAACG,oBAAoB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAEC;gBACvD,CAAC,CAAC;cACH;cACA,IAAI,CAAC3G,cAAc,CAAC,WAAW,EAAEyG,KAAK,EAAE,IAAI,CAAC;cAC7C,OAAOA,KAAK,CAACU,OAAO,CAAC,CAAC;YACvB;UACD,CAAC,CAAC;QACH;MACD;IACD,CAAC;IAED;AACD;AACA;AACA;AACA;IACehC,mBAAmB,WAAAiC,qBAACnD,SAAmB,EAAES,SAAiB;MAAA,IAAE;QAAA,MAAA2C,MAAA,GAG7C,IAAI;QAF3B,IAAIvL,CAAC,GAAG,CAAC;QAAA,MAAAwL,OAAA,GAAA1N,IAAA;UAAA,OAAEkC,CAAC,GAAG4I,SAAS;QAAA;UAAA,OAAE5I,CAAC,EAAE;QAAA,eAAE;UACnC,MAAMyL,YAAY,GAAGtD,SAAS,EAAEyC,oBAAoB,CAAC,MAAM,CAAC,CAAC5K,CAAC,CAAC;UAAC,OAAAwF,OAAA,CAAAC,OAAA,CACrC8F,MAAA,CAAKG,YAAY,CAACD,YAAY,CAACb,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAACC,WAAqB,CAAC,EAAA3N,IAAA,WAA1GoI,IAAY;YAClB,MAAMqG,SAAS,GAAGxD,SAAS,CAACyD,aAAa,CAAC,UAAU,CAAC;YACrDD,SAAS,CAACd,WAAW,GAAGvF,IAAI;YAC5BmG,YAAY,CAACI,WAAW,CAACF,SAAS,CAAC;UAAC;QACrC,CAAC;QAAA,OAAAnG,OAAA,CAAAC,OAAA,CAAA+F,OAAA,IAAAA,OAAA,CAAAtO,IAAA,GAAAsO,OAAA,CAAAtO,IAAA;MACF,CAAC,QAAAQ,CAAA;QAAA,OAAA8H,OAAA,CAAAnH,MAAA,CAAAX,CAAA;MAAA;IAAA;IAED;AACD;AACA;AACA;AACA;IACSuN,UAAU,WAAAa,YAACC,SAAiB,EAAU;MAC7C,MAAMC,qBAAqB,GAAG1Q,UAAU,CAAC2Q,mBAAmB,CAAC;QAC5DC,KAAK,EAAE,QAAQ;QACfC,QAAQ,EAAE,IAAI;QACdC,aAAa,EAAE;MAChB,CAAC,CAAC;MACF,OAAOJ,qBAAqB,CAACK,MAAM,CAAC,IAAI5D,IAAI,CAACsD,SAAS,CAAC,CAAC;IACzD,CAAC;IAED;AACD;AACA;AACA;AACA;IACQO,cAAc,WAAAC,gBAAA,EAAG;MACvB,OAAO,IAAI,CAAC7F,WAAW;IACxB,CAAC;IAED;AACD;AACA;AACA;AACA;IACSgF,YAAY,WAAAc,cAACC,SAAiB,EAAmB;MACxD,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;QACpC,MAAMC,OAAO,GAAG5R,GAAG,CAACC,EAAE,CAAC4R,OAAO,CAACC,KAAK,CAAC,oBAAoB,CAAC;QAC1D,IAAI,CAACC,KAAK,GAAG,IAAI,CAACA,KAAK,GAAG,IAAI,CAACA,KAAK,GAAG,CAAC,GAAG,CAAC;QAC5C,IAAI,CAACA,KAAK,GAAG,IAAI,CAACA,KAAK,GAAG,CAAC,GAAG,IAAI,CAACA,KAAK,GAAG,CAAC;QAC5C,OAAO,GAAGH,OAAO,YAAY,IAAI,CAACG,KAAK,MAAM;MAC9C,CAAC;MAED,OAAOC,KAAK,CAACN,SAAS,CAAC,CACrBvP,IAAI,CAAE8P,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzB/P,IAAI,CAAEgQ,KAAK,IAAK;QAChB,MAAMC,QAAQ,GAAGD,KAAK,CAACE,KAAK,CAAC,yEAAyE,CAAC;QACvG,OAAOvN,KAAK,CAACwN,OAAO,CAACF,QAAQ,CAAC,IAAIA,QAAQ,CAAC,CAAC,CAAC,GAAGA,QAAQ,CAAC,CAAC,CAAC,GAAGT,sBAAsB,CAAC,CAAC;MACvF,CAAC,CAAC,CACDY,KAAK,CAACZ,sBAAsB,CAAC;IAChC,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;IACSa,eAAe,WAAAC,iBAACC,QAAgB,EAAW;MAClD,OAAOA,QAAQ,CAACxG,KAAK,CAAC,GAAG,CAAC,CAACyG,GAAG,CAAC,CAAC,EAAEC,WAAW,CAAC,CAAC,KAAM,KAAgB;IACtE,CAAC;IACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACehH,cAAc,WAAAiH,gBAACC,WAAqB;MAAA,IAAiB;QAAA,MAAAC,MAAA,GACvC,IAAI;QAAA,OAAAtI,OAAA,CAAAC,OAAA,CAAJqI,MAAA,CAAKC,uBAAuB,CAAC,CAAC,EAAA7Q,IAAA,WAAnD8Q,YAAY;UAAA,OAAAxI,OAAA,CAAAC,OAAA,CACKuI,YAAY,EAAEC,IAAI,CAAC,CAAC,EAAA/Q,IAAA,WAArCgR,QAAQ;YACdJ,MAAA,CAAKpH,WAAW,GAAImH,WAAW,GAAGK,QAAQ,EAAEC,eAAe,GAAGD,QAAQ,EAAExH,WAA4B;UAAC;QAAA;MACtG,CAAC,QAAAhJ,CAAA;QAAA,OAAA8H,OAAA,CAAAnH,MAAA,CAAAX,CAAA;MAAA;IAAA;IAED;AACD;AACA;AACA;AACA;AACA;AACA;IACcuI,iBAAiB,WAAAmI,mBAACC,OAAe;MAAA,IAAiB;QAAA,MAAAC,MAAA,GAE7D,IAAI;QAAA,OAAA9I,OAAA,CAAAC,OAAA,CAAA/G,MAAA,aADD;UACH4P,MAAA,CAAKzL,SAAS,CAACiD,UAAU,CAAC,IAAI,CAAC;UAC/BwI,MAAA,CAAK/E,oBAAoB,CAAC,CAAC,CAACzD,UAAU,CAAC,KAAK,CAAC;UAAC,OAAAN,OAAA,CAAAC,OAAA,CACxC6I,MAAA,CAAK3H,cAAc,CAAC,CAAC0H,OAAO,CAAC,EAAAnR,IAAA;YAAA,SAAAqR,QAAA;cAgBnC,IAAIC,MAAM,CAACzO,MAAM,KAAK,CAAC,EAAE;gBACxB,MAAM,IAAI0O,KAAK,CAAC,+BAA+B,CAAC;cACjD;cACA;cACA,IAAIH,MAAA,CAAK5H,WAAW,EAAEgI,KAAK,EAAE3O,MAAM,EAAE;gBACpCyO,MAAM,GAAGA,MAAM,CAACG,MAAM,CAAEC,SAAS,IAAK;kBACrC;kBACA,OAAON,MAAA,CAAK5H,WAAW,EAAEgI,KAAK,CAACG,QAAQ,CAACD,SAAS,CAAC9K,KAAK,CAAC;gBACzD,CAAC,CAAC;cACH,CAAC,MAAM,IAAIwK,MAAA,CAAK5H,WAAW,EAAEgI,KAAK,EAAE3O,MAAM,KAAK,CAAC,EAAE;gBAChDuO,MAAA,CAAK1G,SAAS,CAAC,CAAC,EAA4BI,aAAa,CAAC,MAAM,EAAE;kBAAEC,MAAM,EAAE,IAAI;kBAAEC,KAAK,EAAE;gBAAE,CAAC,CAAC;gBAC9F,MAAM,IAAIuG,KAAK,CAAC,mCAAmC,CAAC;cACrD;cAAC,OAAAjJ,OAAA,CAAAC,OAAA,CACK6I,MAAA,CAAKQ,kBAAkB,CAACN,MAAM,EAAEH,OAAO,GAAG,YAAY,GAAG,aAAa,CAAC,EAAAnR,IAAA;YAAA;YA5B7E,MAAMwE,cAAc,GAAG4M,MAAA,CAAK/I,WAAW,CAAC,gBAAgB,CAAW;YACnE,MAAMwJ,mBAAmB,GAAGT,MAAA,CAAKf,eAAe,CAAC7L,cAAc,CAAC,GAC7D,KAAK,GACJ4M,MAAA,CAAK5H,WAAW,EAAEsI,0BAA0B,IAAI,IAAK;YAEzD,IAAIV,MAAA,CAAKf,eAAe,CAAC7L,cAAc,CAAC,EAAE;cACzCzB,gBAAgB,CAACK,cAAc,CAAC2O,IAAI,CAAC,qBAAqB,CAAC;YAC5D;YACA,IAAIT,MAAM;YAAC,MAAAU,OAAA;cAAA,IACPb,OAAO;gBAAA,OAAA7I,OAAA,CAAAC,OAAA,CACK6I,MAAA,CAAKa,iBAAiB,CAACd,OAAO,EAAEU,mBAAmB,CAAC,EAAA7R,IAAA,WAAAkS,qBAAA;kBAAnEZ,MAAM,GAAAY,qBAA6D;gBAAC;cAAA;gBAAA,OAAA5J,OAAA,CAAAC,OAAA,CAErD6I,MAAA,CAAKa,iBAAiB,CAAC,EAAE,EAAE,IAAI,CAAC,EAAAjS,IAAA,WAAAmS,sBAAA;kBAA/Cb,MAAM,GAAAa,sBAAyC;gBAAC;cAAA;YAAA;YAAA,OAAAH,OAAA,IAAAA,OAAA,CAAAhS,IAAA,GAAAgS,OAAA,CAAAhS,IAAA,CAAAqR,OAAA,IAAAA,OAAA,CAAAW,OAAA;UAAA;QAiBlD,CAAC,YAAQI,GAAG,EAAE;UACbpU,GAAG,CAACqU,KAAK,CAACD,GAAa,CAAC;UACxBhB,MAAA,CAAKhI,eAAe,CAAC,CAAC;QACvB,CAAC;MACF,CAAC,QAAA5I,CAAA;QAAA,OAAA8H,OAAA,CAAAnH,MAAA,CAAAX,CAAA;MAAA;IAAA;IAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACS8R,mBAAmB,WAAAC,qBAACC,UAA6B,EAAE;MAC1D,OAAOA,UAAU,CAACf,MAAM,CAAEtN,KAAK,IAAK;QACnC;QACA,MAAMsO,mBAAmB,GAAGtO,KAAK,CAACuO,cAAc,EAAE9K,WAAW,CAAC,CAAC,KAAK,MAAM;;QAE1E;QACA,MAAM+K,qBAAqB,GAAGxO,KAAK,CAACyO,iBAAiB,EAAEC,IAAI,CAAC,UAAUC,OAAO,EAAE;UAC9E;UACA,IAAIA,OAAO,CAACJ,cAAc,EAAE9K,WAAW,CAAC,CAAC,KAAK,MAAM,EAAE;YACrDzD,KAAK,CAACuO,cAAc,GAAG,MAAM;YAC7B,OAAO,IAAI;UACZ;QACD,CAAC,CAAC;QAEF,OAAOD,mBAAmB,IAAIE,qBAAqB;MACpD,CAAC,CAAC;IACH,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;IACSI,yBAAyB,WAAAC,2BAACC,YAA2B,EAAE;MAC9D,IAAIC,KAAwB,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACJ,YAAY,CAACvT,KAAK,IAAI,EAAE,CAAC,CAAsB;MACxG,MAAM4T,YAA+B,GAAG,EAAE;MAC1C,MAAMC,gBAAgB,GAAG,CAAC,CAA2B;MACrD,IAAI,CAACjK,iBAAiB,GAAG,EAAE;MAC3B,IAAI4J,KAAK,EAAErQ,MAAM,GAAG,CAAC,EAAE;QACtB,IAAI,CAACyG,iBAAiB,GAAG,IAAI,CAACgJ,mBAAmB,CAACY,KAAK,CAAC,CAACM,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAAC7M,KAAK,CAAC;QAEpF,KAAK,MAAM6M,KAAK,IAAIP,KAAK,EAAE;UAC1B,MAAMtM,KAAK,GAAG6M,KAAK,CAAC7M,KAAK;UACzB,IAAIgH,QAAQ,GAAG,EAAE;UACjB,IAAI,CAAC2F,gBAAgB,CAAC3M,KAAK,CAAC,EAAE;YAC7BgH,QAAQ,GAAG6F,KAAK,CAAC7F,QAAQ,IAAI6F,KAAK,CAACC,WAAW,IAAI,EAAE;YACpDJ,YAAY,CAACvB,IAAI,CAAC;cACjBnL,KAAK,EAAEA,KAAK;cACZkH,MAAM,EAAE2F,KAAK,CAACE,WAAW;cACzB9F,QAAQ,EAAE,IAAI,CAAC+F,mBAAmB,CAACH,KAAK,CAAC;cACzCvO,EAAE,EAAEuO,KAAK,CAACrJ,QAAQ;cAClBwD,QAAQ,EAAEA,QAAQ,IAAI;YACvB,CAAC,CAAC;YACF2F,gBAAgB,CAAC3M,KAAK,CAAC,GAAGA,KAAK;UAChC;QACD;MACD;MACA,OAAO0M,YAAY;IACpB,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;AACA;IACQO,2BAA2B,WAAAC,6BAAA,EAAG;MACpC,OAAO,IAAI,CAACxK,iBAAiB,IAAI,EAAE;IACpC,CAAC;IAED;AACD;AACA;AACA;AACA;IACSyK,sBAAsB,WAAAC,wBAAA,EAA2B;MACxD;MACA,IAAI,IAAI,CAACnK,YAAY,EAAE;QACtB,OAAOvB,OAAO,CAACC,OAAO,CAAC,IAAI,CAACsB,YAAY,CAAC;MAC1C;MAEA,IAAI,CAAC,IAAI,CAACxE,mBAAmB,EAAE;QAC9B,IAAI,CAACA,mBAAmB,GAAG,IAAI,CAAC4O,gBAAgB,CAAC,CAAC;MACnD;MAEA,OAAO,IAAI,CAAC5O,mBAAmB;IAChC,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;IACe4O,gBAAgB,WAAAC,kBAAA;MAAA,IAA2B;QAAA,MAAAC,MAAA,GAQvD,IAAI;QAAA,OAAA7L,OAAA,CAAAC,OAAA,CAAA/G,MAAA,aAPD;UAAA,OAAA8G,OAAA,CAAAC,OAAA,CACoBsH,KAAK,CAAChO,gBAAgB,CAAC,EAAA7B,IAAA,WAAxCoU,QAAQ;YAEd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;cACjB,MAAM,IAAI9C,KAAK,CAAC,uBAAuB6C,QAAQ,CAACE,MAAM,EAAE,CAAC;YAC1D;YAAC,OAAAhM,OAAA,CAAAC,OAAA,CAE0B6L,QAAQ,CAACG,IAAI,CAAC,CAAC,EAAAvU,IAAA,WAAAwU,cAAA;cAA1CL,MAAA,CAAKtK,YAAY,GAAA2K,cAA2C;cAC5D,OAAOL,MAAA,CAAKtK,YAAY;YAAC;UAAA;QAC1B,CAAC,YAAQwI,KAAK,EAAE;UACf8B,MAAA,CAAK9O,mBAAmB,GAAG,IAAI;UAC/BrH,GAAG,CAACqU,KAAK,CAACA,KAAe,CAAC;UAC1B,MAAMA,KAAK;QACZ,CAAC;MACF,CAAC,QAAA7R,CAAA;QAAA,OAAA8H,OAAA,CAAAnH,MAAA,CAAAX,CAAA;MAAA;IAAA;IAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACcyR,iBAAiB,WAAAwC,mBAACtD,OAAe,EAAEW,0BAAmC;MAAA,IAA8B;QAAA,MAAA4C,MAAA,GAEzG,IAAI;QADX,IAAI,CAACvD,OAAO,EAAE;UAAA,OAAA7I,OAAA,CAAAC,OAAA,CACPmM,MAAA,CAAKX,sBAAsB,CAAC,CAAC,EAAA/T,IAAA;YACnC,IAAI2U,cAAc,GAAGD,MAAA,CAAK3B,yBAAyB,CAAC2B,MAAA,CAAK7K,YAAY,CAAC;YACtE,OAAO8K,cAAc;UAAC;QACvB,CAAC,MAAM;UACN,OAAArM,OAAA,CAAAC,OAAA,CAAOmM,MAAA,CAAKE,iBAAiB,CAACzD,OAAO,EAAEW,0BAA0B,CAAC;QACnE;MACD,CAAC,QAAAtR,CAAA;QAAA,OAAA8H,OAAA,CAAAnH,MAAA,CAAAX,CAAA;MAAA;IAAA;IAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;IACeoU,iBAAiB,WAAAC,mBAAC1D,OAAe,EAAEW,0BAAmC;MAAA,IAA8B;QAAA,MAAAgD,OAAA,GAE1F,IAAI;QAAA,OAAAxM,OAAA,CAAAC,OAAA,CAAA/G,MAAA,aADvB;UACH,MAAMuT,aAAa,GAAGD,OAAA,CAAKE,qBAAqB,CAAC;YAAEC,QAAQ,EAAE9D,OAAO;YAAEW;UAA2B,CAAC,CAAC;UACnG,IAAI,CAACgD,OAAA,CAAKxP,mBAAmB,CAAC4P,GAAG,CAACH,aAAa,CAAC,EAAE;YACjDD,OAAA,CAAKxP,mBAAmB,CAAC6P,GAAG,CAACJ,aAAa,EAAED,OAAA,CAAKM,eAAe,CAACL,aAAa,CAAC,CAAC;UACjF;UAAC,OAAAzM,OAAA,CAAAC,OAAA,CACkCuM,OAAA,CAAKxP,mBAAmB,CAACqC,GAAG,CAACoN,aAAa,CAAC,EAAA/U,IAAA,WAAAqV,qBAAA;YAA9E,MAAMC,mBAAmB,GAAAD,qBAA2E;YACpG,MAAME,SAAoC,GAAG,CAAC,CAAC;YAC/C,MAAMjE,MAAyB,GAAG,EAAE;YACpC,IAAIgE,mBAAmB,EAAEzS,MAAM,GAAG,CAAC,EAAE;cACpCyS,mBAAmB,CAACE,OAAO,CAAE/B,KAAsB,IAAK;gBACvD,MAAM7M,KAAK,GAAG6M,KAAK,CAAC1Q,gBAAgB,CAACC,KAAK,CAAc;gBACxD,IAAI,CAACuS,SAAS,CAAC3O,KAAK,CAAClH,KAAK,CAAC,EAAE;kBAC5B4R,MAAM,CAACS,IAAI,CAAC;oBACXnL,KAAK,EAAEA,KAAK,CAAClH,KAAK;oBAClBoO,MAAM,EAAG2F,KAAK,CAAC1Q,gBAAgB,CAACG,QAAQ,CAAC,CAAexD,KAAK;oBAC7DmO,QAAQ,EAAEiH,OAAA,CAAKW,kBAAkB,CAAC7O,KAAK,CAAClH,KAAK;kBAC9C,CAAC,CAAC;kBACF6V,SAAS,CAAC3O,KAAK,CAAClH,KAAK,CAAC,GAAGkH,KAAK,CAAClH,KAAK;gBACrC;cACD,CAAC,CAAC;YACH;YACA,OAAO4R,MAAM,CAAC,CAAC;UAAA;QAChB,CAAC,YAAQc,GAAG,EAAE;UACbpU,GAAG,CAACqU,KAAK,CAACD,GAAa,CAAC;UACxB,MAAM,IAAIb,KAAK,CAACa,GAAa,CAAC;QAC/B,CAAC;MACF,CAAC,QAAA5R,CAAA;QAAA,OAAA8H,OAAA,CAAAnH,MAAA,CAAAX,CAAA;MAAA;IAAA;IAED;AACD;AACA;AACA;AACA;AACA;IACQwU,qBAAqB,WAAAU,uBAACC,KAAgB,EAAE;MAC9C,IAAIvN,IAAI,GAAG/F,kBAAkB,GAAG,uBAAuB,GAAG,GAAG,GAAGsT,KAAK,CAACV,QAAQ,GAAG,GAAG;MACpF,MAAMzQ,cAAc,GAAG,IAAI,CAAC6D,WAAW,CAAC,gBAAgB,CAAW;MACnE,IAAI,CAAC,IAAI,CAACgI,eAAe,CAAC7L,cAAc,CAAC,IAAImR,KAAK,CAAC7D,0BAA0B,EAAE;QAC9E1J,IAAI,GAAGA,IAAI,GAAG,kCAAkC;MACjD;MACA,OAAOA,IAAI,GAAG,WAAW;IAC1B,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;AACA;IACcgN,eAAe,WAAAQ,iBAACC,QAAgB,EAAEC,SAAkB;MAAA,IAAE;QAAA,MAAAC,OAAA,GAGhE,IAAI;QAAA,OAAAzN,OAAA,CAAAC,OAAA,CAAA/G,MAAA,aAFF;UAAA,OAAA8G,OAAA,CAAAC,OAAA,CACuCD,OAAO,CAAC0N,GAAG,CAAC,CACrDD,OAAA,CAAKE,mBAAmB,CAAC,CAAC,EAC1BF,OAAA,CAAKG,kBAAkB,CAACL,QAAQ,EAAEC,SAAS,CAAC,CAC5C,CAAC,EAAA9V,IAAA,WAAAmW,IAAA;YAAA,IAHI,CAACC,cAAc,EAAEC,SAAS,CAAC,GAAAF,IAAA;YAAA,OAI7BC,cAAc,CAACvT,MAAM,KAAK,CAAC,GACvBwT,SAAS,GAEVN,OAAA,CAAKO,gBAAgB,CAACD,SAAS,EAAED,cAAc,CAAC;UAAA;QACxD,CAAC,YAAQhE,GAAG,EAAE;UACbpU,GAAG,CAACqU,KAAK,CAACD,GAAa,CAAC;QACzB,CAAC;MACF,CAAC,QAAA5R,CAAA;QAAA,OAAA8H,OAAA,CAAAnH,MAAA,CAAAX,CAAA;MAAA;IAAA;IAED;AACD;AACA;AACA;AACA;AACA;AACA;IACS8V,gBAAgB,WAAAC,kBAACF,SAA4B,EAAED,cAA+B,EAAE;MACvF,MAAMI,aAAgC,GAAG,EAAE;MAE3CH,SAAS,CAACb,OAAO,CAAE9D,SAA0B,IAAK;QACjD,IAAKA,SAAS,CAAC+E,QAAQ,CAAe/W,KAAK,KAAK,KAAK,IAAI,CAAEgS,SAAS,CAACgF,iBAAiB,CAAehX,KAAK,EAAE;UAC3G8W,aAAa,CAACzE,IAAI,CAACL,SAAS,CAAC;QAC9B,CAAC,MAAM;UACN,MAAMiF,kBAA4B,GAAIjF,SAAS,CAACgF,iBAAiB,CAAehX,KAAK,CAACqK,KAAK,CAAC,IAAI,CAAC;UACjG,KAAK,IAAI6M,gBAAgB,IAAID,kBAAkB,EAAE;YAChD,MAAME,iBAAiB,GAAGD,gBAAgB;YAC1C,IAAIC,iBAAiB,IAAI,IAAI,CAACC,UAAU,CAACV,cAAc,EAAEQ,gBAAgB,CAAC,EAAE;cAC3EJ,aAAa,CAACzE,IAAI,CAACL,SAAS,CAAC;cAC7B;YACD;UACD;QACD;MACD,CAAC,CAAC;MACF,OAAO8E,aAAa;IACrB,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;IACSM,UAAU,WAAAC,YAACX,cAA+B,EAAES,iBAAyB,EAAE;MAC9E,MAAMG,eAAe,GAAG,GAAG;MAC3B,IAAIH,iBAAiB,CAAClF,QAAQ,CAACqF,eAAe,CAAC,EAAE;QAChD,MAAMC,OAAO,GAAGJ,iBAAiB,CAAC9M,KAAK,CAACiN,eAAe,CAAC;QACxD,MAAME,QAAQ,GAAG,CAACD,OAAO,CAACA,OAAO,CAACpU,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE,EAAEsU,IAAI,CAAC,CAAC;QAC3D,IAAID,QAAQ,EAAE;UACb,MAAME,KAAK,GAAGhB,cAAc,CAACiB,SAAS,CAAEC,IAAmB,IAAK;YAC/D,OAAOJ,QAAQ,KAAKI,IAAI,EAAEC,SAAS,EAAEC,UAAU,CAAC,cAAc,CAAC,EAAEpT,YAAY,EAAE1E,KAAK;UACrF,CAAC,CAAC;UACF,OAAO0X,KAAK,GAAG,CAAC,CAAC;QAClB;MACD;MACA,OAAO,IAAI;IACZ,CAAC;IAED;AACD;AACA;AACA;IACenB,mBAAmB,WAAAwB,qBAAA;MAAA,IAA6B;QAAA,OAAAnP,OAAA,CAAAC,OAAA,CAAA/G,MAAA,aACzD;UAAA,OAAA8G,OAAA,CAAAC,OAAA,CACoBjK,SAAS,CAACoZ,eAAe,CAAoB,4BAA4B,CAAC,EAAA1X,IAAA,WAA3F2X,QAAQ;YACd,OAAOA,QAAQ,EAAEC,SAAS,CAACC,UAAU,IAAI,EAAE;UAAC;QAC7C,CAAC,YAAQzF,GAAG,EAAE;UACb,IAAIA,GAAG,YAAYb,KAAK,EAAE;YACzBvT,GAAG,CAACqU,KAAK,CAACD,GAAG,CAAC0F,OAAO,CAAC;UACvB;UACA,OAAO,EAAE;QACV,CAAC;MACF,CAAC,QAAAtX,CAAA;QAAA,OAAA8H,OAAA,CAAAnH,MAAA,CAAAX,CAAA;MAAA;IAAA;IAED;AACD;AACA;AACA;AACA;IACe0V,kBAAkB,WAAA6B,oBAAC3P,IAAY,EAAE0N,SAAkB;MAAA,IAA8B;QAAA,IAAAkC,KAAA;QAAA,MAAAC,OAAA,GAC1F,IAAI;QAAA,SAAAC,QAAAC,QAAA;UAAA,IAAAH,KAAA,SAAAG,QAAA;UAKR,MAAMC,gBAAgB,GAAIC,MAAc,IAAKA,MAAM,CAACC,OAAO,CAAC,oBAAoB,EAAE,OAAO,CAAC;UAAC,OAAAhQ,OAAA,CAAAC,OAAA,CACzCD,OAAO,CAAC0N,GAAG,CAAC,CAC7D/T,UAAU,CAACsW,OAAO,CAACnQ,IAAI,CAAC,EACxB6P,OAAA,CAAKO,iBAAiB,CAACP,OAAA,CAAK/O,gBAAgB,CAAC,CAAC,CAAC,CAC/C,CAAC,EAAAlJ,IAAA,WAAAyY,KAAA;YAAA,IAHI,CAACxF,YAAY,EAAEyF,mBAAmB,CAAC,GAAAD,KAAA;YAIzC,IAAIvF,KAAwB,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAAEJ,YAAY,CAAmBvT,KAAK,IAAI,EAAE,CAAC,CAAsB;YAC3H,MAAMiZ,YAAY,GAAGxF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAAEqF,mBAAmB,CAAmBhZ,KAAK,IAAI,EAAE,CAAC,CAAsB;YACxHwT,KAAK,GAAG+E,OAAA,CAAKW,iBAAiB,CAAC1F,KAAK,EAAE4C,SAAS,CAAC;YAChD,OAAO5C,KAAK,CAACM,GAAG,CAAEmC,KAAsB,IAAK;cAC5C,MAAMkD,OAAO,GAAGC,MAAM,CAACC,IAAI,CAACpD,KAAK,CAAC;cAClC,MAAMqD,aAA0B,GAAG,EAAE;cACrCH,OAAO,CAACrD,OAAO,CAAEyD,MAAM,IAAK;gBAC3B,MAAMC,gBAAgB,GAAGP,YAAY,CAACzO,IAAI,CACxCiP,YAA6B,IAAKA,YAAY,EAAEC,UAAU,EAAExR,WAAW,CAAC,CAAC,KAAKqR,MAAM,CAACrR,WAAW,CAAC,CACnG,CAAC;gBACD,MAAMyR,oBAAoB,GAAIH,gBAAgB,EAAEI,cAAc,IAAelB,gBAAgB,CAACa,MAAM,CAAC;gBACrGtD,KAAK,CAACsD,MAAM,CAAC,GAAG;kBAAEM,KAAK,EAAEF,oBAAoB;kBAAE3Z,KAAK,EAAEiW,KAAK,CAACsD,MAAM;gBAAY,CAAc;gBAC5F,IAAI,CAAClW,gBAAgB,CAACK,cAAc,CAACuO,QAAQ,CAACsH,MAAM,CAAC,EAAE;kBACtDD,aAAa,CAACjH,IAAI,CAAC4D,KAAK,CAACsD,MAAM,CAAc,CAAC;gBAC/C;cACD,CAAC,CAAC;cACFtD,KAAK,CAAC6D,IAAI,GAAG;gBACZD,KAAK,EAAEtB,OAAA,CAAK1R,WAAW,CAACC,OAAO,CAAC,cAAc,CAAW;gBACzD9G,KAAK,EAAEiW,KAAK,CAAC5S,gBAAgB,CAACE,IAAI,CAAW;gBAC7C8M,IAAI,EAAE;cACP,CAAC;cACD4F,KAAK,CAAC8D,QAAQ,GAAGvG,KAAK,CAACrQ,MAAM,KAAK,CAAC;cACnC8S,KAAK,CAAC+D,YAAY,GAAGV,aAAa;cAClC,OAAOrD,KAAK;YACb,CAAC,CAAC;UAAC;QAAA;QAAA,MAAAgE,OAAA;UAAA,IAlCC1B,OAAA,CAAK3S,mBAAmB,CAAC4P,GAAG,CAAC9M,IAAI,CAAC;YAAA,OAAAE,OAAA,CAAAC,OAAA,CACP0P,OAAA,CAAK3S,mBAAmB,CAACqC,GAAG,CAACS,IAAI,CAAC,EAAApI,IAAA,WAA1D4Z,eAAe;cAAA,MAAAC,qBAAA,GACd5B,OAAA,CAAKW,iBAAiB,CAACgB,eAAe,EAAuB9D,SAAS,CAAC;cAAAkC,KAAA;cAAA,OAAA6B,qBAAA;YAAA;UAAA;QAAA;QAAA,OAAAvR,OAAA,CAAAC,OAAA,CAAAoR,OAAA,IAAAA,OAAA,CAAA3Z,IAAA,GAAA2Z,OAAA,CAAA3Z,IAAA,CAAAkY,OAAA,IAAAA,OAAA,CAAAyB,OAAA;MAiChF,CAAC,QAAAnZ,CAAA;QAAA,OAAA8H,OAAA,CAAAnH,MAAA,CAAAX,CAAA;MAAA;IAAA;IAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;IACSoY,iBAAiB,WAAAkB,mBAAC5G,KAAwB,EAAE4C,SAAkB,EAAqB;MAC1F,IAAIA,SAAS,EAAE;QACd,OAAO5C,KAAK,CAACzB,MAAM,CAAEsI,UAA2B,IAAK;UACpD,OAAQA,UAAU,CAACC,cAAc,CAAeta,KAAK,KAAKoW,SAAS;QACpE,CAAC,CAAC;MACH;MACA,OAAO5C,KAAK;IACb,CAAC;IAED;AACD;AACA;AACA;AACA;IACSsF,iBAAiB,WAAAyB,mBAAC9I,OAAe,EAAE;MAC1C,IAAI;QACH,MAAM/I,IAAI,GAAG9F,yBAAyB,GAAG,wBAAwB,GAAG6O,OAAO,GAAG,GAAG;QACjF,IAAI,CAAC,IAAI,CAAC7L,mBAAmB,CAAC4P,GAAG,CAAC9M,IAAI,CAAC,EAAE;UACxC,IAAI,CAAC9C,mBAAmB,CAAC6P,GAAG,CAAC/M,IAAI,EAAEnG,UAAU,CAACsW,OAAO,CAACnQ,IAAI,CAA+B,CAAC;QAC3F;QACA,OAAO,IAAI,CAAC9C,mBAAmB,CAACqC,GAAG,CAACS,IAAI,CAAC;MAC1C,CAAC,CAAC,OAAOgK,GAAG,EAAE;QACb,IAAIA,GAAG,YAAYb,KAAK,EAAE;UACzBvT,GAAG,CAACqU,KAAK,CAACD,GAAG,CAAC0F,OAAO,CAAC;QACvB;QACA,OAAO,EAAE;MACV;IACD,CAAC;IAED;AACD;AACA;AACA;IACelG,kBAAkB,WAAAsI,oBAACC,KAAwB,EAAEC,QAAgB;MAAA,IAAE;QAAA,MAAAC,OAAA,GACvD,IAAI;QAAzB,MAAMC,YAAY,GAAGD,OAAA,CAAKE,cAAc,CAACpH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAAC8G,KAAK,CAAC,CAAC,EAAYC,QAAQ,CAAC;QAC/F,MAAM3P,OAAO,GAAG4P,OAAA,CAAK3P,SAAS,CAAC,CAA0B;QACzD,IAAI,CAAC2P,OAAA,CAAK3R,UAAU,EAAE;UACrB2R,OAAA,CAAK3R,UAAU,GAAG,IAAIrK,QAAQ,CAACic,YAAY,CAAC;UAC5C,IAAI,CAACD,OAAA,CAAKvR,SAAS,EAAE;YACpB2B,OAAO,EAAEK,aAAa,CAAC,MAAM,EAAE;cAAEC,MAAM,EAAE,IAAI;cAAEC,KAAK,EAAEzI;YAAmB,CAAC,CAAC;YAC3E8X,OAAA,CAAKvR,SAAS,GAAG,IAAI;UACtB;UACAuR,OAAA,CAAK1U,SAAS,CAACgD,QAAQ,CAAC0R,OAAA,CAAK3R,UAAU,CAAC;QACzC,CAAC,MAAM;UACN2R,OAAA,CAAK1U,SAAS,CAAC6U,iBAAiB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;UAClDH,OAAA,CAAK1U,SAAS,CAACqG,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC;UAC5CqO,OAAA,CAAK3R,UAAU,CAAC+R,OAAO,CAACH,YAAY,CAAC;QACtC;QAAC,OAAAhS,OAAA,CAAAC,OAAA,CACK8R,OAAA,CAAKlP,YAAY,CAACmP,YAAY,EAAEH,KAAK,CAACtX,MAAM,CAAC,EAAA7C,IAAA;MACpD,CAAC,QAAAQ,CAAA;QAAA,OAAA8H,OAAA,CAAAnH,MAAA,CAAAX,CAAA;MAAA;IAAA;IAED;AACD;AACA;AACA;AACA;IACS+Z,cAAc,WAAAG,gBAACnG,IAAY,EAAE6F,QAAgB,EAAe;MACnE,MAAMO,oBAAoB,GAAIC,KAAa,IAAKA,KAAK,CAACpH,GAAG,CAAEqH,IAAU,KAAM;QAAEC,IAAI,EAAED;MAAK,CAAC,CAAC,CAAC;MAC3F,MAAME,UAAU,GAAIxG,IAAU,IAAK;QAClC,IAAIyG,GAAG,GAAG,EAAE;QACZ,IAAIC,GAAW;QACf,KAAKA,GAAG,IAAI1G,IAAI,EAAE;UACjB,MAAM7U,KAAK,GAAG6U,IAAI,CAAC0G,GAAG,CAAsB;UAC5C,IAAIvb,KAAK,EAAE;YACV,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;cAC9Bsb,GAAG,IAAI,IAAIC,GAAG,IAAIF,UAAU,CAACrb,KAAK,CAAC,KAAKub,GAAG,GAAG;YAC/C,CAAC,MAAM;cACND,GAAG,IAAI,IAAIC,GAAG,IAAIvb,KAAK,KAAeub,GAAG,GAAG;YAC7C;UACD;QACD;QACA,OAAOD,GAAG,CAAC1C,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;MACpC,CAAC;MACD,MAAM4C,eAAqB,GAAG/H,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACsH,oBAAoB,CAACpG,IAAI,CAAC,CAAC,CAAS;MAC5F,IAAIyG,GAAG,GAAG,wCAAwC;MAClD,MAAMG,SAAS,GAAGf,QAAQ;MAC1BY,GAAG,IAAI,IAAIG,SAAS,GAAG;MACvBH,GAAG,IAAID,UAAU,CAACG,eAAe,CAAC;MAClCF,GAAG,IAAI,KAAKG,SAAS,GAAG;MACxBH,GAAG,GAAGA,GAAG,CAACI,UAAU,CAAC,GAAG,EAAE,OAAO,CAAC;MAClC,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;MAC9B,OAAOD,MAAM,CAACE,eAAe,CAACP,GAAG,EAAE,UAAU,CAAC;IAC/C,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;IACSvF,kBAAkB,WAAA+F,oBAACC,SAAiB,EAAE;MAC7C,MAAMC,aAAa,GAAG7d,GAAG,CAACC,EAAE,CAAC4R,OAAO,CAACC,KAAK,CAAC5M,gBAAgB,CAACM,SAAS,CAAC;MACtE,IAAIsY,SAAS,GAAGD,aAAa,GAAGlY,aAAa,CAAClE,OAAO,CAAC,CAAC,CAAC;MACxD,MAAMsc,KAAK,GAAGpY,aAAa,CAACiY,SAAS,CAAC,IAAI,EAAE;MAC5C,IAAII,WAAW,GAAG,CAAC;MACnB,IAAID,KAAK,CAAC/Y,MAAM,GAAG,CAAC,EAAE;QACrB,MAAMiZ,WAAW,GAAG,IAAItU,MAAM,CAACuU,WAAW,CAAC,CAAC,CAAC;QAC7CvU,MAAM,CAACwU,MAAM,CAACC,eAAe,CAACH,WAAW,CAAC;QAC1CD,WAAW,GAAGC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;QAChCH,SAAS,GAAGD,aAAa,GAAGE,KAAK,CAACC,WAAW,CAAC;MAC/C;MACA,OAAOF,SAAS;IACjB,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;AACA;IACS/H,mBAAmB,WAAAsI,qBAACzI,KAAsB,EAAU;MAC3D,MAAM0I,KAAK,GAAG1I,KAAK,EAAE2I,WAAW;MAChC,MAAMC,QAAQ,GAAG5I,KAAK,EAAE6I,eAAe;MAEvC,IAAI,CAACD,QAAQ,IAAIA,QAAQ,CAACE,QAAQ,KAAKJ,KAAK,EAAE;QAC7C,OAAO,EAAE;MACV;MAEA,IAAIK,QAAQ,GAAGH,QAAQ,CAACI,SAAS;MACjC,MAAMC,UAAU,GAAGL,QAAQ,CAACM,QAAQ;MAEpC,IAAI,CAACD,UAAU,EAAE;QAChB,OAAO,EAAE;MACV;MACA,IAAIF,QAAQ,KAAK,0BAA0B,EAAE;QAC5CA,QAAQ,GAAG,YAAY;MACxB;MACA,IAAI,CAAC,IAAI,CAACI,aAAa,CAACF,UAAU,CAAC,EAAE;QACpC,MAAMG,UAAU,GAAG,IAAI,CAACC,iBAAiB,CAACJ,UAAU,CAAC;QACrD,OAAO,QAAQF,QAAQ,WAAWK,UAAU,EAAE;MAC/C;MACA,OAAO,QAAQL,QAAQ,WAAWE,UAAU,EAAE;IAC/C,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;AACA;IACSI,iBAAiB,WAAAC,iBAACC,SAAiB,EAAE;MAC5C,IAAIC,MAAM,GAAGD,SAAS,EAAE1E,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;;MAE7D;MACA,OAAO2E,MAAM,CAACpa,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;QAC/Boa,MAAM,IAAI,GAAG;MACd;MACA,OAAOA,MAAM;IACd,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;IACSL,aAAa,WAAAM,aAACC,KAAa,EAAW;MAC7C;MACA,IAAI,CAACA,KAAK,IAAIA,KAAK,CAACta,MAAM,KAAK,CAAC,EAAE;QACjC,OAAO,KAAK;MACb;;MAEA;MACA;MACA,MAAMua,WAAW,GAAG,wBAAwB;;MAE5C;MACA,IAAI,CAACA,WAAW,CAACvc,IAAI,CAACsc,KAAK,CAAC,EAAE;QAC7B,OAAO,KAAK;MACb;;MAEA;MACA;MACA,IAAIA,KAAK,CAACta,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;QAC3B,OAAO,KAAK;MACb;;MAEA;MACA,IAAIsa,KAAK,CAACxL,QAAQ,CAAC,GAAG,CAAC,EAAE;QACxB;QACA,MAAM0L,YAAY,GAAGF,KAAK,CAACG,OAAO,CAAC,GAAG,CAAC;QACvC,MAAMC,gBAAgB,GAAGJ,KAAK,CAACK,WAAW,CAAC,GAAG,CAAC;QAC/C;QACA,IAAIH,YAAY,KAAKF,KAAK,CAACta,MAAM,IAAIsa,KAAK,CAACta,MAAM,GAAGwa,YAAY,CAAC,EAAE;UAClE,OAAO,KAAK;QACb;;QAEA;QACA,IAAIF,KAAK,CAACta,MAAM,GAAGwa,YAAY,GAAG,CAAC,EAAE;UACpC,OAAO,KAAK;QACb;;QAEA;QACA,IAAIA,YAAY,KAAKE,gBAAgB,IAAIA,gBAAgB,KAAKF,YAAY,GAAG,CAAC,EAAE;UAC/E,OAAO,KAAK;QACb;MACD;MAEA,OAAO,IAAI;IACZ,CAAC;IAEOxM,uBAAuB,WAAAA,wBAAA,EAAG;MACjC,MAAM4M,eAAe,GAAGvb,oBAAoB,CAACwb,kBAAkB,CAAC,IAAI,CAAC;MACrE,MAAMC,cAAc,GAAGzb,oBAAoB,CAAC0b,iBAAiB,CAAC,IAAI,CAAc;MAChF,OAAOzb,kBAAkB,CAACuE,WAAW,CAAC+W,eAAe,EAAEE,cAAc,CAAC;IACvE;EAAC;EAAA,OA/gCmB/Z,SAAS;AAAA","ignoreList":[]}