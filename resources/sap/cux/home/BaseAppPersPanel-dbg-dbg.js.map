{"version":3,"file":"BaseAppPersPanel-dbg-dbg.js","names":["sap","ui","define","EventBus","__BaseAppPanel","___utils_Constants","___utils_DataFormatUtils","__PageManager","__PersonalisationUtils","__UshellPersonalizer","_interopRequireDefault","obj","__esModule","default","BaseAppPanel","DEFAULT_APP_ICON","DEFAULT_BG_COLOR","FALLBACK_ICON","MYHOME_PAGE_ID","getLeanURL","PageManager","PersonalisationUtils","UshellPersonalizer","BaseAppPersPanel","extend","metadata","library","properties","persContainerId","type","group","defaultValue","visibility","constructor","_constructor","id","settings","BaseAppPanel.prototype.constructor.call","init","_init","BaseAppPanel.prototype.init.call","_eventBus","getInstance","subscribe","applyPersonalization","_getPersonalizer","_this","_getPersContainerId","Error","Promise","resolve","getOwnerComponent","e","reject","getPersonalization","_getPersonalization","_this2","then","personalizer","read","persData","setPersonalization","_setPersonalization","_this3","write","_getAppPersonalization","_this4","personalization","favoriteApps","setFavAppsPersonalization","_setFavAppsPersonalization","appsPersonalization","_this5","_temp","_applyPersonalization","_this6","tiles","fetchTileVisualization","_applyTilesPersonalization","groupId","shouldReload","arguments","length","undefined","_this7","all","_getFavPages","_ref","personalizations","favPages","appManagerInstance","_getAllFavPageApps","favPageVisualizations","groups","getAggregation","apps","_getGroup","getApps","tile","item","_getItem","color","icon","_getItemPersonalization","setProperty","setBackgroundColor","setTileIcon","tileGroupId","data","find","oGroup","getGroupId","oApp","getUrl","isA","isSection","sectionId","BGColor","app","appIds","oldAppId","push","vizId","getVizId","appId","includes","oPersonalization","isRecentlyAddedApp","favPageVisualization","oVisualization","colorInfo","key","_getFavAppIcon","getAppIcon","_this8","_getPageManagerInstance","getFavoritePages","aFavPages","concat","pageId","_getAppIcon","favPageIcon","getIcon","_pageManagerInstance","getProperty","getPersContainerId"],"sources":["BaseAppPersPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport GenericTile from \"sap/m/GenericTile\";\nimport Component from \"sap/ui/core/Component\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport App from \"./App\";\nimport BaseAppPanel from \"./BaseAppPanel\";\nimport { $BaseAppPersPanelSettings } from \"./BaseAppPersPanel\";\nimport Group from \"./Group\";\nimport { IAppPersonalization, ICustomVisualization, IItemPersonalization } from \"./interface/AppsInterface\";\nimport { DEFAULT_APP_ICON, DEFAULT_BG_COLOR, FALLBACK_ICON, MYHOME_PAGE_ID } from \"./utils/Constants\";\nimport { getLeanURL } from \"./utils/DataFormatUtils\";\nimport PageManager from \"./utils/PageManager\";\nimport PersonalisationUtils from \"./utils/PersonalisationUtils\";\nimport UshellPersonalizer, { IPersonalizationData } from \"./utils/UshellPersonalizer\";\n\n/**\n *\n * Provides the BaseAppPersPanel Class which is BaseAppPanel with personalisation.\n *\n * @extends sap.cux.home.BaseAppPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121.0\n *\n * @abstract\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.BaseAppPersPanel\n */\nexport default abstract class BaseAppPersPanel extends BaseAppPanel {\n\tprivate _pageManagerInstance!: PageManager;\n\tprivate _eventBus!: EventBus;\n\n\tconstructor(idOrSettings?: string | $BaseAppPersPanelSettings);\n\tconstructor(id?: string, settings?: $BaseAppPersPanelSettings);\n\tconstructor(id?: string, settings?: $BaseAppPersPanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\tpersContainerId: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"hidden\" }\n\t\t}\n\t};\n\n\tpublic init() {\n\t\tsuper.init();\n\t\tthis._eventBus = EventBus.getInstance();\n\t\t//apply personalization on page update\n\t\tthis._eventBus.subscribe(\n\t\t\t\"pageChannel\",\n\t\t\t\"pageUpdated\",\n\t\t\t() => {\n\t\t\t\tvoid this.applyPersonalization();\n\t\t\t},\n\t\t\tthis\n\t\t);\n\t}\n\n\t/**\n\t * Retrieves the personalizer instance.\n\t * @returns {Promise<sap.cux.home.UshellPersonalizer>} A promise resolving to the personalizer instance.\n\t * @throws {Error} Throws an error if no container ID is provided for personalization.\n\t * @private\n\t */\n\tprivate async _getPersonalizer() {\n\t\tconst persContainerId = this._getPersContainerId();\n\t\tif (!persContainerId) {\n\t\t\tthrow new Error(\"No Container ID Provided for personalisation!\");\n\t\t}\n\t\tconst personalizer = await UshellPersonalizer?.getInstance(\n\t\t\tpersContainerId,\n\t\t\tPersonalisationUtils.getOwnerComponent(this) as Component\n\t\t);\n\t\treturn personalizer;\n\t}\n\n\t/**\n\t * Retrieves personalization data.\n\t * @returns {Promise<IPersonalizationData>} A promise that resolves with the personalization data.\n\t * @private\n\t */\n\tprotected async getPersonalization() {\n\t\tconst personalizer = await this._getPersonalizer();\n\t\tconst persData = await personalizer?.read();\n\t\treturn persData || {};\n\t}\n\n\t/**\n\t * Sets the personalization data.\n\t * @param {IPersonalizationData} persData - The personalization data to set.\n\t * @returns {Promise<void>} A promise that resolves when the personalization data is set.\n\t * @private\n\t */\n\tprotected async setPersonalization(persData: IPersonalizationData) {\n\t\tconst personalizer = await this._getPersonalizer();\n\t\tawait personalizer.write(persData);\n\t}\n\n\t/**\n\t * Returns array of personalized favorite apps\n\t *\n\t * @returns {Promise} resolves to return array of personalized favorite apps\n\t */\n\tprotected async _getAppPersonalization() {\n\t\tconst personalization = await this.getPersonalization();\n\t\treturn personalization?.favoriteApps || ([] as IAppPersonalization[]);\n\t}\n\n\t/**\n\t * Sets the personalization data.\n\t * @param {IAppPersonalization[]} appsPersonalization - Personalization data for favorite apps.\n\t * @returns {Promise<void>} A promise that resolves when the personalization data is set.\n\t * @private\n\t */\n\tprotected async setFavAppsPersonalization(appsPersonalization: IAppPersonalization[]): Promise<void> {\n\t\tlet personalization = await this.getPersonalization();\n\t\tif (personalization) {\n\t\t\tpersonalization.favoriteApps = appsPersonalization;\n\t\t\tawait this.setPersonalization(personalization);\n\t\t}\n\t}\n\n\t/**\n\t * Applies personalization settings to the tiles.\n\t * Retrieves tiles from the generated apps wrapper and applies personalization settings to each tile.\n\t * Personalization settings include background color and icon customization.\n\t * @private\n\t * @async\n\t */\n\tpublic async applyPersonalization() {\n\t\tlet tiles = this.fetchTileVisualization();\n\t\treturn await this._applyTilesPersonalization(tiles);\n\t}\n\n\t/**\n\t * Applies personalization settings to the provided tiles.\n\t * @param {Array} tiles - An array of tiles to apply personalization settings to.\n\t * @param {string} [groupId] - Optional group ID for filtering personalization settings.\n\t * @param {boolean} [shouldReload=true] - A flag indicating whether to reload page visualizations.\n\t * @returns {Promise<void>} A promise that resolves when personalization settings are applied to the tiles.\n\t * @private\n\t */\n\tprotected async _applyTilesPersonalization(tiles: GenericTile[], groupId?: string, shouldReload = true) {\n\t\tconst [personalizations, favPages] = await Promise.all([this._getAppPersonalization(), this._getFavPages()]);\n\t\tconst favPageVisualizations = await this.appManagerInstance._getAllFavPageApps(favPages, shouldReload);\n\t\tconst groups = (this.getAggregation(\"groups\") || []) as Group[];\n\t\tconst apps = groupId ? this._getGroup(groupId)?.getApps() || [] : this.getApps() || [];\n\t\tfor (const tile of tiles) {\n\t\t\tconst item = this._getItem(tile, groups, apps);\n\t\t\tconst { color, icon } = this._getItemPersonalization(item, personalizations, favPageVisualizations, groupId);\n\n\t\t\tif (color) {\n\t\t\t\titem?.setProperty(\"bgColor\", color, true);\n\t\t\t\ttile.setBackgroundColor(color);\n\t\t\t}\n\n\t\t\tif (icon) {\n\t\t\t\titem?.setProperty(\"icon\", icon, true);\n\t\t\t\ttile.setTileIcon(icon);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the corresponding App or Group object associated with the given tile.\n\t * @param {GenericTile} tile - The tile for which to retrieve the corresponding item.\n\t * @param {Group[]} groups - An array of Group objects.\n\t * @param {App[]} apps - An array of App objects.\n\t * @returns {App | Group | undefined} The corresponding App or Group object, or undefined if not found.\n\t * @private\n\t */\n\tprivate _getItem(tile: GenericTile, groups: Group[], apps: App[]): App | Group | undefined {\n\t\tconst tileGroupId = tile.data(\"groupId\") as string | undefined;\n\t\tif (tileGroupId) {\n\t\t\treturn groups.find((oGroup) => oGroup.getGroupId() === tileGroupId);\n\t\t} else {\n\t\t\treturn apps.find((oApp) => getLeanURL(oApp.getUrl()) === tile.getUrl());\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the color and icon associated with the specified item based on personalizations.\n\t * @param {App | Group | undefined} item - The App or Group object for which to retrieve personalization data.\n\t * @param {IAppPersonalization[] | undefined} personalizations - An array of personalization objects.\n\t * @param {ICustomVisualization[]} favPageVisualizations - An array of favorite page visualizations.\n\t * @param {string | undefined} groupId - The ID of the group to which the item belongs.\n\t * @returns {IItemPersonalization} An object containing the color and icon associated with the item.\n\t * @private\n\t */\n\tprivate _getItemPersonalization(\n\t\titem: App | Group | undefined,\n\t\tpersonalizations: IAppPersonalization[] | undefined,\n\t\tfavPageVisualizations: ICustomVisualization[],\n\t\tgroupId?: string\n\t): IItemPersonalization {\n\t\tlet color: string = \"\";\n\t\tlet icon: string = \"\";\n\n\t\tif (!item) return { color, icon };\n\n\t\tif (item.isA(\"sap.cux.home.Group\")) {\n\t\t\tconst personalization = personalizations?.find(\n\t\t\t\t(personalization) => personalization.isSection && personalization.sectionId === (item as Group).getGroupId()\n\t\t\t);\n\t\t\tcolor = personalization?.BGColor as string;\n\t\t} else {\n\t\t\tconst app = item as App;\n\t\t\tconst appIds = [app.getUrl()];\n\t\t\tconst oldAppId = app.data(\"oldAppId\") as string | undefined;\n\t\t\tif (oldAppId) {\n\t\t\t\tappIds.push(oldAppId);\n\t\t\t}\n\t\t\tconst vizId = app.getVizId();\n\t\t\tconst personalization = groupId\n\t\t\t\t? personalizations?.find(\n\t\t\t\t\t\t(personalization) =>\n\t\t\t\t\t\t\t!personalization.isSection &&\n\t\t\t\t\t\t\tpersonalization.sectionId === groupId &&\n\t\t\t\t\t\t\tpersonalization.appId &&\n\t\t\t\t\t\t\tappIds.includes(personalization.appId)\n\t\t\t\t\t)\n\t\t\t\t: personalizations?.find((oPersonalization) =>\n\t\t\t\t\t\tthis?.isA(\"sap.cux.home.FavAppPanel\")\n\t\t\t\t\t\t\t? oPersonalization.isRecentlyAddedApp && oPersonalization.appId && appIds.includes(oPersonalization.appId)\n\t\t\t\t\t\t\t: oPersonalization.appId && appIds.includes(oPersonalization.appId)\n\t\t\t\t\t);\n\t\t\tconst favPageVisualization = favPageVisualizations.find(\n\t\t\t\t(oVisualization) => oVisualization.vizId === vizId || (oVisualization.appId && appIds.includes(oVisualization.appId))\n\t\t\t);\n\t\t\tconst colorInfo = personalization?.BGColor || favPageVisualization?.BGColor || DEFAULT_BG_COLOR().key;\n\t\t\tcolor = typeof colorInfo === \"object\" ? colorInfo.key : colorInfo;\n\t\t\ticon = this?.isA(\"sap.cux.home.FavAppPanel\") ? this._getFavAppIcon(app, favPageVisualization?.icon) : this.getAppIcon();\n\t\t}\n\n\t\treturn { color, icon };\n\t}\n\n\t/**\n\t * Retrieves favorite pages.\n\t * @returns {Promise<Array>} A promise that resolves with an array of favorite pages.\n\t * @private\n\t */\n\tprivate async _getFavPages() {\n\t\tconst aFavPages = await this._getPageManagerInstance().getFavoritePages();\n\t\treturn aFavPages.concat({\n\t\t\tpageId: MYHOME_PAGE_ID,\n\t\t\tBGColor: DEFAULT_BG_COLOR().key\n\t\t});\n\t}\n\n\t/**\n\t * Returns default app icon.\n\t * @returns {string} The icon URL for the app.\n\t * @private\n\t */\n\tprotected getAppIcon(): string {\n\t\treturn DEFAULT_APP_ICON;\n\t}\n\n\t/**\n\t * Retrieves the icon for the specified app, prioritizing the favorite page icon if available.\n\t * @param {sap.cux.home.App} app - The app object.\n\t * @param {string} favPageIcon - The icon for the app from the favorite page.\n\t * @returns {string} The icon URL for the app.\n\t * @private\n\t */\n\tprivate _getFavAppIcon(app?: App, favPageIcon?: string): string {\n\t\treturn favPageIcon || app?.getIcon() || FALLBACK_ICON;\n\t}\n\n\tprivate _getPageManagerInstance() {\n\t\tif (!this._pageManagerInstance) {\n\t\t\tthis._pageManagerInstance = PageManager.getInstance(\n\t\t\t\tthis._getPersContainerId(),\n\t\t\t\tPersonalisationUtils.getOwnerComponent(this) as Component\n\t\t\t);\n\t\t}\n\t\treturn this._pageManagerInstance;\n\t}\n\n\tprivate _getPersContainerId(): string {\n\t\tlet persContainerId = this.getProperty(\"persContainerId\") as string;\n\t\tif (!persContainerId) {\n\t\t\tpersContainerId = PersonalisationUtils.getPersContainerId(this);\n\t\t}\n\t\treturn persContainerId;\n\t}\n}\n"],"mappings":"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","ignoreList":[]}