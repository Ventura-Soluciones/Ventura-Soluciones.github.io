{"version":3,"file":"AdvancedSettingsPanel.js","names":["sap","ui","define","Log","CardHelper","Button","CheckBox","CustomListItem","HBox","IconTabBar","IconTabFilter","Input","Label","sap_m_library","List","MessageStrip","MessageToast","ObjectStatus","OverflowToolbar","Panel","Text","Title","Toolbar","ToolbarSpacer","VBox","Element","EventBus","sap_ui_core_library","SimpleForm","JSONModel","FileUploader","Container","__BaseSettingsPanel","___utils_Accessibility","__AppManager","___utils_Constants","___utils_FESRUtil","__HttpHelper","__PageManager","__PersonalisationUtils","__UShellPersonalizer","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","FlexAlignItems","ToolbarStyle","ValueState","BaseSettingsPanel","checkPanelExists","AppManager","SETTINGS_PANELS_KEYS","addFESRSemanticStepName","FESR_EVENTS","HttpHelper","PageManager","PersonalisationUtils","UShellPersonalizer","ImportExportType","BASE_URL","REPO_BASE_URL","EXPORT_API","MYINSIGHT_SECTION_ID","NewsAndPagesContainerName","AppsContainerlName","InsightsContainerName","PagePanelName","FavAppPanelName","RecommendedAppPanelName","TilesPanelName","CardsPanelName","AdvancedSettingsPanel","extend","metadata","events","sectionsImported","constructor","_constructor","id","settings","BaseSettingsPanel.prototype.constructor.call","this","init","_init","BaseSettingsPanel.prototype.init.call","setProperty","ADVANCED","_i18nBundle","getText","oEventBus","getInstance","oAppManagerInstance","oSectionsImported","oUserPersonalization","export","sections","fileName","sectionsSelected","error","import","selectedTab","showNoImport","oControlModel","addAggregation","getContent","addInnerContent","attachPanelNavigated","_this","oPageManagerInstance","getPersContainerId","_getPanel","getOwnerComponent","subscribe","channelId","eventId","data","customData","status","updateImportStatus","oDetailPage","getElementById","getProperty","layout","_setRecommendationSettingsPanel","Promise","resolve","loadUserPersonalizationData","oImportBtn","setEnabled","enableDisableActions","setImportExportList","oExportMessage","setText","errorMessage","String","setType","errorType","oFileNameInput","setValue","oImportMessage","setVisible","reject","_setImportExportList","oExportList","setExportSectionList","_importExportPanel","addContent","invalidate","oImportList","setImportSectionList","_enableDisableActions","sType","oImportExportTab","setSelectedKey","IMPORT","oExportBtn","EXPORT","length","setExportImportValues","_setExportImportValues","_getContent","oContentVBox","getId","items","text","addStyleClass","_getImportExportPanel","headerToolbar","style","Clear","content","_getImportButton","_getExportButton","headerText","expanded","expandable","type","press","onImportPress","visible","PRESS","onExportPress","bind","_addInnerContent","backgroundDesign","selectedKey","oSelectedTab","select","onImportExportTabSelect","exportTab","key","SELECT","showIcon","exportText","fileInputContainer","alignItems","filenameLabel","labelFor","required","showColon","ariaLabelledBy","width","liveChange","onFileNameInputChange","value","addItem","importTab","importText","importSimpleForm","editable","labelSpanS","labelSpanM","fileUploader","tooltip","fileType","change","oEvent","onFileImport","maximumFileSize","sameFilenameAllowed","buttonText","classicImportTab","classicText","resetImportAppsNow","onResetImportApps","_setExportSectionList","exportSectionsList","growingThreshold","includeItemInSelection","setHeaderToolbar","setModel","bindItems","path","template","formatter","_isPanelAvailable","accDescription","_formatAccDescription","onSectionsSelectionChange","selected","enabled","title","instructionText","panelClassName","panelMappings","containerName","panelName","mapping","_setImportSectionList","importSectionsList","justifyContent","icon","state","_onSectionsSelectionChange","isImport","allSections","getItems","isSelected","innerCheckbox","isSectionSelected","some","oSection","getAggregation","getSelected","innerHbox","_onImportPress","_this2","attachEvent","setBusy","handleUserPersonalizationError","oExportData","_temp","importSections","aSelectedSections","bShowError","Error","oErr","_importSections","oImportData","sectionImportChain","aPromise","oSelectedSections","push","importApps","importTiles","importFavPages","reduce","chain","current","importCards","all","catch","oError","_importApps","apps","publish","groupInfo","_importTiles","tiles","_importFavPages","favouritePages","_importCards","cards","_updateImportStatus","sSectionTitle","errorState","sSectionId","find","oSec","undefined","Success","None","sectionTitles","Object","keys","imported","every","sTitle","fireEvent","resetImportModel","_resetImportModel","onOpen","getDeltaSectionViz","_getDeltaSectionViz","aImportedSections","_this3","_getSections","favSections","forEach","oImportedSection","aDelta","visualizations","filter","oImportViz","oViz","isBookmark","targetURL","vizId","getDeltaAuthSectionViz","_getDeltaAuthSectionViz","aDeltaSections","filterAuthSectionViz","_filterAuthSectionViz","aSections","_getCatalogApps","getServiceAsync","SearchableContent","getApps","includeAppsWithoutVisualizations","_filterAuthViz","aAppCatalog","aViz","aSectionViz","appCatalog","oAppCatalog","oSectionViz","oCatalogViz","target","action","semanticObject","displayFormatHint","map","filterAuthFavPages","_filterAuthFavPages","aFavPages","_exit","_this4","_temp3","_result","_temp2","fetchAllAvailablePages","aAvailablePages","oimportedPage","oAvailabePage","pageId","spaceId","_await$_this4$oPageMa","filterAuthCards","_filterAuthCards","aCards","_exit2","_temp5","_result2","_getParentApp","aAvailableApps","oCard","oApp","resolutionResult","applicationDependencies","name","parentAppId","_isNavigationSupported","oService","oParentApp","isNavigationSupported","aResponses","supported","_temp4","aServices","clientSideTargetResolution","Navigation","_oAdapter","_aInbounds","promise","aAuthCards","bIsNavigationSupported","_await$Promise$all$th","_onFileImport","files","getParameter","oFile","readFileContent","oFileContent","oEncodedFileContent","window","btoa","encodeURIComponent","replace","match","p1","fromCharCode","parseInt","Post","fileContent","oResponse","oImportDataString","JSON","parse","host","location","filterAuthorizedImportData","finally","_filterAuthorizedImportData","_this5","getInsightCards","aResponse","aAuthSections","aAuthFavPages","iInsightCardsCount","iTotalCardCount","Number","getImportedSections","getSelectedSections","_readFileContent","FileReader","reader","onload","event","blob","readAsText","_getPersonalizationData","_this6","_temp7","oPersonalizerInstance","read","_this6$oPersonalizerI","persData","_temp6","_UShellPersonalizer$g","_loadUserPersonalizationData","_this7","_ref","insightModel","favApps","insightTiles","insightCards","descriptorContent","personalization","aExportSections","refresh","_getSelectedSections","_isSectionSelected","sectionId","section","sec","_getImportedSections","oData","_this8","_temp9","isAppViz","oSections","panelClass","_temp8","getDeltaFavPages","_getDeltaFavPages","aImportedFavPages","_this9","oImportedPage","oFavPage","_getInsightCards","_this10","_getServiceAsync","cardHelperInstance","_getUserAllCardModel","oUserVisibleCardModel","aVisibleCards","visibility","_onExportPress","oExportFileName","oExportFileContent","getExportFileContent","require","File","save","stringify","show","message","_getExportFileContent","exportData","exportSections","oPersonalization","createdDate","Date","favoriteApps","filterNonSensitiveCards","_filterNonSensitiveCards","nonSensitiveCards","configuration","parameters","parameter","sensitiveProps","concat","getSensitiveProps","headerState","lineItemState","_getSensitiveProps","param","paramSensitiveProps","paramValue","sensitiveProp","ibnParams","_handleUserPersonalizationError","sErrorMsg","sErrorType","sDefaultErrorMsg","_onImportExportTabSelect","_onFileNameInputChange","sInputValue","trim","oInput","getSource","sValueState","sValueStateText","setValueState","setValueStateText","_onResetImportApps","_getRecommendationSettingsPanel","_this11","_recommendationSettingsPanel","panelId","showRecommendation","onRecommendationSettingChange","Center","_this12","recommendationSettingsPanel","_onRecommendationSettingChange","_this13","oPersData","write"],"sources":["AdvancedSettingsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport CardHelper from \"sap/insights/CardHelper\";\nimport Button from \"sap/m/Button\";\nimport CheckBox, { CheckBox$SelectEvent } from \"sap/m/CheckBox\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport HBox from \"sap/m/HBox\";\nimport IconTabBar, { IconTabBar$SelectEvent } from \"sap/m/IconTabBar\";\nimport IconTabFilter from \"sap/m/IconTabFilter\";\nimport Input, { Input$LiveChangeEvent } from \"sap/m/Input\";\nimport Label from \"sap/m/Label\";\nimport { FlexAlignItems, ToolbarStyle } from \"sap/m/library\";\nimport List from \"sap/m/List\";\nimport MessageStrip from \"sap/m/MessageStrip\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport ObjectStatus from \"sap/m/ObjectStatus\";\nimport OverflowToolbar from \"sap/m/OverflowToolbar\";\nimport Page from \"sap/m/Page\";\nimport Panel from \"sap/m/Panel\";\nimport Text from \"sap/m/Text\";\nimport Title from \"sap/m/Title\";\nimport Toolbar from \"sap/m/Toolbar\";\nimport ToolbarSpacer from \"sap/m/ToolbarSpacer\";\nimport VBox from \"sap/m/VBox\";\nimport Component from \"sap/ui/core/Component\";\nimport Control from \"sap/ui/core/Control\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport Element from \"sap/ui/core/Element\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport { ValueState } from \"sap/ui/core/library\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport File from \"sap/ui/core/util/File\";\nimport SimpleForm from \"sap/ui/layout/form/SimpleForm\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport FileUploader, { FileUploader$ChangeEvent } from \"sap/ui/unified/FileUploader\";\nimport Container from \"sap/ushell/Container\";\nimport ClientSideTargetResolution from \"sap/ushell/services/ClientSideTargetResolution\";\nimport Navigation from \"sap/ushell/services/Navigation\";\nimport SearchableContent, { AppData } from \"sap/ushell/services/SearchableContent\";\nimport { $AdvancedSettingsPanelSettings } from \"./AdvancedSettingsPanel\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\nimport { IAppInbounds, IAppPersonalization, ISection, ISectionAndVisualization, IVisualization } from \"./interface/AppsInterface\";\nimport { ICard, ICardActionParameters, ICardHelper, ICardHelperInstance, ICardManifest } from \"./interface/CardsInterface\";\nimport { IPage } from \"./interface/PageSpaceInterface\";\nimport { checkPanelExists } from \"./utils/Accessibility\";\nimport AppManager from \"./utils/AppManager\";\nimport { SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\nimport { addFESRSemanticStepName, FESR_EVENTS } from \"./utils/FESRUtil\";\nimport HttpHelper from \"./utils/HttpHelper\";\nimport PageManager from \"./utils/PageManager\";\nimport PersonalisationUtils from \"./utils/PersonalisationUtils\";\nimport UShellPersonalizer, { IPersonalizationData } from \"./utils/UshellPersonalizer\";\n\nexport enum ImportExportType {\n\tIMPORT = \"import\",\n\tEXPORT = \"export\"\n}\n\nexport interface IExportData {\n\tapps?: ISection[];\n\ttiles?: ISectionAndVisualization[];\n\tgroupInfo?: IAppPersonalization[];\n\thost?: string;\n\tsections?: ISection[];\n\tcreatedDate?: string;\n\tfavouritePages: ISectionAndVisualization[] | IPage[];\n\tcards?: ICardManifest[];\n\tpersonalization?: IPersonalizationData;\n}\ninterface IExportSections {\n\ttitle: string;\n\tselected: boolean | undefined;\n\tenabled: boolean | undefined;\n\tpanelClass: string;\n\tstatus?: ValueState;\n}\ntype SectionOrVisualization = ISectionAndVisualization[] | IVisualization[];\ninterface IExportImportFile {\n\thost?: string;\n\tcreatedDate?: Date;\n\tsections?: SectionOrVisualization | [];\n\tgroupInfo?: IAppPersonalization[] | IVisualization[] | [];\n\ttiles?: SectionOrVisualization;\n\tcards?: ICardManifest[];\n\tfavouritePages: IPage[] | ISectionAndVisualization[];\n\tapps?: ISection[] | [];\n}\ninterface ApiResponse {\n\tvalue: { fileContent: string }[];\n\t// Define other properties if present in ApiResponse\n}\nconst BASE_URL = \"/sap/opu/odata4/ui2/insights_srv/srvd/ui2/\";\nconst REPO_BASE_URL = BASE_URL + \"insights_cards_repo_srv/0001/\";\nconst EXPORT_API = REPO_BASE_URL + \"INSIGHTS_CARDS/com.sap.gateway.srvd.ui2.insights_cards_repo_srv.v0001.importExport?\";\nconst MYINSIGHT_SECTION_ID = \"AZHJGRIT78TG7Y65RF6EPFJ9U\";\n\nconst NewsAndPagesContainerName: string = \"sap.cux.home.NewsAndPagesContainer\";\nconst AppsContainerlName: string = \"sap.cux.home.AppsContainer\";\nconst InsightsContainerName: string = \"sap.cux.home.InsightsContainer\";\nconst PagePanelName: string = \"sap.cux.home.PagePanel\";\nconst FavAppPanelName: string = \"sap.cux.home.FavAppPanel\";\nconst RecommendedAppPanelName: string = \"sap.cux.home.RecommendedAppPanel\";\nconst TilesPanelName: string = \"sap.cux.home.TilesPanel\";\nconst CardsPanelName: string = \"sap.cux.home.CardsPanel\";\n\n/**\n *\n * Class for My Home Advanced Settings Panel.\n *\n * @extends BaseSettingsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @internal\n * @experimental Since 1.121\n * @private\n *\n * @alias sap.cux.home.AdvancedSettingsPanel\n */\nexport default class AdvancedSettingsPanel extends BaseSettingsPanel {\n\tprivate oControlModel!: JSONModel;\n\tprivate oImportExportTab!: IconTabBar;\n\tprivate oFileNameInput!: Input;\n\tprivate oSelectedTab!: string | undefined;\n\tprivate oExportList!: List;\n\tprivate oImportList!: List;\n\tprivate oImportBtn!: Button;\n\tprivate oExportBtn!: Button;\n\tprivate oEventBus!: EventBus;\n\tprivate oAppManagerInstance!: AppManager;\n\tprivate oPageManagerInstance!: PageManager;\n\tprivate oPersonalizerInstance!: UShellPersonalizer;\n\tprivate cardHelperInstance!: ICardHelperInstance;\n\tprivate persData!: IPersonalizationData;\n\tprivate oContentVBox!: VBox;\n\tprivate oExportMessage!: MessageStrip;\n\tprivate oImportMessage!: MessageStrip;\n\tprivate oDetailPage!: Page;\n\tprivate oSectionsImported!: {\n\t\t[key: string]: boolean;\n\t};\n\tprivate oUserPersonalization!: {\n\t\texport: {\n\t\t\tdata?: IExportData;\n\t\t\tsections?: IExportSections[];\n\t\t\tfileName?: string;\n\t\t\tsectionsSelected?: boolean;\n\t\t\terror?: boolean;\n\t\t\terrorMessage?: string;\n\t\t\terrorType?: string;\n\t\t};\n\t\timport: {\n\t\t\tdata?: IExportData | IExportImportFile;\n\t\t\tsections?: IExportSections[];\n\t\t\tsectionsSelected?: boolean;\n\t\t\terror?: boolean;\n\t\t\terrorMessage?: string;\n\t\t\terrorType?: MessageType;\n\t\t};\n\t\tselectedTab: string;\n\t\tshowNoImport: boolean;\n\t};\n\n\tconstructor(id?: string | $AdvancedSettingsPanelSettings);\n\tconstructor(id?: string, settings?: $AdvancedSettingsPanelSettings);\n\tconstructor(id?: string, settings?: $AdvancedSettingsPanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tevents: {\n\t\t\tsectionsImported: {}\n\t\t}\n\t};\n\tprivate _recommendationSettingsPanel!: Panel;\n\tprivate _importExportPanel!: Panel;\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\t//setup panel\n\t\tthis.setProperty(\"key\", SETTINGS_PANELS_KEYS.ADVANCED);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"advancedSettings\"));\n\t\tthis.setProperty(\"icon\", \"sap-icon://grid\");\n\t\tthis.oEventBus = EventBus.getInstance();\n\t\tthis.oAppManagerInstance = AppManager.getInstance();\n\t\tthis.oSectionsImported = {};\n\t\tthis.oUserPersonalization = {\n\t\t\texport: {\n\t\t\t\tsections: [],\n\t\t\t\tfileName: \"MY_HOME\",\n\t\t\t\tsectionsSelected: false,\n\t\t\t\terror: false\n\t\t\t},\n\t\t\timport: {\n\t\t\t\tsections: [],\n\t\t\t\tsectionsSelected: false,\n\t\t\t\terror: false\n\t\t\t},\n\t\t\tselectedTab: \"export\",\n\t\t\tshowNoImport: false\n\t\t};\n\t\tthis.oControlModel = new JSONModel(this.oUserPersonalization);\n\t\t//setup layout content\n\t\tthis.addAggregation(\"content\", this.getContent());\n\t\tthis.addInnerContent();\n\t\t//fired every time on panel navigation\n\t\tthis.attachPanelNavigated(() => {\n\t\t\tvoid (async () => {\n\t\t\t\tif (!this.oPageManagerInstance) {\n\t\t\t\t\tthis.oPageManagerInstance = PageManager.getInstance(\n\t\t\t\t\t\tPersonalisationUtils.getPersContainerId(this._getPanel()),\n\t\t\t\t\t\tPersonalisationUtils.getOwnerComponent(this._getPanel()) as Component\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// subscribe to all import events for all sections\n\t\t\t\tthis.oEventBus.subscribe(\n\t\t\t\t\t\"importChannel\",\n\t\t\t\t\t\"tilesImported\",\n\t\t\t\t\t(channelId?: string, eventId?: string, data?: object) => {\n\t\t\t\t\t\tconst customData = (data as { status: boolean }).status;\n\t\t\t\t\t\t//errorstate is false when import is successful\n\t\t\t\t\t\tthis.updateImportStatus(\"insightsTiles\", !customData);\n\t\t\t\t\t},\n\t\t\t\t\tthis\n\t\t\t\t);\n\n\t\t\t\tthis.oEventBus.subscribe(\n\t\t\t\t\t\"importChannel\",\n\t\t\t\t\t\"appsImported\",\n\t\t\t\t\t(channelId?: string, eventId?: string, data?: object) => {\n\t\t\t\t\t\tconst customData = (data as { status: boolean }).status;\n\t\t\t\t\t\t//errorstate is false when import is successful\n\t\t\t\t\t\tthis.updateImportStatus(\"favApps\", !customData);\n\t\t\t\t\t},\n\t\t\t\t\tthis\n\t\t\t\t);\n\n\t\t\t\tthis.oEventBus.subscribe(\n\t\t\t\t\t\"importChannel\",\n\t\t\t\t\t\"favPagesImported\",\n\t\t\t\t\t(channelId?: string, eventId?: string, data?: object) => {\n\t\t\t\t\t\tconst customData = (data as { status: boolean }).status;\n\t\t\t\t\t\t//errorstate is false when import is successful\n\t\t\t\t\t\tthis.updateImportStatus(\"pages\", !customData);\n\t\t\t\t\t},\n\t\t\t\t\tthis\n\t\t\t\t);\n\n\t\t\t\tthis.oEventBus.subscribe(\n\t\t\t\t\t\"importChannel\",\n\t\t\t\t\t\"cardsImported\",\n\t\t\t\t\t(channelId?: string, eventId?: string, data?: object) => {\n\t\t\t\t\t\tconst customData = (data as { status: boolean }).status;\n\t\t\t\t\t\t//errorstate is false when import is successful\n\t\t\t\t\t\tthis.updateImportStatus(\"insightsCards\", !customData);\n\t\t\t\t\t},\n\t\t\t\t\tthis\n\t\t\t\t);\n\n\t\t\t\t//get the detailPage of advanced settingspanel\n\t\t\t\tthis.oDetailPage = Element.getElementById(this.getProperty(\"key\") + \"-detail-page\") as Page;\n\t\t\t\tconst layout = this._getPanel();\n\t\t\t\tif (checkPanelExists(layout, AppsContainerlName, RecommendedAppPanelName)) {\n\t\t\t\t\tvoid this._setRecommendationSettingsPanel();\n\t\t\t\t}\n\n\t\t\t\t//load user personalization data\n\t\t\t\tawait this.loadUserPersonalizationData();\n\n\t\t\t\t//import button set enabled/disabled based on sections selected\n\t\t\t\tthis.oImportBtn.setEnabled(this.oUserPersonalization.import.sectionsSelected);\n\t\t\t\tthis.enableDisableActions(this.oUserPersonalization.selectedTab as ImportExportType);\n\n\t\t\t\t//set export and import list\n\t\t\t\tthis.setImportExportList();\n\t\t\t\tthis.oExportMessage.setText(\n\t\t\t\t\tthis.oUserPersonalization.export.errorMessage ? String(this.oUserPersonalization.export.errorMessage) : \"\"\n\t\t\t\t);\n\t\t\t\tthis.oExportMessage.setType(this.oUserPersonalization.export.errorType as MessageType);\n\t\t\t\tthis.oExportMessage.setProperty(\"visible\", this.oUserPersonalization.export.error, true);\n\t\t\t\tthis.oFileNameInput.setValue(String(this.oUserPersonalization.export.fileName));\n\n\t\t\t\tthis.oImportMessage.setText(\n\t\t\t\t\tthis.oUserPersonalization.import.errorMessage ? String(this.oUserPersonalization.import.errorMessage) : \"\"\n\t\t\t\t);\n\t\t\t\tthis.oImportMessage.setType(this.oUserPersonalization.import.errorType as MessageType);\n\t\t\t\tthis.oImportMessage.setVisible(this.oUserPersonalization.import.error);\n\t\t\t})();\n\t\t});\n\t}\n\n\tprivate setImportExportList(): void {\n\t\tif (!this.oExportList) {\n\t\t\tthis.oExportList = this.setExportSectionList();\n\t\t\tthis._importExportPanel.addContent(this.oExportList);\n\t\t} else {\n\t\t\tthis.oExportList.invalidate();\n\t\t}\n\t\tif (!this.oImportList) {\n\t\t\tthis.oImportList = this.setImportSectionList();\n\t\t\tthis._importExportPanel.addContent(this.oImportList);\n\t\t} else {\n\t\t\tthis.oImportList.invalidate();\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param sType selected tab type\n\t * Set import / export button enable property and selectedkey of importexport tab\n\t */\n\tprivate enableDisableActions(sType: ImportExportType): void {\n\t\tthis.oImportExportTab?.setSelectedKey(sType);\n\t\tthis.oImportBtn?.setVisible(sType === ImportExportType.IMPORT);\n\t\tthis.oExportBtn?.setVisible(sType === ImportExportType.EXPORT);\n\t\tif (this.oUserPersonalization.import.sectionsSelected && sType === ImportExportType.IMPORT) {\n\t\t\tthis.oImportBtn.setEnabled(true);\n\t\t} else {\n\t\t\tthis.oImportBtn.setEnabled(false);\n\t\t}\n\n\t\tif (\n\t\t\tsType === ImportExportType.EXPORT &&\n\t\t\tthis.oUserPersonalization.export.fileName &&\n\t\t\tthis.oUserPersonalization.export.sections?.length &&\n\t\t\tthis.oUserPersonalization.export.sectionsSelected\n\t\t) {\n\t\t\tthis.oExportBtn.setEnabled(true);\n\t\t} else {\n\t\t\tthis.oExportBtn.setEnabled(false);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param sType selected tab type\n\t * Set import/ export message values\n\t */\n\tprivate setExportImportValues(sType: ImportExportType): void {\n\t\tif (sType === ImportExportType.EXPORT) {\n\t\t\tthis.oExportMessage.setText(\n\t\t\t\tthis.oUserPersonalization.export.errorMessage ? String(this.oUserPersonalization.export.errorMessage) : \"\"\n\t\t\t);\n\t\t\tthis.oExportMessage.setType(this.oUserPersonalization.export.errorType as MessageType);\n\t\t\tthis.oExportMessage.setProperty(\"visible\", this.oUserPersonalization.export.error, true);\n\t\t} else if (sType === ImportExportType.IMPORT) {\n\t\t\tthis.oImportMessage.setText(\n\t\t\t\tthis.oUserPersonalization.import.errorMessage ? String(this.oUserPersonalization.import.errorMessage) : \"\"\n\t\t\t);\n\t\t\tthis.oImportMessage.setType(this.oUserPersonalization.import.errorType as MessageType);\n\t\t\tthis.oImportMessage.setProperty(\"visible\", this.oUserPersonalization.import.error);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the outer content VBox for the Advanced Settings Panel.\n\t * @returns VBox\n\t */\n\tprivate getContent(): VBox {\n\t\tif (!this.oContentVBox) {\n\t\t\tthis.oContentVBox = new VBox(this.getId() + \"--idAdvancedVBox\", {\n\t\t\t\titems: [\n\t\t\t\t\tnew Text(this.getId() + \"--idPersonalizationSubheader\", {\n\t\t\t\t\t\ttext: this._i18nBundle.getText(\"advancedSettingsSubheader\")\n\t\t\t\t\t}).addStyleClass(\"sapUiSmallMarginBegin sapUiSmallMarginTop\"),\n\n\t\t\t\t\tthis._getImportExportPanel()\n\t\t\t\t]\n\t\t\t});\n\t\t}\n\t\treturn this.oContentVBox;\n\t}\n\n\t/**\n\t * Returns the import/export panel.\n\t *\n\t * @private\n\t * @returns {Panel} The import/export panel.\n\t */\n\tprivate _getImportExportPanel() {\n\t\tif (!this._importExportPanel) {\n\t\t\tthis._importExportPanel = new Panel(`${this.getId()}-importExportPanel`, {\n\t\t\t\theaderToolbar: new OverflowToolbar(`${this.getId()}-importExportPanelToolbar`, {\n\t\t\t\t\tstyle: ToolbarStyle.Clear,\n\t\t\t\t\tcontent: [\n\t\t\t\t\t\tnew Text(`${this.getId()}-importExportPanelToolbarText`, {\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"importAndExportPanelHeader\")\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tnew ToolbarSpacer(`${this.getId()}-importExportPanelToolbarSpacer`),\n\t\t\t\t\t\tthis._getImportButton(),\n\t\t\t\t\t\tthis._getExportButton()\n\t\t\t\t\t]\n\t\t\t\t}),\n\t\t\t\theaderText: this._i18nBundle.getText(\"importAndExportPanelHeader\"),\n\t\t\t\texpanded: true,\n\t\t\t\texpandable: true,\n\t\t\t\tcontent: []\n\t\t\t}).addStyleClass(\"sapUiSmallMarginTop\");\n\t\t}\n\n\t\treturn this._importExportPanel;\n\t}\n\n\t/**\n\t * Returns the import button.\n\t *\n\t * @private\n\t * @returns {Button} import button.\n\t */\n\tprivate _getImportButton() {\n\t\tif (!this.oImportBtn) {\n\t\t\tthis.oImportBtn = new Button({\n\t\t\t\tid: `${this.getId()}-importBtn`,\n\t\t\t\ttext: this._i18nBundle.getText(\"import\"),\n\t\t\t\ttype: \"Transparent\",\n\t\t\t\tpress: () => {\n\t\t\t\t\tvoid this.onImportPress();\n\t\t\t\t},\n\t\t\t\tvisible: false\n\t\t\t});\n\t\t\taddFESRSemanticStepName(this._getImportButton(), FESR_EVENTS.PRESS, \"importBtn\");\n\t\t}\n\t\treturn this.oImportBtn;\n\t}\n\n\t/**\n\t * Returns the export button.\n\t *\n\t * @private\n\t * @returns {Button} export button.\n\t */\n\tprivate _getExportButton() {\n\t\tif (!this.oExportBtn) {\n\t\t\tthis.oExportBtn = new Button({\n\t\t\t\tid: `${this.getId()}-exportBtn`,\n\t\t\t\ttext: this._i18nBundle.getText(\"export\"),\n\t\t\t\ttype: \"Transparent\",\n\t\t\t\tpress: this.onExportPress.bind(this),\n\t\t\t\tvisible: true\n\t\t\t});\n\t\t\taddFESRSemanticStepName(this.oExportBtn, FESR_EVENTS.PRESS, \"exportBtn\");\n\t\t}\n\t\treturn this.oExportBtn;\n\t}\n\n\t/**\n\t * Returns the inner content for the Advanced Settings Panel.\n\t *\n\t * @private\n\t * @returns {Control} The control containing the Advanced Settings Panel content.\n\t */\n\tprivate addInnerContent(): void {\n\t\t//if not already initialised, create the import/export tab and inner controls\n\t\tif (!this.oImportExportTab) {\n\t\t\tthis.oImportExportTab = new IconTabBar(this.getId() + \"--idImportExportTab\", {\n\t\t\t\texpandable: false,\n\t\t\t\tbackgroundDesign: \"Transparent\",\n\t\t\t\tselectedKey: this.oSelectedTab ? this.oSelectedTab : \"export\",\n\t\t\t\tselect: this.onImportExportTabSelect.bind(this)\n\t\t\t});\n\n\t\t\tconst exportTab = new IconTabFilter(this.getId() + \"--idExportTab\", {\n\t\t\t\tkey: \"export\",\n\t\t\t\ttext: this._i18nBundle.getText(\"exportFile\")\n\t\t\t});\n\t\t\t// Add FESR for export tab\n\t\t\taddFESRSemanticStepName(exportTab, FESR_EVENTS.SELECT, \"exportTab\");\n\n\t\t\t//export tab content\n\t\t\tthis.oExportMessage = new MessageStrip(this.getId() + \"--idExportMessageStrip\", {\n\t\t\t\tshowIcon: true,\n\t\t\t\tvisible: false\n\t\t\t}).addStyleClass(\"sapUiNoMarginBegin sapUiTinyMarginBottom\");\n\t\t\tconst exportText = new Text(this.getId() + \"--idExportText\", { text: this._i18nBundle.getText(\"exportText\") }).addStyleClass(\n\t\t\t\t\"advancePadding\"\n\t\t\t);\n\t\t\tconst fileInputContainer = new HBox(this.getId() + \"--idFileInputContainer\", {\n\t\t\t\talignItems: \"Center\"\n\t\t\t}).addStyleClass(\"sapUiSmallMargin\");\n\t\t\tconst filenameLabel = new Label(this.getId() + \"--idFilenameLabel\", {\n\t\t\t\ttext: this._i18nBundle.getText(\"exportFileNameLabel\"),\n\t\t\t\tlabelFor: \"idTitleFilenameInput\",\n\t\t\t\trequired: true,\n\t\t\t\tshowColon: true\n\t\t\t}).addStyleClass(\"sapUiSmallMarginEnd\");\n\t\t\tthis.oFileNameInput = new Input(this.getId() + \"--idFileNameInput\", {\n\t\t\t\tariaLabelledBy: [`${this.getId()}--idExportText`, `${this.getId()}--idFilenameLabel`],\n\t\t\t\trequired: true,\n\t\t\t\twidth: \"13rem\",\n\t\t\t\tliveChange: this.onFileNameInputChange.bind(this),\n\t\t\t\tvalue: \"\"\n\t\t\t});\n\n\t\t\tfileInputContainer.addItem(filenameLabel);\n\t\t\tfileInputContainer.addItem(this.oFileNameInput);\n\n\t\t\texportTab.addContent(this.oExportMessage);\n\t\t\texportTab.addContent(exportText);\n\t\t\texportTab.addContent(fileInputContainer);\n\n\t\t\t//import tab\n\t\t\tconst importTab = new IconTabFilter(this.getId() + \"--idImportTab\", {\n\t\t\t\tkey: \"import\",\n\t\t\t\ttext: this._i18nBundle.getText(\"importFile\")\n\t\t\t});\n\t\t\t// Add FESR for import tab\n\t\t\taddFESRSemanticStepName(importTab, FESR_EVENTS.SELECT, \"importTab\");\n\n\t\t\t//import tab content\n\t\t\tthis.oImportMessage = new MessageStrip(this.getId() + \"--idImportMessageStrip\", {\n\t\t\t\ttext: \"{advsettings>/import/errorMessage}\",\n\t\t\t\ttype: \"{advsettings>/import/errorType}\",\n\t\t\t\tshowIcon: true,\n\t\t\t\tvisible: false\n\t\t\t}).addStyleClass(\"sapUiNoMarginBegin sapUiTinyMarginBottom\");\n\t\t\tconst importText = new Text(this.getId() + \"--idImportText\", { text: this._i18nBundle.getText(\"importText\") }).addStyleClass(\n\t\t\t\t\"advancePadding\"\n\t\t\t);\n\t\t\tconst importSimpleForm = new SimpleForm(this.getId() + \"--idImportSimpleForm\", {\n\t\t\t\teditable: true,\n\t\t\t\tlayout: \"ResponsiveGridLayout\",\n\t\t\t\tlabelSpanS: 4,\n\t\t\t\tlabelSpanM: 4\n\t\t\t});\n\t\t\tconst fileUploader = new FileUploader(this.getId() + \"--idImportFileUploader\", {\n\t\t\t\ttooltip: this._i18nBundle.getText(\"uploadImportFile\"),\n\t\t\t\tfileType: [\"txt\"],\n\t\t\t\tchange: (oEvent: FileUploader$ChangeEvent) => {\n\t\t\t\t\tvoid this.onFileImport(oEvent);\n\t\t\t\t},\n\t\t\t\tmaximumFileSize: 25,\n\t\t\t\tsameFilenameAllowed: true,\n\t\t\t\twidth: \"80%\",\n\t\t\t\tariaLabelledBy: [`${this.getId()}--idImportText`],\n\t\t\t\tbuttonText: this._i18nBundle.getText(\"importFileUploaderButton\")\n\t\t\t});\n\t\t\timportSimpleForm.addContent(fileUploader);\n\t\t\timportTab.addContent(this.oImportMessage);\n\t\t\timportTab.addContent(importText);\n\t\t\timportTab.addContent(importSimpleForm);\n\n\t\t\tconst classicImportTab = new IconTabFilter(this.getId() + \"--idClassicImportTab\", {\n\t\t\t\tkey: \"classicImport\",\n\t\t\t\ttext: this._i18nBundle.getText(\"classicImport\")\n\t\t\t});\n\t\t\t// Add FESR for classic import tab\n\t\t\taddFESRSemanticStepName(classicImportTab, FESR_EVENTS.SELECT, \"classicImportTab\");\n\t\t\tconst classicText = new Text(this.getId() + \"--idClassicImportText\", {\n\t\t\t\ttext: this._i18nBundle.getText(\"classicImportText\")\n\t\t\t}).addStyleClass(\"sapUiSmallMarginBottom advancePadding\");\n\t\t\tconst resetImportAppsNow = new Button(this.getId() + \"--resetImportAppsNow\", {\n\t\t\t\ttext: this._i18nBundle.getText(\"resetButton\"),\n\t\t\t\tpress: this.onResetImportApps.bind(this),\n\t\t\t\tariaLabelledBy: [`${this.getId()}--idClassicImportText`]\n\t\t\t}).addStyleClass(\"resetButtonPadding\");\n\t\t\taddFESRSemanticStepName(resetImportAppsNow, FESR_EVENTS.PRESS, \"resetImportApps\");\n\t\t\tclassicImportTab.addContent(classicText);\n\t\t\tclassicImportTab.addContent(resetImportAppsNow);\n\n\t\t\tthis.oImportExportTab.addItem(exportTab);\n\t\t\tthis.oImportExportTab.addItem(importTab);\n\t\t\tthis.oImportExportTab.addItem(classicImportTab);\n\t\t\tthis._importExportPanel.addContent(this.oImportExportTab);\n\t\t\tthis._importExportPanel.addContent(this.setExportSectionList());\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @returns {List} export section list\n\t */\n\tprivate setExportSectionList(): List {\n\t\tconst exportSectionsList = new List(`${this.getId()}--exportSectionsList`, {\n\t\t\twidth: \"calc(100% - 2rem)\",\n\t\t\tgrowingThreshold: 50,\n\t\t\tincludeItemInSelection: true,\n\t\t\tvisible: \"{= ${advsettings>/selectedTab} === 'export'}\"\n\t\t}).addStyleClass(\"sapUiSmallMarginBegin\");\n\t\tconst headerToolbar = new Toolbar(`${this.getId()}--exportSectionsListToolbar`, {\n\t\t\tcontent: [\n\t\t\t\tnew Title(this.getId() + \"--idExportSectionsListHeaderText\", {\n\t\t\t\t\ttext: this._i18nBundle.getText(\"sectionExportListHeader\")\n\t\t\t\t}).addStyleClass(\"sectionTitle\")\n\t\t\t]\n\t\t});\n\t\texportSectionsList.setHeaderToolbar(headerToolbar);\n\t\t//set model for the list and bind items to path advsettings>/export/sections\n\t\texportSectionsList.setModel(this.oControlModel, \"advsettings\");\n\n\t\texportSectionsList.bindItems({\n\t\t\tpath: \"advsettings>/export/sections\",\n\t\t\ttemplate: new CustomListItem(`${this.getId()}--exportCustomListItem`, {\n\t\t\t\tvisible: {\n\t\t\t\t\tpath: \"advsettings>panelClass\",\n\t\t\t\t\tformatter: this._isPanelAvailable.bind(this)\n\t\t\t\t},\n\t\t\t\taccDescription: {\n\t\t\t\t\tpath: \"advsettings>title\",\n\t\t\t\t\tformatter: this._formatAccDescription.bind(this)\n\t\t\t\t},\n\t\t\t\tcontent: [\n\t\t\t\t\tnew HBox(`${this.getId()}--exportContentBox`, {\n\t\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\tnew CheckBox(`${this.getId()}--exportListItemCheck`, {\n\t\t\t\t\t\t\t\tselect: this.onSectionsSelectionChange.bind(this, false),\n\t\t\t\t\t\t\t\tselected: \"{advsettings>selected}\",\n\t\t\t\t\t\t\t\tenabled: \"{advsettings>enabled}\"\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew Text(`${this.getId()}--exportListItemText`, { text: \"{advsettings>title}\" })\n\t\t\t\t\t\t],\n\t\t\t\t\t\twidth: \"100%\"\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t})\n\t\t});\n\t\tthis.oExportList = exportSectionsList;\n\t\treturn exportSectionsList;\n\t}\n\n\t/**\n\t * Returns the accessibility description for a given title.\n\t *\n\t * @param title The title of the list item.\n\t * @returns The formatted accessibility description string.\n\t */\n\tprivate _formatAccDescription(title: string): string {\n\t\tconst instructionText = this._i18nBundle.getText(\"checkboxInstructionText\");\n\t\treturn `${title}. ${instructionText}`;\n\t}\n\n\tprivate _isPanelAvailable(panelClassName: string): boolean {\n\t\tconst panelMappings: Record<string, { containerName: string; panelName: string }> = {\n\t\t\t[FavAppPanelName]: { containerName: AppsContainerlName, panelName: FavAppPanelName },\n\t\t\t[PagePanelName]: { containerName: NewsAndPagesContainerName, panelName: PagePanelName },\n\t\t\t[TilesPanelName]: { containerName: InsightsContainerName, panelName: TilesPanelName },\n\t\t\t[CardsPanelName]: { containerName: InsightsContainerName, panelName: CardsPanelName }\n\t\t};\n\n\t\tconst mapping = panelMappings[panelClassName];\n\t\tif (!mapping) return false;\n\t\tconst layout = this._getPanel();\n\t\treturn checkPanelExists(layout, mapping.containerName, mapping.panelName);\n\t}\n\n\t/**\n\t *\n\t * @returns {List} import section list\n\t */\n\tprivate setImportSectionList(): List {\n\t\tconst importSectionsList = new List(this.getId() + \"--idImportSectionsList\", {\n\t\t\twidth: \"calc(100% - 2rem)\",\n\t\t\tgrowingThreshold: 50,\n\t\t\tincludeItemInSelection: true,\n\t\t\tvisible:\n\t\t\t\t\"{= ${advsettings>/selectedTab} === 'import' && (${advsettings>/import/sections/length} > 0 || ${advsettings>/showNoImport})}\"\n\t\t}).addStyleClass(\"sapUiSmallMarginBegin\");\n\t\tconst headerToolbar = new Toolbar(this.getId() + \"--idImportSectionsListToolbar\", {\n\t\t\tcontent: [\n\t\t\t\tnew Title(`${this.getId()}--importSectionsListHeaderText`, {\n\t\t\t\t\ttext: this._i18nBundle.getText(\"sectionImportListHeader\")\n\t\t\t\t}).addStyleClass(\"sectionTitle\")\n\t\t\t]\n\t\t});\n\t\timportSectionsList.setHeaderToolbar(headerToolbar);\n\t\t//set model for the list and bind items to path advsettings>/import/sections\n\t\timportSectionsList.setModel(this.oControlModel, \"advsettings\");\n\t\timportSectionsList.bindItems({\n\t\t\tpath: \"advsettings>/import/sections\",\n\t\t\ttemplate: new CustomListItem(`${this.getId()}--importCustomListItem`, {\n\t\t\t\taccDescription: {\n\t\t\t\t\tpath: \"advsettings>title\",\n\t\t\t\t\tformatter: this._formatAccDescription.bind(this)\n\t\t\t\t},\n\t\t\t\tcontent: [\n\t\t\t\t\tnew HBox(`${this.getId()}--importListCheckBox`, {\n\t\t\t\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\tnew HBox(`${this.getId()}--importListItemCheckHBox`, {\n\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\tnew CheckBox(`${this.getId()}--importListItemCheck`, {\n\t\t\t\t\t\t\t\t\t\tselect: this.onSectionsSelectionChange.bind(this, true),\n\t\t\t\t\t\t\t\t\t\tselected: \"{advsettings>selected}\",\n\t\t\t\t\t\t\t\t\t\tenabled: \"{advsettings>enabled}\"\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tnew Text(`${this.getId()}--importListItemText`, { text: \"{advsettings>title}\" }).addStyleClass(\n\t\t\t\t\t\t\t\t\t\t\"sapUiTinyMarginTop\"\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew HBox(`${this.getId()}--importStatusHBox`, {\n\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\tnew ObjectStatus(`${this.getId()}--importItemStatus`, {\n\t\t\t\t\t\t\t\t\t\ticon: \"{= ${advsettings>status} === 'Success' ? 'sap-icon://status-positive' : 'sap-icon://status-negative' }\",\n\t\t\t\t\t\t\t\t\t\tstate: \"{advsettings>status}\",\n\t\t\t\t\t\t\t\t\t\tvisible: \"{= ${advsettings>status} !== 'None'}\"\n\t\t\t\t\t\t\t\t\t}).addStyleClass(\"sapUiSmallMarginEnd sapUiTinyMarginTop\")\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t],\n\t\t\t\t\t\twidth: \"100%\"\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t})\n\t\t});\n\n\t\treturn importSectionsList;\n\t}\n\n\t/**\n\t * Selection change event handler for export and import sections\n\t * @param isImport boolean value to check if import or export tab is selected\n\t */\n\tprivate onSectionsSelectionChange(isImport: boolean): void {\n\t\tconst allSections = isImport ? this.oImportList.getItems() : this.oExportList.getItems();\n\t\tlet isSelected = false;\n\t\tlet content, innerCheckbox;\n\t\tconst isSectionSelected = allSections.some(function (oSection) {\n\t\t\tif (!isImport) {\n\t\t\t\tcontent = oSection.getAggregation(\"content\") as Control[];\n\t\t\t\tinnerCheckbox = (content[0] as HBox).getItems()[0] as CheckBox;\n\t\t\t\tisSelected = innerCheckbox.getSelected();\n\t\t\t} else {\n\t\t\t\tcontent = oSection.getAggregation(\"content\") as Control[];\n\t\t\t\tconst innerHbox = (content[0] as HBox).getItems()[0] as HBox;\n\t\t\t\tinnerCheckbox = innerHbox.getItems()[0] as CheckBox;\n\t\t\t\tisSelected = innerCheckbox.getSelected();\n\t\t\t}\n\t\t\treturn isSelected;\n\t\t});\n\t\tthis.oControlModel.setProperty((isImport ? \"/import\" : \"/export\") + \"/sectionsSelected\", isSectionSelected);\n\t\tthis.enableDisableActions((isImport ? \"import\" : \"export\") as ImportExportType);\n\t}\n\n\t/**\n\t * Handler for import button press\n\t *\n\t */\n\tprivate async onImportPress(): Promise<void> {\n\t\tthis.attachEvent(\"sectionsImported\", () => {\n\t\t\tthis.oDetailPage.setBusy(false);\n\t\t\tthis.oControlModel.setProperty(\"/import/sectionsSelected\", false);\n\t\t});\n\t\tthis.oImportBtn.setEnabled(false);\n\t\tthis.oDetailPage.setBusy(true);\n\t\tthis.handleUserPersonalizationError(ImportExportType.IMPORT, false, \"\", \"\");\n\t\tconst oExportData = this.oUserPersonalization.import.data;\n\t\ttry {\n\t\t\tconst aSelectedSections = await this.importSections(oExportData);\n\t\t\tconst bShowError: boolean = aSelectedSections.some((oSection) => {\n\t\t\t\treturn oSection.status === ValueState.Error;\n\t\t\t});\n\t\t\tif (bShowError) {\n\t\t\t\tthis.handleUserPersonalizationError(\n\t\t\t\t\tImportExportType.IMPORT,\n\t\t\t\t\ttrue,\n\t\t\t\t\tString(this._i18nBundle.getText(\"userPersonalizationImportError\")),\n\t\t\t\t\t\"Warning\"\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.oControlModel.setProperty(\"/import/sections\", aSelectedSections);\n\t\t} catch (oErr: unknown) {\n\t\t\tLog.error(\"importpress\", String(oErr));\n\t\t\tthis.handleUserPersonalizationError(\n\t\t\t\tImportExportType.IMPORT,\n\t\t\t\ttrue,\n\t\t\t\tString(this._i18nBundle.getText(\"userPersonalizationImportError\")),\n\t\t\t\t\"Error\"\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Invokes import of apps,tiles,pages and cards data\n\t * @param oImportData import data\n\t * @returns Promise<IExportSections[]>\n\t */\n\tprivate importSections(oImportData?: IExportData | IExportImportFile): Promise<IExportSections[] | []> {\n\t\tconst sectionImportChain: (() => Promise<void>)[] = [];\n\t\tconst aPromise: Promise<void>[] = [];\n\t\tconst oSelectedSections = this.oControlModel.getProperty(\"/import/sections\") as IExportSections[];\n\n\t\tsectionImportChain.push(() => this.importApps(oImportData));\n\t\tsectionImportChain.push(() => this.importTiles(oImportData));\n\t\tsectionImportChain.push(() => this.importFavPages(oImportData));\n\n\t\t// Execute apps, tiles, and pages sequentially\n\t\taPromise.push(\n\t\t\tsectionImportChain.reduce((chain, current) => {\n\t\t\t\treturn chain.then(() => current());\n\t\t\t}, Promise.resolve())\n\t\t);\n\n\t\taPromise.push(this.importCards(oImportData));\n\n\t\treturn Promise.all(aPromise)\n\t\t\t.then(() => {\n\t\t\t\treturn oSelectedSections;\n\t\t\t})\n\t\t\t.catch((oError: Error) => {\n\t\t\t\tLog.error(\"import failed\", String(oError));\n\t\t\t\treturn [];\n\t\t\t});\n\t}\n\n\tprivate importApps(oImportData?: IExportData | IExportImportFile): Promise<void> {\n\t\treturn new Promise<void>((resolve) => {\n\t\t\tconst oSelectedSections = this.oControlModel.getProperty(\"/import/sections\") as IExportSections[];\n\t\t\tif (\n\t\t\t\toImportData?.apps &&\n\t\t\t\toImportData?.apps.length > 0 &&\n\t\t\t\tthis.isSectionSelected(oSelectedSections, String(this._i18nBundle.getText(\"favApps\")))\n\t\t\t) {\n\t\t\t\tthis.oSectionsImported[String(this._i18nBundle.getText(\"favApps\"))] = false;\n\t\t\t\tthis.oEventBus.publish(\"importChannel\", \"appsImport\", { apps: oImportData.apps, groupInfo: oImportData.groupInfo });\n\t\t\t\tresolve();\n\t\t\t} else {\n\t\t\t\t// if no apps / apps selected then resolve the promise and mark the section as imported\n\t\t\t\tthis.oSectionsImported[String(this._i18nBundle.getText(\"favApps\"))] = true;\n\t\t\t\tthis.updateImportStatus(\"favApps\");\n\t\t\t\tresolve(); // Resolve the promise if condition doesn't meet\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate importTiles(oImportData?: IExportData | IExportImportFile): Promise<void> {\n\t\treturn new Promise<void>((resolve) => {\n\t\t\tconst oSelectedSections = this.oControlModel.getProperty(\"/import/sections\") as IExportSections[];\n\t\t\tif (\n\t\t\t\toImportData?.tiles &&\n\t\t\t\toImportData.tiles.length > 0 &&\n\t\t\t\tthis.isSectionSelected(oSelectedSections, String(this._i18nBundle.getText(\"insightsTiles\")))\n\t\t\t) {\n\t\t\t\tthis.oSectionsImported[String(this._i18nBundle.getText(\"insightsTiles\"))] = false;\n\t\t\t\tthis.oEventBus.publish(\"importChannel\", \"tilesImport\", oImportData.tiles);\n\t\t\t\tresolve();\n\t\t\t} else {\n\t\t\t\t// if no tiles / tiles section not selected then resolve the promise and mark the section as imported\n\t\t\t\tthis.oSectionsImported[String(this._i18nBundle.getText(\"insightsTiles\"))] = true;\n\t\t\t\tthis.updateImportStatus(\"insightsTiles\");\n\t\t\t\tresolve(); // Resolve the promise if condition doesn't meet\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate importFavPages(oImportData?: IExportData | IExportImportFile): Promise<void> {\n\t\treturn new Promise<void>((resolve) => {\n\t\t\tconst oSelectedSections = this.oControlModel.getProperty(\"/import/sections\") as IExportSections[];\n\t\t\tif (\n\t\t\t\toImportData?.favouritePages &&\n\t\t\t\toImportData.favouritePages.length > 0 &&\n\t\t\t\tthis.isSectionSelected(oSelectedSections, String(this._i18nBundle.getText(\"pages\")))\n\t\t\t) {\n\t\t\t\tthis.oSectionsImported[String(this._i18nBundle.getText(\"pages\"))] = false;\n\t\t\t\tthis.oEventBus.publish(\"importChannel\", \"favPagesImport\", oImportData.favouritePages);\n\t\t\t\tresolve();\n\t\t\t} else {\n\t\t\t\t// if no tiles / tiles section not selected then resolve the promise and mark the section as imported\n\t\t\t\tthis.oSectionsImported[String(this._i18nBundle.getText(\"pages\"))] = true;\n\t\t\t\tthis.updateImportStatus(\"pages\");\n\t\t\t\tresolve(); // Resolve the promise if condition doesn't meet\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate importCards(oImportData?: IExportData | IExportImportFile): Promise<void> {\n\t\treturn new Promise<void>((resolve) => {\n\t\t\tconst oSelectedSections = this.oControlModel.getProperty(\"/import/sections\") as IExportSections[];\n\t\t\tif (\n\t\t\t\toImportData?.cards &&\n\t\t\t\toImportData.cards.length > 0 &&\n\t\t\t\tthis.isSectionSelected(oSelectedSections, String(this._i18nBundle.getText(\"insightsCards\")))\n\t\t\t) {\n\t\t\t\tthis.oSectionsImported[String(this._i18nBundle.getText(\"insightsCards\"))] = false;\n\t\t\t\tthis.oEventBus.publish(\"importChannel\", \"cardsImport\", oImportData.cards);\n\t\t\t\tresolve();\n\t\t\t} else {\n\t\t\t\t// if no tiles / tiles section not selected then resolve the promise and mark the section as imported\n\t\t\t\tthis.oSectionsImported[String(this._i18nBundle.getText(\"insightsCards\"))] = true;\n\t\t\t\tthis.updateImportStatus(\"insightsCards\");\n\t\t\t\tresolve(); // Resolve the promise if condition doesn't meet\n\t\t\t}\n\t\t});\n\t}\n\t/**\n\t *  Updates status of sections being imported\n\t *\t@param {string} sSectionTitle - section title\n\t * \t@param {boolean} errorState - error state\n\t * \t@returns {void}\n\t */\n\tprivate updateImportStatus(sSectionTitle: string, errorState?: boolean): void {\n\t\tconst sSectionId = String(this._i18nBundle.getText(sSectionTitle));\n\t\tconst oSelectedSections = this.oControlModel.getProperty(\"/import/sections\") as IExportSections[];\n\t\tconst oSection = oSelectedSections.find(function (oSec) {\n\t\t\treturn oSec.title === sSectionId;\n\t\t});\n\t\tif (oSection) {\n\t\t\tif (errorState !== undefined) {\n\t\t\t\toSection.status = errorState ? ValueState.Error : ValueState.Success;\n\t\t\t} else {\n\t\t\t\toSection.status = ValueState.None;\n\t\t\t}\n\t\t\t//if a section's status has become success then disable that particular section\n\t\t\tif (oSection.status === ValueState.Success) {\n\t\t\t\toSection.enabled = false;\n\t\t\t}\n\t\t}\n\t\tthis.oSectionsImported[sSectionId] = true;\n\t\tconst sectionTitles = Object.keys(this.oSectionsImported);\n\t\t// if every section has been imported successfully then fire sectionsimported\n\t\tconst imported = sectionTitles.every((sTitle) => {\n\t\t\treturn this.oSectionsImported[sTitle];\n\t\t});\n\t\tif (imported) {\n\t\t\tthis.fireEvent(\"sectionsImported\");\n\t\t}\n\t}\n\n\t/**\n\t *  Resets the import model values\n\t *  @param {boolean} onOpen - value to show if the reset call is happening while opening the dialog for the first time\n\t * \t@private\n\t */\n\tpublic resetImportModel(onOpen?: boolean): void {\n\t\tthis.oControlModel.setProperty(\"/import/sections\", []);\n\t\tthis.oControlModel.setProperty(\"/import/sectionsSelected\", false);\n\t\tthis.oControlModel.setProperty(\"/import/error\", false);\n\t\t// if called on settingsdialog open , reset value of selectedtab and fileUploader value\n\t\tif (onOpen) {\n\t\t\tthis.oControlModel.setProperty(\"/selectedTab\", \"export\");\n\t\t\t(Element.getElementById(this.getId() + \"--idImportFileUploader\") as FileUploader)?.setValue(\"\");\n\t\t}\n\t}\n\n\t/**\n\t * \tFind visualizations that are not already present in the favsections\n\t * @param aImportedSections\n\t * @returns {Promise<ISection[] | []>} aImportedSections\n\t */\n\tprivate async getDeltaSectionViz(aImportedSections: ISection[]): Promise<ISection[] | []> {\n\t\ttry {\n\t\t\tconst favSections: ISection[] = await this.oAppManagerInstance._getSections(true);\n\n\t\t\taImportedSections.forEach((oImportedSection) => {\n\t\t\t\tlet oSection: ISection | undefined;\n\t\t\t\tif (oImportedSection.default) {\n\t\t\t\t\toSection = favSections.find((oSec) => oSec.default);\n\t\t\t\t} else {\n\t\t\t\t\toSection = favSections.find((oSec) => oSec.id === oImportedSection.id);\n\t\t\t\t}\n\t\t\t\tif (oSection) {\n\t\t\t\t\t// find visualizations that are not already present in the favsections\n\t\t\t\t\tconst aDelta = oImportedSection.visualizations?.filter((oImportViz) => {\n\t\t\t\t\t\treturn oSection.visualizations?.every((oViz) =>\n\t\t\t\t\t\t\toViz.isBookmark ? oViz.targetURL !== oImportViz.targetURL : oViz.vizId !== oImportViz.vizId\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\toImportedSection.visualizations = aDelta;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn aImportedSections;\n\t\t} catch (error) {\n\t\t\tLog.error(\"Error occurred while fetching delta section visualizations:\" + String(error));\n\t\t\treturn []; // Return an empty array in case of error\n\t\t}\n\t}\n\n\tprivate getDeltaAuthSectionViz(aImportedSections: ISection[]): Promise<[] | ISection[]> {\n\t\t// Get delta visualization\n\t\tif (aImportedSections && aImportedSections.length) {\n\t\t\treturn this.getDeltaSectionViz(aImportedSections)\n\t\t\t\t.then((aDeltaSections: ISection[]) => {\n\t\t\t\t\t// Filter authorized section visualizations\n\t\t\t\t\treturn this.filterAuthSectionViz(aDeltaSections);\n\t\t\t\t})\n\t\t\t\t.catch((oError) => {\n\t\t\t\t\tLog.error(String(oError));\n\t\t\t\t\treturn [];\n\t\t\t\t});\n\t\t}\n\t\treturn Promise.resolve([]); // Return a promise resolving to void\n\t}\n\n\tprivate async filterAuthSectionViz(aSections: ISection[]): Promise<ISection[]> {\n\t\tconst _getCatalogApps = function () {\n\t\t\treturn Container.getServiceAsync<SearchableContent>(\"SearchableContent\").then(function (SearchableContent) {\n\t\t\t\treturn SearchableContent.getApps({ includeAppsWithoutVisualizations: false });\n\t\t\t});\n\t\t};\n\n\t\tconst _filterAuthViz = function (aAppCatalog: AppData[], aViz: IVisualization[] | undefined) {\n\t\t\tconst aSectionViz: IVisualization[] | undefined = [];\n\t\t\taViz?.forEach(function (oViz) {\n\t\t\t\tfor (let appCatalog of aAppCatalog) {\n\t\t\t\t\tconst oAppCatalog = appCatalog;\n\t\t\t\t\tconst oSectionViz = oAppCatalog.visualizations.find(function (oCatalogViz: IVisualization) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\toCatalogViz.vizId === oViz.vizId ||\n\t\t\t\t\t\t\t(oViz.isBookmark &&\n\t\t\t\t\t\t\t\toCatalogViz.target &&\n\t\t\t\t\t\t\t\toViz.target?.action === oCatalogViz.target.action &&\n\t\t\t\t\t\t\t\toViz.target?.semanticObject === oCatalogViz.target.semanticObject)\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\tif (oSectionViz) {\n\t\t\t\t\t\toSectionViz.displayFormatHint =\n\t\t\t\t\t\t\toViz.displayFormatHint !== \"standard\" ? String(oViz.displayFormatHint) : String(oSectionViz.displayFormatHint);\n\t\t\t\t\t\taSectionViz.push(oViz.isBookmark ? oViz : oSectionViz);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn aSectionViz;\n\t\t};\n\n\t\treturn await _getCatalogApps().then(function (aAppCatalog) {\n\t\t\treturn aSections.map(function (oSection) {\n\t\t\t\toSection.visualizations = _filterAuthViz(aAppCatalog, oSection.visualizations);\n\t\t\t\treturn oSection;\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Filter authorized favorite pages\n\t *\n\t * @param {Array} aFavPages - array of favorite pages\n\t * @returns {Promise} resolves to an array of authorized pages\n\t */\n\tprivate async filterAuthFavPages(aFavPages: IPage[]): Promise<IPage[] | []> {\n\t\tif (aFavPages && aFavPages.length > 0) {\n\t\t\treturn await this.oPageManagerInstance.fetchAllAvailablePages().then(function (aAvailablePages) {\n\t\t\t\treturn aFavPages.filter(function (oimportedPage) {\n\t\t\t\t\treturn aAvailablePages.filter(function (oAvailabePage) {\n\t\t\t\t\t\treturn oAvailabePage.pageId === oimportedPage.pageId && oAvailabePage.spaceId === oimportedPage.spaceId;\n\t\t\t\t\t}).length;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\t/**\n\t * Filter authorized cards\n\t *\n\t * @param {Array} aCards - array of cards\n\t * @returns {Promise} resolves to an array of authorized cards\n\t */\n\tprivate async filterAuthCards(aCards: ICardManifest[] | void): Promise<ICardManifest[] | undefined> {\n\t\tconst _getParentApp = function (aAvailableApps: IAppInbounds[], oCard: ICardManifest) {\n\t\t\treturn aAvailableApps.find(function (oApp) {\n\t\t\t\treturn (\n\t\t\t\t\toApp.resolutionResult &&\n\t\t\t\t\toApp.resolutionResult.applicationDependencies &&\n\t\t\t\t\toCard[\"sap.insights\"] &&\n\t\t\t\t\toApp.resolutionResult.applicationDependencies.name === oCard[\"sap.insights\"].parentAppId\n\t\t\t\t);\n\t\t\t});\n\t\t};\n\n\t\tconst _isNavigationSupported = function (oService: Navigation, oParentApp: IAppInbounds | undefined) {\n\t\t\tif (oParentApp) {\n\t\t\t\treturn oService\n\t\t\t\t\t.isNavigationSupported([\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\tsemanticObject: oParentApp.semanticObject,\n\t\t\t\t\t\t\t\taction: oParentApp.action\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t])\n\t\t\t\t\t.then(function (aResponses) {\n\t\t\t\t\t\treturn aResponses[0].supported || false;\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn Promise.resolve(false);\n\t\t};\n\n\t\tif (aCards && aCards.length > 0) {\n\t\t\treturn await Promise.all([\n\t\t\t\tContainer.getServiceAsync<ClientSideTargetResolution>(\"ClientSideTargetResolution\"),\n\t\t\t\tContainer.getServiceAsync<Navigation>(\"Navigation\")\n\t\t\t]).then(function (aServices: [ClientSideTargetResolution, Navigation]) {\n\t\t\t\tconst clientSideTargetResolution = aServices[0];\n\t\t\t\tconst Navigation = aServices[1];\n\t\t\t\tconst aAvailableApps = clientSideTargetResolution._oAdapter._aInbounds || [];\n\n\t\t\t\treturn aCards.reduce<Promise<ICardManifest[]>>(async (promise: Promise<ICardManifest[]>, oCard: ICardManifest) => {\n\t\t\t\t\tconst aAuthCards: ICardManifest[] = await promise;\n\t\t\t\t\tconst oParentApp = _getParentApp(aAvailableApps, oCard);\n\t\t\t\t\tconst bIsNavigationSupported = await _isNavigationSupported(Navigation, oParentApp);\n\t\t\t\t\tif (bIsNavigationSupported) {\n\t\t\t\t\t\taAuthCards.push(oCard);\n\t\t\t\t\t}\n\t\t\t\t\treturn aAuthCards;\n\t\t\t\t}, Promise.resolve([]));\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\t/**\n\t * Handles change event for fileuploader on import file\n\t *\n\t * @returns {Promise} resolves to available import sections being shown\n\t */\n\tprivate onFileImport(oEvent: FileUploader$ChangeEvent): Promise<void> {\n\t\tthis.handleUserPersonalizationError(ImportExportType.IMPORT, false, \"\", \"\");\n\t\tthis.resetImportModel();\n\t\tthis.oDetailPage.setBusy(true);\n\n\t\tconst files = oEvent.getParameter(\"files\");\n\t\tconst oFile = files && (files[0] as File);\n\n\t\treturn this.readFileContent(oFile)\n\t\t\t.then((oFileContent) => {\n\t\t\t\t// btoa doesn't support the characters outside latin-1 range, so first encode to utf-8\n\t\t\t\tconst oEncodedFileContent = window.btoa(\n\t\t\t\t\tencodeURIComponent(oFileContent).replace(/%([0-9A-F]{2})/g, function (match, p1: string) {\n\t\t\t\t\t\treturn String.fromCharCode(parseInt(p1, 16)); // Convert p1 to a number using parseInt //String.fromCharCode(\"0x\" + p1);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\treturn HttpHelper.Post(EXPORT_API, { fileContent: oEncodedFileContent }).then((oResponse: unknown) => {\n\t\t\t\t\tif (oResponse && (oResponse as { error: string }).error) {\n\t\t\t\t\t\tthrow new Error((oResponse as { error: string }).error);\n\t\t\t\t\t}\n\t\t\t\t\tif (oResponse && (oResponse as { value: string[] }).value && (oResponse as { value: string[] }).value.length) {\n\t\t\t\t\t\tconst oImportDataString: string | undefined = (oResponse as ApiResponse).value[0].fileContent;\n\n\t\t\t\t\t\t// Parse the stringified JSON into the defined type\n\t\t\t\t\t\tconst oImportData = JSON.parse(oImportDataString) as IExportImportFile;\n\t\t\t\t\t\tif (oImportData.host === window.location.host) {\n\t\t\t\t\t\t\tconst aImportedSections = (oImportData.sections as ISection[]) || ([] as ISection[]);\n\t\t\t\t\t\t\taImportedSections.push({\n\t\t\t\t\t\t\t\tid: MYINSIGHT_SECTION_ID,\n\t\t\t\t\t\t\t\tvisualizations: (oImportData.tiles as IVisualization[]) || []\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t//filter authorized data\n\t\t\t\t\t\t\treturn this.filterAuthorizedImportData(aImportedSections, oImportData);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.handleUserPersonalizationError(\n\t\t\t\t\t\t\t\tImportExportType.IMPORT,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\tString(this._i18nBundle.getText(\"importSourceErrorMessage\")),\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((oError) => {\n\t\t\t\tLog.error(String(oError));\n\t\t\t\tthis.handleUserPersonalizationError(ImportExportType.IMPORT, true, \"\", \"\");\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tthis.oDetailPage.setBusy(false);\n\t\t\t\tthis.enableDisableActions(ImportExportType.IMPORT);\n\t\t\t});\n\t}\n\n\tprivate filterAuthorizedImportData(aImportedSections: ISection[], oImportData: IExportImportFile): Promise<void> {\n\t\treturn Promise.all([\n\t\t\tthis.getDeltaAuthSectionViz(aImportedSections),\n\t\t\tthis.filterAuthFavPages(oImportData.favouritePages),\n\t\t\tthis.filterAuthCards(oImportData.cards),\n\t\t\tthis.getInsightCards() // check : send only cards count here as all cards are not required\n\t\t]).then(async (aResponse) => {\n\t\t\tconst aAuthSections = aResponse[0] as ISection[];\n\t\t\tconst aAuthFavPages = aResponse[1];\n\t\t\tconst aAuthCards = aResponse[2];\n\t\t\tconst iInsightCardsCount = aResponse[3].getProperty(\"/cardCount\") as number;\n\t\t\toImportData.apps = aAuthSections.filter(function (oSection) {\n\t\t\t\treturn oSection.id !== MYINSIGHT_SECTION_ID;\n\t\t\t});\n\t\t\toImportData.tiles =\n\t\t\t\t(\n\t\t\t\t\taAuthSections.find(function (oSection) {\n\t\t\t\t\t\treturn oSection.id === MYINSIGHT_SECTION_ID;\n\t\t\t\t\t}) || {}\n\t\t\t\t).visualizations || [];\n\t\t\toImportData.favouritePages = aAuthFavPages;\n\t\t\toImportData.cards = aAuthCards || [];\n\t\t\tconst iTotalCardCount = iInsightCardsCount + Number(aAuthCards?.length);\n\t\t\tif (iTotalCardCount > 99) {\n\t\t\t\tthis.handleUserPersonalizationError(\n\t\t\t\t\tImportExportType.IMPORT,\n\t\t\t\t\ttrue,\n\t\t\t\t\tString(this._i18nBundle.getText(\"importCardCountErrorMessage\")),\n\t\t\t\t\t\"\"\n\t\t\t\t);\n\t\t\t}\n\t\t\tlet aSections = await this.getImportedSections(oImportData, ImportExportType.IMPORT, iInsightCardsCount);\n\t\t\taSections = aSections.map(function (oSection) {\n\t\t\t\toSection.status = ValueState.None;\n\t\t\t\treturn oSection;\n\t\t\t});\n\t\t\tthis.oUserPersonalization.import.data = oImportData;\n\t\t\tthis.oControlModel.setProperty(\"/import/sections\", aSections);\n\t\t\tthis.oControlModel.setProperty(\"/import/sectionsSelected\", this.getSelectedSections(aSections).length > 0);\n\t\t\tthis.oControlModel.setProperty(\"/showNoImport\", aSections.length === 0);\n\t\t});\n\t}\n\n\tprivate readFileContent(oFile: File | undefined): Promise<string> {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tif (oFile && window.FileReader) {\n\t\t\t\tconst reader = new FileReader();\n\t\t\t\treader.onload = function (event: ProgressEvent<FileReader>) {\n\t\t\t\t\tconst target = event.target as FileReader;\n\t\t\t\t\tresolve(target?.result as string);\n\t\t\t\t};\n\t\t\t\t// Convert oFile to Blob\n\t\t\t\tconst blob = oFile as unknown as Blob;\n\t\t\t\treader.readAsText(blob);\n\t\t\t} else {\n\t\t\t\treject(new Error(\"Error\"));\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async _getPersonalizationData(): Promise<IPersonalizationData> {\n\t\tif (!this.oPersonalizerInstance) {\n\t\t\tthis.oPersonalizerInstance = await UShellPersonalizer.getInstance(\n\t\t\t\tPersonalisationUtils.getPersContainerId(this._getPanel()),\n\t\t\t\tPersonalisationUtils.getOwnerComponent(this._getPanel()) as Component\n\t\t\t);\n\t\t}\n\t\tthis.persData = (await this.oPersonalizerInstance.read()) || {};\n\t\treturn this.persData;\n\t}\n\n\tprivate async loadUserPersonalizationData(): Promise<void> {\n\t\tthis.oExportList.setBusy(true);\n\t\tconst persData = await this._getPersonalizationData();\n\n\t\t// load all sections, insight apps and cards\n\t\tconst [favSections, insightModel] = await Promise.all([this.oAppManagerInstance._getSections(true), this.getInsightCards()]);\n\n\t\tconst aSections = favSections,\n\t\t\tfavApps = aSections.filter((oSection) => {\n\t\t\t\treturn oSection.id !== MYINSIGHT_SECTION_ID && oSection.visualizations?.length;\n\t\t\t});\n\n\t\tconst insightTiles =\n\t\t\taSections.find((oSection) => {\n\t\t\t\treturn oSection.id === MYINSIGHT_SECTION_ID;\n\t\t\t})?.visualizations || [];\n\n\t\tconst insightCards: ICardManifest[] =\n\t\t\tinsightModel && insightModel.getProperty(\"/visibleCards\")\n\t\t\t\t? (insightModel.getProperty(\"/visibleCards\") as ICard[]).map((oCard: ICard) => {\n\t\t\t\t\t\treturn oCard.descriptorContent;\n\t\t\t\t\t})\n\t\t\t\t: [];\n\t\tconst oExportData = {\n\t\t\tapps: favApps,\n\t\t\ttiles: insightTiles,\n\t\t\tfavouritePages: persData.favouritePages,\n\t\t\tcards: insightCards,\n\t\t\tpersonalization: persData\n\t\t} as IExportData;\n\t\tconst aExportSections = await this.getImportedSections(oExportData, ImportExportType.EXPORT, 0);\n\t\tthis.oUserPersonalization.export.data = oExportData;\n\t\tthis.oUserPersonalization.export.sections = aExportSections;\n\t\tthis.oUserPersonalization.export.sectionsSelected = this.getSelectedSections(aExportSections).length > 0;\n\t\tthis.oControlModel.refresh();\n\t\tthis.oExportList.setBusy(false);\n\t}\n\n\t/**\n\t * Returns selected sections out of provided sections\n\t *\n\t * @param {Array} aSections - array of sections to show in import/export\n\t * @returns {Array} array of selected sections\n\t */\n\tgetSelectedSections(aSections: IExportSections[]): IExportSections[] {\n\t\treturn (\n\t\t\taSections.filter(function (oSection) {\n\t\t\t\treturn oSection.selected && oSection.enabled;\n\t\t\t}) || []\n\t\t);\n\t}\n\n\t/**\n\t * Returns if section is selected\n\t *\n\t * @param {Array} oSections - import/export sections\n\t * @param {String} sSectionId - import/export section id\n\t * @returns {boolean} returns true if section is selected\n\t */\n\tisSectionSelected(sections: IExportSections[], sectionId: string): boolean {\n\t\tconst section = sections.find(function (sec) {\n\t\t\treturn sec.title === sectionId;\n\t\t});\n\t\treturn !!(section && section.selected && section.enabled);\n\t}\n\n\t/**\n\t * Returns import/export sections\n\t *\n\t * @param {object} oData - export/import data\n\t * @param {ImportExportType} sType - export/import type\n\t * @param {number} iInsightCardsCount - cards count\n\t * @returns {Array} array of import/export sections\n\t */\n\tprivate async getImportedSections(\n\t\toData: IExportData | IExportImportFile,\n\t\tsType: ImportExportType,\n\t\tiInsightCardsCount: number\n\t): Promise<IExportSections[]> {\n\t\tconst aFavPages =\n\t\t\t\t(sType === ImportExportType.IMPORT ? await this.getDeltaFavPages(oData.favouritePages) : oData.favouritePages) || [],\n\t\t\tisAppViz =\n\t\t\t\toData.apps &&\n\t\t\t\toData.apps.some(function (oSections) {\n\t\t\t\t\treturn oSections && oSections.visualizations && oSections.visualizations.length > 0;\n\t\t\t\t});\n\n\t\treturn [\n\t\t\t{\n\t\t\t\ttitle: this._i18nBundle.getText(\"favApps\") as string,\n\t\t\t\tselected: isAppViz,\n\t\t\t\tenabled: isAppViz,\n\t\t\t\tpanelClass: FavAppPanelName\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: this._i18nBundle.getText(\"pages\") as string,\n\t\t\t\tselected: aFavPages?.length > 0,\n\t\t\t\tenabled: aFavPages?.length > 0,\n\t\t\t\tpanelClass: PagePanelName\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: this._i18nBundle.getText(\"insightsTiles\") as string,\n\t\t\t\tselected: oData.tiles && oData.tiles.length > 0,\n\t\t\t\tenabled: oData.tiles && oData.tiles.length > 0,\n\t\t\t\tpanelClass: TilesPanelName\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: this._i18nBundle.getText(\"insightsCards\") as string,\n\t\t\t\tselected: oData.cards && oData.cards.length > 0 && oData.cards.length + iInsightCardsCount <= 99,\n\t\t\t\tenabled: oData.cards && oData.cards.length > 0 && oData.cards.length + iInsightCardsCount <= 99,\n\t\t\t\tpanelClass: CardsPanelName\n\t\t\t}\n\t\t];\n\t}\n\n\tprivate async getDeltaFavPages(aImportedFavPages: IPage[]): Promise<IPage[]> {\n\t\tconst persData = await this._getPersonalizationData();\n\t\tconst aFavPages = persData.favouritePages || [];\n\t\tif (aFavPages.length !== aImportedFavPages.length) {\n\t\t\treturn aImportedFavPages;\n\t\t}\n\t\treturn aImportedFavPages.filter(function (oImportedPage) {\n\t\t\treturn !aFavPages.find(function (oFavPage) {\n\t\t\t\treturn oImportedPage.pageId === oFavPage.pageId && oImportedPage.spaceId === oFavPage.spaceId;\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async getInsightCards(): Promise<JSONModel> {\n\t\ttry {\n\t\t\tthis.cardHelperInstance = await (CardHelper as ICardHelper).getServiceAsync();\n\t\t\tconst oUserVisibleCardModel = await this.cardHelperInstance._getUserAllCardModel();\n\t\t\tconst aCards = oUserVisibleCardModel.getProperty(\"/cards\") as ICard[];\n\t\t\tconst aVisibleCards = aCards.filter(function (oCard: ICard) {\n\t\t\t\treturn oCard.visibility;\n\t\t\t});\n\t\t\toUserVisibleCardModel.setProperty(\"/visibleCards\", aVisibleCards);\n\t\t\treturn oUserVisibleCardModel;\n\t\t} catch (error) {\n\t\t\t// Handle any errors\n\t\t\tconsole.error(\"Error in getInsightCards:\", error);\n\t\t\tthrow error; // Re-throw the error to be handled by the caller\n\t\t}\n\t}\n\n\t/**\n\t * Handles export button press\n\t */\n\tprivate onExportPress(): void {\n\t\tthis.handleUserPersonalizationError(ImportExportType.EXPORT, false, \"\", \"\");\n\t\tconst oExportFileName = this.oControlModel.getProperty(\"/export/fileName\") as string,\n\t\t\taExportSections = this.oControlModel.getProperty(\"/export/sections\") as IExportSections[],\n\t\t\toExportData = this.oUserPersonalization.export.data;\n\t\tconst oExportFileContent = this.getExportFileContent(oExportData, aExportSections);\n\t\tsap.ui.require([\"sap/ui/core/util/File\"], (File: File) => {\n\t\t\ttry {\n\t\t\t\tFile.save(JSON.stringify(oExportFileContent), oExportFileName, \"txt\", \"text/plain\", \"utf-8\");\n\t\t\t\tMessageToast.show(String(this._i18nBundle.getText(\"userPersonalizationExportSuccess\")));\n\t\t\t} catch (error) {\n\t\t\t\tLog.error(error instanceof Error ? error.message : String(error));\n\t\t\t\tif (error instanceof Error && error?.name !== undefined && error.name !== \"AbortError\") {\n\t\t\t\t\t// Handle the error appropriately\n\t\t\t\t\tthis.handleUserPersonalizationError(ImportExportType.EXPORT, true, \"\", \"\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getExportFileContent(exportData: IExportData | undefined, exportSections: IExportSections[]): IExportImportFile {\n\t\tconst oPersonalization = exportData?.personalization,\n\t\t\toExportFileContent = {\n\t\t\t\thost: window.location.host,\n\t\t\t\tcreatedDate: new Date(),\n\t\t\t\tsections: [] as ISectionAndVisualization[] | IVisualization[] | [],\n\t\t\t\tgroupInfo: [] as IAppPersonalization[] | IVisualization[] | [],\n\t\t\t\ttiles: [] as ISectionAndVisualization[] | IVisualization[] | [],\n\t\t\t\tcards: [] as ICardManifest[],\n\t\t\t\tfavouritePages: [] as IPage[] | []\n\t\t\t};\n\t\tif (this.isSectionSelected(exportSections, this._i18nBundle.getText(\"favApps\") as string)) {\n\t\t\toExportFileContent.sections = exportData?.apps || [];\n\t\t\toExportFileContent.groupInfo = oPersonalization?.favoriteApps || [];\n\t\t}\n\t\tif (this.isSectionSelected(exportSections, this._i18nBundle.getText(\"pages\") as string)) {\n\t\t\toExportFileContent.favouritePages = oPersonalization?.favouritePages || [];\n\t\t}\n\t\tif (this.isSectionSelected(exportSections, this._i18nBundle.getText(\"insightsTiles\") as string)) {\n\t\t\toExportFileContent.tiles = exportData?.tiles || [];\n\t\t}\n\t\tif (this.isSectionSelected(exportSections, this._i18nBundle.getText(\"insightsCards\") as string)) {\n\t\t\toExportFileContent.cards = this.filterNonSensitiveCards(exportData?.cards || []);\n\t\t}\n\t\treturn oExportFileContent;\n\t}\n\n\t/**\n\t * Filters out the sensitive cards from the import data\n\t *\n\t * @private\n\t * @param {ICardManifest[]} cards Array of card to filter out before import\n\t * @returns {ICardManifest[]} Array of filtered cards\n\t */\n\tprivate filterNonSensitiveCards(cards: ICardManifest[]): ICardManifest[] {\n\t\tconst nonSensitiveCards = [] as ICardManifest[];\n\n\t\tcards.forEach((oCard) => {\n\t\t\tif (oCard[\"sap.card\"]?.configuration?.parameters) {\n\t\t\t\tconst parameter = oCard[\"sap.card\"].configuration.parameters;\n\t\t\t\tlet sensitiveProps: string[] = [];\n\t\t\t\tsensitiveProps = sensitiveProps\n\t\t\t\t\t.concat(this.getSensitiveProps(parameter.headerState))\n\t\t\t\t\t.concat(this.getSensitiveProps(parameter.lineItemState))\n\t\t\t\t\t.concat(this.getSensitiveProps(parameter.state));\n\t\t\t\tif (sensitiveProps.length === 0) {\n\t\t\t\t\tnonSensitiveCards.push(oCard);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnonSensitiveCards.push(oCard);\n\t\t\t}\n\t\t});\n\t\tif (cards.length !== nonSensitiveCards.length) {\n\t\t\tthis.handleUserPersonalizationError(\n\t\t\t\tImportExportType.EXPORT,\n\t\t\t\ttrue,\n\t\t\t\tString(this._i18nBundle.getText(\"exportSensitiveCardsErrorMessage\")),\n\t\t\t\t\"Warning\"\n\t\t\t);\n\t\t}\n\t\treturn nonSensitiveCards;\n\t}\n\n\t/**\n\t * Finds the sensitive properties and parameters\n\t *\n\t * @private\n\t * @param {({ value: string } | undefined)} param\n\t * @returns {string[]} Array of sensitive props as strings\n\t */\n\tprivate getSensitiveProps(param: { value: string } | undefined) {\n\t\tlet paramSensitiveProps: string[] = [];\n\t\tif (param?.value) {\n\t\t\tconst paramValue = JSON.parse(param.value) as { sensitiveProps: string[]; parameters: ICardActionParameters };\n\t\t\tconst sensitiveProp = paramValue.sensitiveProps || Object.keys(paramValue.parameters?.ibnParams?.sensitiveProps || {});\n\t\t\tif (sensitiveProp.length > 0) {\n\t\t\t\tparamSensitiveProps = paramSensitiveProps.concat(sensitiveProp);\n\t\t\t}\n\t\t}\n\t\treturn paramSensitiveProps;\n\t}\n\n\t/**\n\t * Handles user personalization error, shows the error msg and reset values\n\t *\n\t * @param {string} sType - type of import/export\n\t * @param {boolean} bShowError - flag to show or hide error msg\n\t * @param {string} sErrorMsg - error msg text\n\t * @param {string} sErrorType - error msg type\n\t */\n\tprivate handleUserPersonalizationError(sType: ImportExportType, bShowError: boolean, sErrorMsg: string, sErrorType: string): void {\n\t\tconst sDefaultErrorMsg = this._i18nBundle.getText(sType === ImportExportType.IMPORT ? \"importErrorMessage\" : \"exportErrorMessage\");\n\t\tthis.oControlModel.setProperty(\"/\" + sType + \"/error\", bShowError, undefined, true);\n\t\tthis.oControlModel.setProperty(\"/\" + sType + \"/errorMessage\", sErrorMsg || sDefaultErrorMsg, undefined, true);\n\t\tthis.oControlModel.setProperty(\"/\" + sType + \"/errorType\", sErrorType || \"Error\", undefined, true);\n\t\tthis.setExportImportValues(sType);\n\t}\n\n\t/**\n\t * Handles import/export tab select\n\t *\n\t * @param {object} oEvent - IconTabBarSeelect event\n\t */\n\tprivate onImportExportTabSelect(oEvent: IconTabBar$SelectEvent): void {\n\t\tconst selectedKey = oEvent.getParameter(\"selectedKey\");\n\t\tthis.oSelectedTab = selectedKey;\n\t\tthis.oControlModel.setProperty(\"/selectedTab\", selectedKey);\n\t\tthis.oExportList.setVisible(selectedKey === \"export\");\n\n\t\tthis.oImportBtn.setVisible(selectedKey === \"import\");\n\t\tthis.oExportBtn.setVisible(selectedKey === \"export\");\n\t\tthis.oImportBtn.setEnabled(this.oUserPersonalization.import.sectionsSelected);\n\t\tthis.oExportBtn.setEnabled(this.oUserPersonalization.export.sectionsSelected);\n\t\tthis.oExportBtn.setEnabled(\n\t\t\t!!(\n\t\t\t\tthis.oUserPersonalization.export.fileName &&\n\t\t\t\tthis.oUserPersonalization.export.sections &&\n\t\t\t\tthis.oUserPersonalization.export.sections.length > 0 &&\n\t\t\t\tthis.oUserPersonalization.export.sectionsSelected\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Handles export file name input change\n\t *\n\t * @param {object} oEvent - event\n\t */\n\tprivate onFileNameInputChange(oEvent: Input$LiveChangeEvent): void {\n\t\tconst sInputValue: string | undefined = oEvent.getParameter(\"value\")?.trim();\n\t\tconst oInput = oEvent.getSource();\n\t\tlet sValueState = ValueState.None; // Initialize with ValueState.None\n\t\tlet sValueStateText = \"\";\n\n\t\t// Validate based on constraints provided at input\n\t\tif (!sInputValue || !sInputValue.length) {\n\t\t\tsValueState = ValueState.Error;\n\t\t\tsValueStateText = String(this._i18nBundle.getText(\"invalidExportFileName\"));\n\t\t}\n\n\t\t//update value state\n\t\toInput.setValueState(sValueState);\n\t\toInput.setValueStateText(sValueStateText);\n\t\tthis.oControlModel.setProperty(\"/export/fileName\", sInputValue);\n\t\tthis.enableDisableActions(ImportExportType.EXPORT);\n\t}\n\n\tprivate onResetImportApps(): void {\n\t\tthis.oEventBus.publish(\"importChannel\", \"resetImported\");\n\t\tMessageToast.show(this._i18nBundle.getText(\"importAppsNowBtnEnabled\") as string);\n\t}\n\n\t/**\n\t * Generates the recommendation settings panel\n\t * @returns {Panel} recommendation settings panel\n\t * @private\n\t */\n\tprivate async _getRecommendationSettingsPanel() {\n\t\tconst persData = await this._getPersonalizationData();\n\t\tif (!this._recommendationSettingsPanel) {\n\t\t\tconst panelId = this.getId() + \"--recommendationSettingsPanel\";\n\t\t\tthis._recommendationSettingsPanel = new Panel(panelId, {\n\t\t\t\theaderText: this._i18nBundle.getText(\"recommendationSettingsHeader\"),\n\t\t\t\texpanded: true,\n\t\t\t\texpandable: true,\n\t\t\t\tcontent: [\n\t\t\t\t\tnew Text({\n\t\t\t\t\t\tid: `${panelId}-container-subHeader`,\n\t\t\t\t\t\ttext: this._i18nBundle.getText(\"recommendationSettingsSubHeader\")\n\t\t\t\t\t}),\n\t\t\t\t\tnew HBox({\n\t\t\t\t\t\tid: `${panelId}-container`,\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\tnew CheckBox({\n\t\t\t\t\t\t\t\tid: `${panelId}-container-checkBox`,\n\t\t\t\t\t\t\t\tselected: persData.showRecommendation ?? true,\n\t\t\t\t\t\t\t\tselect: (event) => this.onRecommendationSettingChange(event),\n\t\t\t\t\t\t\t\tariaLabelledBy: [`${panelId}-container-subHeader`, `${panelId}-container-label`]\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew Text({\n\t\t\t\t\t\t\t\tid: `${panelId}-container-label`,\n\t\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"recommendationSettingsCheckboxLabel\")\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t],\n\t\t\t\t\t\talignItems: FlexAlignItems.Center\n\t\t\t\t\t}).addStyleClass(\"sapUiSmallMarginTop\")\n\t\t\t\t]\n\t\t\t}).addStyleClass(\"sapUiSmallMarginTop\");\n\t\t}\n\t\treturn this._recommendationSettingsPanel;\n\t}\n\n\t/**\n\t * Adds recommendation settings panel to the content vbox, if recommendation feature is enabled\n\t * @returns {Promise<void>}\n\t * @private\n\t */\n\tprivate async _setRecommendationSettingsPanel() {\n\t\tthis.oDetailPage.setBusy(true);\n\t\tconst recommendationSettingsPanel = await this._getRecommendationSettingsPanel();\n\t\tif (recommendationSettingsPanel) {\n\t\t\tthis.oContentVBox.addItem(recommendationSettingsPanel);\n\t\t\tthis.oDetailPage.setBusy(false);\n\t\t}\n\t}\n\n\t/**\n\t * Handles recommendation setting change\n\t *\n\t * @param {CheckBox$SelectEvent} event - checkbox select event\n\t * @private\n\t */\n\tprivate async onRecommendationSettingChange(event: CheckBox$SelectEvent) {\n\t\tconst showRecommendation = event.getParameter(\"selected\");\n\t\tthis.oEventBus.publish(\"importChannel\", \"recommendationSettingChanged\", { showRecommendation });\n\t\tconst oPersData = await this._getPersonalizationData();\n\t\tvoid this.oPersonalizerInstance.write({ ...oPersData, showRecommendation });\n\t}\n}\n"],"mappings":"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","ignoreList":[]}