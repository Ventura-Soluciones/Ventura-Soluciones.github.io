{"version":3,"file":"InsightsAdditionPanel.js","names":["sap","ui","define","Button","sap_m_library","Text","__BaseSettingsPanel","___utils_Constants","_interopRequireDefault","obj","__esModule","default","ButtonType","BaseSettingsPanel","CONTENT_ADDITION_PANEL_TYPES","InsightsAdditionPanel","extend","init","_init","BaseSettingsPanel.prototype.init.call","this","setProperty","AI_INSIGHTS_CARDS","_i18nBundle","getText","addCardsButton","getId","text","type","Emphasized","press","onPressAddCards","bind","addActionButton","_setupContent","attachEvent","onDilaogClose","dummyContent","addAggregation","isSupported","_isSupported","Promise","resolve","e","reject","_onPressAddCards","_onDilaogClose"],"sources":["InsightsAdditionPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Button from \"sap/m/Button\";\nimport { ButtonType } from \"sap/m/library\";\nimport Text from \"sap/m/Text\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\nimport { CONTENT_ADDITION_PANEL_TYPES } from \"./utils/Constants\";\n\n/**\n *\n * Class for Apps Addition Panel in MyHome.\n *\n * @extends BaseSettingsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.136\n *\n * @internal\n * @experimental Since 1.136\n * @private\n *\n * @alias sap.cux.home.InsightsAdditionPanel\n */\nexport default class InsightsAdditionPanel extends BaseSettingsPanel {\n\tprivate addCardsButton!: Button;\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\t//setup panel\n\t\tthis.setProperty(\"key\", CONTENT_ADDITION_PANEL_TYPES.AI_INSIGHTS_CARDS);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"insightsCards\"));\n\n\t\t//setup actions\n\t\tthis.addCardsButton = new Button(`${this.getId()}-add-cards-btn`, {\n\t\t\ttext: this._i18nBundle.getText(\"addFromInsightsDialogBtn\"),\n\t\t\ttype: ButtonType.Emphasized,\n\t\t\tpress: this.onPressAddCards.bind(this)\n\t\t});\n\t\tthis.addActionButton(this.addCardsButton);\n\n\t\t//setup content\n\t\tthis._setupContent();\n\t\tthis.attachEvent(\"onDialogClose\", this.onDilaogClose.bind(this));\n\t}\n\n\t/**\n\t * Sets up the content for the Insights Addition Panel.\n\t *\n\t * @private\n\t */\n\tprivate _setupContent(): void {\n\t\tconst dummyContent = new Text(`${this.getId()}-dummy-text`, {\n\t\t\ttext: this._i18nBundle.getText(\"insightsCards\")\n\t\t});\n\t\tthis.addAggregation(\"content\", dummyContent);\n\t}\n\n\t/**\n\t * Checks if the Insights Addition Panel is supported.\n\t *\n\t * @public\n\t * @override\n\t * @async\n\t * @returns {Promise<boolean>} A promise that resolves to true if supported.\n\t */\n\tpublic async isSupported(): Promise<boolean> {\n\t\treturn Promise.resolve(true);\n\t}\n\n\t/**\n\t * Handles the \"Add\" button press event.\n\t *\n\t * @private\n\t */\n\tprivate onPressAddCards(): void {}\n\n\t/**\n\t * Handles the dialog close event.\n\t *\n\t * @private\n\t */\n\tprivate onDilaogClose(): void {}\n}\n"],"mappings":";;;;AAAAA,IAAAC,GAAAC,OAAA,iGAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,sBAAAC,EAAAC,GAAA,OAAAA,KAAAC,mBAAAD,EAAAE,UAAA,YAAAF,EAAAE,QAAAF,CAAA,OAMSG,EAAUR,EAAA,oBAEZS,EAAiBL,EAAAF,GAAA,MACfQ,EAA4BP,EAAA,gCAErC,MAgBqBQ,EAA8BF,EAAiBG,OAAA,sCAS5DC,KAAI,SAAAC,IACVC,sBAAAC,MAGAA,KAAKC,YAAY,MAAOP,EAA6BQ,mBACrDF,KAAKC,YAAY,QAASD,KAAKG,YAAYC,QAAQ,kBAGnDJ,KAAKK,eAAiB,IAAItB,EAAO,GAAGiB,KAAKM,wBAAyB,CACjEC,KAAMP,KAAKG,YAAYC,QAAQ,4BAC/BI,KAAMhB,EAAWiB,WACjBC,MAAOV,KAAKW,gBAAgBC,KAAKZ,QAElCA,KAAKa,gBAAgBb,KAAKK,gBAG1BL,KAAKc,gBACLd,KAAKe,YAAY,gBAAiBf,KAAKgB,cAAcJ,KAAKZ,MAC3D,EAOQc,cAAa,SAAAA,IACpB,MAAMG,EAAe,IAAIhC,EAAK,GAAGe,KAAKM,qBAAsB,CAC3DC,KAAMP,KAAKG,YAAYC,QAAQ,mBAEhCJ,KAAKkB,eAAe,UAAWD,EAChC,EAUaE,YAAW,SAAAC,IAAA,IACvB,OAAOC,QAAQC,QAAQ,KACxB,CAAC,MAAAC,GAAA,OAAAF,QAAAG,OAAAD,EAAA,GAOOZ,gBAAe,SAAAc,IAAU,EAOzBT,cAAa,SAAAU,IAAU,IAAC,OAjEZ/B,CAAqB","ignoreList":[]}