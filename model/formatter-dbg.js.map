{"version":3,"file":"formatter-dbg.js","names":["formatter","status","sStatus","estadoText","date","sDate","Date","toLocaleDateString","year","month","day","error","odataDate","startsWith","endsWith","timestamp","parseInt","substring","length","currency","fAmount","undefined","toLocaleString","minimumFractionDigits","maximumFractionDigits","negativeCurrency","isEditable","isDocumentSelectable","doc","currentLines","some","line","U_NUMDOC","DocNum","U_IDSN","CardCode","isNewPlanilla","isNew"],"sources":["formatter.ts"],"sourcesContent":["const formatter = {\r\n    status: (sStatus: string): string => {\r\n        switch (sStatus) {\r\n            case \"E\":\r\n                return \"Success\";\r\n            case \"C\":\r\n                return \"Warning\";\r\n            case \"A\":\r\n                return \"Error\";\r\n\r\n            default:\r\n                return \"None\";\r\n        }\r\n    },\r\n    \r\n    estadoText: (sStatus: string): string => {\r\n        switch (sStatus) {\r\n            case \"E\":\r\n                return \"Ejecutada\";\r\n            case \"C\":\r\n                return \"Creada\";\r\n            case \"A\":\r\n                return \"Anulada\";\r\n            default:\r\n                return sStatus;\r\n        }\r\n    },\r\n    \r\n    date: (sDate: string): string => {\r\n        if (!sDate) return \"\";\r\n        \r\n        try {\r\n            const date = new Date(sDate);\r\n            return date.toLocaleDateString('es-ES', {\r\n                year: 'numeric',\r\n                month: '2-digit',\r\n                day: '2-digit'\r\n            });\r\n        } catch (error) {\r\n            return sDate;\r\n        }\r\n    },\r\n    \r\n    odataDate: (sDate: string): string => {\r\n        if (!sDate) return \"\";\r\n        \r\n        try {\r\n            // Handle OData date format: /Date(timestamp)/\r\n            if (sDate.startsWith('/Date(') && sDate.endsWith(')/')) {\r\n                const timestamp = parseInt(sDate.substring(6, sDate.length - 2));\r\n                const date = new Date(timestamp);\r\n                return date.toLocaleDateString('es-ES', {\r\n                    year: 'numeric',\r\n                    month: '2-digit',\r\n                    day: '2-digit'\r\n                });\r\n            } else {\r\n                // Handle regular date format\r\n                const date = new Date(sDate);\r\n                return date.toLocaleDateString('es-ES', {\r\n                    year: 'numeric',\r\n                    month: '2-digit',\r\n                    day: '2-digit'\r\n                });\r\n            }\r\n        } catch (error) {\r\n            return sDate;\r\n        }\r\n    },\r\n    \r\n    currency: (fAmount: number): string => {\r\n        if (fAmount === null || fAmount === undefined || fAmount === 0) return \"0.00\";\r\n        \r\n        return fAmount.toLocaleString('es-ES', {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2\r\n        });\r\n    },\r\n    \r\n    negativeCurrency: (fAmount: number): string => {\r\n        if (fAmount === null || fAmount === undefined || fAmount === 0) return \"0.00\";\r\n        \r\n        return (-fAmount).toLocaleString('es-ES', {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2\r\n        });\r\n    },\r\n    \r\n    isEditable: (sStatus: string): boolean => {\r\n        return sStatus === \"C\"; // Only editable when status is \"Creada\"\r\n    },\r\n    \r\n    isDocumentSelectable: (doc: any, currentLines: any[]): boolean => {\r\n        if (!doc || !currentLines) return true;\r\n        \r\n        // Check if document already exists in current lines\r\n        return !currentLines.some((line: any) => {\r\n            return line.U_NUMDOC === doc.DocNum && line.U_IDSN === doc.CardCode;\r\n        });\r\n    },\r\n    \r\n    isNewPlanilla: (isNew: boolean): boolean => {\r\n        return isNew === true;\r\n    }\r\n};\r\n\r\nexport default formatter; "],"mappings":"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","ignoreList":[]}