//@ui5-bundle com/vs/extension/finanb1/Component-preload.js
sap.ui.require.preload({
	"com/vs/extension/finanb1/Component.js":function(){
sap.ui.define(["sap/ui/core/UIComponent","./model/models","sap/ui/model/json/JSONModel"],function(e,t,n){"use strict";const i=t["createDeviceModel"];const o=e.extend("com.vs.extension.finanb1.Component",{metadata:{manifest:"json",interfaces:["sap.ui.core.IAsyncContentCreation"]},init:function t(){e.prototype.init.call(this);this.setModel(i(),"device");const o=new n({selectedPlanillaId:null,showDetail:false});this.setModel(o,"global");this.getRouter().initialize()}});return o});
},
	"com/vs/extension/finanb1/controller/App.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/MessageToast","sap/ui/model/json/JSONModel","sap/m/MessageBox","../model/formatter","./modules/UserManager","./modules/MenuManager","./modules/PagosMasivosManager","./modules/NavigationManager"],function(o,a,n,e,t,s,i,l,r){"use strict";function g(o){return o&&o.__esModule&&typeof o.default!=="undefined"?o.default:o}const c=g(t);const u=s["UserManager"];const d=i["MenuManager"];const p=l["PagosMasivosManager"];const M=r["NavigationManager"];const h=o.extend("com.vs.extension.finanb1.controller.App",{constructor:function a(){o.prototype.constructor.apply(this,arguments);this.formatter=c},onInit:function o(){this.userManager=new u;this.menuManager=new d;this.pagosMasivosManager=new p;this.navigationManager=new M(this);this.userManager.loadAuthenticatedUser();const a=this.getView();if(a){a.setModel(this.menuManager.getModel(),"menuModel");console.log("Modelo de menú asignado a la vista en onInit")}this.menuManager.loadHardcodedMenuData();this.menuManager.filterNavigationByRole(this.userManager.getCurrentUser()?.role||"user");this.pagosMasivosManager.initializeModels();this.pagosMasivosManager.setController(this);if(a){a.setModel(this.pagosMasivosManager.getFilteredModel(),"planillas")}this.checkForDetailNavigation();this.checkAuthentication()},onSideNavigationItemSelect:function o(a){this.navigationManager.onSideNavigationItemSelect(a)},onSideNavItemSelect:function o(a){this.navigationManager.onSideNavItemSelect(a)},onMenuButtonPress:function o(){this.navigationManager.onMenuButtonPress()},onLogout:function o(){e.confirm("¿Está seguro que desea cerrar sesión?",{title:"Confirmar Cierre de Sesión",onClose:o=>{if(o===e.Action.OK){this.userManager.logout();a.show("Sesión cerrada exitosamente",{duration:2e3});const o=this.getOwnerComponent();const n=o.getRouter();n.navTo("RouteLogin")}}})},onDateRangeChange:function o(a){this.pagosMasivosManager.onDateRangeChange(a)},onStatusChange:function o(a){this.pagosMasivosManager.onStatusChange(a)},onBancoChange:function o(a){this.pagosMasivosManager.onBancoChange(a)},onClearFilters:function o(){this.pagosMasivosManager.onClearFilters()},onNuevaPlanillaButtonPress:function o(){this.pagosMasivosManager.onNuevaPlanillaButtonPress()},onListItemPress:function o(a){console.log("App.controller - onListItemPress triggered!",a);this.pagosMasivosManager.onListItemPress(a)},onBackToPagosMasivos:function o(){console.log("App.controller - onBackToPagosMasivos triggered!");const a=this.getOwnerComponent();const n=a.getRouter();n.navTo("RoutePagosMasivos")},onEditPlanilla:function o(){const n=this.getView();if(n){const o=n.getModel("planilla");if(o){const n=o.getData();if(n&&n.Status==="Creada"){a.show("Función de edición en desarrollo",{duration:2e3})}else{e.error("Solo se pueden editar planillas con estado 'Creada'")}}}},onAnularPlanilla:function o(){const n=this.getView();if(n){const o=n.getModel("planilla");if(o){const n=o.getData();if(n&&n.Status==="Creada"){e.confirm("¿Está seguro que desea anular esta planilla?",{title:"Confirmar Anulación",onClose:t=>{if(t===e.Action.OK){n.Status="Anulada";o.setData(n);a.show("Planilla anulada exitosamente",{duration:2e3})}}})}else{e.error("Solo se pueden anular planillas con estado 'Creada'")}}}},onDownloadPlanilla:function o(){console.log("App.controller - onDownloadPlanilla triggered!");this.pagosMasivosManager.onDownloadPlanilla()},onFechaEjecucionChange:function o(a){console.log("App.controller - onFechaEjecucionChange triggered!");this.pagosMasivosManager.onFechaEjecucionChange(a)},onSerieChange:function o(a){console.log("App.controller - onSerieChange triggered!");this.pagosMasivosManager.onSerieChange(a)},onGuardarPlanilla:function o(){console.log("App.controller - onGuardarPlanilla triggered!");console.log("App.controller - PagosMasivosManager instance:",this.pagosMasivosManager);if(this.pagosMasivosManager){this.pagosMasivosManager.onGuardarPlanilla()}else{console.error("PagosMasivosManager is not initialized!")}},onAddDocumentos:function o(){console.log("App.controller - onAddDocumentos triggered!");if(this.pagosMasivosManager){this.pagosMasivosManager.onAddDocumentos()}else{console.error("PagosMasivosManager is not initialized!")}},onDocumentSearch:function o(a){console.log("App.controller - onDocumentSearch triggered!");if(this.pagosMasivosManager){this.pagosMasivosManager.onDocumentSearch(a)}},onDocumentBankFilterChange:function o(a){console.log("App.controller - onDocumentBankFilterChange triggered!");if(this.pagosMasivosManager){this.pagosMasivosManager.onDocumentBankFilterChange(a)}},onDocumentSelectionChange:function o(a){console.log("App.controller - onDocumentSelectionChange triggered!");if(this.pagosMasivosManager){this.pagosMasivosManager.onDocumentSelectionChange(a)}},onDocumentDialogCancel:function o(){console.log("App.controller - onDocumentDialogCancel triggered!");if(this.pagosMasivosManager){this.pagosMasivosManager.onDocumentDialogCancel()}},onDocumentDialogConfirm:function o(){console.log("App.controller - onDocumentDialogConfirm triggered!");if(this.pagosMasivosManager){this.pagosMasivosManager.onDocumentDialogConfirm()}},loadPlanillaById:function o(a){const e="./model/mock/products.json";try{const o=new n;o.loadData(e,undefined,false);const t=o.getData();console.log("App.controller - Planilla data loaded:",t);const s=t.find(o=>o.Id===a);if(s){console.log("App.controller - Planilla found:",s);const o=new n;o.setData(s);const a=this.getView();if(a){a.setModel(o,"planilla");console.log("App.controller - Planilla model assigned to view")}}else{console.log("App.controller - Planilla not found, loading fallback data");this.loadFallbackPlanillaData(a)}}catch(o){console.error("App.controller - Exception loading planilla data:",o);this.loadFallbackPlanillaData(a)}},loadFallbackPlanillaData:function o(a){console.log("App.controller - Loading fallback planilla data for ID:",a);const e={Id:a,Name:`Planilla Pago Proveedor ${a}`,DateOfSale:"2024-01-01",Status:"Creada",Quantity:10,Price:1e3,CurrencyCode:"SOL",Bank:"BCP",SupplierName:"Proveedor Ejemplo",Description:"Descripción de ejemplo para la planilla"};const t=new n;t.setData(e);const s=this.getView();if(s){s.setModel(t,"planilla");console.log("App.controller - Fallback planilla model assigned to view")}},checkForDetailNavigation:function o(){const a=this.getOwnerComponent();const n=a.getRouter();const e=n.getRoute("RoutePagosMasivosDetalle");if(e){e.attachPatternMatched(o=>{const a=o.getParameter("arguments").planillaId;if(a){console.log("App.controller - Navigating to planilla detail:",a);this.loadPlanillaById(a)}})}},checkAuthentication:function o(){const a=sessionStorage.getItem("finanb1_auth")||localStorage.getItem("finanb1_auth");if(a){try{const o=JSON.parse(a);if(o.isAuthenticated){const o=this.getOwnerComponent();const a=o.getRouter();a.navTo("RouteConfiguracion")}}catch(o){console.error("Error parsing auth data:",o)}}}});return h});
},
	"com/vs/extension/finanb1/controller/Configuracion.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller"],function(n){"use strict";const o=n.extend("com.vs.extension.finanb1.controller.Configuracion",{onInit:function n(){console.log("Configuracion controller initialized")}});return o});
},
	"com/vs/extension/finanb1/controller/Detracciones.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller"],function(n){"use strict";const e=n.extend("com.vs.extension.finanb1.controller.Detracciones",{onInit:function n(){console.log("Detracciones controller initialized")}});return e});
},
	"com/vs/extension/finanb1/controller/Login.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/MessageToast","sap/m/MessageBox","sap/ui/model/json/JSONModel"],function(e,t,n,s){"use strict";return e.extend("finanb1.controller.Login",{oCurrentUser:null,onInit:function(){const e=new s({username:"",password:"",rememberMe:false});this.getView().setModel(e,"loginModel")},onLoginPress:function(){const e=this.getView().getModel("loginModel");const s=e.getProperty("/username");const o=e.getProperty("/password");const r=e.getProperty("/rememberMe");if(!s||!o){n.error("Por favor ingrese usuario y contraseña");return}const a=this.byId("loginButton");if(a){a.setEnabled(false);a.setText("Verificando...")}this.authenticateUser(s,o).then(e=>{if(e){this.setAuthenticationState(true,s,r);t.show("Inicio de sesión exitoso",{duration:2e3});const e=this.getOwnerComponent().getRouter();e.navTo("RouteConfiguracion")}else{n.error("Usuario o contraseña incorrectos")}}).catch(e=>{console.error("Authentication error:",e);n.error("Error durante la autenticación. Por favor intente nuevamente.")}).finally(()=>{if(a){a.setEnabled(true);a.setText("Iniciar Sesión")}})},authenticateUser:function(e,t){return new Promise((n,o)=>{const r=new s;try{r.loadData("./model/mock/users.json",undefined,false);const s=r.getData();if(s&&s.users){const o=s.users;const r=o.find(function(n){return n.email===e&&n.password===t});if(r){this.oCurrentUser=r;n(true)}else{n(false)}}else{this.useFallbackUsers(e,t,n)}}catch(s){console.error("Error loading user data:",s);this.useFallbackUsers(e,t,n)}})},useFallbackUsers:function(e,t,n){const s=[{id:1,name:"Admin User",email:"admin@company.com",password:"admin123",role:"admin",status:"active",companies:[{id:1,name:"Demo Company"}]},{id:2,name:"Regular User",email:"user@company.com",password:"user123",role:"user",status:"active",companies:[{id:1,name:"Demo Company"}]}];const o=s.find(function(n){return n.email===e&&n.password===t});if(o){this.oCurrentUser=o;n(true)}else{n(false)}},setAuthenticationState:function(e,t,n){const s={isAuthenticated:e,userInfo:this.oCurrentUser||{},timestamp:Date.now()};if(n){localStorage.setItem("finanb1_auth",JSON.stringify(s))}else{sessionStorage.setItem("finanb1_auth",JSON.stringify(s))}},onForgotPassword:function(){n.information("Función de recuperación de contraseña en desarrollo")},onKeyPress:function(e){if(e.getParameter("keyCode")===13){this.onLoginPress()}},getAuthenticationState:function(){const e=sessionStorage.getItem("finanb1_auth")||localStorage.getItem("finanb1_auth");return e?JSON.parse(e):null}})});
},
	"com/vs/extension/finanb1/controller/PagosMasivos.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/MessageToast","sap/m/MessageBox","../model/formatter","./modules/UserManager","./modules/MenuManager","./modules/PagosMasivosManager","./modules/NavigationManager"],function(e,n,a,o,s,t,i,r){"use strict";function g(e){return e&&e.__esModule&&typeof e.default!=="undefined"?e.default:e}const u=g(o);const M=s["UserManager"];const l=t["MenuManager"];const c=i["PagosMasivosManager"];const d=r["NavigationManager"];const h=e.extend("com.vs.extension.finanb1.controller.PagosMasivos",{constructor:function n(){e.prototype.constructor.apply(this,arguments);this.formatter=u},onInit:function e(){this.userManager=new M;this.menuManager=new l;this.pagosMasivosManager=new c;this.navigationManager=new d(this);this.userManager.loadAuthenticatedUser();const n=this.getView();if(n){n.setModel(this.menuManager.getModel(),"menuModel");console.log("Modelo de menú asignado a la vista en onInit")}this.menuManager.loadHardcodedMenuData();this.menuManager.filterNavigationByRole(this.userManager.getCurrentUser()?.role||"user");this.pagosMasivosManager.initializeModels();this.pagosMasivosManager.setController(this);if(n){n.setModel(this.pagosMasivosManager.getFilteredModel(),"planillas")}},onSideNavigationItemSelect:function e(n){this.navigationManager.onSideNavigationItemSelect(n)},onSideNavItemSelect:function e(n){this.navigationManager.onSideNavItemSelect(n)},onMenuButtonPress:function e(){this.navigationManager.onMenuButtonPress()},onLogout:function e(){a.confirm("¿Está seguro que desea cerrar sesión?",{title:"Confirmar Cierre de Sesión",onClose:e=>{if(e===a.Action.OK){this.userManager.logout();n.show("Sesión cerrada exitosamente",{duration:2e3});const e=this.getOwnerComponent();const a=e.getRouter();a.navTo("RouteLogin")}}})},onDateRangeChange:function e(n){this.pagosMasivosManager.onDateRangeChange(n)},onStatusChange:function e(n){this.pagosMasivosManager.onStatusChange(n)},onBancoChange:function e(n){this.pagosMasivosManager.onBancoChange(n)},onClearFilters:function e(){this.pagosMasivosManager.onClearFilters()},onNuevaPlanillaButtonPress:function e(){this.pagosMasivosManager.onNuevaPlanillaButtonPress()},onListItemPress:function e(n){console.log("PagosMasivos.controller - onListItemPress triggered!",n);this.pagosMasivosManager.onListItemPress(n)}});return h});
},
	"com/vs/extension/finanb1/controller/PagosMasivosDetalle.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/MessageToast","sap/ui/model/json/JSONModel","sap/m/MessageBox","../model/formatter","./modules/UserManager","./modules/MenuManager","./modules/PagosMasivosManager","./modules/NavigationManager","sap/ui/model/Filter","sap/ui/model/FilterOperator"],function(e,o,a,l,n,t,s,i,c,r,d){"use strict";function g(e){return e&&e.__esModule&&typeof e.default!=="undefined"?e.default:e}const u=g(n);const P=t["UserManager"];const f=s["MenuManager"];const m=i["PagosMasivosManager"];const D=c["NavigationManager"];const M=e.extend("com.vs.extension.finanb1.controller.PagosMasivosDetalle",{constructor:function o(){e.prototype.constructor.apply(this,arguments);this.formatter=u},onInit:function e(){this.userManager=new P;this.menuManager=new f;this.pagosMasivosManager=new m;this.navigationManager=new D(this);this.userManager.loadAuthenticatedUser();const o=this.getView();if(o){o.setModel(this.menuManager.getModel(),"menuModel");console.log("Modelo de menú asignado a la vista en onInit")}this.menuManager.loadHardcodedMenuData();this.menuManager.filterNavigationByRole(this.userManager.getCurrentUser()?.role||"user");this.pagosMasivosManager.initializeModels();this.pagosMasivosManager.setController(this);if(o){this.oModel=new a;this.oModel.loadData("./model/mock/available-documents.json",undefined,false);o.setModel(this.oModel,"oModel");const e=new a;e.loadData("./model/mock/cuentas-bancarias.json",undefined,false);o.setModel(e,"cuentasBancarias");e.attachRequestCompleted(()=>{console.log("Modelo de cuentas bancarias cargado")});this.oFilterBar=this.getView()?.byId("filterbar");this.oTable=this.getView()?.byId("table");this._filterTimer=null;this.oModel.attachRequestCompleted(()=>{console.log("Modelo de documentos disponibles cargado");const e=this.oModel.getData();if(e&&e.documents){e.documents.forEach(e=>{e.alreadyInPlanilla=false});this.oModel.setData(e)}this._clearTableFilters()})}this.checkForDetailNavigation()},onExit:function e(){this.oModel=null;this.oFilterBar=null;this.oTable=null},onSelectionChange:function e(o){this._debouncedSearch()},onDateRangeChange:function e(o){this._debouncedSearch()},_debouncedSearch:function e(o){const a=o||0;if(this._filterTimer){clearTimeout(this._filterTimer)}this._filterTimer=setTimeout(()=>{this.onSearch()},a)},onSearch:function e(){const o=this.oFilterBar.getFilterGroupItems().reduce((e,o)=>{const a=o.getControl();if(a&&a.getSelectedKeys){const l=a.getSelectedKeys();const n=l.map(e=>{let a=o.getName();if(a==="Name")a="DocType";else if(a==="Category")a="CardCode";else if(a==="SupplierName")a="BankCode";return new r({path:a,operator:d.Contains,value1:e})});if(l.length>0){e.push(new r({filters:n,and:false}))}}else if(a&&a.getValue){const o=a.getValue();if(o&&o!==""){const a=o.split(" - ");if(a.length===2){const o=a[0];const l=a[1];if(o&&l&&o!==""&&l!==""){e.push(new r({path:"DocDate",operator:d.BT,value1:o,value2:l}))}}}}return e},[]);if(this.oTable&&this.oTable.getBinding("items")){this.oTable.getBinding("items").filter(o)}},_clearTableFilters:function e(){if(this.oTable&&this.oTable.getBinding("items")){this.oTable.getBinding("items").filter([])}this._logTableData()},_logTableData:function e(){const o=this.getView();if(!o)return;const a=o.getModel();if(!a)return;const l=a.getProperty("/documents");if(!l)return;console.log("Total de documentos:",l.length);console.log("Primeros documentos:",l.slice(0,3));const n=a.getProperty("/docTypes");const t=a.getProperty("/suppliers");const s=a.getProperty("/banks");console.log("Tipos de documento disponibles:",n?.length||0);console.log("Proveedores disponibles:",t?.length||0);console.log("Bancos disponibles:",s?.length||0)},onSideNavigationItemSelect:function e(o){this.navigationManager.onSideNavigationItemSelect(o)},onSideNavItemSelect:function e(o){this.navigationManager.onSideNavItemSelect(o)},onMenuButtonPress:function e(){this.navigationManager.onMenuButtonPress()},onLogout:function e(){l.confirm("¿Está seguro que desea cerrar sesión?",{title:"Confirmar Cierre de Sesión",onClose:e=>{if(e===l.Action.OK){this.userManager.logout();o.show("Sesión cerrada exitosamente",{duration:2e3});const e=this.getOwnerComponent();const a=e.getRouter();a.navTo("RouteLogin")}}})},onBackToPagosMasivos:function e(){console.log("PagosMasivosDetalle.controller - onBackToPagosMasivos triggered!");const o=this.getOwnerComponent();const a=o.getRouter();a.navTo("RoutePagosMasivos")},onNuevaPlanilla:function e(){console.log("PagosMasivosDetalle.controller - onNuevaPlanilla triggered!");const o=this.getOwnerComponent();const a=o.getRouter();a.navTo("RoutePagosMasivosDetalle",{planillaId:"new"})},onEditPlanilla:function e(){const a=this.getView();if(a){const e=a.getModel("planilla");if(e){const a=e.getData();if(a&&a.Status==="Creada"){o.show("Función de edición en desarrollo",{duration:2e3})}else{l.error("Solo se pueden editar planillas con estado 'Creada'")}}}},onAnularPlanilla:function e(){const o=this.getView();if(o){const e=o.getModel("planilla");if(e){const o=e.getData();if(o){l.confirm("¿Está seguro que desea anular esta planilla?",{title:"Confirmar Anulación",onClose:e=>{if(e===l.Action.OK){this.mockCancelPlanillaAPI(o.DocEntry)}}})}else{l.error("No se pudo obtener los datos de la planilla")}}else{l.error("No se pudo acceder al modelo de la planilla")}}else{l.error("No se pudo acceder a la vista")}},mockCancelPlanillaAPI:function e(o){console.log("PagosMasivosDetalle.controller - Llamada API simulada: POST /Planilla("+o+")/Cancel");setTimeout(()=>{const e={success:true,message:"Planilla anulada exitosamente",planillaId:o,timestamp:(new Date).toISOString()};console.log("PagosMasivosDetalle.controller - Respuesta API simulada:",e);l.success("Planilla anulada exitosamente",{title:"Operación Exitosa",details:`Llamada API: POST /Planilla(${o})/Cancel\nRespuesta: ${JSON.stringify(e,null,2)}`,onClose:()=>{const e=this.getView();if(e){const o=e.getModel("planilla");if(o){const e=o.getData();if(e){e.U_ESTADO="A";o.refresh(true);console.log("PagosMasivosDetalle.controller - Estado de planilla actualizado a 'Anulada'")}}}}})},1e3)},onDownloadPlanilla:function e(){console.log("PagosMasivosDetalle.controller - onDownloadPlanilla triggered!");this.pagosMasivosManager.onDownloadPlanilla()},onFechaEjecucionChange:function e(o){console.log("PagosMasivosDetalle.controller - onFechaEjecucionChange triggered!");this.pagosMasivosManager.onFechaEjecucionChange(o)},onSerieChange:function e(o){console.log("PagosMasivosDetalle.controller - onSerieChange triggered!");this.pagosMasivosManager.onSerieChange(o)},onCuentaBancariaChange:function e(o){console.log("PagosMasivosDetalle.controller - onCuentaBancariaChange activado");const a=this.getView();if(!a)return;const l=o.getParameter("selectedItem");if(!l){console.log("No se seleccionó ninguna cuenta bancaria");return}const n=l.getKey();console.log("PagosMasivosDetalle.controller - Cuenta bancaria seleccionada (clave):",n);const t=a.getModel("cuentasBancarias");if(!t){console.error("PagosMasivosDetalle.controller - Modelo de cuentas bancarias no encontrado");return}const s=t.getData();const i=s.value.find(e=>e.AccNo===n);if(!i){console.error("PagosMasivosDetalle.controller - Cuenta seleccionada no encontrada");return}console.log("PagosMasivosDetalle.controller - Cuenta seleccionada:",i);const c=a.getModel("planilla");if(c){c.setProperty("/U_CUENTA",i.AccNo);c.setProperty("/U_IDBANCO",i.BankCode);c.setProperty("/U_NMBANCO",i.BankCode);c.setProperty("/U_MONEDA",i.Branch);c.setProperty("/U_GLACCOUNT",i.GLAccount);console.log("PagosMasivosDetalle.controller - Planilla actualizada con datos de cuenta:",{U_CUENTA:i.AccNo,U_IDBANCO:i.BankCode,U_NMBANCO:i.BankCode,U_MONEDA:i.Branch,U_GLACCOUNT:i.GLAccount});c.refresh(true)}else{console.error("PagosMasivosDetalle.controller - Modelo de planilla no encontrado")}},onGuardarPlanilla:function e(){console.log("PagosMasivosDetalle.controller - onGuardarPlanilla triggered!");const o=this.getView();if(!o){l.error("No se pudo acceder a la vista");return}const a=o.getModel("planilla");if(!a){l.error("No se pudo acceder al modelo de la planilla");return}const n=a.getData();if(!n){l.error("No se pudo obtener los datos de la planilla");return}console.log("PagosMasivosDetalle.controller - Valor de isNewPlanilla:",n.isNewPlanilla);console.log("PagosMasivosDetalle.controller - Datos de planilla:",n);if(n.isNewPlanilla===true){const e=this.validateNewPlanilla(n);if(!e.isValid){l.error(e.message,{title:"Validación Requerida"});return}l.confirm("¿Está seguro que desea crear esta planilla?",{title:"Confirmar Creación",onClose:e=>{if(e===l.Action.OK){this.mockCreatePlanillaAPI(n)}}})}else{l.information("Esta planilla ya existe. Use 'Ejecutar' para procesarla.")}},onEjecutarPlanilla:function e(){console.log("PagosMasivosDetalle.controller - onEjecutarPlanilla triggered!");const o=this.getView();if(!o){l.error("No se pudo acceder a la vista");return}const a=o.getModel("planilla");if(!a){l.error("No se pudo acceder al modelo de la planilla");return}const n=a.getData();if(!n){l.error("No se pudo obtener los datos de la planilla");return}if(n.U_ESTADO!=="C"){l.warning("Solo se pueden ejecutar planillas con estado 'Creada'");return}if(!n.VS_PMP1Collection||n.VS_PMP1Collection.length===0){l.warning("La planilla debe tener al menos un documento para ser ejecutada");return}l.confirm("¿Está seguro que desea ejecutar esta planilla?",{title:"Confirmar Ejecución",onClose:e=>{if(e===l.Action.OK){this.mockExecutePlanillaAPI(n)}}})},mockCreatePlanillaAPI:function e(o){console.log("PagosMasivosDetalle.controller - Llamada API simulada: POST /Planilla");console.log("PagosMasivosDetalle.controller - Datos enviados:",o);setTimeout(()=>{const e={success:true,message:"Planilla creada exitosamente",planillaId:Math.floor(Math.random()*1e3)+100,timestamp:(new Date).toISOString(),createdPlanilla:{...o,DocEntry:Math.floor(Math.random()*1e3)+100,isNewPlanilla:false,U_ESTADO:"C"}};console.log("PagosMasivosDetalle.controller - Respuesta API simulada:",e);l.success("Planilla creada exitosamente",{title:"Operación Exitosa",details:`Llamada API: POST /Planilla\nDatos enviados: ${JSON.stringify(o,null,2)}\nRespuesta: ${JSON.stringify(e,null,2)}`,onClose:()=>{const o=this.getView();if(o){const a=o.getModel("planilla");if(a){a.setData(e.createdPlanilla);a.refresh(true);console.log("PagosMasivosDetalle.controller - Planilla actualizada con datos creados")}}}})},1500)},mockExecutePlanillaAPI:function e(o){console.log("PagosMasivosDetalle.controller - Llamada API simulada: POST /Planilla("+o.DocEntry+")/Execute");const a={DocEntry:o.DocEntry,U_FECHAP:o.U_FECHAP,U_TC:o.U_TC,U_NOPBAN:o.U_NOPBAN};console.log("PagosMasivosDetalle.controller - Datos enviados para ejecución:",a);setTimeout(()=>{const e={success:true,message:"Planilla ejecutada exitosamente",planillaId:o.DocEntry,timestamp:(new Date).toISOString(),executedPlanilla:{...o,U_ESTADO:"E"}};console.log("PagosMasivosDetalle.controller - Respuesta API simulada:",e);l.success("Planilla ejecutada exitosamente",{title:"Operación Exitosa",details:`Llamada API: POST /Planilla(${o.DocEntry})/Execute\nDatos enviados: ${JSON.stringify(a,null,2)}\nRespuesta: ${JSON.stringify(e,null,2)}`,onClose:()=>{const o=this.getView();if(o){const a=o.getModel("planilla");if(a){a.setData(e.executedPlanilla);a.refresh(true);console.log("PagosMasivosDetalle.controller - Planilla actualizada con datos ejecutados")}}}})},2e3)},validateNewPlanilla:function e(o){console.log("PagosMasivosDetalle.controller - Validando nueva planilla:",o);const a=[];if(!o.U_CUENTA){a.push("• Cuenta Bancaria es requerida")}if(!o.U_SERIE){a.push("• Serie es requerida")}if(!o.U_FECHAP){a.push("• Fecha de Ejecución es requerida")}if(!o.U_TC){a.push("• Tipo de Cambio es requerido")}if(!o.VS_PMP1Collection||o.VS_PMP1Collection.length===0){a.push("• Al menos un documento es requerido")}if(a.length>0){const e="Por favor complete los siguientes campos requeridos:\n\n"+a.join("\n");return{isValid:false,message:e}}return{isValid:true,message:""}},onAddDocumentos:function e(){console.log("PagosMasivosDetalle.controller - onAddDocumentos triggered!");if(this.pagosMasivosManager){this.pagosMasivosManager.onAddDocumentos()}else{console.error("PagosMasivosManager is not initialized!")}},onDocumentSearch:function e(o){console.log("PagosMasivosDetalle.controller - onDocumentSearch triggered!");if(this.pagosMasivosManager){this.pagosMasivosManager.onDocumentSearch(o)}},onDocumentBankFilterChange:function e(o){console.log("PagosMasivosDetalle.controller - onDocumentBankFilterChange triggered!");if(this.pagosMasivosManager){this.pagosMasivosManager.onDocumentBankFilterChange(o)}},onDocumentSelectionChange:function e(o){console.log("PagosMasivosDetalle.controller - onDocumentSelectionChange triggered!");if(this.pagosMasivosManager){this.pagosMasivosManager.onDocumentSelectionChange(o)}},onDocumentDialogCancel:function e(){console.log("PagosMasivosDetalle.controller - onDocumentDialogCancel triggered!");if(this.pagosMasivosManager){this.pagosMasivosManager.onDocumentDialogCancel()}},onDocumentDialogConfirm:function e(){console.log("PagosMasivosDetalle.controller - onDocumentDialogConfirm triggered!");const a=this.getView();if(!a)return;const n=a.byId("table");if(!n)return;const t=n.getSelectedItems();if(t.length===0){l.warning("Por favor seleccione al menos un documento.");return}const s=a.getModel("planilla");if(!s)return;const i=s.getData();if(!i)return;const c=i.VS_PMP1Collection||[];const r=c.map(e=>e.U_NUMDOC);const d=[];const g=[];t.forEach(e=>{const o=e.getBindingContext("oModel").getObject();if(r.includes(o.DocNum)){g.push(o.DocNum);return}const a={DocEntry:i.DocEntry,LineId:c.length+d.length+1,VisOrder:c.length+d.length+1,Object:"VS_OPMP",LogInst:null,U_CHECK:"Y",U_IDPAGO:i.U_IDPAGO,U_TIPDOC:o.DocType,U_IDDOC:o.DocEntry,U_LINDOC:0,U_OBJDOC:"18",U_CUODOC:"1",U_IDSN:o.CardCode,U_NMSN:o.CardName,U_RUC:o.CardCode,U_NUMDOC:o.DocNum,U_MONDOC:o.Currency,U_IMPORTE:o.Total,U_SALDO:o.Balance,U_PAGONETO:o.Balance,U_PAGLOC:o.Balance,U_PAGEXT:0,U_RETLOC:0,U_RETEXT:0,U_FVENC:o.DueDate,U_FCONT:o.DocDate,U_FDOCU:o.DocDate,U_CCORRI:o.CuentaBancaria,U_CTAINF:o.BankCode,U_MONINF:o.Currency,U_RETCOD:"",U_RETPOR:0,U_ESTADO:"1",U_SL:o.Balance,U_SE:0,U_RL:0,U_RE:0,U_BL:0,U_BE:0,U_IL:o.Balance,U_REF2:o.DocNum,U_PAGLOC0:o.Balance,U_PAGEXT0:0,U_RETLOC0:0,U_RETEXT0:0,U_MPBB:"2"};d.push(a)});c.push(...d);i.VS_PMP1Collection=c;this.recalculatePlanillaTotals(i);s.setData(i);s.refresh(true);this.updateAlreadyAddedStatus();const u=a.byId("documentSelectionDialog");if(u){u.close()}n.removeSelections();if(d.length>0&&g.length>0){o.show(`${d.length} documento(s) agregado(s), ${g.length} ya existían.`)}else if(d.length>0){o.show(`${d.length} documento(s) agregado(s) a la planilla.`)}else if(g.length>0){l.warning("Todos los documentos seleccionados ya están en la planilla.")}else{l.warning("Por favor seleccione al menos un documento.")}},updateAlreadyAddedStatus:function e(){this.markAlreadyAddedDocuments()},onDeletePlanillaLine:function e(o){console.log("PagosMasivosDetalle.controller - Delete planilla line triggered");const a=this.getView();if(!a){return}const n=a.getModel("planilla");if(!n){console.log("Planilla model not found");return}const t=o.getSource();const s=t.getParent().getParent();const i=s.getBindingContext("planilla");if(!i){console.log("No binding context found");return}const c=i.getObject();const r=i.getPath().split("/").pop();console.log("Deleting line:",c);console.log("Line index:",r);l.confirm(`¿Está seguro que desea eliminar el documento ${c.U_NUMDOC}?`,{title:"Confirmar eliminación",onClose:e=>{if(e===l.Action.OK){this.deletePlanillaLine(parseInt(r))}}})},deletePlanillaLine:function e(a){console.log("PagosMasivosDetalle.controller - Deleting line at index:",a);const l=this.getView();if(!l){return}const n=l.getModel("planilla");if(!n){console.log("Planilla model not found");return}const t=n.getData();if(!t||!t.VS_PMP1Collection){console.log("No planilla data found");return}const s=t.VS_PMP1Collection.filter((e,o)=>o!==a);t.VS_PMP1Collection=s;this.recalculatePlanillaTotals(t);n.setData(t);n.refresh(true);console.log("Line deleted successfully");o.show("Línea eliminada correctamente",{duration:3e3});this.updateAlreadyAddedStatus()},recalculatePlanillaTotals:function e(o){console.log("PagosMasivosDetalle.controller - Recalculando totales de planilla");if(!o||!o.VS_PMP1Collection){return}const a=o.VS_PMP1Collection;const l=a.reduce((e,o)=>e+(o.U_IMPORTE||0),0);const n=a.reduce((e,o)=>e+(o.U_RETLOC||0),0);const t=a.reduce((e,o)=>e+(o.U_PAGLOC0||0),0);o.U_TOTAL=l;o.U_RETEN=n;o.U_SUBTOTAL=t;console.log("Totales actualizados:",{total:l,retencion:n,subtotal:t})},onDeleteSelectedLines:function e(){console.log("PagosMasivosDetalle.controller - Delete selected lines triggered");const o=this.getView();if(!o){return}const a=o.getModel("planilla");if(!a){console.log("Planilla model not found");return}const n=a.getData();if(!n||!n.VS_PMP1Collection){console.log("No planilla data found");return}const t=o.byId("planillaLinesTable");if(!t){console.log("Planilla table not found");return}const s=t.getSelectedItems();if(s.length===0){l.warning("Por favor seleccione al menos una línea para eliminar.");return}const i=s.map(e=>{const o=e.getBindingContext("planilla");return o?o.getObject():null}).filter(e=>e!==null);if(i.length===0){l.warning("No se pudieron obtener los documentos seleccionados.");return}const c=i.map(e=>e.U_NUMDOC).join(", ");l.confirm(`¿Está seguro que desea eliminar los siguientes documentos?\n${c}`,{title:"Confirmar eliminación múltiple",onClose:e=>{if(e===l.Action.OK){this.deleteSelectedPlanillaLines(i)}}})},deleteSelectedPlanillaLines:function e(a){console.log("PagosMasivosDetalle.controller - Deleting selected lines:",a);const l=this.getView();if(!l){return}const n=l.getModel("planilla");if(!n){console.log("Planilla model not found");return}const t=n.getData();if(!t||!t.VS_PMP1Collection){console.log("No planilla data found");return}const s=a.map(e=>e.U_NUMDOC);const i=t.VS_PMP1Collection.filter(e=>!s.includes(e.U_NUMDOC));t.VS_PMP1Collection=i;this.recalculatePlanillaTotals(t);n.setData(t);n.refresh(true);const c=l.byId("planillaLinesTable");if(c){c.removeSelections()}console.log("Líneas seleccionadas eliminadas exitosamente");o.show(`${a.length} línea(s) eliminada(s) correctamente`,{duration:3e3});this.updateAlreadyAddedStatus()},loadPlanillaById:function e(o){const l="./model/mock/planilla-object.json";try{const e=new a;e.loadData(l,undefined,false);const n=e.getData();console.log("PagosMasivosDetalle.controller - Datos de planilla cargados:",n);const t=n.planillas||[];const s=parseInt(o);const i=t.find(e=>e.DocEntry===s);if(i){console.log("PagosMasivosDetalle.controller - Planilla encontrada:",i);const e={...i,isNewPlanilla:false};const o=new a;o.setData(e);const l=this.getView();if(l){l.setModel(o,"planilla");console.log("PagosMasivosDetalle.controller - Modelo de planilla asignado a la vista");this.pagosMasivosManager.loadSeriesData();const e=new a;e.loadData("./model/mock/cuentas-bancarias.json",undefined,false);l.setModel(e,"cuentasBancarias");e.attachRequestCompleted(()=>{console.log("PagosMasivosDetalle.controller - Cuentas bancarias cargadas para planilla existente");o.refresh(true)})}}else{console.log("PagosMasivosDetalle.controller - Planilla no encontrada, cargando datos de respaldo");this.loadFallbackPlanillaData(o)}}catch(e){console.error("PagosMasivosDetalle.controller - Excepción al cargar datos de planilla:",e);this.loadFallbackPlanillaData(o)}},loadFallbackPlanillaData:function e(o){console.log("PagosMasivosDetalle.controller - Cargando datos de respaldo para planilla ID:",o);const l={DocEntry:o,DocNum:parseInt(o),isNewPlanilla:false,U_CUENTA:"194-1985504-0-94",U_IDBANCO:"BCP",U_NMBANCO:"BANCO DE CREDITO",U_CCBANCO:"1941985504094",U_GLACCOUNT:"1041101",U_MONEDA:"SOL",U_SERIE:24,U_ESTADO:"E",U_FECHA:"2024-03-21T00:00:00Z",U_FECHAP:"2024-03-21T00:00:00Z",U_TC:3.701,U_RETEN:null,U_FECHAV:null,U_IDSN:null,U_NMSN:null,U_GLOSA:"PG F/VARIAS",U_TOTAL:19516.06,U_IDPAGO:1977,U_SUBTOTAL:19516.06,U_REF:null,U_NOPBAN:"09627515",U_IDSUC:null,U_NMSUC:null,U_FCAJA:-1,U_CONTA:0,VS_PMP1Collection:[{DocEntry:parseInt(o),LineId:1,VisOrder:1,Object:"VS_OPMP",LogInst:null,U_CHECK:"Y",U_IDPAGO:1971,U_TIPDOC:"Factura",U_IDDOC:3617,U_LINDOC:0,U_OBJDOC:"18",U_CUODOC:"1",U_IDSN:"PL10081644867",U_NMSN:"BUSTAMANTE DAVILA MARIA ELIZABETH",U_RUC:"10081644867",U_NUMDOC:"E001-78",U_MONDOC:"SOL",U_IMPORTE:288,U_SALDO:288,U_PAGONETO:288,U_PAGLOC:288,U_PAGEXT:0,U_RETLOC:0,U_RETEXT:0,U_FVENC:"2024-03-15T00:00:00Z",U_FCONT:"2024-03-15T00:00:00Z",U_FDOCU:"2024-03-15T00:00:00Z",U_CCORRI:"19394614129025",U_CTAINF:"BCP",U_MONINF:"SOL",U_RETCOD:"",U_RETPOR:0,U_ESTADO:"1",U_SL:288,U_SE:0,U_RL:0,U_RE:0,U_BL:0,U_BE:0,U_IL:288,U_REF2:"01E001-78",U_PAGLOC0:0,U_PAGEXT0:0,U_RETLOC0:0,U_RETEXT0:0,U_MPBB:"2"}]};const n=new a;n.setData(l);const t=this.getView();if(t){t.setModel(n,"planilla");console.log("PagosMasivosDetalle.controller - Modelo de planilla de respaldo asignado a la vista");this.pagosMasivosManager.loadSeriesData();const e=new a;e.loadData("./model/mock/cuentas-bancarias.json",undefined,false);t.setModel(e,"cuentasBancarias");e.attachRequestCompleted(()=>{console.log("PagosMasivosDetalle.controller - Cuentas bancarias cargadas para planilla de respaldo");n.refresh(true)})}},checkForDetailNavigation:function e(){const o=this.getOwnerComponent();const a=o.getRouter();const l=a.getRoute("RoutePagosMasivosDetalle");if(l){l.attachPatternMatched(e=>{const o=e.getParameter("arguments").planillaId;if(o&&o!=="new"){console.log("PagosMasivosDetalle.controller - Navegando al detalle de planilla:",o);this.loadPlanillaById(o)}else if(o==="new"){console.log("PagosMasivosDetalle.controller - Creando nueva planilla");this.pagosMasivosManager.createNewPlanilla()}})}},onDocumentDialogAfterOpen:function e(){console.log("PagosMasivosDetalle.controller - Diálogo abierto, marcando documentos existentes");const o=this.getView();if(!o){return}const a=o.getModel("planilla");const l=o.getModel("oModel");if(!a||!l){console.log("Modelos no encontrados");return}const n=a.getData();const t=l.getData();console.log("Datos de planilla:",n);console.log("Datos de documentos disponibles:",t);if(!n||!t){console.log("No hay datos disponibles");return}if(!t.documents||t.documents.length===0){console.log("Documentos aún no cargados, esperando datos...");l.attachRequestCompleted(()=>{setTimeout(()=>{this.markAlreadyAddedDocuments()},100)});return}setTimeout(()=>{this.markAlreadyAddedDocuments()},100)},markAlreadyAddedDocuments:function e(){console.log("=== INICIO markAlreadyAddedDocuments ===");const o=this.getView();if(!o){console.log("Vista no encontrada");return}const a=o.getModel("planilla");const l=o.getModel("oModel");if(!a||!l){console.log("Modelos no encontrados");return}const n=a.getData();const t=l.getData();console.log("Claves de datos de planilla:",n?Object.keys(n):"null");console.log("Claves de documentos disponibles:",t?Object.keys(t):"null");if(!n||!t||!t.documents){console.log("Faltan datos para marcar documentos");return}if(!n.VS_PMP1Collection){console.log("VS_PMP1Collection de planilla no encontrada, inicializando como vacía");n.VS_PMP1Collection=[];a.setData(n)}const s=(n.VS_PMP1Collection||[]).map(e=>e.U_NUMDOC);console.log("Documentos existentes en planilla:",s);console.log("Cantidad de documentos disponibles:",t.documents.length);console.log("Longitud de VS_PMP1Collection de planilla:",n.VS_PMP1Collection?n.VS_PMP1Collection.length:0);console.log("Inicializando todos los documentos a alreadyInPlanilla = false");t.documents.forEach((e,o)=>{e.alreadyInPlanilla=false;console.log(`Documento ${o}: ${e.DocNum} - alreadyInPlanilla establecido a false`)});if(!n.VS_PMP1Collection||n.VS_PMP1Collection.length===0){console.log("No hay documentos existentes en planilla, todos los documentos marcados como no agregados");t.documents.forEach((e,o)=>{e.alreadyInPlanilla=false;console.log(`Documento ${o}: ${e.DocNum} - alreadyInPlanilla establecido a false (planilla vacía)`)})}else{let e=0;t.documents.forEach((o,a)=>{const l=s.includes(o.DocNum);o.alreadyInPlanilla=l;console.log(`Documento ${a}: ${o.DocNum} - verificando contra existentes: ${s.join(", ")} - alreadyInPlanilla establecido a ${l}`);if(l){e++}});console.log(`Marcados ${e} documentos como ya agregados de ${t.documents.length} total`)}console.log("Actualizando modelo con datos modificados");l.setData(t);console.log("=== FIN markAlreadyAddedDocuments ===")}});return M});
},
	"com/vs/extension/finanb1/controller/modules/MenuManager.js":function(){
sap.ui.define(["sap/ui/model/json/JSONModel"],function(e){"use strict";class o{constructor(){this.oModel=new e}getModel(){return this.oModel}loadHardcodedMenuData(){const e={selectedKey:"pagosMasivos",navigation:[{key:"configuracion",text:"Configuración",icon:"sap-icon://settings"},{key:"pagosMasivos",text:"Pagos Masivos",icon:"sap-icon://money-bills"},{key:"detracciones",text:"Detracciones",icon:"sap-icon://document"}],fixedNavigation:[]};console.log("Cargando datos de menú hardcodeados:",e);this.oModel.setData(e)}filterNavigationByRole(e){console.log("Filtrando navegación por rol:",e);const o=this.oModel.getProperty("/navigation")||[];console.log("Navegación original:",o);const t=o.filter(o=>{if(e==="admin")return true;if(o.key==="configuracion")return false;return true});console.log("Navegación filtrada:",t);this.oModel.setProperty("/navigation",t);const s=this.oModel.getProperty("/selectedKey");const n=t.some(e=>e.key===s);if(!n&&t.length>0){this.oModel.setProperty("/selectedKey",t[0].key)}console.log("Datos finales del modelo:",this.oModel.getData());this.oModel.refresh(true);console.log("Modelo de menú actualizado")}setSelectedKey(e){this.oModel.setProperty("/selectedKey",e)}getSelectedKey(){return this.oModel.getProperty("/selectedKey")}}var t={__esModule:true};t.MenuManager=o;return t});
},
	"com/vs/extension/finanb1/controller/modules/NavigationManager.js":function(){
sap.ui.define(["sap/m/MessageBox"],function(e){"use strict";class o{constructor(e){this.controller=e}navigateToPage(o,n){console.log("Navegando a la clave:",o);if(o==="configuracion"&&n?.role!=="admin"){e.error("No tiene permisos para acceder a la configuración");return}const t=this.controller.getOwnerComponent();const a=t.getRouter();const r={configuracion:"RouteConfiguracion",pagosMasivos:"RoutePagosMasivos",detracciones:"RouteDetracciones"};const i=r[o];if(i){console.log("Navegando a la ruta:",i);a.navTo(i)}else{console.error("Ruta no encontrada para la clave:",o)}}onSideNavigationItemSelect(e){console.log("Evento de navegación activado:",e);const o=this.controller.getView();if(!o){console.error("No se encontró la vista");return}const n=o.getModel("menuModel");if(!n){console.error("No se encontró menuModel");return}const t=n.getProperty("/selectedKey");console.log("Clave seleccionada del modelo:",t);if(t){this.navigateToPage(t,this.controller.userManager?.getCurrentUser())}}onSideNavItemSelect(e){this.onSideNavigationItemSelect(e)}onMenuButtonPress(){const e=this.controller.byId("toolPage2");if(e&&typeof e.setSideExpanded==="function"&&typeof e.getSideExpanded==="function"){e.setSideExpanded(!e.getSideExpanded())}}}var n={__esModule:true};n.NavigationManager=o;return n});
},
	"com/vs/extension/finanb1/controller/modules/PagosMasivosManager.js":function(){
sap.ui.define(["sap/ui/model/json/JSONModel","sap/m/MessageToast","sap/m/MessageBox"],function(e,a,o){"use strict";class l{constructor(){this.oOriginalModel=new e;this.oFilteredModel=new e}initializeModels(){console.log("PagosMasivosManager - Initializing models...");const e="./model/mock/planillas.json";try{this.oOriginalModel.loadData(e,undefined,false);console.log("PagosMasivosManager - Data loaded from URL:",this.oOriginalModel.getData())}catch(e){console.log("PagosMasivosManager - Error loading data, using fallback:",e);this.loadFallbackData();return}this.sortPlanillasByDocEntry();this.oFilteredModel.setData(this.oOriginalModel.getData());console.log("PagosMasivosManager - Filtered model data:",this.oFilteredModel.getData())}getFilteredModel(){return this.oFilteredModel}getOriginalModel(){return this.oOriginalModel}sortPlanillasByDocEntry(){const e=this.oOriginalModel.getData();if(e&&e.PlanillasCollection&&Array.isArray(e.PlanillasCollection)){e.PlanillasCollection.sort((e,a)=>{const o=parseInt(e.DocEntry)||0;const l=parseInt(a.DocEntry)||0;return l-o});this.oOriginalModel.setData(e);console.log("PagosMasivosManager - Planillas ordenadas por DocEntry descendente")}}loadFallbackData(){const e={PlanillasCollection:[{Id:"HT-1000",Name:"Planilla Pago Proveedor 10003",DateOfSale:"2025-03-26",Status:"Ejecutada",Quantity:10,Price:1000.34,CurrencyCode:"SOL",Bank:"BCP"},{Id:"HT-1001",Name:"Planilla Pago Proveedor 10004",DateOfSale:"2024-04-17",Status:"Creada",Quantity:20,Price:1249,CurrencyCode:"USD",Bank:"BBVA"},{Id:"HT-1003",Name:"Planilla Pago Proveedor 10005",DateOfSale:"2024-04-09",Status:"Anulada",Quantity:15,Price:1650,CurrencyCode:"SOL",Bank:"Interbank"},{Id:"HT-1007",Name:"Planilla Pago Proveedor 10006",DateOfSale:"2024-05-17",Status:"Creada",Quantity:15,Price:299,CurrencyCode:"USD",Bank:"Scotiabank"},{Id:"HT-1010",Name:"Planilla Pago Proveedor 10007",DateOfSale:"2024-02-22",Status:"Ejecutada",Quantity:16,Price:1999,CurrencyCode:"SOL",Bank:"BCP"},{Id:"HT-1011",Name:"Planilla Pago Proveedor 10008",DateOfSale:"2024-03-15",Status:"Creada",Quantity:12,Price:850,CurrencyCode:"SOL",Bank:"BBVA"},{Id:"HT-1012",Name:"Planilla Pago Proveedor 10009",DateOfSale:"2024-06-10",Status:"Ejecutada",Quantity:8,Price:1200,CurrencyCode:"USD",Bank:"Interbank"},{Id:"HT-1013",Name:"Planilla Pago Proveedor 10010",DateOfSale:"2024-07-22",Status:"Anulada",Quantity:25,Price:2100,CurrencyCode:"SOL",Bank:"Scotiabank"},{Id:"HT-1014",Name:"Planilla Pago Proveedor 10011",DateOfSale:"2024-08-05",Status:"Creada",Quantity:18,Price:950,CurrencyCode:"BCP",Bank:"BCP"},{Id:"HT-1015",Name:"Planilla Pago Proveedor 10012",DateOfSale:"2024-09-12",Status:"Ejecutada",Quantity:22,Price:1750,CurrencyCode:"USD",Bank:"BBVA"}]};this.oOriginalModel.setData(e);this.oFilteredModel.setData(e)}onDateRangeChange(e){console.log("PagosMasivos - Rango de fechas cambiado:",e.getParameter("value"));this.applyFilters()}onStatusChange(e){this.applyFilters()}onBancoChange(e){this.applyFilters()}onClearFilters(){const e=this.getControlById("pagosMasivosDateRangeFilter");if(e){e.setValue("")}const o=this.getControlById("pagosMasivosStatusFilter");if(o){o.setSelectedKey("")}const l=this.getControlById("pagosMasivosBancoFilter");if(l){l.setSelectedKey("")}this.oFilteredModel.setData(this.oOriginalModel.getData());a.show("Filtros limpiados desde Pagos Masivos Controller",{duration:2e3})}onNuevaPlanillaButtonPress(){console.log("PagosMasivosManager - onNuevaPlanillaButtonPress triggered!");this.createNewPlanilla();this.navigateToDetailPage()}createNewPlanilla(){console.log("PagosMasivosManager - Creating new planilla...");const a=this.generateNewDocEntry();const o={DocEntry:a,DocNum:a,Period:(new Date).getMonth()+1,Instance:0,Series:-1,Handwrtten:"N",Status:"O",RequestStatus:"W",Creator:"manager",Remark:null,Canceled:"N",Object:"VS_OPMP",LogInst:null,UserSign:1,Transfered:"N",CreateDate:(new Date).toISOString().split("T")[0]+"T00:00:00Z",CreateTime:(new Date).toTimeString().split(" ")[0],UpdateDate:(new Date).toISOString().split("T")[0]+"T00:00:00Z",UpdateTime:(new Date).toTimeString().split(" ")[0],DataSource:"I",U_CUENTA:null,U_IDBANCO:null,U_NMBANCO:null,U_CCBANCO:null,U_MONEDA:null,U_GLACCOUNT:null,U_SERIE:null,U_ESTADO:"C",U_FECHA:(new Date).toISOString().split("T")[0]+"T00:00:00Z",U_FECHAP:null,U_TC:null,U_RETEN:null,U_FECHAV:null,U_IDSN:null,U_NMSN:null,U_GLOSA:"Nueva planilla de pagos masivos",U_TOTAL:0,U_IDPAGO:null,U_SUBTOTAL:0,U_REF:null,U_NOPBAN:null,U_IDSUC:null,U_NMSUC:null,U_FCAJA:-1,U_CONTA:0,VS_PMP1Collection:[],isNewPlanilla:true};console.log("PagosMasivosManager - New planilla data created:",o);const l=new e;l.setData(o);const t=this.getController().getView();if(t){t.setModel(l,"planilla");console.log("PagosMasivosManager - New planilla model assigned to view");this.loadSeriesData()}}generateNewDocEntry(){const e=new Date;const a=e.getTime();return Math.floor(a/1e3)%1e4}onSerieChange(e){console.log("PagosMasivosManager - onSerieChange triggered");console.log("PagosMasivosManager - Event parameters:",e.getParameters());const a=e.getParameter("selectedItem");const o=e.getParameter("selectedItem")?.getKey();const l=e.getParameter("newValue");console.log("PagosMasivosManager - Selected item:",a);console.log("PagosMasivosManager - Selected key:",o);console.log("PagosMasivosManager - New value:",l);if(!a){console.log("No se seleccionó ningún item");return}const t=a.getKey();console.log("PagosMasivosManager - Serie seleccionada (key):",t);const n=this.getController().getView().getModel("planilla");if(n){console.log("PagosMasivosManager - Current U_SERIE value:",n.getProperty("/U_SERIE"));n.setProperty("/U_SERIE",t);console.log("PagosMasivosManager - Updated U_SERIE value:",n.getProperty("/U_SERIE"));n.refresh(true)}else{console.error("PagosMasivosManager - Planilla model not found")}}onGuardarPlanilla(){console.log("PagosMasivosManager - Guardando planilla...");const e=this.getController().getView();if(!e){console.error("View not found");return}const a=e.getModel("planilla");if(!a){console.error("Planilla model not found");return}const o=a.getData();console.log("Datos de la planilla a guardar:",o);if(o.isNewPlanilla){this.createPlanillaInMockDatabase(o)}else{this.updatePlanillaInMockDatabase(o)}}createPlanillaInMockDatabase(e){const l="./model/mock/planilla-object.json";fetch(l).then(e=>e.json()).then(o=>{const{isNewPlanilla:l,...t}=e;o.planillas.push(t);console.log("Nueva planilla agregada al mock database:",t);this.simulateServerCreate(t);a.show("Planilla creada exitosamente",{duration:3e3});this.navigateBackToList()}).catch(e=>{console.error("Error al crear la planilla:",e);o.error("Error al crear la planilla")})}updatePlanillaInMockDatabase(e){const l="./model/mock/planilla-object.json";fetch(l).then(e=>e.json()).then(l=>{const t=l.planillas||[];const n=t.findIndex(a=>a.DocEntry===e.DocEntry);console.log("Planilla index:",n);if(n!==-1){t[n]={...t[n],...e,UpdateDate:(new Date).toISOString().split("T")[0]+"T00:00:00Z",UpdateTime:(new Date).toTimeString().split(" ")[0]};console.log("Planilla actualizada en el mock database:",t[n]);const o={DocEntry:t[n].DocEntry,U_SERIE:t[n].U_SERIE,U_FECHAP:t[n].U_FECHAP,U_NOPBAN:t[n].U_NOPBAN};this.simulateServerUpdate(o);a.show("Planilla guardada exitosamente",{duration:3e3})}else{console.error("Planilla no encontrada en el mock database");o.error("Error: No se pudo encontrar la planilla para actualizar")}}).catch(e=>{console.error("Error al cargar el mock database:",e);o.error("Error al cargar los datos de la planilla")})}simulateServerUpdate(e){o.information("Backend POST/EjecutarPlanilla - Payload: "+JSON.stringify(e,null,2),{title:"Datos enviados al backend",details:"Esta información se enviaría al servidor en un entorno real"});console.log("Simulando actualización en el servidor...");console.log("Datos que se enviarían al servidor:",e)}simulateServerCreate(e){o.information("Backend POST/CrearPlanilla - Payload: "+JSON.stringify(e,null,2),{title:"Datos enviados al backend",details:"Esta información se enviaría al servidor en un entorno real"});console.log("Simulando creación en el servidor...");console.log("Datos que se enviarían al servidor:",e)}onFechaEjecucionChange(e){const l=e.getParameter("value");console.log("Fecha de ejecución seleccionada:",l);if(!l){return}const t=e.getSource();const n=this.getController().getView().getModel("planilla").getProperty("/U_FECHAP");console.log("Valor original de la fecha:",n);e.preventDefault();let s;if(l instanceof Date){s=l.toISOString().split("T")[0]}else if(typeof l==="string"){try{const e=l.split(" ");if(e.length===3){const a=parseInt(e[0]);const o=e[1].toLowerCase();const t=parseInt(e[2]);const n={ene:0,feb:1,mar:2,abr:3,may:4,jun:5,jul:6,ago:7,sep:8,oct:9,nov:10,dic:11};const r=n[o];if(r!==undefined&&!isNaN(a)&&!isNaN(t)){const e=new Date(t,r,a);s=e.toISOString().split("T")[0]}else{console.error("No se pudo parsear la fecha:",l);return}}else{const e=new Date(l);if(isNaN(e.getTime())){console.error("No se pudo parsear la fecha:",l);return}s=e.toISOString().split("T")[0]}}catch(e){console.error("Error al convertir la fecha:",e);return}}else{console.error("Formato de fecha no válido:",l);return}const r="./model/mock/tipos-cambio.json";fetch(r).then(e=>e.json()).then(e=>{console.log("PagosMasivosManager - Fecha:",s);const r=e.ExchangeRates.find(e=>e.Currency==="USD"&&e.Date.startsWith(s));if(r){const e=this.getController().getView().getModel("planilla");if(e){e.setProperty("/U_TC",r.Rate);e.setProperty("/U_FECHAP",l);a.show(`Tipo de cambio USD actualizado: ${r.Rate}`,{duration:2e3})}}else{console.log("No se encontró tipo de cambio para la fecha:",s);let e=n;if(n&&typeof n==="string"){try{const a=new Date(n);if(!isNaN(a.getTime())){e=a.toLocaleDateString("es-ES",{day:"2-digit",month:"short",year:"numeric"})}}catch(e){console.error("Error al formatear la fecha original:",e)}}t.setValue(e);o.error(`No existe tipo de cambio para la fecha ${s}`,{title:"Error de Tipo de Cambio",details:"Por favor seleccione otra fecha"})}}).catch(e=>{console.error("Error cargando tipos de cambio:",e);o.error("Error al cargar los tipos de cambio",{title:"Error",details:e.message})})}onDownloadPlanilla(){console.log("onDownloadPlanilla called from PagosMasivosManager!");const e=this.getController().getView();if(!e){console.error("PagosMasivosManager - No view found");a.show("Error: No se pudo acceder a la vista",{duration:2e3});return}const o=e.getModel("planilla");if(!o){console.error("PagosMasivosManager - No planilla model found");a.show("Error: No se encontraron datos para descargar",{duration:2e3});return}const l=o.getData();console.log("PagosMasivosManager - Downloading planilla data:",l);if(!l){console.error("PagosMasivosManager - No planilla data found");a.show("Error: No hay datos de planilla disponibles",{duration:2e3});return}try{const e=JSON.stringify(l,null,2);console.log("PagosMasivosManager - JSON data created:",e.substring(0,200)+"...");const o=new Blob([e],{type:"application/json;charset=utf-8"});console.log("PagosMasivosManager - Blob created, size:",o.size);const t=URL.createObjectURL(o);console.log("PagosMasivosManager - URL created:",t);const n=document.createElement("a");n.href=t;n.download=`planilla_${l.Id||"detalle"}_${(new Date).toISOString().split("T")[0]}.json`;n.style.display="none";console.log("PagosMasivosManager - Download filename:",n.download);document.body.appendChild(n);console.log("PagosMasivosManager - Link added to DOM");n.click();console.log("PagosMasivosManager - Link clicked");setTimeout(()=>{document.body.removeChild(n);URL.revokeObjectURL(t);console.log("PagosMasivosManager - Cleanup completed")},100);a.show("Archivo descargado exitosamente",{duration:2e3})}catch(e){console.error("PagosMasivosManager - Error during download:",e);a.show("Error al descargar el archivo",{duration:2e3});try{const e=JSON.stringify(l,null,2);const a=window.open("","_blank");if(a){a.document.write("<pre>"+e+"</pre>");a.document.title=`Planilla ${l.Id||"detalle"}`;console.log("PagosMasivosManager - Fallback: opened in new window")}}catch(e){console.error("PagosMasivosManager - Fallback also failed:",e)}}}onListItemPress(e){console.log("PagosMasivosManager - onListItemPress triggered!",e);const a=e.getParameter("listItem");if(!a){console.log("PagosMasivosManager - No listItem parameter found");return}console.log("PagosMasivosManager - List item:",a);let o=a.getBindingContext("planillas");if(!o){console.log("PagosMasivosManager - Trying without model name...");o=a.getBindingContext()}if(!o||!o.getObject){console.log("PagosMasivosManager - No context or getObject found");console.log("PagosMasivosManager - Context:",o);const e=this.getControlById("pagosMasivosPlanillasList");if(e){console.log("PagosMasivosManager - List found:",e);const o=e.getItems();console.log("PagosMasivosManager - List items count:",o.length);for(let l=0;l<o.length;l++){if(o[l]===a){console.log("PagosMasivosManager - Found clicked item at index:",l);const a=e.getModel("planillas");if(a){const e=a.getData();const o=e?.PlanillasCollection||[];if(o[l]){console.log("PagosMasivosManager - Found planilla data:",o[l]);this.handlePlanillaSelection(o[l]);return}}break}}console.log("PagosMasivosManager - Clicked item not found in list items")}return}const l=o.getObject();console.log("PagosMasivosManager - Planilla data:",l);this.handlePlanillaSelection(l)}handlePlanillaSelection(e){if(e&&e.DocEntry){const a=e.DocEntry;console.log("PagosMasivosManager - Found planilla with ID:",a,"from planilla:",e);console.log("PagosMasivosManager - Planilla ID:",a);this.loadPlanillaById(a);const o=this.getController().getOwnerComponent();const l=o.getRouter();l.navTo("RoutePagosMasivosDetalle",{planillaId:a})}else{console.log("PagosMasivosManager - No valid planilla ID found")}}loadPlanillaById(a){console.log("PagosMasivosManager - Loading planilla by ID:",a);const o="./model/mock/planilla-object.json";try{const l=new e;l.loadData(o,undefined,false);const t=l.getData();console.log("PagosMasivosManager - Planilla detail data loaded:",t);const n=t?.planillas||[];console.log("PagosMasivosManager - Available planillas:",n);const s=parseInt(a);const r=n.find(e=>e.DocEntry===s);if(r){console.log("PagosMasivosManager - Planilla found in detail data:",r);if(r.VS_PMP1Collection&&r.VS_PMP1Collection.length>0){console.log("PagosMasivosManager - Planilla Lines count:",r.VS_PMP1Collection.length);console.log("PagosMasivosManager - Planilla Lines:",r.VS_PMP1Collection);r.VS_PMP1Collection.forEach((e,a)=>{console.log(`PagosMasivosManager - Line ${a+1}:`,{LineId:e.LineId,DocEntry:e.DocEntry,DocNum:e.DocNum,NumAtCard:e.NumAtCard,CardCode:e.CardCode,CardName:e.CardName,DocDate:e.DocDate,DocDueDate:e.DocDueDate,TaxDate:e.TaxDate,TaxCode:e.TaxCode,TaxAmount:e.TaxAmount,TaxAmountFC:e.TaxAmountFC,DocTotal:e.DocTotal,DocTotalFC:e.DocTotalFC,WithholdingTax:e.WithholdingTax})})}else{console.log("PagosMasivosManager - No lines found for this planilla")}const a=new e;a.setData(r);const o=this.getController().getView();if(o){o.setModel(a,"planilla");console.log("PagosMasivosManager - Planilla model assigned to view");this.loadSeriesData()}}else{console.log("PagosMasivosManager - Planilla not found in detail data, trying fallback");this.loadFallbackPlanillaData(a)}}catch(e){console.error("PagosMasivosManager - Exception loading planilla detail data:",e);this.loadFallbackPlanillaData(a)}}loadFallbackPlanillaData(a){console.log("PagosMasivosManager - Loading fallback planilla data for ID:",a);const o={DocEntry:parseInt(a),DocNum:parseInt(a),U_CUENTA:"1041101",U_IDBANCO:"BCP",U_NMBANCO:"BANCO DE CREDITO",U_CCBANCO:"1941985504094",U_MONEDA:"SOL",U_SERIE:24,U_ESTADO:"E",U_FECHA:"2024-03-21T00:00:00Z",U_FECHAP:"2024-03-21T00:00:00Z",U_TC:3.701,U_RETEN:null,U_FECHAV:null,U_IDSN:null,U_NMSN:null,U_GLOSA:"PG F/VARIAS",U_TOTAL:19516.06,U_IDPAGO:1977,U_SUBTOTAL:19516.06,U_REF:null,U_NOPBAN:"09627515",U_IDSUC:null,U_NMSUC:null,U_FCAJA:-1,U_CONTA:0,VS_PMP1Collection:[{DocEntry:parseInt(a),LineId:1,VisOrder:1,Object:"VS_OPMP",LogInst:null,U_CHECK:"Y",U_IDPAGO:1971,U_TIPDOC:"Factura",U_IDDOC:3617,U_LINDOC:0,U_OBJDOC:"18",U_CUODOC:"1",U_IDSN:"PL10081644867",U_NMSN:"BUSTAMANTE DAVILA MARIA ELIZABETH",U_RUC:"10081644867",U_NUMDOC:"E001-78",U_MONDOC:"SOL",U_IMPORTE:288,U_SALDO:288,U_PAGONETO:288,U_PAGLOC:288,U_PAGEXT:0,U_RETLOC:0,U_RETEXT:0,U_FVENC:"2024-03-15T00:00:00Z",U_FCONT:"2024-03-15T00:00:00Z",U_FDOCU:"2024-03-15T00:00:00Z",U_CCORRI:"19394614129025",U_CTAINF:"BCP",U_MONINF:"SOL",U_RETCOD:"",U_RETPOR:0,U_ESTADO:"1",U_SL:288,U_SE:0,U_RL:0,U_RE:0,U_BL:0,U_BE:0,U_IL:288,U_REF2:"01E001-78",U_PAGLOC0:0,U_PAGEXT0:0,U_RETLOC0:0,U_RETEXT0:0,U_MPBB:"2"}]};const l=new e;l.setData(o);const t=this.getController().getView();if(t){t.setModel(l,"planilla");console.log("PagosMasivosManager - Fallback planilla model assigned to view");this.loadSeriesData()}}loadSeriesData(){console.log("PagosMasivosManager - Loading series data...");const a="./model/mock/series-pago.json";fetch(a).then(e=>{console.log("PagosMasivosManager - Series response status:",e.status);return e.json()}).then(a=>{console.log("PagosMasivosManager - Series data received:",a);const o=this.getController().getView();if(o){const l=new e;l.setData(a);o.setModel(l,"series");console.log("PagosMasivosManager - Series model assigned to view");console.log("PagosMasivosManager - Series model data:",l.getData())}else{console.error("PagosMasivosManager - View not found when loading series")}}).catch(e=>{console.error("Error cargando series:",e)})}navigateToDetailPage(){console.log("PagosMasivosManager - Navigating to detail page");const e=this.getController().getOwnerComponent();const a=e.getRouter();a.navTo("RoutePagosMasivosDetalle",{planillaId:"new"});console.log("PagosMasivosManager - Navigation to detail completed")}navigateBackToList(){console.log("PagosMasivosManager - Navigating back to list");const e=this.getController().getOwnerComponent();const a=e.getRouter();a.navTo("RoutePagosMasivos");console.log("PagosMasivosManager - Navigation back completed")}applyFilters(){const e=[];const a=this.getControlById("pagosMasivosDateRangeFilter");if(a&&a.getValue()){const o=a.getValue();console.log("PagosMasivos - Filtro de rango de fechas:",a);console.log("PagosMasivos - Valor del rango de fechas:",o);if(o&&typeof o==="string"&&o.includes(" - ")){const[a,l]=o.split(" - ");if(a){const o=new Date(a);e.push({path:"DateOfSale",operator:"GE",value:o})}if(l){const a=new Date(l);e.push({path:"DateOfSale",operator:"LE",value:a})}}}const o=this.getControlById("pagosMasivosStatusFilter");if(o&&o.getSelectedKey()&&o.getSelectedKey()!==""){e.push({path:"U_ESTADO",operator:"EQ",value:o.getSelectedKey()})}const l=this.getControlById("pagosMasivosBancoFilter");if(l&&l.getSelectedKey()&&l.getSelectedKey()!==""){e.push({path:"U_IDBANCO",operator:"EQ",value:l.getSelectedKey()})}const t=this.oOriginalModel.getData();let n=t;if(e.length>0){n=this.filterData(t,e)}this.oFilteredModel.setData(n)}filterData(e,a){if(!e||!e.PlanillasCollection){return e}const o=e.PlanillasCollection.filter(e=>a.every(a=>{const o=e[a.path];const l=a.value;switch(a.operator){case"EQ":return o===l;case"GE":if(a.path==="DateOfSale"){const e=new Date(o);return e>=l}return o>=l;case"LE":if(a.path==="DateOfSale"){const e=new Date(o);return e<=l}return o<=l;default:return true}}));return{...e,PlanillasCollection:o}}getControlById(e){return null}getOwnerComponent(){return null}setController(e){console.log("PagosMasivosManager - Setting controller reference:",e);this.controller=e;this.getControlById=a=>{const o=e.byId(a);console.log("PagosMasivosManager - Getting control by ID:",a,o);return o};this.getOwnerComponent=()=>e.getOwnerComponent()}getController(){return this.controller}onAddDocumentos(){console.log("PagosMasivosManager - onAddDocumentos triggered");const e=this.getController().getView().getModel("planilla");if(!e){console.error("PagosMasivosManager - Planilla model not found");return}const o=e.getData();if(!o.isNewPlanilla){a.show("Solo se pueden agregar documentos en modo creación",{duration:3e3});return}this.loadAvailableDocuments();const l=this.getController().byId("documentSelectionDialog");if(l){l.open()}else{console.error("PagosMasivosManager - Document selection dialog not found")}}loadAvailableDocuments(){console.log("PagosMasivosManager - Loading available documents...");const o="./model/mock/available-documents.json";fetch(o).then(e=>{console.log("PagosMasivosManager - Documents response status:",e.status);return e.json()}).then(a=>{console.log("PagosMasivosManager - Documents data received:",a);const o=this.getController().getView().getModel("planilla");const l=o?o.getData().VS_PMP1Collection||[]:[];console.log("PagosMasivosManager - Current planilla lines:",l.length);if(l.length>0){console.log("PagosMasivosManager - Planilla lines details:");l.forEach((e,a)=>{console.log(`  Line ${a}: U_NUMDOC="${e.U_NUMDOC}", U_IDSN="${e.U_IDSN}"`)})}console.log("PagosMasivosManager - Available documents:",a.documents.length);console.log("PagosMasivosManager - First few available documents:");a.documents.slice(0,3).forEach((e,a)=>{console.log(`  Doc ${a}: DocNum="${e.DocNum}", CardCode="${e.CardCode}"`)});a.documents.forEach(e=>{e.selected=false;e.alreadyInPlanilla=false;if(l.length>0){console.log(`PagosMasivosManager - Checking document ${e.DocNum} (${e.CardCode}) against ${l.length} planilla lines`);const a=l.some(a=>{const o=a.U_NUMDOC===e.DocNum&&a.U_IDSN===e.CardCode;console.log(`PagosMasivosManager - Comparing: "${a.U_NUMDOC}" === "${e.DocNum}" && "${a.U_IDSN}" === "${e.CardCode}" = ${o}`);if(o){console.log(`PagosMasivosManager - Document ${e.DocNum} (${e.CardCode}) matches planilla line ${a.U_NUMDOC} (${a.U_IDSN})`)}return o});e.alreadyInPlanilla=a}else{console.log(`PagosMasivosManager - No planilla lines to check against for document ${e.DocNum}`)}console.log(`PagosMasivosManager - Document ${e.DocNum} (${e.CardCode}) - alreadyInPlanilla: ${e.alreadyInPlanilla}`)});const t={documents:a.documents,selectedTotal:0,selectedCount:0,existingCount:0};const n=this.getController().getView();if(n){const a=new e;a.setData(t);n.setModel(a,"availableDocuments");console.log("PagosMasivosManager - Available documents model assigned to view")}else{console.error("PagosMasivosManager - View not found when loading documents")}}).catch(e=>{console.error("Error cargando documentos disponibles:",e);a.show("Error al cargar documentos disponibles",{duration:3e3})})}onDocumentSearch(e){const a=e.getParameter("query").toLowerCase();console.log("PagosMasivosManager - Document search:",a);const o=this.getController().getView().getModel("availableDocuments");if(!o)return;const l=o.getData();const t=l.documents;const n=t.filter(e=>e.CardName.toLowerCase().includes(a)||e.DocNum.toLowerCase().includes(a)||e.CardCode.toLowerCase().includes(a));o.setProperty("/documents",n)}onDocumentBankFilterChange(e){const a=e.getParameter("selectedItem").getKey();console.log("PagosMasivosManager - Document bank filter:",a);this.loadAvailableDocuments();if(a){const e=this.getController().getView().getModel("availableDocuments");if(!e)return;const o=e.getData();const l=o.documents;const t=l.filter(e=>e.BankCode===a);e.setProperty("/documents",t)}}onDocumentSelectionChange(e){console.log("PagosMasivosManager - Document selection changed");const a=this.getController().getView().getModel("availableDocuments");if(!a)return;const o=a.getData();const l=o.documents;const t=this.getController().getView().getModel("planilla");const n=t?t.getData().VS_PMP1Collection||[]:[];const s=this.getController().byId("availableDocumentsTable");const r=s.getSelectedItems();l.forEach(e=>{e.selected=r.some(a=>{const o=a.getBindingContext("availableDocuments");return o&&o.getProperty("DocEntry")===e.DocEntry});e.alreadyInPlanilla=false;if(n.length>0){const a=n.some(a=>{const o=a.U_NUMDOC===e.DocNum&&a.U_IDSN===e.CardCode;if(o){console.log(`PagosMasivosManager - Selection change: Document ${e.DocNum} (${e.CardCode}) matches planilla line ${a.U_NUMDOC} (${a.U_IDSN})`)}return o});e.alreadyInPlanilla=a}});const i=l.filter(e=>e.selected&&!e.alreadyInPlanilla);const c=i.reduce((e,a)=>e+a.Balance,0);const g=i.length;const d=l.filter(e=>e.selected&&e.alreadyInPlanilla);const u=d.length;a.setProperty("/selectedTotal",c);a.setProperty("/selectedCount",g);a.setProperty("/existingCount",u);a.refresh(true);if(u>0){console.log(`PagosMasivosManager - ${u} selected document(s) already exist in planilla`)}}onDocumentDialogCancel(){console.log("PagosMasivosManager - Document dialog cancelled");const e=this.getController().byId("documentSelectionDialog");if(e){e.close()}}onDocumentDialogConfirm(){console.log("PagosMasivosManager - Document dialog confirmed");const e=this.getController().getView().getModel("availableDocuments");if(!e)return;const o=e.getData();const l=o.documents.filter(e=>e.selected);if(l.length===0){a.show("No hay documentos seleccionados",{duration:3e3});return}const t=this.getController().getView().getModel("planilla");const n=t?t.getData().VS_PMP1Collection||[]:[];const s=l.filter(e=>{const a=n.some(a=>a.U_NUMDOC===e.DocNum&&a.U_IDSN===e.CardCode);if(a){console.log(`PagosMasivosManager - Document ${e.DocNum} already in planilla, skipping`)}return!a});if(s.length===0){a.show("Todos los documentos seleccionados ya existen en la planilla",{duration:3e3});return}if(s.length<l.length){const e=l.length-s.length;a.show(`${e} documento(s) duplicado(s) fueron omitidos`,{duration:3e3})}this.addDocumentsToPlanilla(s);const r=this.getController().byId("documentSelectionDialog");if(r){r.close()}a.show(`${s.length} documento(s) agregado(s) a la planilla`,{duration:3e3})}addDocumentsToPlanilla(e){console.log("PagosMasivosManager - Adding documents to planilla:",e);const a=this.getController().getView().getModel("planilla");if(!a)return;const o=a.getData();const l=o.VS_PMP1Collection||[];const t=e.map((e,a)=>{const o=l.length+a+1;return{LineId:o,DocEntry:e.DocEntry,DocNum:e.DocNum,NumAtCard:e.DocNum,CardCode:e.CardCode,CardName:e.CardName,DocDate:e.DocDate,DocDueDate:e.DueDate,TaxDate:e.DocDate,TaxCode:"",TaxAmount:0,TaxAmountFC:0,DocTotal:e.Total,DocTotalFC:e.Total,WithholdingTax:0,U_NUMDOC:e.DocNum,U_IDSN:e.CardCode,U_NMSN:e.CardName,U_FDOCU:e.DocDate,U_FVENC:e.DueDate,U_IMPORTE:e.Total,U_SALDO:e.Balance,U_RETLOC:0,U_PAGLOC0:e.Balance,U_CTAINF:e.BankCode,U_CCORRI:e.AccountCode,U_MONINF:e.Currency}});const n=[...l,...t];o.VS_PMP1Collection=n;this.recalculatePlanillaTotals(o);a.setData(o);a.refresh(true);console.log("PagosMasivosManager - Documents added to planilla. Total lines:",n.length);console.log("PagosMasivosManager - Documents added:",e.length)}recalculatePlanillaTotals(e){const a=e.VS_PMP1Collection||[];const o=a.reduce((e,a)=>e+(a.U_IMPORTE||0),0);const l=a.reduce((e,a)=>e+(a.U_RETLOC||0),0);const t=o-l;e.U_TOTAL=o;e.U_RETEN=l;e.U_SUBTOTAL=t;console.log("PagosMasivosManager - Planilla totals recalculated:",{total:o,reten:l,subtotal:t})}}var t={__esModule:true};t.PagosMasivosManager=l;return t});
},
	"com/vs/extension/finanb1/controller/modules/UserManager.js":function(){
sap.ui.define([],function(){"use strict";class e{constructor(){this.oCurrentUser=null}loadAuthenticatedUser(){const e=sessionStorage.getItem("finanb1_auth")||localStorage.getItem("finanb1_auth");if(e){try{const t=JSON.parse(e);if(t.isAuthenticated&&t.userInfo){this.oCurrentUser=t.userInfo;console.log("Usuario autenticado cargado:",this.oCurrentUser)}else{this.setDefaultUser()}}catch(e){console.error("Error parsing auth data:",e);this.setDefaultUser()}}else{this.setDefaultUser()}return this.oCurrentUser}setDefaultUser(){this.oCurrentUser={id:1,name:"Demo User",email:"demo@company.com",role:"admin",status:"active",companies:[{id:1,name:"Demo Company"}]};console.log("Usando usuario por defecto:",this.oCurrentUser)}getCurrentUser(){return this.oCurrentUser}checkAuthentication(){const e=sessionStorage.getItem("com.vs.extension.finanb1_auth")||localStorage.getItem("com.vs.extension.finanb1_auth");if(!e)return false;const t=JSON.parse(e);return t&&t.isAuthenticated}logout(){sessionStorage.removeItem("finanb1_auth");localStorage.removeItem("finanb1_auth");this.oCurrentUser=null}}var t={__esModule:true};t.UserManager=e;return t});
},
	"com/vs/extension/finanb1/delegate/JSONFilterBarDelegate.js":function(){
sap.ui.define(["sap/ui/core/Element","sap/ui/mdc/FilterBarDelegate","sap/ui/mdc/FilterField"],function(e,t,a){"use strict";const n=[{key:"name",dataType:"sap.ui.model.type.String",label:"Name",maxConditions:1},{key:"height",dataType:"sap.ui.model.type.Integer",label:"Height",maxConditions:1},{key:"prominence",dataType:"sap.ui.model.type.Float",label:"Prominence",maxConditions:-1},{key:"parent_mountain",dataType:"sap.ui.model.type.Boolean",label:"Has parent mountain",maxConditions:1},{key:"first_ascent",dataType:"sap.ui.model.odata.type.Date",label:"First Ascent",maxConditions:1},{key:"rank",dataType:"sap.ui.model.type.Integer",label:"Rank",maxConditions:1}];const i=Object.assign({},t);i.fetchProperties=async()=>n;const o=async(e,t,n)=>{const i=t.key;const o=new a(e,{dataType:t.dataType,conditions:"{$filters>/conditions/"+i+"}",propertyKey:i,required:t.required,label:t.label,maxConditions:t.maxConditions,delegate:{name:"sap/ui/mdc/field/FieldBaseDelegate",payload:{}}});return o};i.addItem=async(t,i)=>{const s=n.find(e=>e.key===i);const r=t.getId()+"--filter--"+i;const d=e.getElementById(r);if(d&&d instanceof a){return d}if(!s){throw new Error(`Property ${i} not found in JSONPropertyInfo`)}return await o(r,s,t)};i.removeItem=async(e,t)=>{t.destroy();return true};return i});
},
	"com/vs/extension/finanb1/i18n/i18n.properties":'# This is the resource bundle for com.vs.extension.finanb1\n\n#Texts for manifest.json\n\n#XTIT: Application name\nappTitle=FinanB1 - Ventura Soluciones\n\n#YDES: Application description\nappDescription=An SAP UI5 application.\r\n#XTIT: Main view title\ntitle=FinanB1 - Ventura Soluciones',
	"com/vs/extension/finanb1/manifest.json":'{"_version":"1.65.0","sap.app":{"id":"com.vs.extension.finanb1","type":"application","i18n":"i18n/i18n.properties","applicationVersion":{"version":"0.0.1"},"title":"{{appTitle}}","description":"{{appDescription}}","resources":"resources.json","sourceTemplate":{"id":"@sap/generator-fiori:basic","version":"1.17.5","toolsId":"5ba13c26-0210-42cc-9bcd-9adbff83c026"},"dataSources":{"mountains":{"uri":"model/mountains.json","type":"JSON"}}},"sap.ui":{"technology":"UI5","icons":{"icon":"","favIcon":"","phone":"","phone@2":"","tablet":"","tablet@2":""},"deviceTypes":{"desktop":true,"tablet":true,"phone":true}},"sap.ui5":{"config":{"sample":{"files":["controller/FilterbarTypes.controller.js","delegate/JSONFilterBarDelegate.js","model/metadata/JSONPropertyInfo.js","view/FilterbarTypes.view.xml","model/mountains.json","model/formatter.js","manifest.json"]}},"flexEnabled":false,"dependencies":{"minUI5Version":"1.136.2","libs":{"sap.m":{},"sap.ui.core":{},"sap.tnt":{},"sap.ui.mdc":{},"sap.f":{},"sap.ui.fl":{},"sap.ui.comp":{},"sap.ui.unified":{},"sap.ui.codeeditor":{}}},"contentDensities":{"compact":true,"cozy":true},"models":{"i18n":{"type":"sap.ui.model.resource.ResourceModel","settings":{"bundleName":"com.vs.extension.finanb1.i18n.i18n"}},"":{"type":"sap.ui.model.json.JSONModel","settings":{}},"mountains":{"type":"sap.ui.model.json.JSONModel","dataSource":"mountains"}},"resources":{"css":[{"uri":"css/style.css"}]},"routing":{"config":{"routerClass":"sap.m.routing.Router","controlAggregation":"pages","controlId":"app","transition":"slide","type":"View","viewType":"XML","path":"com.vs.extension.finanb1.view","async":true,"viewPath":"com.vs.extension.finanb1.view"},"routes":[{"name":"RouteLogin","pattern":"","target":["TargetLogin"]},{"name":"RouteConfiguracion","pattern":"configuracion","target":["TargetConfiguracion"]},{"name":"RoutePagosMasivos","pattern":"pagos-masivos","target":["TargetPagosMasivos"]},{"name":"RoutePagosMasivosDetalle","pattern":"pagos-masivos/{planillaId}","target":["TargetPagosMasivosDetalle"]},{"name":"RouteDetracciones","pattern":"detracciones","target":["TargetDetracciones"]}],"targets":{"TargetLogin":{"id":"Login","name":"Login","viewName":"Login","viewId":"Login","viewPath":"com.vs.extension.finanb1.view"},"TargetConfiguracion":{"id":"Configuracion","name":"Configuracion","viewName":"Configuracion","viewId":"Configuracion","viewPath":"com.vs.extension.finanb1.view"},"TargetPagosMasivos":{"id":"PagosMasivos","name":"PagosMasivos","viewName":"PagosMasivos","viewId":"PagosMasivos","viewPath":"com.vs.extension.finanb1.view"},"TargetPagosMasivosDetalle":{"id":"PagosMasivosDetalle","name":"PagosMasivosDetalle","viewName":"PagosMasivosDetalle","viewId":"PagosMasivosDetalle","viewPath":"com.vs.extension.finanb1.view"},"TargetDetracciones":{"id":"Detracciones","name":"Detracciones","viewName":"Detracciones","viewId":"Detracciones","viewPath":"com.vs.extension.finanb1.view"}}},"rootView":{"viewName":"com.vs.extension.finanb1.view.App","type":"XML","id":"App","async":true}}}',
	"com/vs/extension/finanb1/model/formatter.js":function(){
sap.ui.define([],function(){"use strict";const t={status:t=>{switch(t){case"E":return"Success";case"C":return"Warning";case"A":return"Error";default:return"None"}},estadoText:t=>{switch(t){case"E":return"Ejecutada";case"C":return"Creada";case"A":return"Anulada";default:return t}},date:t=>{if(!t)return"";try{const e=new Date(t);return e.toLocaleDateString("es-ES",{year:"numeric",month:"2-digit",day:"2-digit"})}catch(e){return t}},odataDate:t=>{if(!t)return"";try{if(t.startsWith("/Date(")&&t.endsWith(")/")){const e=parseInt(t.substring(6,t.length-2));const r=new Date(e);return r.toLocaleDateString("es-ES",{year:"numeric",month:"2-digit",day:"2-digit"})}else{const e=new Date(t);return e.toLocaleDateString("es-ES",{year:"numeric",month:"2-digit",day:"2-digit"})}}catch(e){return t}},currency:t=>{if(t===null||t===undefined||t===0)return"0.00";return t.toLocaleString("es-ES",{minimumFractionDigits:2,maximumFractionDigits:2})},negativeCurrency:t=>{if(t===null||t===undefined||t===0)return"0.00";return(-t).toLocaleString("es-ES",{minimumFractionDigits:2,maximumFractionDigits:2})},isEditable:t=>t==="C",isDocumentSelectable:(t,e)=>{if(!t||!e)return true;return!e.some(e=>e.U_NUMDOC===t.DocNum&&e.U_IDSN===t.CardCode)},isNewPlanilla:t=>t===true};return t});
},
	"com/vs/extension/finanb1/model/metadata/JSONPropertyInfo.js":function(){
sap.ui.define([],function(){"use strict";const e=[{key:"rank",label:"Rank",visible:true,path:"rank",dataType:"sap.ui.model.type.Integer",formatOptions:{emptyString:0},constraints:{minimum:0}},{key:"name",label:"Name",visible:true,path:"name",dataType:"sap.ui.model.type.String"},{key:"height",label:"Height",visible:true,path:"height",dataType:"sap.ui.model.type.Integer"},{key:"prominence",label:"Prominence",visible:true,path:"prominence",dataType:"sap.ui.model.type.Float"},{key:"range",label:"Range",visible:true,path:"range",dataType:"sap.ui.model.type.String"},{key:"coordinates",label:"Coordinates",visible:true,path:"coordinates",dataType:"sap.ui.model.type.String"},{key:"parent_mountain",label:"Parent Mountain",visible:true,path:"parent_mountain",dataType:"sap.ui.model.type.Boolean"},{key:"first_ascent",label:"First Ascent",visible:true,path:"first_ascent",dataType:"sap.ui.model.odata.type.Date",formatOptions:{style:"long"},constraints:{V4:true}},{key:"countries",label:"Countries",visible:true,path:"countries",dataType:"sap.ui.model.type.String"},{key:"$search",label:"Search",visible:true,maxConditions:1,dataType:"sap.ui.model.type.String"}];return e},false);
},
	"com/vs/extension/finanb1/model/mock/odata-service.js":function(){
sap.ui.define(["sap/ui/base/Object"],function(a){"use strict";return a.extend("com.vs.extension.finanb1.model.mock.ODataService",{constructor:function(){a.call(this);this._data=this._loadMockData()},_loadMockData:function(){return[{DocEntry:1001,DocNum:"F001-001",CardCode:"C001",CardName:"EMPRESA COMERCIAL ABC S.A.C.",DocType:"Factura",DocDate:"/Date(1710374400000)/",DueDate:"/Date(1713052800000)/",Currency:"SOL",Total:1500,Balance:1500,BankCode:"BCP",BankName:"BANCO DE CREDITO",AccountCode:"1041101",AccountName:"CUENTA CORRIENTE BCP"},{DocEntry:1002,DocNum:"F001-002",CardCode:"C002",CardName:"DISTRIBUIDORA XYZ E.I.R.L.",DocType:"Factura",DocDate:"/Date(1710460800000)/",DueDate:"/Date(1713139200000)/",Currency:"SOL",Total:2300.5,Balance:2300.5,BankCode:"BCP",BankName:"BANCO DE CREDITO",AccountCode:"1041101",AccountName:"CUENTA CORRIENTE BCP"},{DocEntry:1003,DocNum:"F001-003",CardCode:"C003",CardName:"SERVICIOS INTEGRALES S.A.",DocType:"Factura",DocDate:"/Date(1710547200000)/",DueDate:"/Date(1713225600000)/",Currency:"SOL",Total:850.75,Balance:850.75,BankCode:"BCP",BankName:"BANCO DE CREDITO",AccountCode:"1041101",AccountName:"CUENTA CORRIENTE BCP"},{DocEntry:1004,DocNum:"F001-004",CardCode:"C004",CardName:"CONSTRUCCIONES MODERNAS S.A.C.",DocType:"Factura",DocDate:"/Date(1710633600000)/",DueDate:"/Date(1713312000000)/",Currency:"SOL",Total:4200,Balance:4200,BankCode:"BCP",BankName:"BANCO DE CREDITO",AccountCode:"1041101",AccountName:"CUENTA CORRIENTE BCP"},{DocEntry:1005,DocNum:"F001-005",CardCode:"C005",CardName:"TECNOLOGIA AVANZADA E.I.R.L.",DocType:"Factura",DocDate:"/Date(1710720000000)/",DueDate:"/Date(1713398400000)/",Currency:"SOL",Total:1800.25,Balance:1800.25,BankCode:"BCP",BankName:"BANCO DE CREDITO",AccountCode:"1041101",AccountName:"CUENTA CORRIENTE BCP"}]},getAvailableDocuments:function(){return this._data},getAvailableDocumentsCount:function(){return this._data.length}})});
},
	"com/vs/extension/finanb1/model/models.js":function(){
sap.ui.define(["sap/ui/model/json/JSONModel","sap/ui/Device"],function(e,n){"use strict";function i(){const i=new e(n);i.setDefaultBindingMode("OneWay");return i}var t={__esModule:true};t.createDeviceModel=i;return t});
},
	"com/vs/extension/finanb1/view/App.view.xml":'<mvc:View height="100%" xmlns:mvc="sap.ui.core.mvc" xmlns="sap.m" xmlns:f="sap.f" xmlns:fly="sap.ui.layout.form" xmlns:core="sap.ui.core" xmlns:tnt="sap.tnt" controllerName="com.vs.extension.finanb1.controller.App"><tnt:ToolPage id="toolPage2"><tnt:header><tnt:ToolHeader id="toolHeader2" ><Image src="img/banner.png" height="25px" width="120px"/><Button icon="sap-icon://menu2" press="onMenuButtonPress"/><Title text="FinanB1" level="H5"/><ToolbarSpacer/><Button icon="sap-icon://log" press="onLogout"/></tnt:ToolHeader></tnt:header><tnt:sideContent><core:Fragment fragmentName="com.vs.extension.finanb1.view.SideNavigation" type="XML"/></tnt:sideContent><tnt:mainContents><App id="app"/></tnt:mainContents></tnt:ToolPage></mvc:View>\n',
	"com/vs/extension/finanb1/view/Configuracion.view.xml":'<mvc:View height="100%" xmlns:mvc="sap.ui.core.mvc" xmlns="sap.m" xmlns:core="sap.ui.core" controllerName="com.vs.extension.finanb1.controller.Configuracion"><Page title="Configuración" showNavButton="false" enableScrolling="true" contentOnlyBusy="false"><content><core:Fragment fragmentName="com.vs.extension.finanb1.view.ConfiguracionContent" type="XML"/></content></Page></mvc:View> ',
	"com/vs/extension/finanb1/view/ConfiguracionContent.fragment.xml":'<core:FragmentDefinition xmlns="sap.m" xmlns:core="sap.ui.core"><VBox alignItems="Center" justifyContent="Start" height="100%" class="sapUiMediumMargin"><IllustratedMessage\r\n            enableVerticalResponsiveness="false"\r\n            illustrationType="tnt-Settings"\r\n            title="Configuración del Sistema"\r\n            description="Gestiona la configuración del sistema y parámetros de la aplicación"></IllustratedMessage><VBox class="sapUiMediumMarginTop" width="600px"><Title text="Opciones de Configuración" level="H2" class="sapUiMediumMarginBottom"/><HBox wrap="Wrap" justifyContent="SpaceBetween"><VBox class="sapUiTinyMarginEnd" width="180px"><HBox alignItems="Center" class="sapUiTinyMarginBottom"><core:Icon src="sap-icon://user-settings" size="1.5rem" class="sapUiTinyMarginEnd"/><Text text="Usuarios" class="sapUiTinyMarginEnd"/></HBox><Text text="Gestiona los parámetros del sistema" class="sapUiTinyMarginBottom"/></VBox><VBox class="sapUiTinyMarginEnd" width="180px"><HBox alignItems="Center" class="sapUiTinyMarginBottom"><core:Icon src="sap-icon://database" size="1.5rem" class="sapUiTinyMarginEnd"/><Text text="Base de Datos" class="sapUiTinyMarginEnd"/></HBox><Text text="Gestiona la actualización de la estructura de datos" class="sapUiTinyMarginBottom"/></VBox></HBox></VBox></VBox></core:FragmentDefinition> ',
	"com/vs/extension/finanb1/view/Detracciones.view.xml":'<mvc:View height="100%" xmlns:mvc="sap.ui.core.mvc" xmlns="sap.m" xmlns:core="sap.ui.core" controllerName="com.vs.extension.finanb1.controller.Detracciones"><Page title="Detracciones" showNavButton="false" enableScrolling="true" contentOnlyBusy="false"><content><core:Fragment fragmentName="com.vs.extension.finanb1.view.DetraccionesContent" type="XML"/></content></Page></mvc:View> ',
	"com/vs/extension/finanb1/view/DetraccionesContent.fragment.xml":'<core:FragmentDefinition xmlns="sap.m" xmlns:core="sap.ui.core"><VBox alignItems="Center" justifyContent="Start" height="100%" class="sapUiMediumMargin"><IllustratedMessage\r\n            enableVerticalResponsiveness="false"\r\n            illustrationType="tnt-Document"\r\n            title="Gestión de Detracciones"\r\n            description="Administra las detracciones de manera eficiente"></IllustratedMessage><VBox class="sapUiMediumMarginTop" width="600px"><Title text="Funcionalidades Disponibles" level="H2" class="sapUiMediumMarginBottom"/><HBox wrap="Wrap" justifyContent="SpaceBetween"><VBox class="sapUiTinyMarginEnd" width="180px"><HBox alignItems="Center" class="sapUiTinyMarginBottom"><core:Icon src="sap-icon://document-text" size="1.5rem" class="sapUiTinyMarginEnd"/><Text text="Registro" class="sapUiTinyMarginEnd"/></HBox><Text text="Registra nuevas detracciones en el sistema" class="sapUiTinyMarginBottom"/></VBox><VBox class="sapUiTinyMarginEnd" width="180px"><HBox alignItems="Center" class="sapUiTinyMarginBottom"><core:Icon src="sap-icon://search" size="1.5rem" class="sapUiTinyMarginEnd"/><Text text="Consulta" class="sapUiTinyMarginEnd"/></HBox><Text text="Consulta el estado de las detracciones" class="sapUiTinyMarginBottom"/></VBox><VBox width="180px"><HBox alignItems="Center" class="sapUiTinyMarginBottom"><core:Icon src="sap-icon://report" size="1.5rem" class="sapUiTinyMarginEnd"/><Text text="Reportes" class="sapUiTinyMarginEnd"/></HBox><Text text="Genera reportes de detracciones" class="sapUiTinyMarginBottom"/></VBox></HBox></VBox></VBox></core:FragmentDefinition> ',
	"com/vs/extension/finanb1/view/Login.view.xml":'\n<mvc:View controllerName="com.vs.extension.finanb1.controller.Login"\n    xmlns:mvc="sap.ui.core.mvc" displayBlock="true"\n    xmlns="sap.m"\n    xmlns:f="sap.f"\n    xmlns:core="sap.ui.core"><Page id="loginPage" title="FinanB1 - Login" showHeader="false" class="sapUiSizeCompact"><content><VBox alignItems="Center" justifyContent="Center" height="100%" class="sapUiMediumMargin"><VBox width="400px" class="sapUiMediumMargin"><VBox alignItems="Center" class="sapUiMediumMarginBottom"><Image src="img/banner.png" width="200px" class="sapUiMediumMarginBottom"/><Title text="FinanB1" level="H1" class="sapUiMediumMarginBottom"/><Text text="Sistema de Gestión Financiero" class="sapUiMediumMarginBottom"/></VBox><Panel headerText="Iniciar Sesión" class="sapUiMediumMarginBottom"><VBox class="sapUiMediumMargin"><Label text="Email" labelFor="usernameInput" class="sapUiTinyMarginBottom"/><Input id="usernameInput" \n                                   placeholder="Ingrese su email" \n                                   class="sapUiTinyMarginBottom"\n                                   value="{loginModel>/username}"\n                                   liveChange="onKeyPress"/><Label text="Contraseña" labelFor="passwordInput" class="sapUiTinyMarginBottom"/><Input id="passwordInput" \n                                   type="Password" \n                                   placeholder="Ingrese su contraseña" \n                                   class="sapUiTinyMarginBottom"\n                                   value="{loginModel>/password}"\n                                   liveChange="onKeyPress"/><HBox justifyContent="SpaceBetween" alignItems="Center" class="sapUiTinyMarginTop"><CheckBox text="Recordar sesión" selected="{loginModel>/rememberMe}"/><Link text="¿Olvidó su contraseña?" press="onForgotPassword"/></HBox><Button id="loginButton"\n                                    text="Iniciar Sesión" \n                                    type="Emphasized" \n                                    width="100%" \n                                    class="sapUiMediumMarginTop"\n                                    press="onLoginPress"/></VBox></Panel><VBox alignItems="Center" class="sapUiTinyMarginTop"><Text text="Un producto de Ventura Soluciones" class="sapUiTinyMarginBottom"/><Text text="© 2025 Todos los derechos reservados" class="sapUiTinyMarginBottom"/></VBox></VBox></VBox></content></Page></mvc:View>\n',
	"com/vs/extension/finanb1/view/PagosMasivos.view.xml":'<mvc:View height="100%" xmlns:mvc="sap.ui.core.mvc" xmlns="sap.m" xmlns:core="sap.ui.core" controllerName="com.vs.extension.finanb1.controller.PagosMasivos"><Page title="Pagos Masivos" showNavButton="false" enableScrolling="true" contentOnlyBusy="false"><content><core:Fragment fragmentName="com.vs.extension.finanb1.view.PagosMasivosContent" type="XML"/></content></Page></mvc:View> ',
	"com/vs/extension/finanb1/view/PagosMasivosContent.fragment.xml":'<core:FragmentDefinition xmlns="sap.m" xmlns:core="sap.ui.core"><VBox><Toolbar\r\n            design="Solid"\r\n            class="sapUiSticky"><ToolbarSpacer/><Label text="Rango de Fechas:" class="sapUiMediumMarginEnd" width="120px"/><DateRangeSelection\r\n                id="pagosMasivosDateRangeFilter"\r\n                displayFormat="dd/MM/yyyy"\r\n                change="onDateRangeChange"\r\n                class="sapUiMediumMarginEnd"/><Label text="Estado:" class="sapUiMediumMarginEnd" width="80px"/><Select\r\n                id="pagosMasivosStatusFilter"\r\n                width="150px"\r\n                change="onStatusChange"\r\n                class="sapUiMediumMarginEnd"><core:Item key="" text="Todos"/><core:Item key="E" text="Ejecutada"/><core:Item key="A" text="Anulada"/><core:Item key="C" text="Creada"/></Select><Label text="Banco:" class="sapUiMediumMarginEnd" width="80px"/><Select\r\n                id="pagosMasivosBancoFilter"\r\n                width="150px"\r\n                change="onBancoChange"\r\n                class="sapUiMediumMarginEnd"><core:Item key="" text="Todos"/><core:Item key="BCP" text="BCP"/><core:Item key="BBVA" text="BBVA"/><core:Item key="Interbank" text="Interbank"/><core:Item key="Scotiabank" text="Scotiabank"/></Select><Button\r\n                text="Limpiar Filtros"\r\n                icon="sap-icon://clear-filter"\r\n                press="onClearFilters"\r\n                type="Transparent"\r\n                class="sapUiMediumMarginEnd"/><ToolbarSeparator/><Button\r\n                text="Nueva Planilla"\r\n                icon="sap-icon://add"\r\n                press="onNuevaPlanillaButtonPress"\r\n                type="Emphasized"/></Toolbar><List\r\n            id="pagosMasivosPlanillasList"\r\n            items="{planillas>/PlanillasCollection}"\r\n            headerText="Planillas de pagos masivos"\r\n            growing="true"\r\n            growingThreshold="5"\r\n            growingScrollToLoad="true"\r\n            class="sapUiMediumMarginTop"\r\n            itemPress="onListItemPress"><ObjectListItem\r\n                type="Active"\r\n                title="Planilla: {planillas>U_IDBANCO} - {planillas>DocEntry}"\r\n                ><ObjectAttribute text="Banco: {planillas>U_IDBANCO}" /><ObjectAttribute text="Cuenta Bancaria: {planillas>U_CCBANCO}" /><ObjectAttribute text="Moneda: {planillas>U_MONEDA}" /><ObjectAttribute text="Fecha de emisión: {\r\n                    path: \'planillas>U_FECHA\',\r\n                    formatter: \'.formatter.date\'\r\n                }" /><ObjectAttribute text="Total: {planillas>U_TOTAL}" /><firstStatus><ObjectStatus\r\n                        text="{\r\n                            path: \'planillas>U_ESTADO\',\r\n                            formatter: \'.formatter.estadoText\'\r\n                        }"\r\n                        state="{\r\n                            path: \'planillas>U_ESTADO\',\r\n                            formatter: \'.formatter.status\'\r\n                        }" /></firstStatus></ObjectListItem></List></VBox></core:FragmentDefinition> ',
	"com/vs/extension/finanb1/view/PagosMasivosDetalle.view.xml":'<mvc:View height="100%" xmlns:mvc="sap.ui.core.mvc" xmlns="sap.m" xmlns:core="sap.ui.core" controllerName="com.vs.extension.finanb1.controller.PagosMasivosDetalle"><Page showHeader="false" showNavButton="false" enableScrolling="true" contentOnlyBusy="true"><content><core:Fragment fragmentName="com.vs.extension.finanb1.view.PagosMasivosDetalleContent" type="XML"/></content><footer><OverflowToolbar id="otbFooter" class="sapUiSticky"><ToolbarSpacer/><Button \r\n\t\t\t\t\ttype="Accept" \r\n\t\t\t\t\ttext="Ejecutar" \r\n\t\t\t\t\tpress="onEjecutarPlanilla"\r\n\t\t\t\t\tvisible="{= ${planilla>/isNewPlanilla} !== true }"><layoutData><OverflowToolbarLayoutData priority="NeverOverflow" /></layoutData></Button><Button \r\n\t\t\t\t\ttype="Reject" \r\n\t\t\t\t\ttext="Anular"\r\n\t\t\t\t\tpress="onAnularPlanilla"\r\n\t\t\t\t\tvisible="{= ${planilla>/isNewPlanilla} !== true }"><layoutData><OverflowToolbarLayoutData priority="NeverOverflow" /></layoutData></Button><Button \r\n\t\t\t\t\ttype="Accept" \r\n\t\t\t\t\ttext="Crear Planilla" \r\n\t\t\t\t\tpress="onGuardarPlanilla"\r\n\t\t\t\t\tvisible="{= ${planilla>/isNewPlanilla} === true }"><layoutData><OverflowToolbarLayoutData priority="NeverOverflow" /></layoutData></Button><OverflowToolbarButton tooltip="Archivo bancario" text="Archivo bancario" icon="sap-icon://download" press="onDownloadPlanilla"/><OverflowToolbarButton id="addDocumentos" tooltip="Agregar documentos" text="Add" icon="sap-icon://add" press="onAddDocumentos" visible="{= ${planilla>/isNewPlanilla} === true }"/><OverflowToolbarButton tooltip="Eliminar documentos" text="Delete" icon="sap-icon://delete" press="onDeleteSelectedLines" visible="{= ${planilla>/isNewPlanilla} === true }"/></OverflowToolbar></footer></Page></mvc:View> ',
	"com/vs/extension/finanb1/view/PagosMasivosDetalleContent.fragment.xml":'<core:FragmentDefinition xmlns="sap.m"\n    xmlns:core="sap.ui.core"\n    xmlns:f="sap.ui.layout.form"\n    xmlns:fo="sap.f"\n    xmlns:mdc="sap.ui.mdc"\n    xmlns:l="sap.ui.layout"\n    xmlns:unified="sap.ui.unified"\n    xmlns:mdct="sap.ui.mdc.table"\n    xmlns:vm="sap.ui.fl.variants"\n    xmlns:mdcvh="sap.ui.mdc.valuehelp"\n    xmlns:mdcvc="sap.ui.mdc.valuehelp.content"\n    xmlns:ce="sap.ui.codeeditor"\n    xmlns:svm="sap.ui.comp.smartvariants"\n    xmlns:fb="sap.ui.comp.filterbar"><VBox height="100%"><Toolbar design="Solid"><Button text="Volver" icon="sap-icon://nav-back" press="onBackToPagosMasivos" type="Transparent" class="sapUiMediumMarginEnd" /><ToolbarSpacer /></Toolbar><ScrollContainer height="100%" vertical="true" class="sapUiNoContentPadding"><VBox class="sapUiMediumMargin"><f:SimpleForm editable="{\n                path: \'planilla>/U_ESTADO\',\n                formatter: \'.formatter.isEditable\'\n            }" layout="ResponsiveGridLayout" title="Detalle de Planilla" labelSpanXL="4" labelSpanL="4" labelSpanM="4" labelSpanS="12" adjustLabelSpan="false" emptySpanXL="0" emptySpanL="0" emptySpanM="0" emptySpanS="0" columnsXL="3" columnsL="2" columnsM="2" singleContainerFullSize="false"><f:content><core:Title text="General" /><Label text="N° Planilla" /><Text text="{planilla>/DocEntry}" /><Label text="Cuenta Bancaria" /><ComboBox selectedKey="{planilla>/U_CUENTA}" items="{cuentasBancarias>/value}" change="onCuentaBancariaChange" selectionChange="onCuentaBancariaChange" enabled="{\n                        path: \'planilla>/isNewPlanilla\',\n                        formatter: \'.formatter.isNewPlanilla\'\n                    }"><core:Item key="{cuentasBancarias>AccNo}" text="{cuentasBancarias>BankCode} - {cuentasBancarias>AccNo} - {cuentasBancarias>Branch}" /></ComboBox><Label text="Banco" /><Text text="{planilla>/U_IDBANCO} - {planilla>/U_NMBANCO} - {planilla>/U_MONEDA}" /><Label text="Cuenta Contable" /><Text text="{planilla>/U_GLACCOUNT}" /><Label text="Estado" /><ObjectStatus text="{\n                        path: \'planilla>/U_ESTADO\',\n                        formatter: \'.formatter.estadoText\'\n                    }" state="{\n                        path: \'planilla>/U_ESTADO\',\n                        formatter: \'.formatter.status\'\n                    }" /><Label text="Fecha de creación" /><Text text="{\n                    path: \'planilla>/U_FECHA\',\n                    formatter: \'.formatter.date\'\n                }" /><core:Title text="Datos de pago" /><Label text="Serie" /><ComboBox selectedKey="{planilla>/U_SERIE}" items="{series>/value}" change="onSerieChange" selectionChange="onSerieChange"><core:Item key="{series>Series}" text="{series>Name}" /></ComboBox><Label text="Fecha de ejecución" /><DatePicker value="{\n                        path: \'planilla>/U_FECHAP\',\n                        type: \'sap.ui.model.type.Date\',\n                        formatOptions: {\n                            source: {\n                                pattern: \'yyyy-MM-ddTHH:mm:ssZ\'\n                            }\n                        }\n                    }" displayFormat="dd MMM yyyy" change="onFechaEjecucionChange" /><Label text="Tipo de cambio" /><Input value="{planilla>/U_TC}" editable="false" /><Label text="ID SAP" /><Input value="{planilla>/U_IDPAGO}" editable="false" /><Label text="Nro Operación bancaria" /><Input value="{planilla>/U_NOPBAN}" /><core:Title text="Información Adicional\t" /><Label text="Referencia" /><Text text="{planilla>/U_REF}" /></f:content></f:SimpleForm><Panel headerText="Documentos de la Planilla" class="sapUiMediumMarginTop"><Table id="planillaLinesTable" items="{planilla>/VS_PMP1Collection}" mode="MultiSelect" growing="true" growingThreshold="10" class="sapUiMediumMarginTop"><columns><Column width="auto"><Text text="Línea" /></Column><Column width="auto"><Text text="N° Documento" /></Column><Column width="auto"><Text text="Cód. Proveedor" /></Column><Column width="auto"><Text text="Razón Social" /></Column><Column width="auto"><Text text="Fecha Emisión" /></Column><Column width="auto"><Text text="Fecha Venc." /></Column><Column width="auto" hAlign="End"><Text text="Monto" /></Column><Column width="auto" hAlign="End"><Text text="Saldo" /></Column><Column width="auto" hAlign="End"><Text text="Retención" /></Column><Column width="auto" hAlign="End"><Text text="Pago Final" /></Column><Column width="auto"><Text text="Banco" /></Column><Column width="auto"><Text text="Cuenta bancaria" /></Column></columns><items><ColumnListItem type="Active"><cells><Text text="{planilla>LineId}" /><Text text="{planilla>U_NUMDOC}" /><Text text="{planilla>U_IDSN}" /><Text text="{planilla>U_NMSN}" /><Text text="{\n                                path: \'planilla>U_FDOCU\',\n                                formatter: \'.formatter.date\'\n                            }" /><Text text="{\n                                path: \'planilla>U_FVENC\',\n                                formatter: \'.formatter.date\'\n                            }" /><ObjectNumber number="{\n                                    path: \'planilla>U_IMPORTE\',\n                                    formatter: \'.formatter.currency\'\n                                }" unit="{planilla>U_MONINF}" /><ObjectNumber number="{\n                                    path: \'planilla>U_SALDO\',\n                                    formatter: \'.formatter.currency\'\n                                }" unit="{planilla>U_MONINF}" /><ObjectNumber number="{\n                                    path: \'planilla>U_RETLOC\',\n                                    formatter: \'.formatter.currency\'\n                                }" unit="{planilla>U_MONINF}" /><ObjectNumber number="{\n                                    path: \'planilla>U_PAGLOC0\',\n                                    formatter: \'.formatter.currency\'\n                                }" unit="{planilla>U_MONINF}" /><Text text="{planilla>U_CTAINF}" /><Text text="{planilla>U_CCORRI}" /></cells></ColumnListItem></items></Table><HBox justifyContent="End" class="sapUiMediumMarginTop"><VBox alignItems="End" class="sapUiMediumMarginEnd"><HBox class="sapUiTinyMarginBottom"><Label text="Total Documentos:" class="sapUiTinyMarginEnd" /><Text text="{= ${planilla>/VS_PMP1Collection}.length}" class="sapUiTinyMarginEnd" /></HBox><HBox class="sapUiTinyMarginBottom"><Label text="Total Bruto:" class="sapUiTinyMarginEnd" /><ObjectNumber number="{\n                                path: \'planilla>/U_TOTAL\',\n                                formatter: \'.formatter.currency\'\n                            }" unit="{planilla>/U_MONEDA}" /></HBox><HBox class="sapUiTinyMarginBottom"><Label text="Total Retenciones:" class="sapUiTinyMarginEnd" /><ObjectNumber number="{\n                                path: \'planilla>/U_RETEN\',\n                                formatter: \'.formatter.negativeCurrency\'\n                            }" unit="{planilla>/U_MONEDA}" /></HBox><HBox class="sapUiTinyMarginBottom"><Label text="Total Neto:" class="sapUiTinyMarginEnd" /><ObjectNumber number="{\n                                path: \'planilla>/U_SUBTOTAL\',\n                                formatter: \'.formatter.currency\'\n                            }" unit="{planilla>/U_MONEDA}" /></HBox></VBox></HBox></Panel></VBox></ScrollContainer><Dialog id="documentSelectionDialog" title="Seleccionar Documentos" contentWidth="80%" contentHeight="60%" resizable="false" draggable="true"><content><fo:DynamicPage headerExpanded="{/headerExpanded}"><fo:header><fo:DynamicPageHeader pinnable="false"><fo:content><fb:FilterBar id="filterbar" persistencyKey="myPersKey" useToolbar="false"><fb:filterGroupItems><fb:FilterGroupItem name="Name" label="Tipo Documento" groupName="Group1" visibleInFilterBar="true"><fb:control><MultiComboBox name="Name" selectionChange=".onSelectionChange" items="{\n\t\t\t\t\t\t\t\t\t\t\t\tpath: \'oModel>/docTypes\'\n\t\t\t\t\t\t\t\t\t\t\t}"><core:Item key="{oModel>key}" text="{oModel>name}" /></MultiComboBox></fb:control></fb:FilterGroupItem><fb:FilterGroupItem name="Category" label="Proveedor" groupName="Group1" visibleInFilterBar="true"><fb:control><MultiComboBox name="Category" selectionChange=".onSelectionChange" items="{\n\t\t\t\t\t\t\t\t\t\t\t\tpath: \'oModel>/suppliers\',\n\t\t\t\t\t\t\t\t\t\t\t\ttemplateShareable: true\n\t\t\t\t\t\t\t\t\t\t\t}"><core:Item key="{oModel>key}" text="{oModel>name}" /></MultiComboBox></fb:control></fb:FilterGroupItem><fb:FilterGroupItem name="SupplierName" label="Banco" groupName="Group1" visibleInFilterBar="true"><fb:control><MultiComboBox name="SupplierName" selectionChange=".onSelectionChange" items="{\n\t\t\t\t\t\t\t\t\t\t\t\tpath: \'oModel>/banks\'\n\t\t\t\t\t\t\t\t\t\t\t}"><core:Item key="{oModel>key}" text="{oModel>name}" /></MultiComboBox></fb:control></fb:FilterGroupItem><fb:FilterGroupItem name="ReleaseDate" label="Fecha de documento" groupName="Group1" visibleInFilterBar="true"><fb:control><DateRangeSelection name="ReleaseDate" displayFormat="yyyy-MM-dd" valueFormat="yyyy-MM-dd" change=".onDateRangeChange" /></fb:control></fb:FilterGroupItem></fb:filterGroupItems></fb:FilterBar></fo:content></fo:DynamicPageHeader></fo:header><fo:content><Table id="table" items="{\n\t\t\t\t\t\tpath: \'oModel>/documents\'\n\t\t\t\t\t}" mode="MultiSelect" selectionChange="onDocumentSelectionChange" growing="false" growingThreshold="0" noDataText="No hay documentos disponibles"><columns><Column><Text text="Documento" /></Column><Column><Text text="Proveedor" /></Column><Column><Text text="F. Emisión" /></Column><Column><Text text="F. Vencimiento" /></Column><Column><Text text="Monto" /></Column><Column><Text text="Saldo" /></Column><Column><Text text="Retención" /></Column><Column><Text text="Pago Final" /></Column><Column><Text text="Banco" /></Column><Column><Text text="Cuenta bancaria" /></Column></columns><items><ColumnListItem type="Active" class="{= ${oModel>alreadyInPlanilla} ? \'sapUiTableRowDisabled\' : \'\'}"><cells><HBox alignItems="Center"><ObjectIdentifier title="{oModel>DocNum}" text="{oModel>DocType}" /><ObjectStatus visible="{oModel>alreadyInPlanilla}" text="Ya agregado" state="Warning" class="sapUiTinyMarginBegin" /></HBox><ObjectIdentifier title="{oModel>CardCode}" text="{oModel>CardName}" /><Text text="{\n                                    path: \'oModel>DocDate\',\n                                    formatter: \'.formatter.date\'\n                                }" /><Text text="{\n                                    path: \'oModel>DueDate\',\n                                    formatter: \'.formatter.date\'\n                                }" /><ObjectNumber number="{\n                                        path: \'oModel>Total\',\n                                        formatter: \'.formatter.currency\'\n                                    }" unit="{oModel>Currency}" /><ObjectNumber number="{\n                                    path: \'oModel>Balance\',\n                                    formatter: \'.formatter.currency\'\n                                }" unit="{oModel>Currency}" /><ObjectNumber number="{\n                                    path: \'oModel>RetLoc\',\n                                    formatter: \'.formatter.currency\'\n                                }" unit="{oModel>Currency}" /><ObjectNumber number="{\n                                    path: \'oModel>Balance\',\n                                    formatter: \'.formatter.currency\'\n                                }" unit="{oModel>Currency}" /><ObjectIdentifier title="{oModel>BankCode}" text="{oModel>BankName}" /><Text text="{oModel>CuentaBancaria}" /></cells></ColumnListItem></items></Table></fo:content></fo:DynamicPage></content><buttons><Button text="Cancelar" press="onDocumentDialogCancel" /><Button text="Agregar" type="Accept" press="onDocumentDialogConfirm" /></buttons></Dialog></VBox></core:FragmentDefinition>\n',
	"com/vs/extension/finanb1/view/SideNavigation.fragment.xml":'<core:FragmentDefinition xmlns="sap.m" xmlns:core="sap.ui.core" xmlns:tnt="sap.tnt"><tnt:SideNavigation expanded="true" selectedKey="{menuModel>/selectedKey}" itemSelect="onSideNavigationItemSelect"><tnt:NavigationList items="{menuModel>/navigation}"><tnt:NavigationListItem \r\n\t\t\t\ttext="{menuModel>text}" \r\n\t\t\t\ticon="{menuModel>icon}" \r\n\t\t\t\tkey="{menuModel>key}"\r\n\t\t\t\tselectable="true" /></tnt:NavigationList></tnt:SideNavigation></core:FragmentDefinition>'
});
//# sourceMappingURL=Component-preload.js.map
